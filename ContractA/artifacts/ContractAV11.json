{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "6080604052348015600e575f80fd5b5060a080601a5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c806309bd5a6014602a575b5f80fd5b5f5460359060c01b81565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390f3fea2646970667358221220b655383c7d9fcc719e1019ccd743a21053768423b09eb0d8a8f7282e53c952cd64736f6c63430008190033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA0 DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BD5A60 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x35 SWAP1 PUSH1 0xC0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 SSTORE CODESIZE EXTCODECOPY PUSH30 0x9FCC719E1019CCD743A21053768423B09EB0D8A8F7282E53C952CD64736F PUSH13 0x63430008190033000000000000 ",
			"sourceMap": "63:51:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@hash_3": {
					"entryPoint": null,
					"id": 3,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nativeSrc": "0:264:1",
						"nodeType": "YulBlock",
						"src": "0:264:1",
						"statements": [
							{
								"nativeSrc": "6:3:1",
								"nodeType": "YulBlock",
								"src": "6:3:1",
								"statements": []
							},
							{
								"body": {
									"nativeSrc": "113:149:1",
									"nodeType": "YulBlock",
									"src": "113:149:1",
									"statements": [
										{
											"nativeSrc": "123:26:1",
											"nodeType": "YulAssignment",
											"src": "123:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nativeSrc": "135:9:1",
														"nodeType": "YulIdentifier",
														"src": "135:9:1"
													},
													{
														"kind": "number",
														"nativeSrc": "146:2:1",
														"nodeType": "YulLiteral",
														"src": "146:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nativeSrc": "131:3:1",
													"nodeType": "YulIdentifier",
													"src": "131:3:1"
												},
												"nativeSrc": "131:18:1",
												"nodeType": "YulFunctionCall",
												"src": "131:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nativeSrc": "123:4:1",
													"nodeType": "YulIdentifier",
													"src": "123:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:1",
														"nodeType": "YulIdentifier",
														"src": "165:9:1"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nativeSrc": "180:6:1",
																"nodeType": "YulIdentifier",
																"src": "180:6:1"
															},
															{
																"kind": "number",
																"nativeSrc": "188:66:1",
																"nodeType": "YulLiteral",
																"src": "188:66:1",
																"type": "",
																"value": "0xffffffffffffffff000000000000000000000000000000000000000000000000"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "176:3:1",
															"nodeType": "YulIdentifier",
															"src": "176:3:1"
														},
														"nativeSrc": "176:79:1",
														"nodeType": "YulFunctionCall",
														"src": "176:79:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nativeSrc": "158:6:1",
													"nodeType": "YulIdentifier",
													"src": "158:6:1"
												},
												"nativeSrc": "158:98:1",
												"nodeType": "YulFunctionCall",
												"src": "158:98:1"
											},
											"nativeSrc": "158:98:1",
											"nodeType": "YulExpressionStatement",
											"src": "158:98:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed",
								"nativeSrc": "14:248:1",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nativeSrc": "82:9:1",
										"nodeType": "YulTypedName",
										"src": "82:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nativeSrc": "93:6:1",
										"nodeType": "YulTypedName",
										"src": "93:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nativeSrc": "104:4:1",
										"nodeType": "YulTypedName",
										"src": "104:4:1",
										"type": ""
									}
								],
								"src": "14:248:1"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff000000000000000000000000000000000000000000000000))\n    }\n}",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c806309bd5a6014602a575b5f80fd5b5f5460359060c01b81565b6040517fffffffffffffffff000000000000000000000000000000000000000000000000909116815260200160405180910390f3fea2646970667358221220b655383c7d9fcc719e1019ccd743a21053768423b09eb0d8a8f7282e53c952cd64736f6c63430008190033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BD5A60 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x35 SWAP1 PUSH1 0xC0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 SSTORE CODESIZE EXTCODECOPY PUSH30 0x9FCC719E1019CCD743A21053768423B09EB0D8A8F7282E53C952CD64736F PUSH13 0x63430008190033000000000000 ",
			"sourceMap": "63:51:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;92:18;;;;;;;;;;;;188:66:1;176:79;;;158:98;;146:2;131:18;92::0;;;;;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "32000",
				"executionCost": "79",
				"totalCost": "32079"
			},
			"external": {
				"hash()": "2277"
			}
		},
		"methodIdentifiers": {
			"hash()": "09bd5a60"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "hash",
			"outputs": [
				{
					"internalType": "bytes8",
					"name": "",
					"type": "bytes8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}