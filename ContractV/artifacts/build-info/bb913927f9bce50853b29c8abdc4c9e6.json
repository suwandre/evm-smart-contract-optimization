{
	"id": "bb913927f9bce50853b29c8abdc4c9e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ContractV/ContractVV1.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.25;\r\n\r\nimport \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\";\r\n\r\ncontract ContractVV1 is ERC721A, Context {\r\n    struct Creature {\r\n        uint256 id;\r\n        address owner;\r\n        // bit positions:\r\n        // [0 - 63] strength\r\n        // [64 - 127] agility\r\n        // [128 - 191] intelligence\r\n        // [192 - 255] specialPower\r\n        uint256 gameStats;\r\n        // bit positions:\r\n        // [0 - 127] wins\r\n        // [128 - 255] losses\r\n        uint256 battleRecord;\r\n    }\r\n\r\n    uint256 private nextCreatureId;\r\n    mapping (uint256 => Creature) private creatures;\r\n\r\n    event CreatureCreated(uint256 indexed creatureId, address indexed owner);\r\n    event BattleResult(uint256 indexed winnerId, uint256 indexed loserId);\r\n\r\n    // bit positions and masks for `gameStats`\r\n    uint256 private constant STRENGTH_BITPOS = 0;\r\n    uint256 private constant AGILITY_BITPOS = 64;\r\n    uint256 private constant INTELLIGENCE_BITPOS = 128;\r\n    uint256 private constant SPECIAL_POWER_BITPOS = 192;\r\n\r\n    // bit positions for `battleRecord`\r\n    uint256 private constant WINS_BITPOS = 0;\r\n    uint256 private constant LOSSES_BITPOS = 128;\r\n\r\n    error CreatureNotOwned();\r\n\r\n    modifier onlyOwnedCreature(uint256 id) {\r\n        _checkCreatureOwned(id);\r\n\r\n        _;\r\n    }\r\n\r\n    constructor() ERC721A(\"Digiture\", \"DGT\") {\r\n        nextCreatureId = 1;\r\n    }\r\n\r\n    function getNextCreatureId() external view returns (uint256) {\r\n        return nextCreatureId;\r\n    }\r\n\r\n    function getCreature(uint256 id) external view returns (Creature memory) {\r\n        return creatures[id];\r\n    }\r\n\r\n    // please note that each variable can only support up to 2^64 - 1.\r\n    // to reduce gas costs, no explicit conversion is added here, and it's up to the dev/user\r\n    // to ensure no overflow exists.\r\n    function packGameStats(\r\n        uint256 strength, \r\n        uint256 agility, \r\n        uint256 intelligence, \r\n        uint256 specialPower\r\n    ) internal pure returns (uint256 gameStats) {\r\n        assembly {\r\n            // equivalent to (strength << STRENGTH_BITPOS) |\r\n            // (agility << AGILITY_BITPOS) |\r\n            // (intelligence << INTELLIGENCE_BITPOS) |\r\n            // (specialPower << SPECIAL_POWER_BITPOS);\r\n            gameStats := \r\n                or(\r\n                    or(\r\n                        or(\r\n                            shl(STRENGTH_BITPOS, strength),\r\n                            shl(AGILITY_BITPOS, agility)\r\n                        ),\r\n                        shl(INTELLIGENCE_BITPOS, intelligence)\r\n                    ),\r\n                    shl(SPECIAL_POWER_BITPOS, specialPower)\r\n                )\r\n        }\r\n    }\r\n\r\n    // `public` so that it can also be called via external methods\r\n    function unpackGameStats(uint256 gameStats) public pure returns (\r\n        uint256 strength,\r\n        uint256 agility,\r\n        uint256 intelligence,\r\n        uint256 specialPower\r\n    ) {\r\n        assembly {\r\n            // equivalent to: (gameStats >> xxx_BITPOS) & ((1 << 64) - 1);\r\n            strength := and(shr(STRENGTH_BITPOS, gameStats), sub(shl(64, 1), 1))\r\n            agility := and(shr(AGILITY_BITPOS, gameStats), sub(shl(64, 1), 1))\r\n            intelligence := and(shr(INTELLIGENCE_BITPOS, gameStats), sub(shl(64, 1), 1))\r\n            specialPower := and(shr(SPECIAL_POWER_BITPOS, gameStats), sub(shl(64, 1), 1))\r\n        }\r\n    }\r\n\r\n    // please note that each variable can only support up to 2^128 - 1.\r\n    // to reduce gas costs, no explicit conversion is added here, and it's up to the dev/user\r\n    // to ensure no overflow exists.\r\n    function packBattleRecord(uint256 wins, uint256 losses) internal pure returns (uint256 battleRecord) {\r\n        assembly {\r\n            // equivalent to (wins << WINS_BITPOS) | (losses << LOSSES_BITPOS);\r\n            battleRecord := \r\n                or(\r\n                    shl(WINS_BITPOS, wins),\r\n                    shl(LOSSES_BITPOS, losses)\r\n                )\r\n        }\r\n    }\r\n\r\n    // `public` so that it can also be called via external methods\r\n    function unpackBattleRecord(uint256 battleRecord) public pure returns (uint256 wins, uint256 losses) {\r\n        assembly {\r\n            // equivalent to (battleRecord >> WINS_BITPOS) & ((1 << 128) - 1);\r\n            wins := and(shr(WINS_BITPOS, battleRecord), sub(shl(128, 1), 1))\r\n            // equivalent to (battleRecord >> LOSSES_BITPOS) & ((1 << 128) - 1);\r\n            losses := and(shr(LOSSES_BITPOS, battleRecord), sub(shl(128, 1), 1))\r\n        }\r\n    }\r\n\r\n    function createRandomCreature() external {\r\n        uint256 rand = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, _msgSender())));\r\n\r\n        creatures[nextCreatureId] = Creature(\r\n            nextCreatureId,\r\n            _msgSender(),\r\n            // sample calculation to obtain strength, agility, intelligence and special power\r\n            packGameStats(\r\n                rand % 1000,\r\n                (rand / 1000) % 1000,\r\n                (rand / 1000000) % 1000,\r\n                (rand / 1000000000) % 1000\r\n            ),\r\n            packBattleRecord(0, 0)\r\n        );\r\n\r\n        unchecked {\r\n            _safeMint(_msgSender(), 1);\r\n        }\r\n\r\n        assembly {\r\n            sstore(\r\n                nextCreatureId.slot, \r\n                add(\r\n                    sload(nextCreatureId.slot), \r\n                    1\r\n                )\r\n            )\r\n        }\r\n\r\n        emit CreatureCreated(nextCreatureId, _msgSender());\r\n    }\r\n\r\n    // simple battle functionality\r\n    function battle(uint256 ownerCreatureId, uint256 opponentCreatureId) external onlyOwnedCreature(ownerCreatureId) {\r\n        (uint256 ownerStrength, uint256 ownerAgility, uint256 ownerIntelligence, uint256 ownerSpecialPower) = unpackGameStats(creatures[ownerCreatureId].gameStats);\r\n        (uint256 opponentStrength, uint256 opponentAgility, uint256 opponentIntelligence, uint256 opponentSpecialPower) = unpackGameStats(creatures[opponentCreatureId].gameStats);\r\n\r\n        // we assume a win is only if the owner OVERPOWERS the opponent (lesser or equal to the opponent results in a loss)\r\n        if (ownerStrength + ownerAgility + ownerIntelligence + ownerSpecialPower > opponentStrength + opponentAgility + opponentIntelligence + opponentSpecialPower) {\r\n            _updateBattleRecord(ownerCreatureId, true);\r\n            _updateBattleRecord(opponentCreatureId, false);\r\n            emit BattleResult(ownerCreatureId, opponentCreatureId);\r\n        } else {\r\n            _updateBattleRecord(ownerCreatureId, false);\r\n            _updateBattleRecord(opponentCreatureId, true);\r\n            emit BattleResult(ownerCreatureId, opponentCreatureId);\r\n        }\r\n    }\r\n\r\n    function _checkCreatureOwned(uint256 id) private view {\r\n        if (creatures[id].owner != _msgSender()) revert CreatureNotOwned();\r\n    }\r\n\r\n    function _updateBattleRecord(uint256 creatureId, bool won) private {\r\n        Creature storage creature = creatures[creatureId];\r\n        (uint256 wins, uint256 losses) = unpackBattleRecord(creature.battleRecord);\r\n\r\n        assembly {\r\n            switch won\r\n            case true { wins := add(wins, 1) }\r\n            default { losses := add(losses, 1) }\r\n        }\r\n\r\n        creature.battleRecord = packBattleRecord(wins, losses);\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * The `_sequentialUpTo()` function can be overriden to enable spot mints\n * (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // The amount of tokens minted above `_sequentialUpTo()`.\n    // We call these spot mints (i.e. non-sequential mints).\n    uint256 private _spotMinted;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n\n        if (_sequentialUpTo() < _startTokenId()) _revert(SequentialUpToTooSmall.selector);\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID for sequential mints.\n     *\n     * Override this function to change the starting token ID for sequential mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the maximum token ID (inclusive) for sequential mints.\n     *\n     * Override this function to return a value less than 2**256 - 1,\n     * but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _sequentialUpTo() internal view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256 result) {\n        // Counter underflow is impossible as `_burnCounter` cannot be incremented\n        // more than `_currentIndex + _spotMinted - _startTokenId()` times.\n        unchecked {\n            // With spot minting, the intermediate `result` can be temporarily negative,\n            // and the computation must be unchecked.\n            result = _currentIndex - _burnCounter - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256 result) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            result = _currentIndex - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev Returns the total number of tokens that are spot-minted.\n     */\n    function _totalSpotMinted() internal view virtual returns (uint256) {\n        return _spotMinted;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * @dev Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n\n            if (tokenId > _sequentialUpTo()) {\n                if (_packedOwnershipExists(packed)) return packed;\n                _revert(OwnerQueryForNonexistentToken.selector);\n            }\n\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId > _sequentialUpTo()) return _packedOwnershipExists(_packedOwnerships[tokenId]);\n\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `packed` represents a token that exists.\n     */\n    function _packedOwnershipExists(uint256 packed) private pure returns (bool result) {\n        assembly {\n            // The following is equivalent to `owner != address(0) && burned == false`.\n            // Symbolically tested.\n            result := gt(and(packed, _BITMASK_ADDRESS), and(packed, _BITMASK_BURNED))\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            if (end - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            if (startTokenId + quantity - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // This prevents reentrancy to `_safeMint`.\n                // It does not prevent reentrancy to `_safeMintSpot`.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mintSpot(address to, uint256 tokenId) internal virtual {\n        if (tokenId <= _sequentialUpTo()) _revert(SpotMintTokenIdTooSmall.selector);\n        uint256 prevOwnershipPacked = _packedOwnerships[tokenId];\n        if (_packedOwnershipExists(prevOwnershipPacked)) _revert(TokenAlreadyExists.selector);\n\n        _beforeTokenTransfers(address(0), to, tokenId, 1);\n\n        // Overflows are incredibly unrealistic.\n        // The `numberMinted` for `to` is incremented by 1, and has a max limit of 2**64 - 1.\n        // `_spotMinted` is incremented by 1, and has a max limit of 2**256 - 1.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true` (as `quantity == 1`).\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(1) | _nextExtraData(address(0), to, prevOwnershipPacked)\n            );\n\n            // Updates:\n            // - `balance += 1`.\n            // - `numberMinted += 1`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += (1 << _BITPOS_NUMBER_MINTED) | 1;\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            assembly {\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    tokenId // `tokenId`.\n                )\n            }\n\n            ++_spotMinted;\n        }\n\n        _afterTokenTransfers(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Safely mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * See {_mintSpot}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMintSpot(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mintSpot(to, tokenId);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 currentSpotMinted = _spotMinted;\n                if (!_checkContractOnERC721Received(address(0), to, tokenId, _data)) {\n                    _revert(TransferToNonERC721ReceiverImplementer.selector);\n                }\n                // This prevents reentrancy to `_safeMintSpot`.\n                // It does not prevent reentrancy to `_safeMint`.\n                if (_spotMinted != currentSpotMinted) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMintSpot(to, tokenId, '')`.\n     */\n    function _safeMintSpot(address to, uint256 tokenId) internal virtual {\n        _safeMintSpot(to, tokenId, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as `_burnCounter` cannot be exceed `_currentIndex + _spotMinted` times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    /**\n     * `_sequentialUpTo()` must be greater than `_startTokenId()`.\n     */\n    error SequentialUpToTooSmall();\n\n    /**\n     * The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\n     */\n    error SequentialMintExceedsLimit();\n\n    /**\n     * Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\n     */\n    error SpotMintTokenIdTooSmall();\n\n    /**\n     * Cannot mint over a token that already exists.\n     */\n    error TokenAlreadyExists();\n\n    /**\n     * The feature is not compatible with spot mints.\n     */\n    error NotCompatibleWithSpotMints();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"contracts/ContractV/ContractVV1.sol": {
				"ContractVV1": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CreatureNotOwned",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "winnerId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "loserId",
									"type": "uint256"
								}
							],
							"name": "BattleResult",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "creatureId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "CreatureCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ownerCreatureId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "opponentCreatureId",
									"type": "uint256"
								}
							],
							"name": "battle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createRandomCreature",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "getCreature",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "gameStats",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "battleRecord",
											"type": "uint256"
										}
									],
									"internalType": "struct ContractVV1.Creature",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNextCreatureId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "battleRecord",
									"type": "uint256"
								}
							],
							"name": "unpackBattleRecord",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "wins",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "losses",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gameStats",
									"type": "uint256"
								}
							],
							"name": "unpackGameStats",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "strength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "agility",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "intelligence",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "specialPower",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ContractV/ContractVV1.sol\":252:7505  contract ContractVV1 is ERC721A, Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ContractV/ContractVV1.sol\":1477:1555  constructor() ERC721A(\"Digiture\", \"DGT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5261:5507  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc0, 0x4469676974757265)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x1111d5)\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5335:5340  name_ */\n  dup2\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5327:5332  _name */\n  0x02\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5327:5340  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5357  _symbol */\n  0x03\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5367  _symbol = symbol_ */\n  tag_7\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5360:5367  symbol_ */\n  dup3\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5357  _symbol */\n  dup3\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5367  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6022:6029  uint256 */\n  0x00\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5377:5408  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"contracts/ContractV/ContractVV1.sol\":1546:1547  1 */\n  0x01\n    /* \"contracts/ContractV/ContractVV1.sol\":1529:1543  nextCreatureId */\n  0x09\n    /* \"contracts/ContractV/ContractVV1.sol\":1529:1547  nextCreatureId = 1 */\n  sstore\n    /* \"contracts/ContractV/ContractVV1.sol\":252:7505  contract ContractVV1 is ERC721A, Context {... */\n  jump(tag_26)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_22:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_29:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_30:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_24:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_34\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_34:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_35:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_33:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_41\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1555:1652   */\n  tag_42\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_43\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_45\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_46\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_46:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_44)\n    /* \"#utility.yul\":1776:2439   */\ntag_45:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_49:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_52:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_44:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\ntag_26:\n    /* \"contracts/ContractV/ContractVV1.sol\":252:7505  contract ContractVV1 is ERC721A, Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ContractV/ContractVV1.sol\":252:7505  contract ContractVV1 is ERC721A, Context {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4ecbc664\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xe985e9c5\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf052d65a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfd499a74\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x70a08231\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x4ecbc664\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x3095fe91\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x3095fe91\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42e29b4e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2a0c5221\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x081812fc\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":611:625   */\n      swap1\n      iszero\n        /* \"#utility.yul\":604:626   */\n      iszero\n        /* \"#utility.yul\":586:627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":574:576   */\n      0x20\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11573:11671  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1583   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1510:1584   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1498:1500   */\n      0x20\n        /* \"#utility.yul\":1483:1501   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_34\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18486  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6890:7454  function totalSupply() public view virtual override returns (uint256 result) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7328:7340  _burnCounter */\n      sload(0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6951:6965  uint256 result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7312:7325  _currentIndex */\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7312:7340  _currentIndex - _burnCounter */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6890:7454  function totalSupply() public view virtual override returns (uint256 result) {... */\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":2201:2226   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2189:2191   */\n      0x20\n        /* \"#utility.yul\":2174:2192   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6890:7454  function totalSupply() public view virtual override returns (uint256 result) {... */\n      tag_34\n        /* \"#utility.yul\":2055:2232   */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22796:26243  function transferFrom(... */\n    tag_7:\n      tag_48\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"contracts/ContractV/ContractVV1.sol\":5739:6905  function battle(uint256 ownerCreatureId, uint256 opponentCreatureId) external onlyOwnedCreature(ownerCreatureId) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_48\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"contracts/ContractV/ContractVV1.sol\":1563:1664  function getNextCreatureId() external view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n        /* \"contracts/ContractV/ContractVV1.sol\":1642:1656  nextCreatureId */\n      sload(0x09)\n        /* \"contracts/ContractV/ContractVV1.sol\":1563:1664  function getNextCreatureId() external view returns (uint256) {... */\n      jump(tag_53)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26334:26521  function safeTransferFrom(... */\n    tag_10:\n      tag_48\n      tag_71\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"contracts/ContractV/ContractVV1.sol\":2939:3584  function unpackGameStats(uint256 gameStats) public pure returns (... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_75:\n        /* \"contracts/ContractV/ContractVV1.sol\":3286:3304  sub(shl(64, 1), 1) */\n      0xffffffffffffffff\n        /* \"contracts/ContractV/ContractVV1.sol\":3249:3305  and(shr(STRENGTH_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      dup2\n      dup2\n      and\n      swap3\n        /* \"contracts/ContractV/ContractVV1.sol\":3294:3296  64 */\n      0x40\n        /* \"contracts/ContractV/ContractVV1.sol\":3334:3364  shr(AGILITY_BITPOS, gameStats) */\n      dup4\n      swap1\n      shr\n        /* \"contracts/ContractV/ContractVV1.sol\":3330:3385  and(shr(AGILITY_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      dup3\n      and\n      swap3\n        /* \"contracts/ContractV/ContractVV1.sol\":3423:3442  INTELLIGENCE_BITPOS */\n      0x80\n        /* \"contracts/ContractV/ContractVV1.sol\":3419:3454  shr(INTELLIGENCE_BITPOS, gameStats) */\n      dup2\n      swap1\n      shr\n        /* \"contracts/ContractV/ContractVV1.sol\":3415:3475  and(shr(INTELLIGENCE_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/ContractV/ContractVV1.sol\":3513:3533  SPECIAL_POWER_BITPOS */\n      0xc0\n        /* \"contracts/ContractV/ContractVV1.sol\":3509:3545  shr(SPECIAL_POWER_BITPOS, gameStats) */\n      shr\n      swap1\n        /* \"contracts/ContractV/ContractVV1.sol\":2939:3584  function unpackGameStats(uint256 gameStats) public pure returns (... */\n      jump\n    tag_74:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3054:3079   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":3110:3112   */\n      0x20\n        /* \"#utility.yul\":3095:3113   */\n      dup6\n      add\n        /* \"#utility.yul\":3088:3122   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":3138:3156   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":3131:3165   */\n      mstore\n        /* \"#utility.yul\":3196:3198   */\n      0x60\n        /* \"#utility.yul\":3181:3199   */\n      dup3\n      add\n        /* \"#utility.yul\":3174:3208   */\n      mstore\n        /* \"#utility.yul\":3041:3044   */\n      0x80\n        /* \"#utility.yul\":3026:3045   */\n      add\n        /* \"contracts/ContractV/ContractVV1.sol\":2939:3584  function unpackGameStats(uint256 gameStats) public pure returns (... */\n      tag_34\n        /* \"#utility.yul\":2823:3214   */\n      jump\n        /* \"contracts/ContractV/ContractVV1.sol\":4728:5695  function createRandomCreature() external {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_48\n      tag_81\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12934:13084  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_42\n      tag_84\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8570:8809  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_53\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11742:11844  function symbol() public view virtual override returns (string memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_37\n      tag_95\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19186:19417  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_48\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27102:27507  function safeTransferFrom(... */\n    tag_17:\n      tag_48\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11945:12267  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_37\n      tag_108\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19567:19729  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_30\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19664:19668  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19705  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19722  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19567:19729  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/ContractV/ContractVV1.sol\":1672:1784  function getCreature(uint256 id) external view returns (Creature memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      tag_119\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n        /* \"#utility.yul\":5572:5585   */\n      dup2\n      mload\n        /* \"#utility.yul\":5554:5586   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5646:5650   */\n      0x20\n        /* \"#utility.yul\":5634:5651   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5628:5652   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5624:5697   */\n      and\n        /* \"#utility.yul\":5602:5622   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5595:5698   */\n      mstore\n        /* \"#utility.yul\":5754:5758   */\n      0x40\n        /* \"#utility.yul\":5742:5759   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5736:5760   */\n      mload\n        /* \"#utility.yul\":5714:5734   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5707:5761   */\n      mstore\n        /* \"#utility.yul\":5817:5821   */\n      0x60\n        /* \"#utility.yul\":5805:5822   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5799:5823   */\n      mload\n        /* \"#utility.yul\":5777:5797   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":5770:5824   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5541:5544   */\n      0x80\n        /* \"#utility.yul\":5526:5545   */\n      add\n      swap1\n        /* \"#utility.yul\":5359:5830   */\n      jump\n        /* \"contracts/ContractV/ContractVV1.sol\":4258:4720  function unpackBattleRecord(uint256 battleRecord) public pure returns (uint256 wins, uint256 losses) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_125:\n        /* \"contracts/ContractV/ContractVV1.sol\":4518:4537  sub(shl(128, 1), 1) */\n      0xffffffffffffffffffffffffffffffff\n        /* \"contracts/ContractV/ContractVV1.sol\":4482:4538  and(shr(WINS_BITPOS, battleRecord), sub(shl(128, 1), 1)) */\n      dup2\n      and\n      swap2\n        /* \"contracts/ContractV/ContractVV1.sol\":4526:4529  128 */\n      0x80\n        /* \"contracts/ContractV/ContractVV1.sol\":4648:4680  shr(LOSSES_BITPOS, battleRecord) */\n      swap2\n      swap1\n      swap2\n      shr\n      swap1\n        /* \"contracts/ContractV/ContractVV1.sol\":4258:4720  function unpackBattleRecord(uint256 battleRecord) public pure returns (uint256 wins, uint256 losses) {... */\n      jump\n    tag_124:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6009:6034   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":6065:6067   */\n      0x20\n        /* \"#utility.yul\":6050:6068   */\n      dup4\n      add\n        /* \"#utility.yul\":6043:6077   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5982:6000   */\n      add\n        /* \"contracts/ContractV/ContractVV1.sol\":4258:4720  function unpackBattleRecord(uint256 battleRecord) public pure returns (uint256 wins, uint256 losses) {... */\n      tag_34\n        /* \"#utility.yul\":5835:6083   */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_33:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10774:10778  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11117  interfaceId == 0x01ffc9a7 */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup4\n      and\n      eq\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11193  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_130\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11168:11193  interfaceId == 0x80ac58cd */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup4\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11193  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_130:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11269  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_131\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11244:11269  interfaceId == 0x5b5e139f */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup4\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11269  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_131:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11073:11269  return... */\n      swap3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11573:11671  function name() public view virtual override returns (string memory) {... */\n    tag_38:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11627:11640  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11659:11664  _name */\n      0x02\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11652:11664  return _name */\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_134\n      jump\t// in\n    tag_135:\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11573:11671  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_45:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18712:18719  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18736:18752  _exists(tokenId) */\n      tag_140\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18744:18751  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18736:18743  _exists */\n      tag_141\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18736:18752  _exists(tokenId) */\n      jump\t// in\n    tag_140:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18731:18804  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_143\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18754:18804  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_143\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18762:18803  ApprovalQueryForNonexistentToken.selector */\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18754:18761  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18754:18804  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_143:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18846  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18837  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18846  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18852  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18486  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_51:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18452:18479  _approve(to, tokenId, true) */\n      tag_146\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18461:18463  to */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18465:18472  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18474:18478  true */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18452:18460  _approve */\n      tag_147\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18452:18479  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_146:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18486  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22796:26243  function transferFrom(... */\n    tag_60:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22933:22960  uint256 prevOwnershipPacked */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22963:22990  _packedOwnershipOf(tokenId) */\n      tag_155\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22982:22989  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22963:22981  _packedOwnershipOf */\n      tag_156\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22963:22990  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23115:23137  uint256(uint160(from)) */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22933:22990  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23173:23218  address(uint160(prevOwnershipPacked)) != from */\n      dup2\n      and\n      dup5\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23169:23264  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_158\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23220:23264  _revert(TransferFromIncorrectOwner.selector) */\n      tag_158\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23228:23263  TransferFromIncorrectOwner.selector */\n      0xa114810000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23220:23227  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23220:23264  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_158:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23276:23303  uint256 approvedAddressSlot */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21929:21953  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21929:21944  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21929:21953  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22153:22179  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21566:21596  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21263:21291  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21544:21564  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21541:21597  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23459:23647  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_169\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      dup7\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19664:19668  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19705  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19722  _operatorApprovals[owner][operator] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23546:23647  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_169\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23596:23647  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_169\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23604:23646  TransferCallerNotOwnerNorApproved.selector */\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23596:23603  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23596:23647  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_169:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23790:23805  approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23787:23944  if approvedAddress {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23928:23929  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23907:23926  approvedAddressSlot */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23900:23930  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23787:23944  if approvedAddress {... */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24316:24340  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24316:24334  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24316:24340  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24314:24340  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24384:24406  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24382:24406  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17492:17503  timestamp() */\n      timestamp\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17467:17490  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17463:17504  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17450:17513  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24696  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24687  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24696  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24842  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24959:25006  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24959:25011  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24955:25572  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_177\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25063:25064  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25053:25064  tokenId + 1 */\n      dup5\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25031:25050  uint256 nextTokenId */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25214  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25201  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25214  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25219  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25180:25558  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_179\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25320:25333  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25305:25316  nextTokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25305:25333  nextTokenId != _currentIndex */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25301:25540  if (nextTokenId != _currentIndex) {... */\n      tag_179\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25495  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25482  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25495  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25517  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25301:25540  if (nextTokenId != _currentIndex) {... */\n    tag_179:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25013:25572  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24955:25572  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25700:25720  uint256(uint160(to)) */\n      dup6\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26071:26078  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25700:25720  uint256(uint160(to)) */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26003:26007  from */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25946:25971  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25681:25697  uint256 toMasked */\n      0x00\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25814:26106  log4(... */\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26129:26137  toMasked */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26141:26142  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26129:26142  toMasked == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26125:26183  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_181\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26144:26183  _revert(TransferToZeroAddress.selector) */\n      tag_181\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26152:26182  TransferToZeroAddress.selector */\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26144:26151  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26144:26183  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_181:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22923:26243  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22796:26243  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ContractV/ContractVV1.sol\":5739:6905  function battle(uint256 ownerCreatureId, uint256 opponentCreatureId) external onlyOwnedCreature(ownerCreatureId) {... */\n    tag_65:\n        /* \"contracts/ContractV/ContractVV1.sol\":5835:5850  ownerCreatureId */\n      dup2\n        /* \"contracts/ContractV/ContractVV1.sol\":1424:1447  _checkCreatureOwned(id) */\n      tag_185\n        /* \"contracts/ContractV/ContractVV1.sol\":1444:1446  id */\n      dup2\n        /* \"contracts/ContractV/ContractVV1.sol\":1424:1443  _checkCreatureOwned */\n      tag_186\n        /* \"contracts/ContractV/ContractVV1.sol\":1424:1447  _checkCreatureOwned(id) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/ContractV/ContractVV1.sol\":5864:5885  uint256 ownerStrength */\n      0x00\n        /* \"contracts/ContractV/ContractVV1.sol\":5981:6007  creatures[ownerCreatureId] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ContractV/ContractVV1.sol\":5981:5990  creatures */\n      0x0a\n        /* \"contracts/ContractV/ContractVV1.sol\":5981:6007  creatures[ownerCreatureId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ContractV/ContractVV1.sol\":5981:6017  creatures[ownerCreatureId].gameStats */\n      0x02\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/ContractV/ContractVV1.sol\":6159:6188  creatures[opponentCreatureId] */\n      dup6\n      dup5\n      mstore\n      swap3\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ContractV/ContractVV1.sol\":6159:6198  creatures[opponentCreatureId].gameStats */\n      add\n      sload\n        /* \"contracts/ContractV/ContractVV1.sol\":3286:3304  sub(shl(64, 1), 1) */\n      0xffffffffffffffff\n        /* \"contracts/ContractV/ContractVV1.sol\":3249:3305  and(shr(STRENGTH_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      dup1\n      dup5\n      and\n      swap4\n        /* \"contracts/ContractV/ContractVV1.sol\":3334:3364  shr(AGILITY_BITPOS, gameStats) */\n      dup1\n      dup5\n      shr\n        /* \"contracts/ContractV/ContractVV1.sol\":3330:3385  and(shr(AGILITY_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      dup3\n      and\n      swap4\n        /* \"contracts/ContractV/ContractVV1.sol\":3423:3442  INTELLIGENCE_BITPOS */\n      0x80\n        /* \"contracts/ContractV/ContractVV1.sol\":3419:3454  shr(INTELLIGENCE_BITPOS, gameStats) */\n      dup3\n      dup2\n      shr\n        /* \"contracts/ContractV/ContractVV1.sol\":3415:3475  and(shr(INTELLIGENCE_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      dup5\n      and\n      swap5\n        /* \"contracts/ContractV/ContractVV1.sol\":3513:3533  SPECIAL_POWER_BITPOS */\n      0xc0\n        /* \"contracts/ContractV/ContractVV1.sol\":3509:3545  shr(SPECIAL_POWER_BITPOS, gameStats) */\n      swap4\n      dup5\n      shr\n      swap5\n        /* \"contracts/ContractV/ContractVV1.sol\":3249:3305  and(shr(STRENGTH_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      dup1\n      dup3\n      and\n      swap5\n        /* \"contracts/ContractV/ContractVV1.sol\":3334:3364  shr(AGILITY_BITPOS, gameStats) */\n      swap4\n      dup3\n      swap1\n      shr\n        /* \"contracts/ContractV/ContractVV1.sol\":3330:3385  and(shr(AGILITY_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      dup2\n      and\n      swap4\n        /* \"contracts/ContractV/ContractVV1.sol\":3419:3454  shr(INTELLIGENCE_BITPOS, gameStats) */\n      swap3\n      dup3\n      swap1\n      shr\n        /* \"contracts/ContractV/ContractVV1.sol\":3415:3475  and(shr(INTELLIGENCE_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      and\n      swap2\n        /* \"contracts/ContractV/ContractVV1.sol\":3509:3545  shr(SPECIAL_POWER_BITPOS, gameStats) */\n      shr\n      dup1\n        /* \"contracts/ContractV/ContractVV1.sol\":3415:3475  and(shr(INTELLIGENCE_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      dup3\n        /* \"contracts/ContractV/ContractVV1.sol\":6412:6446  opponentStrength + opponentAgility */\n      tag_190\n        /* \"contracts/ContractV/ContractVV1.sol\":3330:3385  and(shr(AGILITY_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      dup6\n        /* \"contracts/ContractV/ContractVV1.sol\":3249:3305  and(shr(STRENGTH_BITPOS, gameStats), sub(shl(64, 1), 1)) */\n      dup8\n        /* \"contracts/ContractV/ContractVV1.sol\":6412:6446  opponentStrength + opponentAgility */\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"contracts/ContractV/ContractVV1.sol\":6412:6469  opponentStrength + opponentAgility + opponentIntelligence */\n      tag_192\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_192:\n        /* \"contracts/ContractV/ContractVV1.sol\":6412:6492  opponentStrength + opponentAgility + opponentIntelligence + opponentSpecialPower */\n      tag_193\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_193:\n        /* \"contracts/ContractV/ContractVV1.sol\":6392:6409  ownerSpecialPower */\n      dup6\n        /* \"contracts/ContractV/ContractVV1.sol\":6372:6389  ownerIntelligence */\n      dup8\n        /* \"contracts/ContractV/ContractVV1.sol\":6341:6369  ownerStrength + ownerAgility */\n      tag_194\n        /* \"contracts/ContractV/ContractVV1.sol\":6357:6369  ownerAgility */\n      dup11\n        /* \"contracts/ContractV/ContractVV1.sol\":6341:6354  ownerStrength */\n      dup13\n        /* \"contracts/ContractV/ContractVV1.sol\":6341:6369  ownerStrength + ownerAgility */\n      tag_191\n      jump\t// in\n    tag_194:\n        /* \"contracts/ContractV/ContractVV1.sol\":6341:6389  ownerStrength + ownerAgility + ownerIntelligence */\n      tag_195\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_195:\n        /* \"contracts/ContractV/ContractVV1.sol\":6341:6409  ownerStrength + ownerAgility + ownerIntelligence + ownerSpecialPower */\n      tag_196\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_196:\n        /* \"contracts/ContractV/ContractVV1.sol\":6341:6492  ownerStrength + ownerAgility + ownerIntelligence + ownerSpecialPower > opponentStrength + opponentAgility + opponentIntelligence + opponentSpecialPower */\n      gt\n        /* \"contracts/ContractV/ContractVV1.sol\":6337:6898  if (ownerStrength + ownerAgility + ownerIntelligence + ownerSpecialPower > opponentStrength + opponentAgility + opponentIntelligence + opponentSpecialPower) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/ContractV/ContractVV1.sol\":6509:6551  _updateBattleRecord(ownerCreatureId, true) */\n      tag_198\n        /* \"contracts/ContractV/ContractVV1.sol\":6529:6544  ownerCreatureId */\n      dup12\n        /* \"contracts/ContractV/ContractVV1.sol\":6546:6550  true */\n      0x01\n        /* \"contracts/ContractV/ContractVV1.sol\":6509:6528  _updateBattleRecord */\n      tag_199\n        /* \"contracts/ContractV/ContractVV1.sol\":6509:6551  _updateBattleRecord(ownerCreatureId, true) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/ContractV/ContractVV1.sol\":6566:6612  _updateBattleRecord(opponentCreatureId, false) */\n      tag_200\n        /* \"contracts/ContractV/ContractVV1.sol\":6586:6604  opponentCreatureId */\n      dup11\n        /* \"contracts/ContractV/ContractVV1.sol\":6606:6611  false */\n      0x00\n        /* \"contracts/ContractV/ContractVV1.sol\":6566:6585  _updateBattleRecord */\n      tag_199\n        /* \"contracts/ContractV/ContractVV1.sol\":6566:6612  _updateBattleRecord(opponentCreatureId, false) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/ContractV/ContractVV1.sol\":6632:6681  BattleResult(ownerCreatureId, opponentCreatureId) */\n      mload(0x40)\n        /* \"contracts/ContractV/ContractVV1.sol\":6662:6680  opponentCreatureId */\n      dup11\n      swap1\n        /* \"contracts/ContractV/ContractVV1.sol\":6645:6660  ownerCreatureId */\n      dup13\n      swap1\n        /* \"contracts/ContractV/ContractVV1.sol\":6632:6681  BattleResult(ownerCreatureId, opponentCreatureId) */\n      0x37fdf7cda6ec1c848e98866fe5e1f781b2b5976a1d79c7770394e65503ce92af\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/ContractV/ContractVV1.sol\":6337:6898  if (ownerStrength + ownerAgility + ownerIntelligence + ownerSpecialPower > opponentStrength + opponentAgility + opponentIntelligence + opponentSpecialPower) {... */\n      jump(tag_201)\n    tag_197:\n        /* \"contracts/ContractV/ContractVV1.sol\":6714:6757  _updateBattleRecord(ownerCreatureId, false) */\n      tag_202\n        /* \"contracts/ContractV/ContractVV1.sol\":6734:6749  ownerCreatureId */\n      dup12\n        /* \"contracts/ContractV/ContractVV1.sol\":6751:6756  false */\n      0x00\n        /* \"contracts/ContractV/ContractVV1.sol\":6714:6733  _updateBattleRecord */\n      tag_199\n        /* \"contracts/ContractV/ContractVV1.sol\":6714:6757  _updateBattleRecord(ownerCreatureId, false) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/ContractV/ContractVV1.sol\":6772:6817  _updateBattleRecord(opponentCreatureId, true) */\n      tag_203\n        /* \"contracts/ContractV/ContractVV1.sol\":6792:6810  opponentCreatureId */\n      dup11\n        /* \"contracts/ContractV/ContractVV1.sol\":6812:6816  true */\n      0x01\n        /* \"contracts/ContractV/ContractVV1.sol\":6772:6791  _updateBattleRecord */\n      tag_199\n        /* \"contracts/ContractV/ContractVV1.sol\":6772:6817  _updateBattleRecord(opponentCreatureId, true) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/ContractV/ContractVV1.sol\":6837:6886  BattleResult(ownerCreatureId, opponentCreatureId) */\n      mload(0x40)\n        /* \"contracts/ContractV/ContractVV1.sol\":6867:6885  opponentCreatureId */\n      dup11\n      swap1\n        /* \"contracts/ContractV/ContractVV1.sol\":6850:6865  ownerCreatureId */\n      dup13\n      swap1\n        /* \"contracts/ContractV/ContractVV1.sol\":6837:6886  BattleResult(ownerCreatureId, opponentCreatureId) */\n      0x37fdf7cda6ec1c848e98866fe5e1f781b2b5976a1d79c7770394e65503ce92af\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/ContractV/ContractVV1.sol\":6337:6898  if (ownerStrength + ownerAgility + ownerIntelligence + ownerSpecialPower > opponentStrength + opponentAgility + opponentIntelligence + opponentSpecialPower) {... */\n    tag_201:\n        /* \"contracts/ContractV/ContractVV1.sol\":5852:6905  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ContractV/ContractVV1.sol\":5739:6905  function battle(uint256 ownerCreatureId, uint256 opponentCreatureId) external onlyOwnedCreature(ownerCreatureId) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26334:26521  function safeTransferFrom(... */\n    tag_72:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26514  safeTransferFrom(from, to, tokenId, '') */\n      tag_206\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26492:26496  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26498:26500  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26502:26509  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26514  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26491  safeTransferFrom */\n      tag_105\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26514  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_206:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26334:26521  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ContractV/ContractVV1.sol\":4728:5695  function createRandomCreature() external {... */\n    tag_81:\n        /* \"contracts/ContractV/ContractVV1.sol\":4813:4878  abi.encodePacked(block.timestamp, block.prevrandao, _msgSender()) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ContractV/ContractVV1.sol\":4830:4845  block.timestamp */\n      timestamp\n        /* \"contracts/ContractV/ContractVV1.sol\":4813:4878  abi.encodePacked(block.timestamp, block.prevrandao, _msgSender()) */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":7034:7053   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/ContractV/ContractVV1.sol\":4847:4863  block.prevrandao */\n      prevrandao\n        /* \"#utility.yul\":7069:7081   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":7062:7090   */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"#utility.yul\":7128:7130   */\n      0x60\n        /* \"#utility.yul\":7124:7139   */\n      dup2\n      dup2\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":7120:7173   */\n      and\n        /* \"#utility.yul\":7106:7118   */\n      swap1\n      dup5\n      add\n        /* \"#utility.yul\":7099:7174   */\n      mstore\n        /* \"contracts/ContractV/ContractVV1.sol\":4813:4878  abi.encodePacked(block.timestamp, block.prevrandao, _msgSender()) */\n      dup4\n      mload\n      0x54\n      dup2\n      dup6\n      sub\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":7190:7202   */\n      0x74\n      dup5\n      add\n        /* \"contracts/ContractV/ContractVV1.sol\":4813:4878  abi.encodePacked(block.timestamp, block.prevrandao, _msgSender()) */\n      dup1\n      dup7\n      mstore\n        /* \"contracts/ContractV/ContractVV1.sol\":4803:4879  keccak256(abi.encodePacked(block.timestamp, block.prevrandao, _msgSender())) */\n      dup2\n      mload\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n        /* \"contracts/ContractV/ContractVV1.sol\":4921:5327  Creature(... */\n      0xf4\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n        /* \"contracts/ContractV/ContractVV1.sol\":4944:4958  nextCreatureId */\n      sload(0x09)\n        /* \"contracts/ContractV/ContractVV1.sol\":4921:5327  Creature(... */\n      dup3\n      mstore\n      0x94\n      dup4\n      add\n      mstore\n        /* \"#utility.yul\":7190:7202   */\n      swap1\n        /* \"contracts/ContractV/ContractVV1.sol\":4921:5327  Creature(... */\n      0xb4\n      add\n        /* \"contracts/ContractV/ContractVV1.sol\":5095:5279  packGameStats(... */\n      tag_214\n        /* \"contracts/ContractV/ContractVV1.sol\":5127:5138  rand % 1000 */\n      tag_215\n        /* \"contracts/ContractV/ContractVV1.sol\":5134:5138  1000 */\n      0x03e8\n        /* \"contracts/ContractV/ContractVV1.sol\":4803:4879  keccak256(abi.encodePacked(block.timestamp, block.prevrandao, _msgSender())) */\n      dup6\n        /* \"contracts/ContractV/ContractVV1.sol\":5127:5138  rand % 1000 */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"contracts/ContractV/ContractVV1.sol\":5173:5177  1000 */\n      0x03e8\n        /* \"contracts/ContractV/ContractVV1.sol\":5158:5169  rand / 1000 */\n      tag_217\n        /* \"contracts/ContractV/ContractVV1.sol\":5173:5177  1000 */\n      dup2\n        /* \"contracts/ContractV/ContractVV1.sol\":5158:5162  rand */\n      dup8\n        /* \"contracts/ContractV/ContractVV1.sol\":5158:5169  rand / 1000 */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"contracts/ContractV/ContractVV1.sol\":5157:5177  (rand / 1000) % 1000 */\n      tag_219\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_219:\n        /* \"contracts/ContractV/ContractVV1.sol\":5215:5219  1000 */\n      0x03e8\n        /* \"contracts/ContractV/ContractVV1.sol\":5197:5211  rand / 1000000 */\n      tag_220\n        /* \"contracts/ContractV/ContractVV1.sol\":5204:5211  1000000 */\n      0x0f4240\n        /* \"contracts/ContractV/ContractVV1.sol\":5197:5201  rand */\n      dup9\n        /* \"contracts/ContractV/ContractVV1.sol\":5197:5211  rand / 1000000 */\n      tag_218\n      jump\t// in\n    tag_220:\n        /* \"contracts/ContractV/ContractVV1.sol\":5196:5219  (rand / 1000000) % 1000 */\n      tag_221\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_221:\n        /* \"contracts/ContractV/ContractVV1.sol\":5260:5264  1000 */\n      0x03e8\n        /* \"contracts/ContractV/ContractVV1.sol\":5239:5256  rand / 1000000000 */\n      tag_222\n        /* \"contracts/ContractV/ContractVV1.sol\":5246:5256  1000000000 */\n      0x3b9aca00\n        /* \"contracts/ContractV/ContractVV1.sol\":5239:5243  rand */\n      dup10\n        /* \"contracts/ContractV/ContractVV1.sol\":5239:5256  rand / 1000000000 */\n      tag_218\n      jump\t// in\n    tag_222:\n        /* \"contracts/ContractV/ContractVV1.sol\":5238:5264  (rand / 1000000000) % 1000 */\n      tag_223\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_223:\n        /* \"contracts/ContractV/ContractVV1.sol\":2168:2185  uint256 gameStats */\n      0x00\n        /* \"contracts/ContractV/ContractVV1.sol\":2813:2825  specialPower */\n      dup2\n        /* \"contracts/ContractV/ContractVV1.sol\":2791:2811  SPECIAL_POWER_BITPOS */\n      0xc0\n        /* \"contracts/ContractV/ContractVV1.sol\":2787:2826  shl(SPECIAL_POWER_BITPOS, specialPower) */\n      shl\n        /* \"contracts/ContractV/ContractVV1.sol\":2728:2740  intelligence */\n      dup4\n        /* \"contracts/ContractV/ContractVV1.sol\":2707:2726  INTELLIGENCE_BITPOS */\n      0x80\n        /* \"contracts/ContractV/ContractVV1.sol\":2703:2741  shl(INTELLIGENCE_BITPOS, intelligence) */\n      shl\n        /* \"contracts/ContractV/ContractVV1.sol\":2641:2648  agility */\n      dup6\n        /* \"contracts/ContractV/ContractVV1.sol\":2625:2639  AGILITY_BITPOS */\n      0x40\n        /* \"contracts/ContractV/ContractVV1.sol\":2621:2649  shl(AGILITY_BITPOS, agility) */\n      shl\n        /* \"contracts/ContractV/ContractVV1.sol\":2581:2589  strength */\n      dup8\n        /* \"contracts/ContractV/ContractVV1.sol\":2564:2579  STRENGTH_BITPOS */\n      0x00\n        /* \"contracts/ContractV/ContractVV1.sol\":2560:2590  shl(STRENGTH_BITPOS, strength) */\n      shl\n        /* \"contracts/ContractV/ContractVV1.sol\":2527:2676  or(... */\n      or\n        /* \"contracts/ContractV/ContractVV1.sol\":2498:2764  or(... */\n      or\n        /* \"contracts/ContractV/ContractVV1.sol\":2473:2845  or(... */\n      or\n        /* \"contracts/ContractV/ContractVV1.sol\":2442:2845  gameStats := ... */\n      swap1\n      pop\n        /* \"contracts/ContractV/ContractVV1.sol\":1997:2863  function packGameStats(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/ContractV/ContractVV1.sol\":5095:5279  packGameStats(... */\n    tag_214:\n        /* \"contracts/ContractV/ContractVV1.sol\":4921:5327  Creature(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ContractV/ContractVV1.sol\":5311:5312  0 */\n      0x00\n        /* \"contracts/ContractV/ContractVV1.sol\":4921:5327  Creature(... */\n      swap1\n      mstore\n        /* \"contracts/ContractV/ContractVV1.sol\":4903:4917  nextCreatureId */\n      sload(0x09)\n        /* \"contracts/ContractV/ContractVV1.sol\":4893:4918  creatures[nextCreatureId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ContractV/ContractVV1.sol\":4893:4902  creatures */\n      0x0a\n        /* \"contracts/ContractV/ContractVV1.sol\":4893:4918  creatures[nextCreatureId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ContractV/ContractVV1.sol\":4893:5327  creatures[nextCreatureId] = Creature(... */\n      dup4\n      mload\n      dup2\n      sstore\n      swap1\n      dup4\n      add\n      mload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      swap1\n      swap2\n      add\n      mload\n      0x03\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/ContractV/ContractVV1.sol\":5365:5391  _safeMint(_msgSender(), 1) */\n      tag_227\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"contracts/ContractV/ContractVV1.sol\":5389:5390  1 */\n      0x01\n        /* \"contracts/ContractV/ContractVV1.sol\":5365:5374  _safeMint */\n      tag_229\n        /* \"contracts/ContractV/ContractVV1.sol\":5365:5391  _safeMint(_msgSender(), 1) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/ContractV/ContractVV1.sol\":5579:5580  1 */\n      0x01\n        /* \"contracts/ContractV/ContractVV1.sol\":5535:5554  nextCreatureId.slot */\n      0x09\n        /* \"contracts/ContractV/ContractVV1.sol\":5529:5555  sload(nextCreatureId.slot) */\n      sload\n        /* \"contracts/ContractV/ContractVV1.sol\":5503:5599  add(... */\n      add\n        /* \"contracts/ContractV/ContractVV1.sol\":5464:5483  nextCreatureId.slot */\n      0x09\n        /* \"contracts/ContractV/ContractVV1.sol\":5439:5614  sstore(... */\n      sstore\n        /* \"contracts/ContractV/ContractVV1.sol\":5674:5686  _msgSender() */\n      tag_230\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47733:47836  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/ContractV/ContractVV1.sol\":5674:5686  _msgSender() */\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ContractV/ContractVV1.sol\":5642:5687  CreatureCreated(nextCreatureId, _msgSender()) */\n      and\n        /* \"contracts/ContractV/ContractVV1.sol\":5658:5672  nextCreatureId */\n      sload(0x09)\n        /* \"contracts/ContractV/ContractVV1.sol\":5642:5687  CreatureCreated(nextCreatureId, _msgSender()) */\n      0xfce6b98db3cc5152281e5d3e4c7332adfb0d4b574cc5723dc73792f7624043cc\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ContractV/ContractVV1.sol\":4769:5695  {... */\n      pop\n        /* \"contracts/ContractV/ContractVV1.sol\":4728:5695  function createRandomCreature() external {... */\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12934:13084  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_85:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13006:13013  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13048:13075  _packedOwnershipOf(tokenId) */\n      tag_131\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13067:13074  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13048:13066  _packedOwnershipOf */\n      tag_156\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13048:13075  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8570:8809  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_91:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8642:8649  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8665:8684  owner == address(0) */\n      dup3\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8661:8730  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_235\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8686:8730  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_235\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8694:8729  BalanceQueryForZeroAddress.selector */\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8686:8693  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8686:8730  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_235:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8772  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8765  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8772  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1518:1531  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8802  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8570:8809  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11742:11844  function symbol() public view virtual override returns (string memory) {... */\n    tag_95:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11798:11811  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11830:11837  _symbol */\n      0x03\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11823:11837  return _symbol */\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19186:19417  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_101:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19319  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19298  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19319  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19329  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19340  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19355:19410  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":586:627   */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19329  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      swap2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19355:19410  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19355:19410  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19186:19417  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27102:27507  function safeTransferFrom(... */\n    tag_105:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27271:27302  transferFrom(from, to, tokenId) */\n      tag_247\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27284:27288  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27290:27292  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27294:27301  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27271:27283  transferFrom */\n      tag_60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27271:27302  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27316:27330  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27316:27335  to.code.length != 0 */\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27312:27501  if (to.code.length != 0)... */\n      tag_252\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27354:27410  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_249\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27385:27389  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27391:27393  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27395:27402  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27404:27409  _data */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27354:27384  _checkContractOnERC721Received */\n      tag_250\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27354:27410  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_249:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27349:27501  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_252\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27430:27486  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_252\n      shl(0xe1, 0x68d2bf6b)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27430:27437  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27430:27486  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_252:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27102:27507  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11945:12267  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_109:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12018:12031  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12048:12064  _exists(tokenId) */\n      tag_254\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12056:12063  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12048:12055  _exists */\n      tag_141\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12048:12064  _exists(tokenId) */\n      jump\t// in\n    tag_254:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12043:12111  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_256\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12066:12111  _revert(URIQueryForNonexistentToken.selector) */\n      tag_256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12074:12110  URIQueryForNonexistentToken.selector */\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12066:12073  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12066:12111  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_256:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12122:12143  string memory baseURI */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12146:12156  _baseURI() */\n      tag_257\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12588:12597  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12512:12604  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12146:12156  _baseURI() */\n    tag_257:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12122:12156  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12179:12186  baseURI */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12194  bytes(baseURI).length */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12198:12199  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12199  bytes(baseURI).length != 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12260  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_259\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_260)\n    tag_259:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12226:12233  baseURI */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12235:12253  _toString(tokenId) */\n      tag_261\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12245:12252  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12235:12244  _toString */\n      tag_262\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12235:12253  _toString(tokenId) */\n      jump\t// in\n    tag_261:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12209:12254  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_263\n      swap3\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12260  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_260:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12166:12260  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11945:12267  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ContractV/ContractVV1.sol\":1672:1784  function getCreature(uint256 id) external view returns (Creature memory) {... */\n    tag_120:\n        /* \"contracts/ContractV/ContractVV1.sol\":1728:1743  Creature memory */\n      tag_266\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_266:\n      pop\n        /* \"contracts/ContractV/ContractVV1.sol\":1763:1776  creatures[id] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ContractV/ContractVV1.sol\":1763:1772  creatures */\n      0x0a\n        /* \"contracts/ContractV/ContractVV1.sol\":1763:1776  creatures[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ContractV/ContractVV1.sol\":1756:1776  return creatures[id] */\n      dup3\n      mload\n      0x80\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      swap1\n      swap2\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/ContractV/ContractVV1.sol\":1672:1784  function getCreature(uint256 id) external view returns (Creature memory) {... */\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19978:20443  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_141:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20043:20054  bool result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20231:20244  _currentIndex */\n      dup1\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20221:20228  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20221:20244  tokenId < _currentIndex */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20217:20427  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20264:20278  uint256 packed */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20296:20356  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_278:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20313:20339  _packedOwnerships[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20313:20330  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20313:20339  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20303:20345  (packed = _packedOwnerships[tokenId]) == 0 */\n      dup2\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20296:20356  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      tag_279\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20347:20356  --tokenId */\n      tag_280\n      dup4\n      tag_281\n      jump\t// in\n    tag_280:\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20296:20356  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_278)\n    tag_279:\n      shl(0xe0, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20383:20407  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20383:20412  packed & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20217:20427  if (tokenId < _currentIndex) {... */\n    tag_277:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19978:20443  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49703:49863  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_144:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49802:49815  errorSelector */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49796:49800  0x00 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49789:49816  mstore(0x00, errorSelector) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49842:49846  0x04 */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49836:49840  0x00 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49829:49847  revert(0x00, 0x04) */\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41333:41793  function _approve(... */\n    tag_147:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41457:41470  address owner */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41473:41489  ownerOf(tokenId) */\n      tag_284\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41481:41488  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41473:41480  ownerOf */\n      tag_85\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41473:41489  ownerOf(tokenId) */\n      jump\t// in\n    tag_284:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41457:41489  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41504:41517  approvalCheck */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41504:41549  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_285\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41521:41549  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41504:41549  approvalCheck && _msgSenderERC721A() != owner */\n    tag_285:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41500:41698  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_291\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      dup2\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19664:19668  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19705  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19722  _operatorApprovals[owner][operator] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41563:41698  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_291\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41632:41683  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_291\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41640:41682  ApprovalCallerNotOwnerNorApproved.selector */\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41632:41639  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41632:41683  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_291:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41732  _tokenApprovals[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41723  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41732  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41743  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41758:41786  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41732  _tokenApprovals[tokenId] */\n      dup7\n      swap4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41758:41786  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41447:41793  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41333:41793  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14380:16553  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_156:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14528:14554  _packedOwnerships[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14528:14545  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14528:14554  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14847:14853  packed */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14857:14858  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14847:14858  packed == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14843:16113  if (packed == 0) {... */\n      tag_302\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14893:14906  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14882:14889  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14882:14906  tokenId >= _currentIndex */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14878:14955  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_304\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14908:14955  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_304\n      shl(0xe1, 0x6f96cda1)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14908:14915  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14908:14955  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_304:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15502:16099  for (;;) {... */\n    tag_305:\n      pop\n      not(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15596:15605  --tokenId */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15578:15606  _packedOwnerships[--tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15578:15595  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15578:15606  _packedOwnerships[--tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15650:15675  if (packed == 0) continue */\n      dup1\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15502:16099  for (;;) {... */\n      tag_305\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15650:15675  if (packed == 0) continue */\n      jumpi\n      shl(0xe0, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15701:15707  packed */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15701:15725  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15729:15730  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15701:15730  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15697:15745  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_309\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14380:16553  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15697:15745  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_309:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16033:16080  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_310\n      shl(0xe1, 0x6f96cda1)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16033:16040  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16033:16080  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_310:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15502:16099  for (;;) {... */\n      jump(tag_305)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14843:16113  if (packed == 0) {... */\n    tag_302:\n      shl(0xe0, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16435:16441  packed */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16435:16459  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16463:16464  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16435:16464  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16431:16479  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_311\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14380:16553  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16431:16479  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_311:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16499:16546  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_277\n      shl(0xe1, 0x6f96cda1)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16499:16506  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16499:16546  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n        /* \"contracts/ContractV/ContractVV1.sol\":6913:7052  function _checkCreatureOwned(uint256 id) private view {... */\n    tag_186:\n        /* \"contracts/ContractV/ContractVV1.sol\":6982:6995  creatures[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ContractV/ContractVV1.sol\":6982:6991  creatures */\n      0x0a\n        /* \"contracts/ContractV/ContractVV1.sol\":6982:6995  creatures[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ContractV/ContractVV1.sol\":6982:7001  creatures[id].owner */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"contracts/ContractV/ContractVV1.sol\":6982:7017  creatures[id].owner != _msgSender() */\n      eq\n        /* \"contracts/ContractV/ContractVV1.sol\":6978:7044  if (creatures[id].owner != _msgSender()) revert CreatureNotOwned() */\n      tag_324\n      jumpi\n        /* \"contracts/ContractV/ContractVV1.sol\":7026:7044  CreatureNotOwned() */\n      mload(0x40)\n      0x233de59500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ContractV/ContractVV1.sol\":6978:7044  if (creatures[id].owner != _msgSender()) revert CreatureNotOwned() */\n    tag_324:\n        /* \"contracts/ContractV/ContractVV1.sol\":6913:7052  function _checkCreatureOwned(uint256 id) private view {... */\n      pop\n      jump\t// out\n        /* \"contracts/ContractV/ContractVV1.sol\":7060:7502  function _updateBattleRecord(uint256 creatureId, bool won) private {... */\n    tag_199:\n        /* \"contracts/ContractV/ContractVV1.sol\":7138:7163  Creature storage creature */\n      0x00\n        /* \"contracts/ContractV/ContractVV1.sol\":7166:7187  creatures[creatureId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ContractV/ContractVV1.sol\":7166:7175  creatures */\n      0x0a\n        /* \"contracts/ContractV/ContractVV1.sol\":7166:7187  creatures[creatureId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ContractV/ContractVV1.sol\":7250:7271  creature.battleRecord */\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/ContractV/ContractVV1.sol\":4518:4537  sub(shl(128, 1), 1) */\n      0xffffffffffffffffffffffffffffffff\n        /* \"contracts/ContractV/ContractVV1.sol\":4482:4538  and(shr(WINS_BITPOS, battleRecord), sub(shl(128, 1), 1)) */\n      dup2\n      and\n      swap1\n        /* \"contracts/ContractV/ContractVV1.sol\":4526:4529  128 */\n      0x80\n        /* \"contracts/ContractV/ContractVV1.sol\":4648:4680  shr(LOSSES_BITPOS, battleRecord) */\n      shr\n        /* \"contracts/ContractV/ContractVV1.sol\":7316:7319  won */\n      dup4\n        /* \"contracts/ContractV/ContractVV1.sol\":7338:7342  true */\n      0x01\n        /* \"contracts/ContractV/ContractVV1.sol\":7333:7367  case true { wins := add(wins, 1) } */\n      dup2\n      eq\n      tag_328\n      jumpi\n        /* \"contracts/ContractV/ContractVV1.sol\":7413:7414  1 */\n      0x01\n        /* \"contracts/ContractV/ContractVV1.sol\":7405:7411  losses */\n      dup3\n        /* \"contracts/ContractV/ContractVV1.sol\":7401:7415  add(losses, 1) */\n      add\n        /* \"contracts/ContractV/ContractVV1.sol\":7391:7415  losses := add(losses, 1) */\n      swap2\n      pop\n        /* \"contracts/ContractV/ContractVV1.sol\":7309:7417  switch won... */\n      jump(tag_327)\n        /* \"contracts/ContractV/ContractVV1.sol\":7333:7367  case true { wins := add(wins, 1) } */\n    tag_328:\n        /* \"contracts/ContractV/ContractVV1.sol\":7363:7364  1 */\n      0x01\n        /* \"contracts/ContractV/ContractVV1.sol\":7357:7361  wins */\n      dup4\n        /* \"contracts/ContractV/ContractVV1.sol\":7353:7365  add(wins, 1) */\n      add\n        /* \"contracts/ContractV/ContractVV1.sol\":7345:7365  wins := add(wins, 1) */\n      swap3\n      pop\n        /* \"contracts/ContractV/ContractVV1.sol\":7309:7417  switch won... */\n    tag_327:\n      pop\n        /* \"contracts/ContractV/ContractVV1.sol\":7464:7494  packBattleRecord(wins, losses) */\n      tag_329\n        /* \"contracts/ContractV/ContractVV1.sol\":7481:7485  wins */\n      dup3\n        /* \"contracts/ContractV/ContractVV1.sol\":7487:7493  losses */\n      dup3\n        /* \"contracts/ContractV/ContractVV1.sol\":4123:4136  LOSSES_BITPOS */\n      0x80\n        /* \"contracts/ContractV/ContractVV1.sol\":4119:4145  shl(LOSSES_BITPOS, losses) */\n      shl\n        /* \"contracts/ContractV/ContractVV1.sol\":4049:4164  or(... */\n      or\n      swap1\n        /* \"contracts/ContractV/ContractVV1.sol\":3798:4182  function packBattleRecord(uint256 wins, uint256 losses) internal pure returns (uint256 battleRecord) {... */\n      jump\n        /* \"contracts/ContractV/ContractVV1.sol\":7464:7494  packBattleRecord(wins, losses) */\n    tag_329:\n        /* \"contracts/ContractV/ContractVV1.sol\":7440:7448  creature */\n      dup4\n        /* \"contracts/ContractV/ContractVV1.sol\":7440:7461  creature.battleRecord */\n      0x03\n      add\n        /* \"contracts/ContractV/ContractVV1.sol\":7440:7494  creature.battleRecord = packBattleRecord(wins, losses) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ContractV/ContractVV1.sol\":7127:7502  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ContractV/ContractVV1.sol\":7060:7502  function _updateBattleRecord(uint256 creatureId, bool won) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36661:36771  function _safeMint(address to, uint256 quantity) internal virtual {... */\n    tag_229:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36737:36764  _safeMint(to, quantity, '') */\n      tag_146\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36747:36749  to */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36751:36759  quantity */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36737:36764  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36737:36746  _safeMint */\n      tag_335\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36737:36764  _safeMint(to, quantity, '') */\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29533:30206  function _checkContractOnERC721Received(... */\n    tag_250:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29799  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29691:29695  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29756  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29799  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_338\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29778:29782  from */\n      dup10\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29784:29791  tokenId */\n      dup9\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29793:29798  _data */\n      dup9\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29799  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_339\n      jump\t// in\n    tag_338:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_340\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_341\n      swap2\n      dup2\n      add\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      0x01\n    tag_340:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29707:30200  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_343\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_348\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_347)\n    tag_348:\n      0x60\n      swap2\n      pop\n    tag_347:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29989:29995  reason */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29989:30002  reason.length */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30006:30007  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29989:30007  reason.length == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29985:30098  if (reason.length == 0) {... */\n      tag_350\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30027:30083  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_350\n      shl(0xe1, 0x68d2bf6b)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30027:30034  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30027:30083  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_350:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30168:30174  reason */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30162:30175  mload(reason) */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30153:30159  reason */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30149:30151  32 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30145:30160  add(32, reason) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30138:30176  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29707:30200  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_343:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29867:29931  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29707:30200  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_351:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29533:30206  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47933:49641  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_262:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47998:48015  string memory str */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48426:48430  0xa0 */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48419:48423  0x40 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48413:48424  mload(0x40) */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48409:48431  add(mload(0x40), 0xa0) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48516:48517  m */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48510:48514  0x40 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48503:48518  mstore(0x40, m) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48589:48593  0x20 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48586:48587  m */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48582:48594  sub(m, 0x20) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48575:48594  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48669:48670  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48664:48667  str */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48657:48671  mstore(str, 0) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48770:48773  str */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49004:49009  value */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48986:49405  for { let temp := value } 1 {} {... */\n    tag_354:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49051:49052  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49046:49049  str */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49042:49053  sub(str, 1) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49035:49053  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49219:49221  10 */\n      0x0a\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49213:49217  temp */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49209:49222  mod(temp, 10) */\n      mod\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49205:49207  48 */\n      0x30\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49201:49223  add(48, mod(temp, 10)) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49196:49199  str */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49188:49224  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49311:49313  10 */\n      0x0a\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49301:49314  div(temp, 10) */\n      swap1\n      div\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49366:49391  if iszero(temp) { break } */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48986:49405  for { let temp := value } 1 {} {... */\n      tag_354\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49366:49391  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49433:49446  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49546:49560  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49606:49625  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49546:49560  sub(str, 0x20) */\n      swap2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47933:49641  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35816:36582  function _safeMint(... */\n    tag_335:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35942:35961  _mint(to, quantity) */\n      tag_361\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35948:35950  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35952:35960  quantity */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35942:35947  _mint */\n      tag_362\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35942:35961  _mint(to, quantity) */\n      jump\t// in\n    tag_361:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36000:36014  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36000:36019  to.code.length != 0 */\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35996:36566  if (to.code.length != 0) {... */\n      tag_206\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36039:36050  uint256 end */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36053:36066  _currentIndex */\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36100:36114  end - quantity */\n      dup3\n      dup2\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36132:36370  do {... */\n    tag_364:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36162:36224  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_367\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36201:36202  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36205:36207  to */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36209:36216  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36218:36223  _data */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36162:36192  _checkContractOnERC721Received */\n      tag_250\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36162:36224  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_367:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36157:36331  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_369\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36252:36308  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_369\n      shl(0xe1, 0x68d2bf6b)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36252:36259  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36252:36308  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_369:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36365:36368  end */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36357:36362  index */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36357:36368  index < end */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36132:36370  do {... */\n      tag_364\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36538:36541  end */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36521:36534  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36521:36541  _currentIndex != end */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36517:36551  if (_currentIndex != end) revert() */\n      tag_370\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36543:36551  revert() */\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36517:36551  if (_currentIndex != end) revert() */\n    tag_370:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":36021:36566  {... */\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":35816:36582  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30652:32995  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_362:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30724:30744  uint256 startTokenId */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30747:30760  _currentIndex */\n      dup1\n      sload\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30774:30787  quantity == 0 */\n      dup3\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30770:30823  if (quantity == 0) _revert(MintZeroQuantity.selector) */\n      tag_373\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30789:30823  _revert(MintZeroQuantity.selector) */\n      tag_373\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30797:30822  MintZeroQuantity.selector */\n      0xb562e8dd00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30789:30796  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30789:30823  _revert(MintZeroQuantity.selector) */\n      jump\t// in\n    tag_373:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31323:31354  _packedOwnerships[startTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31323:31340  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31323:31354  _packedOwnerships[startTokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17320:17348  and(owner, _BITMASK_ADDRESS) */\n      dup8\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17492:17503  timestamp() */\n      timestamp\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17467:17490  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17463:17504  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17925:17926  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17912:17927  eq(quantity, 1) */\n      dup9\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17886:17910  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17882:17928  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17460:17512  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17450:17513  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      dup2\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31323:31493  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31704:31726  _packedAddressData[to] */\n      dup1\n      dup5\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31704:31722  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31704:31726  _packedAddressData[to] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31704:31775  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup1\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31742:31774  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      0x010000000000000001\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31730:31775  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup7\n      mul\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31704:31775  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      add\n      swap1\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17320:17348  and(owner, _BITMASK_ADDRESS) */\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31960:31973  toMasked == 0 */\n      dup2\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31956:32010  if (toMasked == 0) _revert(MintToZeroAddress.selector) */\n      tag_380\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31975:32010  _revert(MintToZeroAddress.selector) */\n      tag_380\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31983:32009  MintToZeroAddress.selector */\n      0x2e07630000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31975:31982  _revert */\n      tag_144\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":31975:32010  _revert(MintToZeroAddress.selector) */\n      jump\t// in\n    tag_380:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32039:32062  startTokenId + quantity */\n      dup2\n      dup4\n      add\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32213:32875  do {... */\n    tag_384:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32623:32630  tokenId */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32580:32588  toMasked */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32536:32537  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32471:32496  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32409:32410  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32345:32346  0 */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32315:32666  log4(... */\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32870:32873  end */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32857:32866  ++tokenId */\n      dup2\n      0x01\n      add\n      swap2\n      pop\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32857:32873  ++tokenId != end */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32213:32875  do {... */\n      tag_384\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32889:32902  _currentIndex */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":32889:32908  _currentIndex = end */\n      sstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26334:26521  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:191   */\n    tag_389:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":88:166   */\n      and\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":78:167   */\n      eq\n        /* \"#utility.yul\":68:185   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":181:182   */\n      0x00\n        /* \"#utility.yul\":178:179   */\n      dup1\n        /* \"#utility.yul\":171:183   */\n      revert\n        /* \"#utility.yul\":196:441   */\n    tag_32:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_400:\n        /* \"#utility.yul\":362:371   */\n      dup2\n        /* \"#utility.yul\":349:372   */\n      calldataload\n        /* \"#utility.yul\":381:411   */\n      tag_260\n        /* \"#utility.yul\":405:410   */\n      dup2\n        /* \"#utility.yul\":381:411   */\n      tag_389\n      jump\t// in\n        /* \"#utility.yul\":638:938   */\n    tag_390:\n        /* \"#utility.yul\":691:694   */\n      0x00\n        /* \"#utility.yul\":729:734   */\n      dup2\n        /* \"#utility.yul\":723:735   */\n      mload\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":751:754   */\n      dup5\n        /* \"#utility.yul\":744:763   */\n      mstore\n        /* \"#utility.yul\":812:818   */\n      dup1\n        /* \"#utility.yul\":805:809   */\n      0x20\n        /* \"#utility.yul\":798:803   */\n      dup5\n        /* \"#utility.yul\":794:810   */\n      add\n        /* \"#utility.yul\":787:791   */\n      0x20\n        /* \"#utility.yul\":782:785   */\n      dup7\n        /* \"#utility.yul\":778:792   */\n      add\n        /* \"#utility.yul\":772:819   */\n      mcopy\n        /* \"#utility.yul\":864:865   */\n      0x00\n        /* \"#utility.yul\":857:861   */\n      0x20\n        /* \"#utility.yul\":848:854   */\n      dup3\n        /* \"#utility.yul\":843:846   */\n      dup7\n        /* \"#utility.yul\":839:855   */\n      add\n        /* \"#utility.yul\":835:862   */\n      add\n        /* \"#utility.yul\":828:866   */\n      mstore\n        /* \"#utility.yul\":927:931   */\n      0x20\n        /* \"#utility.yul\":920:922   */\n      0x1f\n        /* \"#utility.yul\":916:923   */\n      not\n        /* \"#utility.yul\":911:913   */\n      0x1f\n        /* \"#utility.yul\":903:909   */\n      dup4\n        /* \"#utility.yul\":899:914   */\n      add\n        /* \"#utility.yul\":895:924   */\n      and\n        /* \"#utility.yul\":890:893   */\n      dup6\n        /* \"#utility.yul\":886:925   */\n      add\n        /* \"#utility.yul\":882:932   */\n      add\n        /* \"#utility.yul\":875:932   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":638:938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":943:1174   */\n    tag_40:\n        /* \"#utility.yul\":1092:1094   */\n      0x20\n        /* \"#utility.yul\":1081:1090   */\n      dup2\n        /* \"#utility.yul\":1074:1095   */\n      mstore\n        /* \"#utility.yul\":1055:1059   */\n      0x00\n        /* \"#utility.yul\":1112:1168   */\n      tag_260\n        /* \"#utility.yul\":1164:1166   */\n      0x20\n        /* \"#utility.yul\":1153:1162   */\n      dup4\n        /* \"#utility.yul\":1149:1167   */\n      add\n        /* \"#utility.yul\":1141:1147   */\n      dup5\n        /* \"#utility.yul\":1112:1168   */\n      tag_390\n      jump\t// in\n        /* \"#utility.yul\":1179:1359   */\n    tag_44:\n        /* \"#utility.yul\":1238:1244   */\n      0x00\n        /* \"#utility.yul\":1291:1293   */\n      0x20\n        /* \"#utility.yul\":1279:1288   */\n      dup3\n        /* \"#utility.yul\":1270:1277   */\n      dup5\n        /* \"#utility.yul\":1266:1289   */\n      sub\n        /* \"#utility.yul\":1262:1294   */\n      slt\n        /* \"#utility.yul\":1259:1311   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":1307:1308   */\n      0x00\n        /* \"#utility.yul\":1304:1305   */\n      dup1\n        /* \"#utility.yul\":1297:1309   */\n      revert\n        /* \"#utility.yul\":1259:1311   */\n    tag_407:\n      pop\n        /* \"#utility.yul\":1330:1353   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1179:1359   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1595:1791   */\n    tag_391:\n        /* \"#utility.yul\":1663:1683   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1712:1766   */\n      dup2\n      and\n        /* \"#utility.yul\":1702:1767   */\n      dup2\n      eq\n        /* \"#utility.yul\":1692:1785   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1781:1782   */\n      0x00\n        /* \"#utility.yul\":1778:1779   */\n      dup1\n        /* \"#utility.yul\":1771:1783   */\n      revert\n        /* \"#utility.yul\":1796:2050   */\n    tag_50:\n        /* \"#utility.yul\":1864:1870   */\n      0x00\n        /* \"#utility.yul\":1872:1878   */\n      dup1\n        /* \"#utility.yul\":1925:1927   */\n      0x40\n        /* \"#utility.yul\":1913:1922   */\n      dup4\n        /* \"#utility.yul\":1904:1911   */\n      dup6\n        /* \"#utility.yul\":1900:1923   */\n      sub\n        /* \"#utility.yul\":1896:1928   */\n      slt\n        /* \"#utility.yul\":1893:1945   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":1941:1942   */\n      0x00\n        /* \"#utility.yul\":1938:1939   */\n      dup1\n        /* \"#utility.yul\":1931:1943   */\n      revert\n        /* \"#utility.yul\":1893:1945   */\n    tag_412:\n        /* \"#utility.yul\":1964:1993   */\n      tag_413\n        /* \"#utility.yul\":1983:1992   */\n      dup4\n        /* \"#utility.yul\":1964:1993   */\n      tag_391\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1954:1993   */\n      swap5\n        /* \"#utility.yul\":2040:2042   */\n      0x20\n        /* \"#utility.yul\":2025:2043   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2012:2044   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1796:2050   */\n      jump\t// out\n        /* \"#utility.yul\":2237:2565   */\n    tag_59:\n        /* \"#utility.yul\":2314:2320   */\n      0x00\n        /* \"#utility.yul\":2322:2328   */\n      dup1\n        /* \"#utility.yul\":2330:2336   */\n      0x00\n        /* \"#utility.yul\":2383:2385   */\n      0x60\n        /* \"#utility.yul\":2371:2380   */\n      dup5\n        /* \"#utility.yul\":2362:2369   */\n      dup7\n        /* \"#utility.yul\":2358:2381   */\n      sub\n        /* \"#utility.yul\":2354:2386   */\n      slt\n        /* \"#utility.yul\":2351:2403   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":2399:2400   */\n      0x00\n        /* \"#utility.yul\":2396:2397   */\n      dup1\n        /* \"#utility.yul\":2389:2401   */\n      revert\n        /* \"#utility.yul\":2351:2403   */\n    tag_416:\n        /* \"#utility.yul\":2422:2451   */\n      tag_417\n        /* \"#utility.yul\":2441:2450   */\n      dup5\n        /* \"#utility.yul\":2422:2451   */\n      tag_391\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2412:2451   */\n      swap3\n      pop\n        /* \"#utility.yul\":2470:2508   */\n      tag_418\n        /* \"#utility.yul\":2504:2506   */\n      0x20\n        /* \"#utility.yul\":2493:2502   */\n      dup6\n        /* \"#utility.yul\":2489:2507   */\n      add\n        /* \"#utility.yul\":2470:2508   */\n      tag_391\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":2460:2508   */\n      swap2\n      pop\n        /* \"#utility.yul\":2555:2557   */\n      0x40\n        /* \"#utility.yul\":2544:2553   */\n      dup5\n        /* \"#utility.yul\":2540:2558   */\n      add\n        /* \"#utility.yul\":2527:2559   */\n      calldataload\n        /* \"#utility.yul\":2517:2559   */\n      swap1\n      pop\n        /* \"#utility.yul\":2237:2565   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2570:2818   */\n    tag_64:\n        /* \"#utility.yul\":2638:2644   */\n      0x00\n        /* \"#utility.yul\":2646:2652   */\n      dup1\n        /* \"#utility.yul\":2699:2701   */\n      0x40\n        /* \"#utility.yul\":2687:2696   */\n      dup4\n        /* \"#utility.yul\":2678:2685   */\n      dup6\n        /* \"#utility.yul\":2674:2697   */\n      sub\n        /* \"#utility.yul\":2670:2702   */\n      slt\n        /* \"#utility.yul\":2667:2719   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":2715:2716   */\n      0x00\n        /* \"#utility.yul\":2712:2713   */\n      dup1\n        /* \"#utility.yul\":2705:2717   */\n      revert\n        /* \"#utility.yul\":2667:2719   */\n    tag_420:\n      pop\n      pop\n        /* \"#utility.yul\":2738:2761   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2808:2810   */\n      0x20\n        /* \"#utility.yul\":2793:2811   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2780:2812   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2570:2818   */\n      jump\t// out\n        /* \"#utility.yul\":3219:3405   */\n    tag_90:\n        /* \"#utility.yul\":3278:3284   */\n      0x00\n        /* \"#utility.yul\":3331:3333   */\n      0x20\n        /* \"#utility.yul\":3319:3328   */\n      dup3\n        /* \"#utility.yul\":3310:3317   */\n      dup5\n        /* \"#utility.yul\":3306:3329   */\n      sub\n        /* \"#utility.yul\":3302:3334   */\n      slt\n        /* \"#utility.yul\":3299:3351   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":3347:3348   */\n      0x00\n        /* \"#utility.yul\":3344:3345   */\n      dup1\n        /* \"#utility.yul\":3337:3349   */\n      revert\n        /* \"#utility.yul\":3299:3351   */\n    tag_423:\n        /* \"#utility.yul\":3370:3399   */\n      tag_260\n        /* \"#utility.yul\":3389:3398   */\n      dup3\n        /* \"#utility.yul\":3370:3399   */\n      tag_391\n      jump\t// in\n        /* \"#utility.yul\":3410:3757   */\n    tag_100:\n        /* \"#utility.yul\":3475:3481   */\n      0x00\n        /* \"#utility.yul\":3483:3489   */\n      dup1\n        /* \"#utility.yul\":3536:3538   */\n      0x40\n        /* \"#utility.yul\":3524:3533   */\n      dup4\n        /* \"#utility.yul\":3515:3522   */\n      dup6\n        /* \"#utility.yul\":3511:3534   */\n      sub\n        /* \"#utility.yul\":3507:3539   */\n      slt\n        /* \"#utility.yul\":3504:3556   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3549:3550   */\n      dup1\n        /* \"#utility.yul\":3542:3554   */\n      revert\n        /* \"#utility.yul\":3504:3556   */\n    tag_426:\n        /* \"#utility.yul\":3575:3604   */\n      tag_427\n        /* \"#utility.yul\":3594:3603   */\n      dup4\n        /* \"#utility.yul\":3575:3604   */\n      tag_391\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3565:3604   */\n      swap2\n      pop\n        /* \"#utility.yul\":3654:3656   */\n      0x20\n        /* \"#utility.yul\":3643:3652   */\n      dup4\n        /* \"#utility.yul\":3639:3657   */\n      add\n        /* \"#utility.yul\":3626:3658   */\n      calldataload\n        /* \"#utility.yul\":3701:3706   */\n      dup1\n        /* \"#utility.yul\":3694:3707   */\n      iszero\n        /* \"#utility.yul\":3687:3708   */\n      iszero\n        /* \"#utility.yul\":3680:3685   */\n      dup2\n        /* \"#utility.yul\":3677:3709   */\n      eq\n        /* \"#utility.yul\":3667:3727   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":3723:3724   */\n      0x00\n        /* \"#utility.yul\":3720:3721   */\n      dup1\n        /* \"#utility.yul\":3713:3725   */\n      revert\n        /* \"#utility.yul\":3667:3727   */\n    tag_428:\n        /* \"#utility.yul\":3746:3751   */\n      dup1\n        /* \"#utility.yul\":3736:3751   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3410:3757   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3762:3946   */\n    tag_392:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3811:3812   */\n      0x00\n        /* \"#utility.yul\":3804:3892   */\n      mstore\n        /* \"#utility.yul\":3911:3915   */\n      0x41\n        /* \"#utility.yul\":3908:3909   */\n      0x04\n        /* \"#utility.yul\":3901:3916   */\n      mstore\n        /* \"#utility.yul\":3935:3939   */\n      0x24\n        /* \"#utility.yul\":3932:3933   */\n      0x00\n        /* \"#utility.yul\":3925:3940   */\n      revert\n        /* \"#utility.yul\":3951:5089   */\n    tag_104:\n        /* \"#utility.yul\":4046:4052   */\n      0x00\n        /* \"#utility.yul\":4054:4060   */\n      dup1\n        /* \"#utility.yul\":4062:4068   */\n      0x00\n        /* \"#utility.yul\":4070:4076   */\n      dup1\n        /* \"#utility.yul\":4123:4126   */\n      0x80\n        /* \"#utility.yul\":4111:4120   */\n      dup6\n        /* \"#utility.yul\":4102:4109   */\n      dup8\n        /* \"#utility.yul\":4098:4121   */\n      sub\n        /* \"#utility.yul\":4094:4127   */\n      slt\n        /* \"#utility.yul\":4091:4144   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":4140:4141   */\n      0x00\n        /* \"#utility.yul\":4137:4138   */\n      dup1\n        /* \"#utility.yul\":4130:4142   */\n      revert\n        /* \"#utility.yul\":4091:4144   */\n    tag_431:\n        /* \"#utility.yul\":4163:4192   */\n      tag_432\n        /* \"#utility.yul\":4182:4191   */\n      dup6\n        /* \"#utility.yul\":4163:4192   */\n      tag_391\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4153:4192   */\n      swap4\n      pop\n        /* \"#utility.yul\":4211:4249   */\n      tag_433\n        /* \"#utility.yul\":4245:4247   */\n      0x20\n        /* \"#utility.yul\":4234:4243   */\n      dup7\n        /* \"#utility.yul\":4230:4248   */\n      add\n        /* \"#utility.yul\":4211:4249   */\n      tag_391\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4201:4249   */\n      swap3\n      pop\n        /* \"#utility.yul\":4296:4298   */\n      0x40\n        /* \"#utility.yul\":4285:4294   */\n      dup6\n        /* \"#utility.yul\":4281:4299   */\n      add\n        /* \"#utility.yul\":4268:4300   */\n      calldataload\n        /* \"#utility.yul\":4258:4300   */\n      swap2\n      pop\n        /* \"#utility.yul\":4351:4353   */\n      0x60\n        /* \"#utility.yul\":4340:4349   */\n      dup6\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4323:4355   */\n      calldataload\n        /* \"#utility.yul\":4374:4392   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4415:4417   */\n      dup1\n        /* \"#utility.yul\":4407:4413   */\n      dup3\n        /* \"#utility.yul\":4404:4418   */\n      gt\n        /* \"#utility.yul\":4401:4435   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":4431:4432   */\n      0x00\n        /* \"#utility.yul\":4428:4429   */\n      dup1\n        /* \"#utility.yul\":4421:4433   */\n      revert\n        /* \"#utility.yul\":4401:4435   */\n    tag_434:\n        /* \"#utility.yul\":4469:4475   */\n      dup2\n        /* \"#utility.yul\":4458:4467   */\n      dup8\n        /* \"#utility.yul\":4454:4476   */\n      add\n        /* \"#utility.yul\":4444:4476   */\n      swap2\n      pop\n        /* \"#utility.yul\":4514:4521   */\n      dup8\n        /* \"#utility.yul\":4507:4511   */\n      0x1f\n        /* \"#utility.yul\":4503:4505   */\n      dup4\n        /* \"#utility.yul\":4499:4512   */\n      add\n        /* \"#utility.yul\":4495:4522   */\n      slt\n        /* \"#utility.yul\":4485:4540   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":4536:4537   */\n      0x00\n        /* \"#utility.yul\":4533:4534   */\n      dup1\n        /* \"#utility.yul\":4526:4538   */\n      revert\n        /* \"#utility.yul\":4485:4540   */\n    tag_435:\n        /* \"#utility.yul\":4572:4574   */\n      dup2\n        /* \"#utility.yul\":4559:4575   */\n      calldataload\n        /* \"#utility.yul\":4594:4596   */\n      dup2\n        /* \"#utility.yul\":4590:4592   */\n      dup2\n        /* \"#utility.yul\":4587:4597   */\n      gt\n        /* \"#utility.yul\":4584:4620   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":4600:4618   */\n      tag_437\n      tag_392\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4675:4677   */\n      0x40\n        /* \"#utility.yul\":4669:4678   */\n      mload\n        /* \"#utility.yul\":4643:4645   */\n      0x1f\n        /* \"#utility.yul\":4729:4742   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4725:4747   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4749:4751   */\n      0x3f\n        /* \"#utility.yul\":4721:4752   */\n      add\n        /* \"#utility.yul\":4717:4757   */\n      and\n        /* \"#utility.yul\":4705:4758   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4773:4791   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4793:4815   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4770:4816   */\n      or\n        /* \"#utility.yul\":4767:4839   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":4819:4837   */\n      tag_439\n      tag_392\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4859:4869   */\n      dup2\n        /* \"#utility.yul\":4855:4857   */\n      0x40\n        /* \"#utility.yul\":4848:4870   */\n      mstore\n        /* \"#utility.yul\":4894:4896   */\n      dup3\n        /* \"#utility.yul\":4886:4892   */\n      dup2\n        /* \"#utility.yul\":4879:4897   */\n      mstore\n        /* \"#utility.yul\":4934:4941   */\n      dup11\n        /* \"#utility.yul\":4929:4931   */\n      0x20\n        /* \"#utility.yul\":4924:4926   */\n      dup5\n        /* \"#utility.yul\":4920:4922   */\n      dup8\n        /* \"#utility.yul\":4916:4927   */\n      add\n        /* \"#utility.yul\":4912:4932   */\n      add\n        /* \"#utility.yul\":4909:4942   */\n      gt\n        /* \"#utility.yul\":4906:4959   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":4955:4956   */\n      0x00\n        /* \"#utility.yul\":4952:4953   */\n      dup1\n        /* \"#utility.yul\":4945:4957   */\n      revert\n        /* \"#utility.yul\":4906:4959   */\n    tag_440:\n        /* \"#utility.yul\":5011:5013   */\n      dup3\n        /* \"#utility.yul\":5006:5008   */\n      0x20\n        /* \"#utility.yul\":5002:5004   */\n      dup7\n        /* \"#utility.yul\":4998:5009   */\n      add\n        /* \"#utility.yul\":4993:4995   */\n      0x20\n        /* \"#utility.yul\":4985:4991   */\n      dup4\n        /* \"#utility.yul\":4981:4996   */\n      add\n        /* \"#utility.yul\":4968:5014   */\n      calldatacopy\n        /* \"#utility.yul\":5056:5057   */\n      0x00\n        /* \"#utility.yul\":5051:5053   */\n      0x20\n        /* \"#utility.yul\":5046:5048   */\n      dup5\n        /* \"#utility.yul\":5038:5044   */\n      dup4\n        /* \"#utility.yul\":5034:5049   */\n      add\n        /* \"#utility.yul\":5030:5054   */\n      add\n        /* \"#utility.yul\":5023:5058   */\n      mstore\n        /* \"#utility.yul\":5077:5083   */\n      dup1\n        /* \"#utility.yul\":5067:5083   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3951:5089   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5094:5354   */\n    tag_114:\n        /* \"#utility.yul\":5162:5168   */\n      0x00\n        /* \"#utility.yul\":5170:5176   */\n      dup1\n        /* \"#utility.yul\":5223:5225   */\n      0x40\n        /* \"#utility.yul\":5211:5220   */\n      dup4\n        /* \"#utility.yul\":5202:5209   */\n      dup6\n        /* \"#utility.yul\":5198:5221   */\n      sub\n        /* \"#utility.yul\":5194:5226   */\n      slt\n        /* \"#utility.yul\":5191:5243   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":5239:5240   */\n      0x00\n        /* \"#utility.yul\":5236:5237   */\n      dup1\n        /* \"#utility.yul\":5229:5241   */\n      revert\n        /* \"#utility.yul\":5191:5243   */\n    tag_442:\n        /* \"#utility.yul\":5262:5291   */\n      tag_443\n        /* \"#utility.yul\":5281:5290   */\n      dup4\n        /* \"#utility.yul\":5262:5291   */\n      tag_391\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5252:5291   */\n      swap2\n      pop\n        /* \"#utility.yul\":5310:5348   */\n      tag_444\n        /* \"#utility.yul\":5344:5346   */\n      0x20\n        /* \"#utility.yul\":5333:5342   */\n      dup5\n        /* \"#utility.yul\":5329:5347   */\n      add\n        /* \"#utility.yul\":5310:5348   */\n      tag_391\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5300:5348   */\n      swap1\n      pop\n        /* \"#utility.yul\":5094:5354   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6088:6525   */\n    tag_134:\n        /* \"#utility.yul\":6167:6168   */\n      0x01\n        /* \"#utility.yul\":6163:6175   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6210:6222   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6231:6292   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":6285:6289   */\n      0x7f\n        /* \"#utility.yul\":6277:6283   */\n      dup3\n        /* \"#utility.yul\":6273:6290   */\n      and\n        /* \"#utility.yul\":6263:6290   */\n      swap2\n      pop\n        /* \"#utility.yul\":6231:6292   */\n    tag_448:\n        /* \"#utility.yul\":6338:6340   */\n      0x20\n        /* \"#utility.yul\":6330:6336   */\n      dup3\n        /* \"#utility.yul\":6327:6341   */\n      lt\n        /* \"#utility.yul\":6307:6325   */\n      dup2\n        /* \"#utility.yul\":6304:6342   */\n      sub\n        /* \"#utility.yul\":6301:6519   */\n      tag_449\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6372:6373   */\n      0x00\n        /* \"#utility.yul\":6365:6453   */\n      mstore\n        /* \"#utility.yul\":6476:6480   */\n      0x22\n        /* \"#utility.yul\":6473:6474   */\n      0x04\n        /* \"#utility.yul\":6466:6481   */\n      mstore\n        /* \"#utility.yul\":6504:6508   */\n      0x24\n        /* \"#utility.yul\":6501:6502   */\n      0x00\n        /* \"#utility.yul\":6494:6509   */\n      revert\n        /* \"#utility.yul\":6301:6519   */\n    tag_449:\n      pop\n        /* \"#utility.yul\":6088:6525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6530:6714   */\n    tag_393:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6579:6580   */\n      0x00\n        /* \"#utility.yul\":6572:6660   */\n      mstore\n        /* \"#utility.yul\":6679:6683   */\n      0x11\n        /* \"#utility.yul\":6676:6677   */\n      0x04\n        /* \"#utility.yul\":6669:6684   */\n      mstore\n        /* \"#utility.yul\":6703:6707   */\n      0x24\n        /* \"#utility.yul\":6700:6701   */\n      0x00\n        /* \"#utility.yul\":6693:6708   */\n      revert\n        /* \"#utility.yul\":6719:6844   */\n    tag_191:\n        /* \"#utility.yul\":6784:6793   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6805:6815   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6802:6838   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":6818:6836   */\n      tag_131\n      tag_393\n      jump\t// in\n        /* \"#utility.yul\":7213:7397   */\n    tag_394:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7262:7263   */\n      0x00\n        /* \"#utility.yul\":7255:7343   */\n      mstore\n        /* \"#utility.yul\":7362:7366   */\n      0x12\n        /* \"#utility.yul\":7359:7360   */\n      0x04\n        /* \"#utility.yul\":7352:7367   */\n      mstore\n        /* \"#utility.yul\":7386:7390   */\n      0x24\n        /* \"#utility.yul\":7383:7384   */\n      0x00\n        /* \"#utility.yul\":7376:7391   */\n      revert\n        /* \"#utility.yul\":7402:7514   */\n    tag_216:\n        /* \"#utility.yul\":7434:7435   */\n      0x00\n        /* \"#utility.yul\":7460:7461   */\n      dup3\n        /* \"#utility.yul\":7450:7485   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":7465:7483   */\n      tag_458\n      tag_394\n      jump\t// in\n    tag_458:\n      pop\n        /* \"#utility.yul\":7499:7508   */\n      mod\n      swap1\n        /* \"#utility.yul\":7402:7514   */\n      jump\t// out\n        /* \"#utility.yul\":7519:7639   */\n    tag_218:\n        /* \"#utility.yul\":7559:7560   */\n      0x00\n        /* \"#utility.yul\":7585:7586   */\n      dup3\n        /* \"#utility.yul\":7575:7610   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":7590:7608   */\n      tag_461\n      tag_394\n      jump\t// in\n    tag_461:\n      pop\n        /* \"#utility.yul\":7624:7633   */\n      div\n      swap1\n        /* \"#utility.yul\":7519:7639   */\n      jump\t// out\n        /* \"#utility.yul\":7644:7856   */\n    tag_395:\n        /* \"#utility.yul\":7686:7689   */\n      0x00\n        /* \"#utility.yul\":7724:7729   */\n      dup2\n        /* \"#utility.yul\":7718:7730   */\n      mload\n        /* \"#utility.yul\":7768:7774   */\n      dup1\n        /* \"#utility.yul\":7761:7765   */\n      0x20\n        /* \"#utility.yul\":7754:7759   */\n      dup5\n        /* \"#utility.yul\":7750:7766   */\n      add\n        /* \"#utility.yul\":7745:7748   */\n      dup6\n        /* \"#utility.yul\":7739:7775   */\n      mcopy\n        /* \"#utility.yul\":7830:7831   */\n      0x00\n        /* \"#utility.yul\":7794:7810   */\n      swap4\n      add\n        /* \"#utility.yul\":7819:7832   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":7794:7810   */\n      swap1\n      swap2\n        /* \"#utility.yul\":7644:7856   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7861:8128   */\n    tag_264:\n        /* \"#utility.yul\":8040:8043   */\n      0x00\n        /* \"#utility.yul\":8065:8122   */\n      tag_351\n        /* \"#utility.yul\":8091:8121   */\n      tag_465\n        /* \"#utility.yul\":8117:8120   */\n      dup4\n        /* \"#utility.yul\":8109:8115   */\n      dup7\n        /* \"#utility.yul\":8091:8121   */\n      tag_395\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8083:8089   */\n      dup5\n        /* \"#utility.yul\":8065:8122   */\n      tag_395\n      jump\t// in\n        /* \"#utility.yul\":8133:8269   */\n    tag_281:\n        /* \"#utility.yul\":8172:8175   */\n      0x00\n        /* \"#utility.yul\":8200:8205   */\n      dup2\n        /* \"#utility.yul\":8190:8229   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":8209:8227   */\n      tag_468\n      tag_393\n      jump\t// in\n    tag_468:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":8245:8263   */\n      add\n      swap1\n        /* \"#utility.yul\":8133:8269   */\n      jump\t// out\n        /* \"#utility.yul\":8274:8797   */\n    tag_339:\n        /* \"#utility.yul\":8468:8472   */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8578:8580   */\n      dup1\n        /* \"#utility.yul\":8570:8576   */\n      dup8\n        /* \"#utility.yul\":8566:8581   */\n      and\n        /* \"#utility.yul\":8555:8564   */\n      dup4\n        /* \"#utility.yul\":8548:8582   */\n      mstore\n        /* \"#utility.yul\":8630:8632   */\n      dup1\n        /* \"#utility.yul\":8622:8628   */\n      dup7\n        /* \"#utility.yul\":8618:8633   */\n      and\n        /* \"#utility.yul\":8613:8615   */\n      0x20\n        /* \"#utility.yul\":8602:8611   */\n      dup5\n        /* \"#utility.yul\":8598:8616   */\n      add\n        /* \"#utility.yul\":8591:8634   */\n      mstore\n      pop\n        /* \"#utility.yul\":8670:8676   */\n      dup4\n        /* \"#utility.yul\":8665:8667   */\n      0x40\n        /* \"#utility.yul\":8654:8663   */\n      dup4\n        /* \"#utility.yul\":8650:8668   */\n      add\n        /* \"#utility.yul\":8643:8677   */\n      mstore\n        /* \"#utility.yul\":8713:8716   */\n      0x80\n        /* \"#utility.yul\":8708:8710   */\n      0x60\n        /* \"#utility.yul\":8697:8706   */\n      dup4\n        /* \"#utility.yul\":8693:8711   */\n      add\n        /* \"#utility.yul\":8686:8717   */\n      mstore\n        /* \"#utility.yul\":8734:8791   */\n      tag_470\n        /* \"#utility.yul\":8786:8789   */\n      0x80\n        /* \"#utility.yul\":8775:8784   */\n      dup4\n        /* \"#utility.yul\":8771:8790   */\n      add\n        /* \"#utility.yul\":8763:8769   */\n      dup5\n        /* \"#utility.yul\":8734:8791   */\n      tag_390\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":8726:8791   */\n      swap7\n        /* \"#utility.yul\":8274:8797   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8802:9051   */\n    tag_342:\n        /* \"#utility.yul\":8871:8877   */\n      0x00\n        /* \"#utility.yul\":8924:8926   */\n      0x20\n        /* \"#utility.yul\":8912:8921   */\n      dup3\n        /* \"#utility.yul\":8903:8910   */\n      dup5\n        /* \"#utility.yul\":8899:8922   */\n      sub\n        /* \"#utility.yul\":8895:8927   */\n      slt\n        /* \"#utility.yul\":8892:8944   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":8940:8941   */\n      0x00\n        /* \"#utility.yul\":8937:8938   */\n      dup1\n        /* \"#utility.yul\":8930:8942   */\n      revert\n        /* \"#utility.yul\":8892:8944   */\n    tag_472:\n        /* \"#utility.yul\":8972:8981   */\n      dup2\n        /* \"#utility.yul\":8966:8982   */\n      mload\n        /* \"#utility.yul\":8991:9021   */\n      tag_260\n        /* \"#utility.yul\":9015:9020   */\n      dup2\n        /* \"#utility.yul\":8991:9021   */\n      tag_389\n      jump\t// in\n\n    auxdata: 0xa26469706673582212208e0c8b758f9dae14c894a2d9db75eaa65f8d1b9e5401bcd7afef329286b3d5c964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_544": {
									"entryPoint": null,
									"id": 544,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2492": {
									"entryPoint": null,
									"id": 2492,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_sequentialUpTo_566": {
									"entryPoint": null,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_553": {
									"entryPoint": null,
									"id": 553,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2698:4",
										"nodeType": "YulBlock",
										"src": "0:2698:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:4",
													"nodeType": "YulBlock",
													"src": "46:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:4",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:4",
																				"nodeType": "YulLiteral",
																				"src": "70:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:4",
																				"nodeType": "YulLiteral",
																				"src": "75:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:4"
																		},
																		"nativeSrc": "66:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nativeSrc": "56:31:4",
																"nodeType": "YulFunctionCall",
																"src": "56:31:4"
															},
															"nativeSrc": "56:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:4",
																		"nodeType": "YulLiteral",
																		"src": "103:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:4",
																		"nodeType": "YulLiteral",
																		"src": "106:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:4"
																},
																"nativeSrc": "96:15:4",
																"nodeType": "YulFunctionCall",
																"src": "96:15:4"
															},
															"nativeSrc": "96:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:4",
																		"nodeType": "YulLiteral",
																		"src": "127:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:4",
																		"nodeType": "YulLiteral",
																		"src": "130:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nativeSrc": "120:15:4",
																"nodeType": "YulFunctionCall",
																"src": "120:15:4"
															},
															"nativeSrc": "120:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:4"
											},
											{
												"body": {
													"nativeSrc": "201:325:4",
													"nodeType": "YulBlock",
													"src": "201:325:4",
													"statements": [
														{
															"nativeSrc": "211:22:4",
															"nodeType": "YulAssignment",
															"src": "211:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:4",
																		"nodeType": "YulLiteral",
																		"src": "225:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:4"
																},
																"nativeSrc": "221:12:4",
																"nodeType": "YulFunctionCall",
																"src": "221:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:4"
																}
															]
														},
														{
															"nativeSrc": "242:38:4",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:4",
																		"nodeType": "YulLiteral",
																		"src": "278:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:4"
																},
																"nativeSrc": "268:12:4",
																"nodeType": "YulFunctionCall",
																"src": "268:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:4",
																	"nodeType": "YulTypedName",
																	"src": "246:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:4",
																"nodeType": "YulBlock",
																"src": "319:31:4",
																"statements": [
																	{
																		"nativeSrc": "321:27:4",
																		"nodeType": "YulAssignment",
																		"src": "321:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:4",
																					"nodeType": "YulLiteral",
																					"src": "343:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:4"
																			},
																			"nativeSrc": "331:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:4"
																},
																"nativeSrc": "292:26:4",
																"nodeType": "YulFunctionCall",
																"src": "292:26:4"
															},
															"nativeSrc": "289:61:4",
															"nodeType": "YulIf",
															"src": "289:61:4"
														},
														{
															"body": {
																"nativeSrc": "409:111:4",
																"nodeType": "YulBlock",
																"src": "409:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:4",
																					"nodeType": "YulLiteral",
																					"src": "430:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:4",
																							"nodeType": "YulLiteral",
																							"src": "437:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:4",
																							"nodeType": "YulLiteral",
																							"src": "442:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:4"
																					},
																					"nativeSrc": "433:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:4"
																			},
																			"nativeSrc": "423:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:4"
																		},
																		"nativeSrc": "423:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:4",
																					"nodeType": "YulLiteral",
																					"src": "474:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:4",
																					"nodeType": "YulLiteral",
																					"src": "477:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:4"
																			},
																			"nativeSrc": "467:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:4"
																		},
																		"nativeSrc": "467:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:4",
																					"nodeType": "YulLiteral",
																					"src": "502:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:4",
																					"nodeType": "YulLiteral",
																					"src": "505:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:4"
																			},
																			"nativeSrc": "495:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:4"
																		},
																		"nativeSrc": "495:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:4",
																				"nodeType": "YulLiteral",
																				"src": "396:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:4"
																		},
																		"nativeSrc": "385:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:4"
																},
																"nativeSrc": "362:38:4",
																"nodeType": "YulFunctionCall",
																"src": "362:38:4"
															},
															"nativeSrc": "359:161:4",
															"nodeType": "YulIf",
															"src": "359:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:4",
														"nodeType": "YulTypedName",
														"src": "181:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:4",
														"nodeType": "YulTypedName",
														"src": "190:6:4",
														"type": ""
													}
												],
												"src": "146:380:4"
											},
											{
												"body": {
													"nativeSrc": "587:65:4",
													"nodeType": "YulBlock",
													"src": "587:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:4",
																		"nodeType": "YulLiteral",
																		"src": "604:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:4"
																},
																"nativeSrc": "597:14:4",
																"nodeType": "YulFunctionCall",
																"src": "597:14:4"
															},
															"nativeSrc": "597:14:4",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:4"
														},
														{
															"nativeSrc": "620:26:4",
															"nodeType": "YulAssignment",
															"src": "620:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:4",
																		"nodeType": "YulLiteral",
																		"src": "638:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:4",
																		"nodeType": "YulLiteral",
																		"src": "641:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:4"
																},
																"nativeSrc": "628:18:4",
																"nodeType": "YulFunctionCall",
																"src": "628:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:4",
														"nodeType": "YulTypedName",
														"src": "570:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:4",
														"nodeType": "YulTypedName",
														"src": "578:4:4",
														"type": ""
													}
												],
												"src": "531:121:4"
											},
											{
												"body": {
													"nativeSrc": "738:437:4",
													"nodeType": "YulBlock",
													"src": "738:437:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:4",
																"nodeType": "YulBlock",
																"src": "771:398:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:4",
																					"nodeType": "YulLiteral",
																					"src": "792:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:4"
																			},
																			"nativeSrc": "785:16:4",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:4"
																		},
																		"nativeSrc": "785:16:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:4"
																	},
																	{
																		"nativeSrc": "814:30:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:4",
																					"nodeType": "YulLiteral",
																					"src": "836:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:4",
																					"nodeType": "YulLiteral",
																					"src": "839:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:4"
																			},
																			"nativeSrc": "826:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:4"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:4",
																				"nodeType": "YulTypedName",
																				"src": "818:4:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:4",
																							"nodeType": "YulLiteral",
																							"src": "890:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:4",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:4",
																									"nodeType": "YulLiteral",
																									"src": "909:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:4"
																							},
																							"nativeSrc": "893:19:4",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:4"
																					},
																					"nativeSrc": "886:27:4",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:4"
																			},
																			"nativeSrc": "876:38:4",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:4",
																				"nodeType": "YulTypedName",
																				"src": "861:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:4",
																			"nodeType": "YulBlock",
																			"src": "951:23:4",
																			"statements": [
																				{
																					"nativeSrc": "953:19:4",
																					"nodeType": "YulAssignment",
																					"src": "953:19:4",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:4",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:4",
																					"nodeType": "YulLiteral",
																					"src": "945:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:4"
																			},
																			"nativeSrc": "930:20:4",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:4"
																		},
																		"nativeSrc": "927:47:4",
																		"nodeType": "YulIf",
																		"src": "927:47:4"
																	},
																	{
																		"nativeSrc": "987:41:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:4",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:4",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:4"
																							},
																							"nativeSrc": "1014:12:4",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:4"
																					},
																					"nativeSrc": "1007:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:4"
																			},
																			"nativeSrc": "997:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:4"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:4",
																				"nodeType": "YulTypedName",
																				"src": "991:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:4",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:4",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:4"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:4",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:4",
																			"nodeType": "YulBlock",
																			"src": "1139:20:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:4",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:4"
																						},
																						"nativeSrc": "1141:16:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:4"
																					},
																					"nativeSrc": "1141:16:4",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:4"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:4"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:4"
																			},
																			"nativeSrc": "1086:13:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:4"
																		},
																		"nativeSrc": "1078:81:4",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:4",
																			"nodeType": "YulBlock",
																			"src": "1100:26:4",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:4",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:4",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:4"
																						},
																						"nativeSrc": "1111:13:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:4"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:4",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:4"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:4",
																			"nodeType": "YulBlock",
																			"src": "1082:3:4",
																			"statements": []
																		},
																		"src": "1078:81:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:4",
																		"nodeType": "YulLiteral",
																		"src": "759:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:4"
																},
																"nativeSrc": "751:11:4",
																"nodeType": "YulFunctionCall",
																"src": "751:11:4"
															},
															"nativeSrc": "748:421:4",
															"nodeType": "YulIf",
															"src": "748:421:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:4",
														"nodeType": "YulTypedName",
														"src": "710:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:4",
														"nodeType": "YulTypedName",
														"src": "717:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:4",
														"nodeType": "YulTypedName",
														"src": "722:10:4",
														"type": ""
													}
												],
												"src": "657:518:4"
											},
											{
												"body": {
													"nativeSrc": "1265:81:4",
													"nodeType": "YulBlock",
													"src": "1265:81:4",
													"statements": [
														{
															"nativeSrc": "1275:65:4",
															"nodeType": "YulAssignment",
															"src": "1275:65:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:4",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:4",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:4"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:4"
																								},
																								"nativeSrc": "1304:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:4"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:4",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:4",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:4"
																								},
																								"nativeSrc": "1317:6:4",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:4"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:4"
																						},
																						"nativeSrc": "1300:24:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:4"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:4"
																				},
																				"nativeSrc": "1296:29:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:4"
																		},
																		"nativeSrc": "1286:40:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:4",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:4"
																		},
																		"nativeSrc": "1328:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:4"
																},
																"nativeSrc": "1283:57:4",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:4",
														"nodeType": "YulTypedName",
														"src": "1242:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:4",
														"nodeType": "YulTypedName",
														"src": "1248:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:4",
														"nodeType": "YulTypedName",
														"src": "1256:4:4",
														"type": ""
													}
												],
												"src": "1180:166:4"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:4",
													"nodeType": "YulBlock",
													"src": "1447:1249:4",
													"statements": [
														{
															"nativeSrc": "1457:24:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:4"
																},
																"nativeSrc": "1471:10:4",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:4",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:4",
																"nodeType": "YulBlock",
																"src": "1524:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:4"
																			},
																			"nativeSrc": "1526:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:4"
																		},
																		"nativeSrc": "1526:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:4",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:4",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:4",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:4"
																				},
																				"nativeSrc": "1508:10:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:4"
																		},
																		"nativeSrc": "1504:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:4"
																},
																"nativeSrc": "1493:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:4"
															},
															"nativeSrc": "1490:56:4",
															"nodeType": "YulIf",
															"src": "1490:56:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:4"
																				},
																				"nativeSrc": "1631:11:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:4"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:4",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:4"
																		},
																		"nativeSrc": "1605:38:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:4"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:4"
																},
																"nativeSrc": "1555:97:4",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:4"
															},
															"nativeSrc": "1555:97:4",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:4"
														},
														{
															"nativeSrc": "1661:18:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:4",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:4",
																"nodeType": "YulLiteral",
																"src": "1678:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:4",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:4",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:4",
																"nodeType": "YulLiteral",
																"src": "1707:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:4",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:4",
															"nodeType": "YulAssignment",
															"src": "1720:17:4",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:4",
																"nodeType": "YulLiteral",
																"src": "1733:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:4",
																		"nodeType": "YulBlock",
																		"src": "1783:656:4",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:4",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:4"
																							},
																							"nativeSrc": "1824:7:4",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:4"
																					},
																					"nativeSrc": "1812:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:4",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:4",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:4"
																					},
																					"nativeSrc": "1859:35:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:4",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:4",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:4",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:4",
																					"nodeType": "YulBlock",
																					"src": "1994:172:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:4",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:4",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:4"
																												},
																												"nativeSrc": "2033:19:4",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:4",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:4"
																										},
																										"nativeSrc": "2027:26:4",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:4"
																								},
																								"nativeSrc": "2012:42:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:4"
																							},
																							"nativeSrc": "2012:42:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:4"
																						},
																						{
																							"nativeSrc": "2071:24:4",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:4",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:4"
																								},
																								"nativeSrc": "2081:14:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:4"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:4",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:4",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:4",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:4"
																								},
																								"nativeSrc": "2125:27:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:4",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:4",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:4"
																					},
																					"nativeSrc": "1938:14:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:4"
																				},
																				"nativeSrc": "1930:236:4",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:4",
																					"nodeType": "YulBlock",
																					"src": "1953:28:4",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:4",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:4",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:4",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:4"
																								},
																								"nativeSrc": "1960:19:4",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:4",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:4",
																					"nodeType": "YulBlock",
																					"src": "1934:3:4",
																					"statements": []
																				},
																				"src": "1930:236:4"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:4",
																					"nodeType": "YulBlock",
																					"src": "2214:166:4",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:4",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:4",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:4"
																										},
																										"nativeSrc": "2255:19:4",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:4"
																								},
																								"nativeSrc": "2249:26:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:4",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:4",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:4",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:4",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:4"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:4",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:4"
																																		},
																																		"nativeSrc": "2334:14:4",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:4"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:4",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:4",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:4",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:4"
																																},
																																"nativeSrc": "2330:24:4",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:4"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:4",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:4",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:4",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:4"
																																},
																																"nativeSrc": "2356:6:4",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:4"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:4",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:4"
																														},
																														"nativeSrc": "2326:37:4",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:4"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:4",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:4"
																												},
																												"nativeSrc": "2322:42:4",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:4"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:4"
																										},
																										"nativeSrc": "2307:58:4",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:4"
																								},
																								"nativeSrc": "2292:74:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:4"
																							},
																							"nativeSrc": "2292:74:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:4",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:4"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:4"
																					},
																					"nativeSrc": "2182:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:4"
																				},
																				"nativeSrc": "2179:201:4",
																				"nodeType": "YulIf",
																				"src": "2179:201:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:4",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:4",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:4",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:4"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:4"
																									},
																									"nativeSrc": "2410:14:4",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:4",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:4"
																							},
																							"nativeSrc": "2406:22:4",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:4"
																					},
																					"nativeSrc": "2393:36:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:4"
																				},
																				"nativeSrc": "2393:36:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:4"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:4",
																	"nodeType": "YulCase",
																	"src": "1776:663:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:4",
																		"nodeType": "YulBlock",
																		"src": "2456:234:4",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:4",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:4",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:4",
																					"nodeType": "YulBlock",
																					"src": "2519:67:4",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:4",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:4",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:4"
																										},
																										"nativeSrc": "2552:19:4",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:4"
																								},
																								"nativeSrc": "2546:26:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:4"
																				},
																				"nativeSrc": "2497:89:4",
																				"nodeType": "YulIf",
																				"src": "2497:89:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:4"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:4",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:4"
																							},
																							"nativeSrc": "2612:67:4",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:4"
																					},
																					"nativeSrc": "2599:81:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:4"
																				},
																				"nativeSrc": "2599:81:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:4"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:4",
																	"nodeType": "YulCase",
																	"src": "2448:242:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:4"
																},
																"nativeSrc": "1753:14:4",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:4"
															},
															"nativeSrc": "1746:944:4",
															"nodeType": "YulSwitch",
															"src": "1746:944:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:4",
														"nodeType": "YulTypedName",
														"src": "1432:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:4",
														"nodeType": "YulTypedName",
														"src": "1438:3:4",
														"type": ""
													}
												],
												"src": "1351:1345:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405180604001604052806008815260200167446967697475726560c01b815250604051806040016040528060038152602001621111d560ea1b815250816002908161005c9190610111565b5060036100698282610111565b50505f80555060016009556101d0565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806100a157607f821691505b6020821081036100bf57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561010c57805f5260205f20601f840160051c810160208510156100ea5750805b601f840160051c820191505b81811015610109575f81556001016100f6565b50505b505050565b81516001600160401b0381111561012a5761012a610079565b61013e81610138845461008d565b846100c5565b602080601f831160018114610171575f841561015a5750858301515b5f19600386901b1c1916600185901b1785556101c8565b5f85815260208120601f198616915b8281101561019f57888601518255948401946001909101908401610180565b50858210156101bc57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6115cf806101dd5f395ff3fe608060405260043610610157575f3560e01c80634ecbc664116100bb578063b88d4fde11610071578063e985e9c511610057578063e985e9c51461038b578063f052d65a146103d2578063fd499a741461042d575f80fd5b8063b88d4fde14610359578063c87b56dd1461036c575f80fd5b806370a08231116100a157806370a082311461030757806395d89b4114610326578063a22cb4651461033a575f80fd5b80634ecbc664146102d45780636352211e146102e8575f80fd5b806323b872dd116101105780633095fe91116100f65780633095fe911461024f57806342842e0e1461026357806342e29b4e14610276575f80fd5b806323b872dd1461021d5780632a0c522114610230575f80fd5b8063081812fc11610140578063081812fc146101b0578063095ea7b3146101e757806318160ddd146101fc575f80fd5b806301ffc9a71461015b57806306fdde031461018f575b5f80fd5b348015610166575f80fd5b5061017a6101753660046111f5565b610479565b60405190151581526020015b60405180910390f35b34801561019a575f80fd5b506101a3610515565b604051610186919061123e565b3480156101bb575f80fd5b506101cf6101ca366004611250565b6105a5565b6040516001600160a01b039091168152602001610186565b6101fa6101f536600461127d565b6105f7565b005b348015610207575f80fd5b506001545f54035b604051908152602001610186565b6101fa61022b3660046112a5565b610607565b34801561023b575f80fd5b506101fa61024a3660046112de565b6107c9565b34801561025a575f80fd5b5060095461020f565b6101fa6102713660046112a5565b6108fe565b348015610281575f80fd5b506102b4610290366004611250565b67ffffffffffffffff81811692604083901c821692608081901c9092169160c01c90565b604080519485526020850193909352918301526060820152608001610186565b3480156102df575f80fd5b506101fa61091d565b3480156102f3575f80fd5b506101cf610302366004611250565b610aab565b348015610312575f80fd5b5061020f6103213660046112fe565b610ab5565b348015610331575f80fd5b506101a3610b12565b348015610345575f80fd5b506101fa610354366004611317565b610b21565b6101fa610367366004611364565b610b8c565b348015610377575f80fd5b506101a3610386366004611250565b610bcd565b348015610396575f80fd5b5061017a6103a5366004611439565b6001600160a01b039182165f90815260076020908152604080832093909416825291909152205460ff1690565b3480156103dd575f80fd5b506103f16103ec366004611250565b610c6a565b6040516101869190815181526020808301516001600160a01b031690820152604080830151908201526060918201519181019190915260800190565b348015610438575f80fd5b50610464610447366004611250565b6fffffffffffffffffffffffffffffffff81169160809190911c90565b60408051928352602083019190915201610186565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614806104db57507f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b8061050f57507f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600280546105249061146a565b80601f01602080910402602001604051908101604052809291908181526020018280546105509061146a565b801561059b5780601f106105725761010080835404028352916020019161059b565b820191905f5260205f20905b81548152906001019060200180831161057e57829003601f168201915b5050505050905090565b5f6105af82610ce7565b6105dc576105dc7fcf4700e400000000000000000000000000000000000000000000000000000000610d29565b505f908152600660205260409020546001600160a01b031690565b61060382826001610d31565b5050565b5f61061182610e14565b6001600160a01b039485169490915081168414610651576106517fa114810000000000000000000000000000000000000000000000000000000000610d29565b5f8281526006602052604090208054338082146001600160a01b038816909114176106c9576001600160a01b0386165f90815260076020908152604080832033845290915290205460ff166106c9576106c97f59c896be00000000000000000000000000000000000000000000000000000000610d29565b80156106d3575f82555b6001600160a01b038681165f9081526005602052604080822080545f19019055918716808252919020805460010190554260a01b17600160e11b175f85815260046020526040812091909155600160e11b8416900361075f57600184015f81815260046020526040812054900361075d575f54811461075d575f8181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4805f036107c0576107c07fea553b3400000000000000000000000000000000000000000000000000000000610d29565b50505050505050565b816107d381610ea3565b5f838152600a602052604080822060029081015485845292829020015467ffffffffffffffff8084169380841c821693608082811c84169460c093841c94808216949382901c8116939282901c16911c808261082f85876114b6565b61083991906114b6565b61084391906114b6565b858761084f8a8c6114b6565b61085991906114b6565b61086391906114b6565b11156108af576108748b6001610ef8565b61087e8a5f610ef8565b6040518a908c907f37fdf7cda6ec1c848e98866fe5e1f781b2b5976a1d79c7770394e65503ce92af905f90a36108f1565b6108b98b5f610ef8565b6108c48a6001610ef8565b6040518a908c907f37fdf7cda6ec1c848e98866fe5e1f781b2b5976a1d79c7770394e65503ce92af905f90a35b5050505050505050505050565b61091883838360405180602001604052805f815250610b8c565b505050565b6040805142602080830191909152448284015233606081811b6bffffffffffffffffffffffff19169084015283516054818503018152607484018086528151919093012060f48401909452600954825260948301529060b4016109ee6109856103e8856114dd565b6103e861099281876114f0565b61099c91906114dd565b6103e86109ac620f4240886114f0565b6109b691906114dd565b6103e86109c7633b9aca00896114f0565b6109d191906114dd565b5f8160c01b8360801b8560401b875f1b1717179050949350505050565b81526020015f90526009545f908152600a6020908152604091829020835181559083015160018201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055908201516002820155606090910151600390910155610a60336001610f58565b600160095401600955610a703390565b6001600160a01b03166009547ffce6b98db3cc5152281e5d3e4c7332adfb0d4b574cc5723dc73792f7624043cc60405160405180910390a350565b5f61050f82610e14565b5f6001600160a01b038216610aed57610aed7f8f4eb60400000000000000000000000000000000000000000000000000000000610d29565b506001600160a01b03165f9081526005602052604090205467ffffffffffffffff1690565b6060600380546105249061146a565b335f8181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610b97848484610607565b6001600160a01b0383163b15610bc757610bb384848484610f71565b610bc757610bc76368d2bf6b60e11b610d29565b50505050565b6060610bd882610ce7565b610c0557610c057fa14c4b5000000000000000000000000000000000000000000000000000000000610d29565b5f610c1a60408051602081019091525f815290565b905080515f03610c385760405180602001604052805f815250610c63565b80610c4284611050565b604051602001610c5392919061151a565b6040516020818303038152906040525b9392505050565b610c9a60405180608001604052805f81526020015f6001600160a01b031681526020015f81526020015f81525090565b505f908152600a602090815260409182902082516080810184528154815260018201546001600160a01b031692810192909252600281015492820192909252600390910154606082015290565b5f8054821015610d24575f5b505f8281526004602052604081205490819003610d1a57610d138361152e565b9250610cf3565b600160e01b161590505b919050565b805f5260045ffd5b5f610d3b83610aab565b9050818015610d535750336001600160a01b03821614155b15610dab576001600160a01b0381165f90815260076020908152604080832033845290915290205460ff16610dab57610dab7fcfb3b94200000000000000000000000000000000000000000000000000000000610d29565b5f83815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b5f81815260046020526040902054805f03610e81575f548210610e4157610e41636f96cda160e11b610d29565b5b505f19015f818152600460205260409020548015610e4257600160e01b81165f03610e6c57919050565b610e7c636f96cda160e11b610d29565b610e42565b600160e01b81165f03610e9357919050565b610d24636f96cda160e11b610d29565b5f818152600a60205260409020600101546001600160a01b03163314610ef5576040517f233de59500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b5f828152600a6020526040902060038101546fffffffffffffffffffffffffffffffff81169060801c8360018114610f3557600182019150610f3c565b6001830192505b50610f49828260801b1790565b83600301819055505050505050565b610603828260405180602001604052805f815250611093565b604051630a85bd0160e11b81525f906001600160a01b0385169063150b7a0290610fa5903390899088908890600401611543565b6020604051808303815f875af1925050508015610fdf575060408051601f3d908101601f19168201909252610fdc9181019061157e565b60015b611032573d80801561100c576040519150601f19603f3d011682016040523d82523d5f602084013e611011565b606091505b5080515f0361102a5761102a6368d2bf6b60e11b610d29565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b606060a06040510180604052602081039150505f815280825b600183039250600a81066030018353600a9004806110695750819003601f19909101908152919050565b61109d83836110f3565b6001600160a01b0383163b15610918575f548281035b6110c55f868380600101945086610f71565b6110d9576110d96368d2bf6b60e11b610d29565b8181106110b357815f54146110ec575f80fd5b5050505050565b5f805490829003611127576111277fb562e8dd00000000000000000000000000000000000000000000000000000000610d29565b5f8181526004602090815260408083206001600160a01b0387164260a01b6001881460e11b1781179091558084526005909252822080546801000000000000000186020190559081900361119e5761119e7f2e07630000000000000000000000000000000000000000000000000000000000610d29565b818301825b80835f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a48181600101915081036111a357505f5550505050565b6001600160e01b031981168114610ef5575f80fd5b5f60208284031215611205575f80fd5b8135610c63816111e0565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610c636020830184611210565b5f60208284031215611260575f80fd5b5035919050565b80356001600160a01b0381168114610d24575f80fd5b5f806040838503121561128e575f80fd5b61129783611267565b946020939093013593505050565b5f805f606084860312156112b7575f80fd5b6112c084611267565b92506112ce60208501611267565b9150604084013590509250925092565b5f80604083850312156112ef575f80fd5b50508035926020909101359150565b5f6020828403121561130e575f80fd5b610c6382611267565b5f8060408385031215611328575f80fd5b61133183611267565b915060208301358015158114611345575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215611377575f80fd5b61138085611267565b935061138e60208601611267565b925060408501359150606085013567ffffffffffffffff808211156113b1575f80fd5b818701915087601f8301126113c4575f80fd5b8135818111156113d6576113d6611350565b604051601f8201601f19908116603f011681019083821181831017156113fe576113fe611350565b816040528281528a6020848701011115611416575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f806040838503121561144a575f80fd5b61145383611267565b915061146160208401611267565b90509250929050565b600181811c9082168061147e57607f821691505b60208210810361149c57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561050f5761050f6114a2565b634e487b7160e01b5f52601260045260245ffd5b5f826114eb576114eb6114c9565b500690565b5f826114fe576114fe6114c9565b500490565b5f81518060208401855e5f93019283525090919050565b5f6110486115288386611503565b84611503565b5f8161153c5761153c6114a2565b505f190190565b5f6001600160a01b038087168352808616602084015250836040830152608060608301526115746080830184611210565b9695505050505050565b5f6020828403121561158e575f80fd5b8151610c63816111e056fea26469706673582212208e0c8b758f9dae14c894a2d9db75eaa65f8d1b9e5401bcd7afef329286b3d5c964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x4469676974757265 PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1111D5 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x111 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x69 DUP3 DUP3 PUSH2 0x111 JUMP JUMPDEST POP POP PUSH0 DUP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 SSTORE PUSH2 0x1D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10C JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xEA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x109 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x12A JUMPI PUSH2 0x12A PUSH2 0x79 JUMP JUMPDEST PUSH2 0x13E DUP2 PUSH2 0x138 DUP5 SLOAD PUSH2 0x8D JUMP JUMPDEST DUP5 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x171 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x15A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1C8 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x180 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1BC JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15CF DUP1 PUSH2 0x1DD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4ECBC664 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xF052D65A EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xFD499A74 EQ PUSH2 0x42D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x36C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x33A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4ECBC664 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x3095FE91 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x3095FE91 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x42E29B4E EQ PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x2A0C5221 EQ PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x127D JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x20F JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x8FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B4 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 DUP2 AND SWAP3 PUSH1 0x40 DUP4 SWAP1 SHR DUP3 AND SWAP3 PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 SWAP3 AND SWAP2 PUSH1 0xC0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x91D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FE JUMP JUMPDEST PUSH2 0xAB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0xB12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xBCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH2 0x3EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP2 PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x186 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x4DB JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x50F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x524 SWAP1 PUSH2 0x146A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x550 SWAP1 PUSH2 0x146A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x572 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5AF DUP3 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x5DC JUMPI PUSH2 0x5DC PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x603 DUP3 DUP3 PUSH1 0x1 PUSH2 0xD31 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x611 DUP3 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x651 JUMPI PUSH2 0x651 PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x6C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6C9 JUMPI PUSH2 0x6C9 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x75F JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x75D JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0x75D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP1 PUSH0 SUB PUSH2 0x7C0 JUMPI PUSH2 0x7C0 PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x7D3 DUP2 PUSH2 0xEA3 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 SWAP1 DUP2 ADD SLOAD DUP6 DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP4 DUP1 DUP5 SHR DUP3 AND SWAP4 PUSH1 0x80 DUP3 DUP2 SHR DUP5 AND SWAP5 PUSH1 0xC0 SWAP4 DUP5 SHR SWAP5 DUP1 DUP3 AND SWAP5 SWAP4 DUP3 SWAP1 SHR DUP2 AND SWAP4 SWAP3 DUP3 SWAP1 SHR AND SWAP2 SHR DUP1 DUP3 PUSH2 0x82F DUP6 DUP8 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x839 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x843 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x84F DUP11 DUP13 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST GT ISZERO PUSH2 0x8AF JUMPI PUSH2 0x874 DUP12 PUSH1 0x1 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x87E DUP11 PUSH0 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP11 SWAP1 DUP13 SWAP1 PUSH32 0x37FDF7CDA6EC1C848E98866FE5E1F781B2B5976A1D79C7770394E65503CE92AF SWAP1 PUSH0 SWAP1 LOG3 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x8B9 DUP12 PUSH0 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x8C4 DUP11 PUSH1 0x1 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP11 SWAP1 DUP13 SWAP1 PUSH32 0x37FDF7CDA6EC1C848E98866FE5E1F781B2B5976A1D79C7770394E65503CE92AF SWAP1 PUSH0 SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x918 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PREVRANDAO DUP3 DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP2 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP5 ADD MSTORE DUP4 MLOAD PUSH1 0x54 DUP2 DUP6 SUB ADD DUP2 MSTORE PUSH1 0x74 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH1 0xF4 DUP5 ADD SWAP1 SWAP5 MSTORE PUSH1 0x9 SLOAD DUP3 MSTORE PUSH1 0x94 DUP4 ADD MSTORE SWAP1 PUSH1 0xB4 ADD PUSH2 0x9EE PUSH2 0x985 PUSH2 0x3E8 DUP6 PUSH2 0x14DD JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x992 DUP2 DUP8 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x9AC PUSH3 0xF4240 DUP9 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x9C7 PUSH4 0x3B9ACA00 DUP10 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0x9D1 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xC0 SHL DUP4 PUSH1 0x80 SHL DUP6 PUSH1 0x40 SHL DUP8 PUSH0 SHL OR OR OR SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 MSTORE PUSH1 0x9 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0xA60 CALLER PUSH1 0x1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 SLOAD ADD PUSH1 0x9 SSTORE PUSH2 0xA70 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 SLOAD PUSH32 0xFCE6B98DB3CC5152281E5D3E4C7332ADFB0D4B574CC5723DC73792F7624043CC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH2 0x50F DUP3 PUSH2 0xE14 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAED JUMPI PUSH2 0xAED PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x524 SWAP1 PUSH2 0x146A JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB97 DUP5 DUP5 DUP5 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBB3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBD8 DUP3 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0xC05 JUMPI PUSH2 0xC05 PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST PUSH0 PUSH2 0xC1A PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0xC38 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC63 JUMP JUMPDEST DUP1 PUSH2 0xC42 DUP5 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC53 SWAP3 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC9A PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xD24 JUMPI PUSH0 JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xD1A JUMPI PUSH2 0xD13 DUP4 PUSH2 0x152E JUMP JUMPDEST SWAP3 POP PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD3B DUP4 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xD53 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDAB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDAB JUMPI PUSH2 0xDAB PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH0 SUB PUSH2 0xE81 JUMPI PUSH0 SLOAD DUP3 LT PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST JUMPDEST POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xE42 JUMPI PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0xE6C JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7C PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0xE93 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x233DE59500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH1 0x80 SHR DUP4 PUSH1 0x1 DUP2 EQ PUSH2 0xF35 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST POP PUSH2 0xF49 DUP3 DUP3 PUSH1 0x80 SHL OR SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x603 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xFA5 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFDF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFDC SWAP2 DUP2 ADD SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1032 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x102A JUMPI PUSH2 0x102A PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x1069 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109D DUP4 DUP4 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x918 JUMPI PUSH0 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0x10C5 PUSH0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x10D9 JUMPI PUSH2 0x10D9 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x10B3 JUMPI DUP2 PUSH0 SLOAD EQ PUSH2 0x10EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x1127 JUMPI PUSH2 0x1127 PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP9 EQ PUSH1 0xE1 SHL OR DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP7 MUL ADD SWAP1 SSTORE SWAP1 DUP2 SWAP1 SUB PUSH2 0x119E JUMPI PUSH2 0x119E PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST DUP2 DUP4 ADD DUP3 JUMPDEST DUP1 DUP4 PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0x11A3 JUMPI POP PUSH0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xEF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC63 DUP2 PUSH2 0x11E0 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xC63 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1210 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD24 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1297 DUP4 PUSH2 0x1267 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12C0 DUP5 PUSH2 0x1267 JUMP JUMPDEST SWAP3 POP PUSH2 0x12CE PUSH1 0x20 DUP6 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC63 DUP3 PUSH2 0x1267 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1328 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1331 DUP4 PUSH2 0x1267 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1345 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1377 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1380 DUP6 PUSH2 0x1267 JUMP JUMPDEST SWAP4 POP PUSH2 0x138E PUSH1 0x20 DUP7 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13D6 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13FE JUMPI PUSH2 0x13FE PUSH2 0x1350 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1416 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1453 DUP4 PUSH2 0x1267 JUMP JUMPDEST SWAP2 POP PUSH2 0x1461 PUSH1 0x20 DUP5 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x147E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x149C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x50F JUMPI PUSH2 0x50F PUSH2 0x14A2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x14EB JUMPI PUSH2 0x14EB PUSH2 0x14C9 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x14FE JUMPI PUSH2 0x14FE PUSH2 0x14C9 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1048 PUSH2 0x1528 DUP4 DUP7 PUSH2 0x1503 JUMP JUMPDEST DUP5 PUSH2 0x1503 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x153C JUMPI PUSH2 0x153C PUSH2 0x14A2 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1574 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1210 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x158E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC63 DUP2 PUSH2 0x11E0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xC DUP12 PUSH22 0x8F9DAE14C894A2D9DB75EAA65F8D1B9E5401BCD7AFEF ORIGIN SWAP3 DUP7 0xB3 0xD5 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "252:7253:0:-:0;;;1477:78;;;;;;;;;;5261:246:2;;;;;;;;;;;;;-1:-1:-1;;;5261:246:2;;;;;;;;;;;;;;;;-1:-1:-1;;;5261:246:2;;;5335:5;5327;:13;;;;;;:::i;:::-;-1:-1:-1;5350:7:2;:17;5360:7;5350;:17;:::i;:::-;-1:-1:-1;;6022:7:2;5377:31;;-1:-1:-1;1546:1:0::1;1529:14;:18:::0;252:7253;;14:127:4;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:4;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:4;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:4;;;2546:26;2497:89;-1:-1:-1;;1308:1:4;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:4;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:4;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;:::-;252:7253:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1565": {
									"entryPoint": null,
									"id": 1565,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2206": {
									"entryPoint": 3377,
									"id": 2206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_867": {
									"entryPoint": null,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1552": {
									"entryPoint": null,
									"id": 1552,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1621": {
									"entryPoint": 3953,
									"id": 1621,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkCreatureOwned_328": {
									"entryPoint": 3747,
									"id": 328,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_exists_1264": {
									"entryPoint": 3303,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2431": {
									"entryPoint": null,
									"id": 2431,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1288": {
									"entryPoint": null,
									"id": 1288,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1752": {
									"entryPoint": 4339,
									"id": 1752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_2474": {
									"entryPoint": null,
									"id": 2474,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_375": {
									"entryPoint": null,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2464": {
									"entryPoint": null,
									"id": 2464,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_1125": {
									"entryPoint": null,
									"id": 1125,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_1115": {
									"entryPoint": null,
									"id": 1115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipExists_1274": {
									"entryPoint": null,
									"id": 1274,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1049": {
									"entryPoint": 3604,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_2492": {
									"entryPoint": 3369,
									"id": 2492,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeMint_1948": {
									"entryPoint": 4243,
									"id": 1948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeMint_1963": {
									"entryPoint": 3928,
									"id": 1963,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_sequentialUpTo_566": {
									"entryPoint": null,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_553": {
									"entryPoint": null,
									"id": 553,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2484": {
									"entryPoint": 4176,
									"id": 2484,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_updateBattleRecord_362": {
									"entryPoint": 3832,
									"id": 362,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@approve_1141": {
									"entryPoint": 1527,
									"id": 1141,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_680": {
									"entryPoint": 2741,
									"id": 680,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@battle_311": {
									"entryPoint": 1993,
									"id": 311,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@createRandomCreature_222": {
									"entryPoint": 2333,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_1166": {
									"entryPoint": 1445,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCreature_98": {
									"entryPoint": 3178,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNextCreatureId_85": {
									"entryPoint": null,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isApprovedForAll_1210": {
									"entryPoint": null,
									"id": 1210,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_803": {
									"entryPoint": 1301,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_887": {
									"entryPoint": 2731,
									"id": 887,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@packBattleRecord_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@packGameStats_113": {
									"entryPoint": null,
									"id": 113,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@safeTransferFrom_1499": {
									"entryPoint": 2302,
									"id": 1499,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1539": {
									"entryPoint": 2956,
									"id": 1539,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1192": {
									"entryPoint": 2849,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_793": {
									"entryPoint": 1145,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_813": {
									"entryPoint": 2834,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_858": {
									"entryPoint": 3021,
									"id": 858,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_606": {
									"entryPoint": null,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1480": {
									"entryPoint": 1543,
									"id": 1480,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@unpackBattleRecord_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@unpackGameStats_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"abi_decode_address": {
									"entryPoint": 4711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 5379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5402,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5443,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Creature_$16_memory_ptr__to_t_struct$_Creature_$16_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 5422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9053:4",
										"nodeType": "YulBlock",
										"src": "0:9053:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:133:4",
													"nodeType": "YulBlock",
													"src": "58:133:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "169:16:4",
																"nodeType": "YulBlock",
																"src": "169:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:4",
																					"nodeType": "YulLiteral",
																					"src": "178:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:4",
																					"nodeType": "YulLiteral",
																					"src": "181:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:4"
																			},
																			"nativeSrc": "171:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:4"
																		},
																		"nativeSrc": "171:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "99:66:4",
																						"nodeType": "YulLiteral",
																						"src": "99:66:4",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:4"
																				},
																				"nativeSrc": "88:78:4",
																				"nodeType": "YulFunctionCall",
																				"src": "88:78:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:4"
																		},
																		"nativeSrc": "78:89:4",
																		"nodeType": "YulFunctionCall",
																		"src": "78:89:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:4"
																},
																"nativeSrc": "71:97:4",
																"nodeType": "YulFunctionCall",
																"src": "71:97:4"
															},
															"nativeSrc": "68:117:4",
															"nodeType": "YulIf",
															"src": "68:117:4"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:4",
														"nodeType": "YulTypedName",
														"src": "47:5:4",
														"type": ""
													}
												],
												"src": "14:177:4"
											},
											{
												"body": {
													"nativeSrc": "265:176:4",
													"nodeType": "YulBlock",
													"src": "265:176:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "311:16:4",
																"nodeType": "YulBlock",
																"src": "311:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:4",
																					"nodeType": "YulLiteral",
																					"src": "320:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "323:1:4",
																					"nodeType": "YulLiteral",
																					"src": "323:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "313:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:4"
																			},
																			"nativeSrc": "313:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:4"
																		},
																		"nativeSrc": "313:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "286:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "295:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "282:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:4"
																		},
																		"nativeSrc": "282:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "307:2:4",
																		"nodeType": "YulLiteral",
																		"src": "307:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "278:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:4"
																},
																"nativeSrc": "278:32:4",
																"nodeType": "YulFunctionCall",
																"src": "278:32:4"
															},
															"nativeSrc": "275:52:4",
															"nodeType": "YulIf",
															"src": "275:52:4"
														},
														{
															"nativeSrc": "336:36:4",
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "349:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:4"
																},
																"nativeSrc": "349:23:4",
																"nodeType": "YulFunctionCall",
																"src": "349:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "340:5:4",
																	"nodeType": "YulTypedName",
																	"src": "340:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "405:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "405:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "381:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "381:23:4"
																},
																"nativeSrc": "381:30:4",
																"nodeType": "YulFunctionCall",
																"src": "381:30:4"
															},
															"nativeSrc": "381:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "381:30:4"
														},
														{
															"nativeSrc": "420:15:4",
															"nodeType": "YulAssignment",
															"src": "420:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "430:5:4",
																"nodeType": "YulIdentifier",
																"src": "430:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "420:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "196:245:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "231:9:4",
														"nodeType": "YulTypedName",
														"src": "231:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "242:7:4",
														"nodeType": "YulTypedName",
														"src": "242:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "254:6:4",
														"nodeType": "YulTypedName",
														"src": "254:6:4",
														"type": ""
													}
												],
												"src": "196:245:4"
											},
											{
												"body": {
													"nativeSrc": "541:92:4",
													"nodeType": "YulBlock",
													"src": "541:92:4",
													"statements": [
														{
															"nativeSrc": "551:26:4",
															"nodeType": "YulAssignment",
															"src": "551:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "563:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "574:2:4",
																		"nodeType": "YulLiteral",
																		"src": "574:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "559:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:4"
																},
																"nativeSrc": "559:18:4",
																"nodeType": "YulFunctionCall",
																"src": "559:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "551:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "593:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "618:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "618:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "611:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "611:6:4"
																				},
																				"nativeSrc": "611:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "611:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "604:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "604:6:4"
																		},
																		"nativeSrc": "604:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "604:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "586:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:4"
																},
																"nativeSrc": "586:41:4",
																"nodeType": "YulFunctionCall",
																"src": "586:41:4"
															},
															"nativeSrc": "586:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "586:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "446:187:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "510:9:4",
														"nodeType": "YulTypedName",
														"src": "510:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "521:6:4",
														"nodeType": "YulTypedName",
														"src": "521:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "532:4:4",
														"nodeType": "YulTypedName",
														"src": "532:4:4",
														"type": ""
													}
												],
												"src": "446:187:4"
											},
											{
												"body": {
													"nativeSrc": "699:239:4",
													"nodeType": "YulBlock",
													"src": "699:239:4",
													"statements": [
														{
															"nativeSrc": "709:26:4",
															"nodeType": "YulVariableDeclaration",
															"src": "709:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "729:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "729:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "723:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "723:5:4"
																},
																"nativeSrc": "723:12:4",
																"nodeType": "YulFunctionCall",
																"src": "723:12:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "713:6:4",
																	"nodeType": "YulTypedName",
																	"src": "713:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "751:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "751:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "756:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "756:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "744:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:4"
																},
																"nativeSrc": "744:19:4",
																"nodeType": "YulFunctionCall",
																"src": "744:19:4"
															},
															"nativeSrc": "744:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "744:19:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "782:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "782:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "787:4:4",
																				"nodeType": "YulLiteral",
																				"src": "787:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "778:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "778:3:4"
																		},
																		"nativeSrc": "778:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "778:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "798:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "798:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "805:4:4",
																				"nodeType": "YulLiteral",
																				"src": "805:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:4"
																		},
																		"nativeSrc": "794:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "794:16:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "812:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:4"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "772:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "772:5:4"
																},
																"nativeSrc": "772:47:4",
																"nodeType": "YulFunctionCall",
																"src": "772:47:4"
															},
															"nativeSrc": "772:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "772:47:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "843:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "843:3:4"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "848:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "848:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "839:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "839:3:4"
																				},
																				"nativeSrc": "839:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "839:16:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "857:4:4",
																				"nodeType": "YulLiteral",
																				"src": "857:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "835:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "835:3:4"
																		},
																		"nativeSrc": "835:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "835:27:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:4",
																		"nodeType": "YulLiteral",
																		"src": "864:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "828:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "828:6:4"
																},
																"nativeSrc": "828:38:4",
																"nodeType": "YulFunctionCall",
																"src": "828:38:4"
															},
															"nativeSrc": "828:38:4",
															"nodeType": "YulExpressionStatement",
															"src": "828:38:4"
														},
														{
															"nativeSrc": "875:57:4",
															"nodeType": "YulAssignment",
															"src": "875:57:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "890:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "890:3:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "903:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "903:6:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "911:2:4",
																								"nodeType": "YulLiteral",
																								"src": "911:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "899:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "899:3:4"
																						},
																						"nativeSrc": "899:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "899:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "920:2:4",
																								"nodeType": "YulLiteral",
																								"src": "920:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "916:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "916:3:4"
																						},
																						"nativeSrc": "916:7:4",
																						"nodeType": "YulFunctionCall",
																						"src": "916:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "895:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "895:3:4"
																				},
																				"nativeSrc": "895:29:4",
																				"nodeType": "YulFunctionCall",
																				"src": "895:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "886:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "886:3:4"
																		},
																		"nativeSrc": "886:39:4",
																		"nodeType": "YulFunctionCall",
																		"src": "886:39:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "927:4:4",
																		"nodeType": "YulLiteral",
																		"src": "927:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "882:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "882:3:4"
																},
																"nativeSrc": "882:50:4",
																"nodeType": "YulFunctionCall",
																"src": "882:50:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "875:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "638:300:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "676:5:4",
														"nodeType": "YulTypedName",
														"src": "676:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "683:3:4",
														"nodeType": "YulTypedName",
														"src": "683:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "691:3:4",
														"nodeType": "YulTypedName",
														"src": "691:3:4",
														"type": ""
													}
												],
												"src": "638:300:4"
											},
											{
												"body": {
													"nativeSrc": "1064:110:4",
													"nodeType": "YulBlock",
													"src": "1064:110:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1081:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1092:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1092:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1074:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:4"
																},
																"nativeSrc": "1074:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1074:21:4"
															},
															"nativeSrc": "1074:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1074:21:4"
														},
														{
															"nativeSrc": "1104:64:4",
															"nodeType": "YulAssignment",
															"src": "1104:64:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1141:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1141:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1153:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1153:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1164:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1164:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1149:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1149:3:4"
																		},
																		"nativeSrc": "1149:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1112:28:4",
																	"nodeType": "YulIdentifier",
																	"src": "1112:28:4"
																},
																"nativeSrc": "1112:56:4",
																"nodeType": "YulFunctionCall",
																"src": "1112:56:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1104:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1104:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "943:231:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1033:9:4",
														"nodeType": "YulTypedName",
														"src": "1033:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1044:6:4",
														"nodeType": "YulTypedName",
														"src": "1044:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1055:4:4",
														"nodeType": "YulTypedName",
														"src": "1055:4:4",
														"type": ""
													}
												],
												"src": "943:231:4"
											},
											{
												"body": {
													"nativeSrc": "1249:110:4",
													"nodeType": "YulBlock",
													"src": "1249:110:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1295:16:4",
																"nodeType": "YulBlock",
																"src": "1295:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1304:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1304:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1307:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1297:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1297:6:4"
																			},
																			"nativeSrc": "1297:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1297:12:4"
																		},
																		"nativeSrc": "1297:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1297:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1270:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1270:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1279:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1279:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1266:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:4"
																		},
																		"nativeSrc": "1266:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1266:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1291:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1291:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1262:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:4"
																},
																"nativeSrc": "1262:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1262:32:4"
															},
															"nativeSrc": "1259:52:4",
															"nodeType": "YulIf",
															"src": "1259:52:4"
														},
														{
															"nativeSrc": "1320:33:4",
															"nodeType": "YulAssignment",
															"src": "1320:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1343:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1343:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1330:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1330:12:4"
																},
																"nativeSrc": "1330:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1330:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1320:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1179:180:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1215:9:4",
														"nodeType": "YulTypedName",
														"src": "1215:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1226:7:4",
														"nodeType": "YulTypedName",
														"src": "1226:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1238:6:4",
														"nodeType": "YulTypedName",
														"src": "1238:6:4",
														"type": ""
													}
												],
												"src": "1179:180:4"
											},
											{
												"body": {
													"nativeSrc": "1465:125:4",
													"nodeType": "YulBlock",
													"src": "1465:125:4",
													"statements": [
														{
															"nativeSrc": "1475:26:4",
															"nodeType": "YulAssignment",
															"src": "1475:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1487:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1487:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1498:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1483:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:4"
																},
																"nativeSrc": "1483:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1483:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1475:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1475:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1517:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1532:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1540:42:4",
																				"nodeType": "YulLiteral",
																				"src": "1540:42:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1528:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1528:3:4"
																		},
																		"nativeSrc": "1528:55:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1528:55:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1510:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:4"
																},
																"nativeSrc": "1510:74:4",
																"nodeType": "YulFunctionCall",
																"src": "1510:74:4"
															},
															"nativeSrc": "1510:74:4",
															"nodeType": "YulExpressionStatement",
															"src": "1510:74:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1364:226:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1434:9:4",
														"nodeType": "YulTypedName",
														"src": "1434:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1445:6:4",
														"nodeType": "YulTypedName",
														"src": "1445:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1456:4:4",
														"nodeType": "YulTypedName",
														"src": "1456:4:4",
														"type": ""
													}
												],
												"src": "1364:226:4"
											},
											{
												"body": {
													"nativeSrc": "1644:147:4",
													"nodeType": "YulBlock",
													"src": "1644:147:4",
													"statements": [
														{
															"nativeSrc": "1654:29:4",
															"nodeType": "YulAssignment",
															"src": "1654:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1676:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1676:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1663:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1663:12:4"
																},
																"nativeSrc": "1663:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1663:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1654:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1654:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1769:16:4",
																"nodeType": "YulBlock",
																"src": "1769:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1778:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1778:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1781:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1781:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1771:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1771:6:4"
																			},
																			"nativeSrc": "1771:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1771:12:4"
																		},
																		"nativeSrc": "1771:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1771:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1705:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1705:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1716:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1716:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1723:42:4",
																						"nodeType": "YulLiteral",
																						"src": "1723:42:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1712:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1712:3:4"
																				},
																				"nativeSrc": "1712:54:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1712:54:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1702:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1702:2:4"
																		},
																		"nativeSrc": "1702:65:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1702:65:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1695:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:4"
																},
																"nativeSrc": "1695:73:4",
																"nodeType": "YulFunctionCall",
																"src": "1695:73:4"
															},
															"nativeSrc": "1692:93:4",
															"nodeType": "YulIf",
															"src": "1692:93:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1595:196:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1623:6:4",
														"nodeType": "YulTypedName",
														"src": "1623:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1634:5:4",
														"nodeType": "YulTypedName",
														"src": "1634:5:4",
														"type": ""
													}
												],
												"src": "1595:196:4"
											},
											{
												"body": {
													"nativeSrc": "1883:167:4",
													"nodeType": "YulBlock",
													"src": "1883:167:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1929:16:4",
																"nodeType": "YulBlock",
																"src": "1929:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1938:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1938:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1941:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1941:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1931:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1931:6:4"
																			},
																			"nativeSrc": "1931:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1931:12:4"
																		},
																		"nativeSrc": "1931:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1931:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1904:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1904:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1913:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1913:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1900:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1900:3:4"
																		},
																		"nativeSrc": "1900:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1925:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1925:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1896:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1896:3:4"
																},
																"nativeSrc": "1896:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1896:32:4"
															},
															"nativeSrc": "1893:52:4",
															"nodeType": "YulIf",
															"src": "1893:52:4"
														},
														{
															"nativeSrc": "1954:39:4",
															"nodeType": "YulAssignment",
															"src": "1954:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1964:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "1964:18:4"
																},
																"nativeSrc": "1964:29:4",
																"nodeType": "YulFunctionCall",
																"src": "1964:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1954:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1954:6:4"
																}
															]
														},
														{
															"nativeSrc": "2002:42:4",
															"nodeType": "YulAssignment",
															"src": "2002:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2029:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2029:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2040:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2040:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2025:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2025:3:4"
																		},
																		"nativeSrc": "2025:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2025:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2012:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2012:12:4"
																},
																"nativeSrc": "2012:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2012:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2002:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1796:254:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1841:9:4",
														"nodeType": "YulTypedName",
														"src": "1841:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1852:7:4",
														"nodeType": "YulTypedName",
														"src": "1852:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1864:6:4",
														"nodeType": "YulTypedName",
														"src": "1864:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1872:6:4",
														"nodeType": "YulTypedName",
														"src": "1872:6:4",
														"type": ""
													}
												],
												"src": "1796:254:4"
											},
											{
												"body": {
													"nativeSrc": "2156:76:4",
													"nodeType": "YulBlock",
													"src": "2156:76:4",
													"statements": [
														{
															"nativeSrc": "2166:26:4",
															"nodeType": "YulAssignment",
															"src": "2166:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2178:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2178:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2189:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2189:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2174:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:4"
																},
																"nativeSrc": "2174:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2174:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2166:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2166:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2208:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2208:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2219:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2219:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2201:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:4"
																},
																"nativeSrc": "2201:25:4",
																"nodeType": "YulFunctionCall",
																"src": "2201:25:4"
															},
															"nativeSrc": "2201:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "2201:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2055:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2125:9:4",
														"nodeType": "YulTypedName",
														"src": "2125:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2136:6:4",
														"nodeType": "YulTypedName",
														"src": "2136:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2147:4:4",
														"nodeType": "YulTypedName",
														"src": "2147:4:4",
														"type": ""
													}
												],
												"src": "2055:177:4"
											},
											{
												"body": {
													"nativeSrc": "2341:224:4",
													"nodeType": "YulBlock",
													"src": "2341:224:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2387:16:4",
																"nodeType": "YulBlock",
																"src": "2387:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2396:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2396:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2399:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2399:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2389:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2389:6:4"
																			},
																			"nativeSrc": "2389:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2389:12:4"
																		},
																		"nativeSrc": "2389:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2389:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2362:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2362:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2371:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2371:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2358:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2358:3:4"
																		},
																		"nativeSrc": "2358:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2358:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2383:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2383:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2354:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2354:3:4"
																},
																"nativeSrc": "2354:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2354:32:4"
															},
															"nativeSrc": "2351:52:4",
															"nodeType": "YulIf",
															"src": "2351:52:4"
														},
														{
															"nativeSrc": "2412:39:4",
															"nodeType": "YulAssignment",
															"src": "2412:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2441:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2441:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2422:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "2422:18:4"
																},
																"nativeSrc": "2422:29:4",
																"nodeType": "YulFunctionCall",
																"src": "2422:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2412:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2412:6:4"
																}
															]
														},
														{
															"nativeSrc": "2460:48:4",
															"nodeType": "YulAssignment",
															"src": "2460:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2493:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2493:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2504:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2504:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2489:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2489:3:4"
																		},
																		"nativeSrc": "2489:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2489:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2470:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "2470:18:4"
																},
																"nativeSrc": "2470:38:4",
																"nodeType": "YulFunctionCall",
																"src": "2470:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2460:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2460:6:4"
																}
															]
														},
														{
															"nativeSrc": "2517:42:4",
															"nodeType": "YulAssignment",
															"src": "2517:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2544:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2555:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2555:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2540:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:4"
																		},
																		"nativeSrc": "2540:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2540:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2527:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2527:12:4"
																},
																"nativeSrc": "2527:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2527:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2517:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2237:328:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2291:9:4",
														"nodeType": "YulTypedName",
														"src": "2291:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2302:7:4",
														"nodeType": "YulTypedName",
														"src": "2302:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2314:6:4",
														"nodeType": "YulTypedName",
														"src": "2314:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2322:6:4",
														"nodeType": "YulTypedName",
														"src": "2322:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2330:6:4",
														"nodeType": "YulTypedName",
														"src": "2330:6:4",
														"type": ""
													}
												],
												"src": "2237:328:4"
											},
											{
												"body": {
													"nativeSrc": "2657:161:4",
													"nodeType": "YulBlock",
													"src": "2657:161:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2703:16:4",
																"nodeType": "YulBlock",
																"src": "2703:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2715:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:4"
																			},
																			"nativeSrc": "2705:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:12:4"
																		},
																		"nativeSrc": "2705:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2678:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2678:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2687:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2687:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2674:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2674:3:4"
																		},
																		"nativeSrc": "2674:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2674:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2699:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2699:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2670:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2670:3:4"
																},
																"nativeSrc": "2670:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2670:32:4"
															},
															"nativeSrc": "2667:52:4",
															"nodeType": "YulIf",
															"src": "2667:52:4"
														},
														{
															"nativeSrc": "2728:33:4",
															"nodeType": "YulAssignment",
															"src": "2728:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2751:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2751:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2738:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2738:12:4"
																},
																"nativeSrc": "2738:23:4",
																"nodeType": "YulFunctionCall",
																"src": "2738:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2728:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2728:6:4"
																}
															]
														},
														{
															"nativeSrc": "2770:42:4",
															"nodeType": "YulAssignment",
															"src": "2770:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2797:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2797:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2808:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2808:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2793:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:4"
																		},
																		"nativeSrc": "2793:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2780:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2780:12:4"
																},
																"nativeSrc": "2780:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2780:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2770:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2770:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2570:248:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2615:9:4",
														"nodeType": "YulTypedName",
														"src": "2615:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2626:7:4",
														"nodeType": "YulTypedName",
														"src": "2626:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2638:6:4",
														"nodeType": "YulTypedName",
														"src": "2638:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2646:6:4",
														"nodeType": "YulTypedName",
														"src": "2646:6:4",
														"type": ""
													}
												],
												"src": "2570:248:4"
											},
											{
												"body": {
													"nativeSrc": "3008:206:4",
													"nodeType": "YulBlock",
													"src": "3008:206:4",
													"statements": [
														{
															"nativeSrc": "3018:27:4",
															"nodeType": "YulAssignment",
															"src": "3018:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3030:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3030:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3041:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3041:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3026:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3026:3:4"
																},
																"nativeSrc": "3026:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3026:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3018:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3018:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3061:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3061:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3072:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3072:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3054:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3054:6:4"
																},
																"nativeSrc": "3054:25:4",
																"nodeType": "YulFunctionCall",
																"src": "3054:25:4"
															},
															"nativeSrc": "3054:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "3054:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3099:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3099:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3110:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3110:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3095:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:4"
																		},
																		"nativeSrc": "3095:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:18:4"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3115:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3115:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3088:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3088:6:4"
																},
																"nativeSrc": "3088:34:4",
																"nodeType": "YulFunctionCall",
																"src": "3088:34:4"
															},
															"nativeSrc": "3088:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "3088:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3142:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3142:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3153:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3153:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3138:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3138:3:4"
																		},
																		"nativeSrc": "3138:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3138:18:4"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3158:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3158:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3131:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3131:6:4"
																},
																"nativeSrc": "3131:34:4",
																"nodeType": "YulFunctionCall",
																"src": "3131:34:4"
															},
															"nativeSrc": "3131:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "3131:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3185:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3185:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3196:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3196:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3181:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3181:3:4"
																		},
																		"nativeSrc": "3181:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3181:18:4"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3201:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3201:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3174:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3174:6:4"
																},
																"nativeSrc": "3174:34:4",
																"nodeType": "YulFunctionCall",
																"src": "3174:34:4"
															},
															"nativeSrc": "3174:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "3174:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2823:391:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2953:9:4",
														"nodeType": "YulTypedName",
														"src": "2953:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2964:6:4",
														"nodeType": "YulTypedName",
														"src": "2964:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2972:6:4",
														"nodeType": "YulTypedName",
														"src": "2972:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2980:6:4",
														"nodeType": "YulTypedName",
														"src": "2980:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2988:6:4",
														"nodeType": "YulTypedName",
														"src": "2988:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2999:4:4",
														"nodeType": "YulTypedName",
														"src": "2999:4:4",
														"type": ""
													}
												],
												"src": "2823:391:4"
											},
											{
												"body": {
													"nativeSrc": "3289:116:4",
													"nodeType": "YulBlock",
													"src": "3289:116:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3335:16:4",
																"nodeType": "YulBlock",
																"src": "3335:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3344:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3344:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3347:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3347:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3337:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3337:6:4"
																			},
																			"nativeSrc": "3337:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3337:12:4"
																		},
																		"nativeSrc": "3337:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3337:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3310:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3310:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3319:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3319:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3306:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3306:3:4"
																		},
																		"nativeSrc": "3306:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3306:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3331:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3331:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3302:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3302:3:4"
																},
																"nativeSrc": "3302:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3302:32:4"
															},
															"nativeSrc": "3299:52:4",
															"nodeType": "YulIf",
															"src": "3299:52:4"
														},
														{
															"nativeSrc": "3360:39:4",
															"nodeType": "YulAssignment",
															"src": "3360:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3389:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3389:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3370:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "3370:18:4"
																},
																"nativeSrc": "3370:29:4",
																"nodeType": "YulFunctionCall",
																"src": "3370:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3360:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3219:186:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3255:9:4",
														"nodeType": "YulTypedName",
														"src": "3255:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3266:7:4",
														"nodeType": "YulTypedName",
														"src": "3266:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3278:6:4",
														"nodeType": "YulTypedName",
														"src": "3278:6:4",
														"type": ""
													}
												],
												"src": "3219:186:4"
											},
											{
												"body": {
													"nativeSrc": "3494:263:4",
													"nodeType": "YulBlock",
													"src": "3494:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3540:16:4",
																"nodeType": "YulBlock",
																"src": "3540:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3549:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3552:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3542:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:4"
																			},
																			"nativeSrc": "3542:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3542:12:4"
																		},
																		"nativeSrc": "3542:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3515:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3515:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3524:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3524:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3511:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3511:3:4"
																		},
																		"nativeSrc": "3511:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3511:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3536:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3507:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:4"
																},
																"nativeSrc": "3507:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3507:32:4"
															},
															"nativeSrc": "3504:52:4",
															"nodeType": "YulIf",
															"src": "3504:52:4"
														},
														{
															"nativeSrc": "3565:39:4",
															"nodeType": "YulAssignment",
															"src": "3565:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3594:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3575:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "3575:18:4"
																},
																"nativeSrc": "3575:29:4",
																"nodeType": "YulFunctionCall",
																"src": "3575:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3565:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3565:6:4"
																}
															]
														},
														{
															"nativeSrc": "3613:45:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3613:45:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3643:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3643:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3654:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3654:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3639:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3639:3:4"
																		},
																		"nativeSrc": "3639:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3639:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3626:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3626:12:4"
																},
																"nativeSrc": "3626:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3626:32:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3617:5:4",
																	"nodeType": "YulTypedName",
																	"src": "3617:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3711:16:4",
																"nodeType": "YulBlock",
																"src": "3711:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3720:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3720:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3723:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3723:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3713:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3713:6:4"
																			},
																			"nativeSrc": "3713:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3713:12:4"
																		},
																		"nativeSrc": "3713:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3713:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3680:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3680:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3701:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "3701:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3694:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "3694:6:4"
																						},
																						"nativeSrc": "3694:13:4",
																						"nodeType": "YulFunctionCall",
																						"src": "3694:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3687:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3687:6:4"
																				},
																				"nativeSrc": "3687:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3687:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3677:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3677:2:4"
																		},
																		"nativeSrc": "3677:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3677:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3670:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:4"
																},
																"nativeSrc": "3670:40:4",
																"nodeType": "YulFunctionCall",
																"src": "3670:40:4"
															},
															"nativeSrc": "3667:60:4",
															"nodeType": "YulIf",
															"src": "3667:60:4"
														},
														{
															"nativeSrc": "3736:15:4",
															"nodeType": "YulAssignment",
															"src": "3736:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "3746:5:4",
																"nodeType": "YulIdentifier",
																"src": "3746:5:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3736:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3736:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3410:347:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3452:9:4",
														"nodeType": "YulTypedName",
														"src": "3452:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3463:7:4",
														"nodeType": "YulTypedName",
														"src": "3463:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3475:6:4",
														"nodeType": "YulTypedName",
														"src": "3475:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3483:6:4",
														"nodeType": "YulTypedName",
														"src": "3483:6:4",
														"type": ""
													}
												],
												"src": "3410:347:4"
											},
											{
												"body": {
													"nativeSrc": "3794:152:4",
													"nodeType": "YulBlock",
													"src": "3794:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3811:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3811:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3814:77:4",
																		"nodeType": "YulLiteral",
																		"src": "3814:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3804:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3804:6:4"
																},
																"nativeSrc": "3804:88:4",
																"nodeType": "YulFunctionCall",
																"src": "3804:88:4"
															},
															"nativeSrc": "3804:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "3804:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3908:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3911:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3911:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3901:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3901:6:4"
																},
																"nativeSrc": "3901:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3901:15:4"
															},
															"nativeSrc": "3901:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3901:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3932:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3932:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3935:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3935:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3925:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:4"
																},
																"nativeSrc": "3925:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3925:15:4"
															},
															"nativeSrc": "3925:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3925:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3762:184:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3762:184:4"
											},
											{
												"body": {
													"nativeSrc": "4081:1008:4",
													"nodeType": "YulBlock",
													"src": "4081:1008:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4128:16:4",
																"nodeType": "YulBlock",
																"src": "4128:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4137:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4137:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4140:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4140:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4130:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4130:6:4"
																			},
																			"nativeSrc": "4130:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4130:12:4"
																		},
																		"nativeSrc": "4130:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4130:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4102:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4102:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4111:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4111:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4098:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4098:3:4"
																		},
																		"nativeSrc": "4098:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4098:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4123:3:4",
																		"nodeType": "YulLiteral",
																		"src": "4123:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4094:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4094:3:4"
																},
																"nativeSrc": "4094:33:4",
																"nodeType": "YulFunctionCall",
																"src": "4094:33:4"
															},
															"nativeSrc": "4091:53:4",
															"nodeType": "YulIf",
															"src": "4091:53:4"
														},
														{
															"nativeSrc": "4153:39:4",
															"nodeType": "YulAssignment",
															"src": "4153:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4182:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4182:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4163:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "4163:18:4"
																},
																"nativeSrc": "4163:29:4",
																"nodeType": "YulFunctionCall",
																"src": "4163:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4153:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4153:6:4"
																}
															]
														},
														{
															"nativeSrc": "4201:48:4",
															"nodeType": "YulAssignment",
															"src": "4201:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4234:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4234:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4245:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4245:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4230:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4230:3:4"
																		},
																		"nativeSrc": "4230:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4230:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4211:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "4211:18:4"
																},
																"nativeSrc": "4211:38:4",
																"nodeType": "YulFunctionCall",
																"src": "4211:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4201:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4201:6:4"
																}
															]
														},
														{
															"nativeSrc": "4258:42:4",
															"nodeType": "YulAssignment",
															"src": "4258:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4285:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4285:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4296:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4296:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4281:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4281:3:4"
																		},
																		"nativeSrc": "4281:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4281:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4268:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "4268:12:4"
																},
																"nativeSrc": "4268:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4268:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4258:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:4"
																}
															]
														},
														{
															"nativeSrc": "4309:46:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4309:46:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4340:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4340:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4351:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4351:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4336:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4336:3:4"
																		},
																		"nativeSrc": "4336:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4336:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4323:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "4323:12:4"
																},
																"nativeSrc": "4323:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4323:32:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4313:6:4",
																	"nodeType": "YulTypedName",
																	"src": "4313:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4364:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4364:28:4",
															"value": {
																"kind": "number",
																"nativeSrc": "4374:18:4",
																"nodeType": "YulLiteral",
																"src": "4374:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4368:2:4",
																	"nodeType": "YulTypedName",
																	"src": "4368:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4419:16:4",
																"nodeType": "YulBlock",
																"src": "4419:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4428:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4428:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4431:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4431:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4421:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4421:6:4"
																			},
																			"nativeSrc": "4421:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4421:12:4"
																		},
																		"nativeSrc": "4421:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4421:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4407:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4407:6:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4415:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4415:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4404:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4404:2:4"
																},
																"nativeSrc": "4404:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4404:14:4"
															},
															"nativeSrc": "4401:34:4",
															"nodeType": "YulIf",
															"src": "4401:34:4"
														},
														{
															"nativeSrc": "4444:32:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4444:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4458:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4458:9:4"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4469:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4469:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4454:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4454:3:4"
																},
																"nativeSrc": "4454:22:4",
																"nodeType": "YulFunctionCall",
																"src": "4454:22:4"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "4448:2:4",
																	"nodeType": "YulTypedName",
																	"src": "4448:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4524:16:4",
																"nodeType": "YulBlock",
																"src": "4524:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4533:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4533:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4536:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4536:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4526:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4526:6:4"
																			},
																			"nativeSrc": "4526:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4526:12:4"
																		},
																		"nativeSrc": "4526:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4526:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4503:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4503:2:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4507:4:4",
																						"nodeType": "YulLiteral",
																						"src": "4507:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4499:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4499:3:4"
																				},
																				"nativeSrc": "4499:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4499:13:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4495:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4495:3:4"
																		},
																		"nativeSrc": "4495:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4495:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4488:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4488:6:4"
																},
																"nativeSrc": "4488:35:4",
																"nodeType": "YulFunctionCall",
																"src": "4488:35:4"
															},
															"nativeSrc": "4485:55:4",
															"nodeType": "YulIf",
															"src": "4485:55:4"
														},
														{
															"nativeSrc": "4549:26:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4549:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "4572:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4572:2:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4559:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "4559:12:4"
																},
																"nativeSrc": "4559:16:4",
																"nodeType": "YulFunctionCall",
																"src": "4559:16:4"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "4553:2:4",
																	"nodeType": "YulTypedName",
																	"src": "4553:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4598:22:4",
																"nodeType": "YulBlock",
																"src": "4598:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4600:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4600:16:4"
																			},
																			"nativeSrc": "4600:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4600:18:4"
																		},
																		"nativeSrc": "4600:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4600:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "4590:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4590:2:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4594:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4594:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4587:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4587:2:4"
																},
																"nativeSrc": "4587:10:4",
																"nodeType": "YulFunctionCall",
																"src": "4587:10:4"
															},
															"nativeSrc": "4584:36:4",
															"nodeType": "YulIf",
															"src": "4584:36:4"
														},
														{
															"nativeSrc": "4629:17:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4629:17:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4643:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4643:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4639:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4639:3:4"
																},
																"nativeSrc": "4639:7:4",
																"nodeType": "YulFunctionCall",
																"src": "4639:7:4"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "4633:2:4",
																	"nodeType": "YulTypedName",
																	"src": "4633:2:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4655:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4655:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4675:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4675:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4669:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4669:5:4"
																},
																"nativeSrc": "4669:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4669:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4659:6:4",
																	"nodeType": "YulTypedName",
																	"src": "4659:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4687:71:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4687:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4709:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4709:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4733:2:4",
																										"nodeType": "YulIdentifier",
																										"src": "4733:2:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4737:4:4",
																										"nodeType": "YulLiteral",
																										"src": "4737:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4729:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "4729:3:4"
																								},
																								"nativeSrc": "4729:13:4",
																								"nodeType": "YulFunctionCall",
																								"src": "4729:13:4"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4744:2:4",
																								"nodeType": "YulIdentifier",
																								"src": "4744:2:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4725:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "4725:3:4"
																						},
																						"nativeSrc": "4725:22:4",
																						"nodeType": "YulFunctionCall",
																						"src": "4725:22:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4749:2:4",
																						"nodeType": "YulLiteral",
																						"src": "4749:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4721:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4721:3:4"
																				},
																				"nativeSrc": "4721:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4721:31:4"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4754:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4754:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4717:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4717:3:4"
																		},
																		"nativeSrc": "4717:40:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4717:40:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4705:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4705:3:4"
																},
																"nativeSrc": "4705:53:4",
																"nodeType": "YulFunctionCall",
																"src": "4705:53:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4691:10:4",
																	"nodeType": "YulTypedName",
																	"src": "4691:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4817:22:4",
																"nodeType": "YulBlock",
																"src": "4817:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4819:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4819:16:4"
																			},
																			"nativeSrc": "4819:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4819:18:4"
																		},
																		"nativeSrc": "4819:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4819:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4776:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "4776:10:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4788:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4788:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4773:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4773:2:4"
																		},
																		"nativeSrc": "4773:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4773:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4796:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "4796:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4808:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4808:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4793:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4793:2:4"
																		},
																		"nativeSrc": "4793:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4793:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4770:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4770:2:4"
																},
																"nativeSrc": "4770:46:4",
																"nodeType": "YulFunctionCall",
																"src": "4770:46:4"
															},
															"nativeSrc": "4767:72:4",
															"nodeType": "YulIf",
															"src": "4767:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4855:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4855:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4859:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "4859:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4848:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:4"
																},
																"nativeSrc": "4848:22:4",
																"nodeType": "YulFunctionCall",
																"src": "4848:22:4"
															},
															"nativeSrc": "4848:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "4848:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4886:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4886:6:4"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4894:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4894:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4879:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4879:6:4"
																},
																"nativeSrc": "4879:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4879:18:4"
															},
															"nativeSrc": "4879:18:4",
															"nodeType": "YulExpressionStatement",
															"src": "4879:18:4"
														},
														{
															"body": {
																"nativeSrc": "4943:16:4",
																"nodeType": "YulBlock",
																"src": "4943:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4952:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4952:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4955:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4955:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4945:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4945:6:4"
																			},
																			"nativeSrc": "4945:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4945:12:4"
																		},
																		"nativeSrc": "4945:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4945:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4920:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4920:2:4"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4924:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4924:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4916:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4916:3:4"
																				},
																				"nativeSrc": "4916:11:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4916:11:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4929:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4929:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4912:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4912:3:4"
																		},
																		"nativeSrc": "4912:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4912:20:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4934:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "4934:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4909:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4909:2:4"
																},
																"nativeSrc": "4909:33:4",
																"nodeType": "YulFunctionCall",
																"src": "4909:33:4"
															},
															"nativeSrc": "4906:53:4",
															"nodeType": "YulIf",
															"src": "4906:53:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4985:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4985:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4993:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4993:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4981:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4981:3:4"
																		},
																		"nativeSrc": "4981:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4981:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "5002:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "5002:2:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5006:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5006:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4998:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:4"
																		},
																		"nativeSrc": "4998:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4998:11:4"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "5011:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "5011:2:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4968:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "4968:12:4"
																},
																"nativeSrc": "4968:46:4",
																"nodeType": "YulFunctionCall",
																"src": "4968:46:4"
															},
															"nativeSrc": "4968:46:4",
															"nodeType": "YulExpressionStatement",
															"src": "4968:46:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "5038:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5038:6:4"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "5046:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "5046:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5034:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5034:3:4"
																				},
																				"nativeSrc": "5034:15:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5034:15:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5051:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5051:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5030:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5030:3:4"
																		},
																		"nativeSrc": "5030:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5030:24:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5056:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5056:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5023:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5023:6:4"
																},
																"nativeSrc": "5023:35:4",
																"nodeType": "YulFunctionCall",
																"src": "5023:35:4"
															},
															"nativeSrc": "5023:35:4",
															"nodeType": "YulExpressionStatement",
															"src": "5023:35:4"
														},
														{
															"nativeSrc": "5067:16:4",
															"nodeType": "YulAssignment",
															"src": "5067:16:4",
															"value": {
																"name": "memPtr",
																"nativeSrc": "5077:6:4",
																"nodeType": "YulIdentifier",
																"src": "5077:6:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5067:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3951:1138:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4023:9:4",
														"nodeType": "YulTypedName",
														"src": "4023:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4034:7:4",
														"nodeType": "YulTypedName",
														"src": "4034:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4046:6:4",
														"nodeType": "YulTypedName",
														"src": "4046:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4054:6:4",
														"nodeType": "YulTypedName",
														"src": "4054:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4062:6:4",
														"nodeType": "YulTypedName",
														"src": "4062:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4070:6:4",
														"nodeType": "YulTypedName",
														"src": "4070:6:4",
														"type": ""
													}
												],
												"src": "3951:1138:4"
											},
											{
												"body": {
													"nativeSrc": "5181:173:4",
													"nodeType": "YulBlock",
													"src": "5181:173:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5227:16:4",
																"nodeType": "YulBlock",
																"src": "5227:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5236:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5236:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5239:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5239:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5229:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5229:6:4"
																			},
																			"nativeSrc": "5229:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5229:12:4"
																		},
																		"nativeSrc": "5229:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5229:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5202:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5202:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5211:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5211:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5198:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5198:3:4"
																		},
																		"nativeSrc": "5198:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5198:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5223:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5223:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5194:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:4"
																},
																"nativeSrc": "5194:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5194:32:4"
															},
															"nativeSrc": "5191:52:4",
															"nodeType": "YulIf",
															"src": "5191:52:4"
														},
														{
															"nativeSrc": "5252:39:4",
															"nodeType": "YulAssignment",
															"src": "5252:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5281:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5281:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5262:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "5262:18:4"
																},
																"nativeSrc": "5262:29:4",
																"nodeType": "YulFunctionCall",
																"src": "5262:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5252:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5252:6:4"
																}
															]
														},
														{
															"nativeSrc": "5300:48:4",
															"nodeType": "YulAssignment",
															"src": "5300:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5333:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5344:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5329:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:4"
																		},
																		"nativeSrc": "5329:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5310:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "5310:18:4"
																},
																"nativeSrc": "5310:38:4",
																"nodeType": "YulFunctionCall",
																"src": "5310:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5300:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5300:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5094:260:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5139:9:4",
														"nodeType": "YulTypedName",
														"src": "5139:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5150:7:4",
														"nodeType": "YulTypedName",
														"src": "5150:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5162:6:4",
														"nodeType": "YulTypedName",
														"src": "5162:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5170:6:4",
														"nodeType": "YulTypedName",
														"src": "5170:6:4",
														"type": ""
													}
												],
												"src": "5094:260:4"
											},
											{
												"body": {
													"nativeSrc": "5508:322:4",
													"nodeType": "YulBlock",
													"src": "5508:322:4",
													"statements": [
														{
															"nativeSrc": "5518:27:4",
															"nodeType": "YulAssignment",
															"src": "5518:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5530:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5530:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:3:4",
																		"nodeType": "YulLiteral",
																		"src": "5541:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5526:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5526:3:4"
																},
																"nativeSrc": "5526:19:4",
																"nodeType": "YulFunctionCall",
																"src": "5526:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5518:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5518:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5561:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5561:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5578:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5578:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5572:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5572:5:4"
																		},
																		"nativeSrc": "5572:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:13:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5554:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:4"
																},
																"nativeSrc": "5554:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5554:32:4"
															},
															"nativeSrc": "5554:32:4",
															"nodeType": "YulExpressionStatement",
															"src": "5554:32:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5606:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5606:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5617:4:4",
																				"nodeType": "YulLiteral",
																				"src": "5617:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5602:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5602:3:4"
																		},
																		"nativeSrc": "5602:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:20:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "5638:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "5638:6:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5646:4:4",
																								"nodeType": "YulLiteral",
																								"src": "5646:4:4",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5634:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "5634:3:4"
																						},
																						"nativeSrc": "5634:17:4",
																						"nodeType": "YulFunctionCall",
																						"src": "5634:17:4"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "5628:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "5628:5:4"
																				},
																				"nativeSrc": "5628:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5628:24:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5654:42:4",
																				"nodeType": "YulLiteral",
																				"src": "5654:42:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5624:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5624:3:4"
																		},
																		"nativeSrc": "5624:73:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5624:73:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5595:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5595:6:4"
																},
																"nativeSrc": "5595:103:4",
																"nodeType": "YulFunctionCall",
																"src": "5595:103:4"
															},
															"nativeSrc": "5595:103:4",
															"nodeType": "YulExpressionStatement",
															"src": "5595:103:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5718:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5718:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5729:4:4",
																				"nodeType": "YulLiteral",
																				"src": "5729:4:4",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5714:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5714:3:4"
																		},
																		"nativeSrc": "5714:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5714:20:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "5746:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5746:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5754:4:4",
																						"nodeType": "YulLiteral",
																						"src": "5754:4:4",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5742:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5742:3:4"
																				},
																				"nativeSrc": "5742:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5742:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5736:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5736:5:4"
																		},
																		"nativeSrc": "5736:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5736:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5707:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5707:6:4"
																},
																"nativeSrc": "5707:54:4",
																"nodeType": "YulFunctionCall",
																"src": "5707:54:4"
															},
															"nativeSrc": "5707:54:4",
															"nodeType": "YulExpressionStatement",
															"src": "5707:54:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5781:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5781:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5792:4:4",
																				"nodeType": "YulLiteral",
																				"src": "5792:4:4",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5777:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5777:3:4"
																		},
																		"nativeSrc": "5777:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5777:20:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "5809:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5809:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5817:4:4",
																						"nodeType": "YulLiteral",
																						"src": "5817:4:4",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5805:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5805:3:4"
																				},
																				"nativeSrc": "5805:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5805:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5799:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5799:5:4"
																		},
																		"nativeSrc": "5799:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5799:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5770:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5770:6:4"
																},
																"nativeSrc": "5770:54:4",
																"nodeType": "YulFunctionCall",
																"src": "5770:54:4"
															},
															"nativeSrc": "5770:54:4",
															"nodeType": "YulExpressionStatement",
															"src": "5770:54:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Creature_$16_memory_ptr__to_t_struct$_Creature_$16_memory_ptr__fromStack_reversed",
												"nativeSrc": "5359:471:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5477:9:4",
														"nodeType": "YulTypedName",
														"src": "5477:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5488:6:4",
														"nodeType": "YulTypedName",
														"src": "5488:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5499:4:4",
														"nodeType": "YulTypedName",
														"src": "5499:4:4",
														"type": ""
													}
												],
												"src": "5359:471:4"
											},
											{
												"body": {
													"nativeSrc": "5964:119:4",
													"nodeType": "YulBlock",
													"src": "5964:119:4",
													"statements": [
														{
															"nativeSrc": "5974:26:4",
															"nodeType": "YulAssignment",
															"src": "5974:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5986:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5986:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5997:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5997:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5982:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:4"
																},
																"nativeSrc": "5982:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5982:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5974:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5974:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6016:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6016:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6027:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6027:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6009:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6009:6:4"
																},
																"nativeSrc": "6009:25:4",
																"nodeType": "YulFunctionCall",
																"src": "6009:25:4"
															},
															"nativeSrc": "6009:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "6009:25:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6054:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6054:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6065:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6065:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6050:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6050:3:4"
																		},
																		"nativeSrc": "6050:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6050:18:4"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6070:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6070:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6043:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6043:6:4"
																},
																"nativeSrc": "6043:34:4",
																"nodeType": "YulFunctionCall",
																"src": "6043:34:4"
															},
															"nativeSrc": "6043:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "6043:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5835:248:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5925:9:4",
														"nodeType": "YulTypedName",
														"src": "5925:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5936:6:4",
														"nodeType": "YulTypedName",
														"src": "5936:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5944:6:4",
														"nodeType": "YulTypedName",
														"src": "5944:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5955:4:4",
														"nodeType": "YulTypedName",
														"src": "5955:4:4",
														"type": ""
													}
												],
												"src": "5835:248:4"
											},
											{
												"body": {
													"nativeSrc": "6143:382:4",
													"nodeType": "YulBlock",
													"src": "6143:382:4",
													"statements": [
														{
															"nativeSrc": "6153:22:4",
															"nodeType": "YulAssignment",
															"src": "6153:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6167:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6167:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6170:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6170:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6163:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6163:3:4"
																},
																"nativeSrc": "6163:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6163:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6153:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6153:6:4"
																}
															]
														},
														{
															"nativeSrc": "6184:38:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6184:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6214:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6214:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6220:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6220:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6210:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6210:3:4"
																},
																"nativeSrc": "6210:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6210:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6188:18:4",
																	"nodeType": "YulTypedName",
																	"src": "6188:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6261:31:4",
																"nodeType": "YulBlock",
																"src": "6261:31:4",
																"statements": [
																	{
																		"nativeSrc": "6263:27:4",
																		"nodeType": "YulAssignment",
																		"src": "6263:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6277:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "6277:6:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6285:4:4",
																					"nodeType": "YulLiteral",
																					"src": "6285:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6273:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "6273:3:4"
																			},
																			"nativeSrc": "6273:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6273:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6263:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6263:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6241:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "6241:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6234:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6234:6:4"
																},
																"nativeSrc": "6234:26:4",
																"nodeType": "YulFunctionCall",
																"src": "6234:26:4"
															},
															"nativeSrc": "6231:61:4",
															"nodeType": "YulIf",
															"src": "6231:61:4"
														},
														{
															"body": {
																"nativeSrc": "6351:168:4",
																"nodeType": "YulBlock",
																"src": "6351:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6372:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6372:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6375:77:4",
																					"nodeType": "YulLiteral",
																					"src": "6375:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6365:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6365:6:4"
																			},
																			"nativeSrc": "6365:88:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6365:88:4"
																		},
																		"nativeSrc": "6365:88:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6365:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6473:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6473:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6476:4:4",
																					"nodeType": "YulLiteral",
																					"src": "6476:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6466:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6466:6:4"
																			},
																			"nativeSrc": "6466:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6466:15:4"
																		},
																		"nativeSrc": "6466:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6466:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6501:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6501:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6504:4:4",
																					"nodeType": "YulLiteral",
																					"src": "6504:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6494:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6494:6:4"
																			},
																			"nativeSrc": "6494:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6494:15:4"
																		},
																		"nativeSrc": "6494:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6494:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6307:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "6307:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6330:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6330:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6338:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6338:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6327:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "6327:2:4"
																		},
																		"nativeSrc": "6327:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6327:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6304:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "6304:2:4"
																},
																"nativeSrc": "6304:38:4",
																"nodeType": "YulFunctionCall",
																"src": "6304:38:4"
															},
															"nativeSrc": "6301:218:4",
															"nodeType": "YulIf",
															"src": "6301:218:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6088:437:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6123:4:4",
														"nodeType": "YulTypedName",
														"src": "6123:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6132:6:4",
														"nodeType": "YulTypedName",
														"src": "6132:6:4",
														"type": ""
													}
												],
												"src": "6088:437:4"
											},
											{
												"body": {
													"nativeSrc": "6562:152:4",
													"nodeType": "YulBlock",
													"src": "6562:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6579:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6579:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6582:77:4",
																		"nodeType": "YulLiteral",
																		"src": "6582:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6572:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6572:6:4"
																},
																"nativeSrc": "6572:88:4",
																"nodeType": "YulFunctionCall",
																"src": "6572:88:4"
															},
															"nativeSrc": "6572:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "6572:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6676:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6676:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6679:4:4",
																		"nodeType": "YulLiteral",
																		"src": "6679:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6669:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:4"
																},
																"nativeSrc": "6669:15:4",
																"nodeType": "YulFunctionCall",
																"src": "6669:15:4"
															},
															"nativeSrc": "6669:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "6669:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6700:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6700:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6703:4:4",
																		"nodeType": "YulLiteral",
																		"src": "6703:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6693:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6693:6:4"
																},
																"nativeSrc": "6693:15:4",
																"nodeType": "YulFunctionCall",
																"src": "6693:15:4"
															},
															"nativeSrc": "6693:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "6693:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6530:184:4",
												"nodeType": "YulFunctionDefinition",
												"src": "6530:184:4"
											},
											{
												"body": {
													"nativeSrc": "6767:77:4",
													"nodeType": "YulBlock",
													"src": "6767:77:4",
													"statements": [
														{
															"nativeSrc": "6777:16:4",
															"nodeType": "YulAssignment",
															"src": "6777:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6788:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6788:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6791:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6791:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6784:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:4"
																},
																"nativeSrc": "6784:9:4",
																"nodeType": "YulFunctionCall",
																"src": "6784:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6777:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6777:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6816:22:4",
																"nodeType": "YulBlock",
																"src": "6816:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6818:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "6818:16:4"
																			},
																			"nativeSrc": "6818:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6818:18:4"
																		},
																		"nativeSrc": "6818:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6818:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6808:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6808:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6811:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6811:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6805:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "6805:2:4"
																},
																"nativeSrc": "6805:10:4",
																"nodeType": "YulFunctionCall",
																"src": "6805:10:4"
															},
															"nativeSrc": "6802:36:4",
															"nodeType": "YulIf",
															"src": "6802:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6719:125:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6750:1:4",
														"nodeType": "YulTypedName",
														"src": "6750:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6753:1:4",
														"nodeType": "YulTypedName",
														"src": "6753:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6759:3:4",
														"nodeType": "YulTypedName",
														"src": "6759:3:4",
														"type": ""
													}
												],
												"src": "6719:125:4"
											},
											{
												"body": {
													"nativeSrc": "7024:184:4",
													"nodeType": "YulBlock",
													"src": "7024:184:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7041:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7041:3:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7046:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7046:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7034:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7034:6:4"
																},
																"nativeSrc": "7034:19:4",
																"nodeType": "YulFunctionCall",
																"src": "7034:19:4"
															},
															"nativeSrc": "7034:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "7034:19:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7073:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "7073:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7078:2:4",
																				"nodeType": "YulLiteral",
																				"src": "7078:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7069:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7069:3:4"
																		},
																		"nativeSrc": "7069:12:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7069:12:4"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7083:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7083:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7062:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7062:6:4"
																},
																"nativeSrc": "7062:28:4",
																"nodeType": "YulFunctionCall",
																"src": "7062:28:4"
															},
															"nativeSrc": "7062:28:4",
															"nodeType": "YulExpressionStatement",
															"src": "7062:28:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7110:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "7110:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7115:2:4",
																				"nodeType": "YulLiteral",
																				"src": "7115:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7106:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7106:3:4"
																		},
																		"nativeSrc": "7106:12:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7106:12:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7128:2:4",
																						"nodeType": "YulLiteral",
																						"src": "7128:2:4",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value2",
																						"nativeSrc": "7132:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "7132:6:4"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "7124:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7124:3:4"
																				},
																				"nativeSrc": "7124:15:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7124:15:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7145:26:4",
																						"nodeType": "YulLiteral",
																						"src": "7145:26:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7141:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "7141:3:4"
																				},
																				"nativeSrc": "7141:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "7141:31:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7120:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7120:3:4"
																		},
																		"nativeSrc": "7120:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7120:53:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7099:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7099:6:4"
																},
																"nativeSrc": "7099:75:4",
																"nodeType": "YulFunctionCall",
																"src": "7099:75:4"
															},
															"nativeSrc": "7099:75:4",
															"nodeType": "YulExpressionStatement",
															"src": "7099:75:4"
														},
														{
															"nativeSrc": "7183:19:4",
															"nodeType": "YulAssignment",
															"src": "7183:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7194:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7194:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7199:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7199:2:4",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7190:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7190:3:4"
																},
																"nativeSrc": "7190:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7190:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7183:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7183:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6849:359:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6984:3:4",
														"nodeType": "YulTypedName",
														"src": "6984:3:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6989:6:4",
														"nodeType": "YulTypedName",
														"src": "6989:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6997:6:4",
														"nodeType": "YulTypedName",
														"src": "6997:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7005:6:4",
														"nodeType": "YulTypedName",
														"src": "7005:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7016:3:4",
														"nodeType": "YulTypedName",
														"src": "7016:3:4",
														"type": ""
													}
												],
												"src": "6849:359:4"
											},
											{
												"body": {
													"nativeSrc": "7245:152:4",
													"nodeType": "YulBlock",
													"src": "7245:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7262:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7262:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7265:77:4",
																		"nodeType": "YulLiteral",
																		"src": "7265:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7255:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7255:6:4"
																},
																"nativeSrc": "7255:88:4",
																"nodeType": "YulFunctionCall",
																"src": "7255:88:4"
															},
															"nativeSrc": "7255:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "7255:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7359:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7359:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7362:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7362:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7352:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7352:6:4"
																},
																"nativeSrc": "7352:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7352:15:4"
															},
															"nativeSrc": "7352:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7352:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7383:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7383:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7386:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7386:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7376:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7376:6:4"
																},
																"nativeSrc": "7376:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7376:15:4"
															},
															"nativeSrc": "7376:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7376:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7213:184:4",
												"nodeType": "YulFunctionDefinition",
												"src": "7213:184:4"
											},
											{
												"body": {
													"nativeSrc": "7440:74:4",
													"nodeType": "YulBlock",
													"src": "7440:74:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "7463:22:4",
																"nodeType": "YulBlock",
																"src": "7463:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7465:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "7465:16:4"
																			},
																			"nativeSrc": "7465:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7465:18:4"
																		},
																		"nativeSrc": "7465:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7465:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7460:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7460:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7453:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7453:6:4"
																},
																"nativeSrc": "7453:9:4",
																"nodeType": "YulFunctionCall",
																"src": "7453:9:4"
															},
															"nativeSrc": "7450:35:4",
															"nodeType": "YulIf",
															"src": "7450:35:4"
														},
														{
															"nativeSrc": "7494:14:4",
															"nodeType": "YulAssignment",
															"src": "7494:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7503:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7503:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7506:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7506:1:4"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "7499:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7499:3:4"
																},
																"nativeSrc": "7499:9:4",
																"nodeType": "YulFunctionCall",
																"src": "7499:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7494:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "7494:1:4"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "7402:112:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7425:1:4",
														"nodeType": "YulTypedName",
														"src": "7425:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7428:1:4",
														"nodeType": "YulTypedName",
														"src": "7428:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7434:1:4",
														"nodeType": "YulTypedName",
														"src": "7434:1:4",
														"type": ""
													}
												],
												"src": "7402:112:4"
											},
											{
												"body": {
													"nativeSrc": "7565:74:4",
													"nodeType": "YulBlock",
													"src": "7565:74:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "7588:22:4",
																"nodeType": "YulBlock",
																"src": "7588:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7590:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "7590:16:4"
																			},
																			"nativeSrc": "7590:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7590:18:4"
																		},
																		"nativeSrc": "7590:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7590:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7585:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7585:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7578:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7578:6:4"
																},
																"nativeSrc": "7578:9:4",
																"nodeType": "YulFunctionCall",
																"src": "7578:9:4"
															},
															"nativeSrc": "7575:35:4",
															"nodeType": "YulIf",
															"src": "7575:35:4"
														},
														{
															"nativeSrc": "7619:14:4",
															"nodeType": "YulAssignment",
															"src": "7619:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7628:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7628:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7631:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7631:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7624:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7624:3:4"
																},
																"nativeSrc": "7624:9:4",
																"nodeType": "YulFunctionCall",
																"src": "7624:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7619:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "7619:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7519:120:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7550:1:4",
														"nodeType": "YulTypedName",
														"src": "7550:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7553:1:4",
														"nodeType": "YulTypedName",
														"src": "7553:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7559:1:4",
														"nodeType": "YulTypedName",
														"src": "7559:1:4",
														"type": ""
													}
												],
												"src": "7519:120:4"
											},
											{
												"body": {
													"nativeSrc": "7694:162:4",
													"nodeType": "YulBlock",
													"src": "7694:162:4",
													"statements": [
														{
															"nativeSrc": "7704:26:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7704:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7724:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "7724:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7718:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "7718:5:4"
																},
																"nativeSrc": "7718:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7718:12:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7708:6:4",
																	"nodeType": "YulTypedName",
																	"src": "7708:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7745:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7745:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7754:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "7754:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7761:4:4",
																				"nodeType": "YulLiteral",
																				"src": "7761:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7750:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7750:3:4"
																		},
																		"nativeSrc": "7750:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7750:16:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7768:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7768:6:4"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7739:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "7739:5:4"
																},
																"nativeSrc": "7739:36:4",
																"nodeType": "YulFunctionCall",
																"src": "7739:36:4"
															},
															"nativeSrc": "7739:36:4",
															"nodeType": "YulExpressionStatement",
															"src": "7739:36:4"
														},
														{
															"nativeSrc": "7784:26:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7784:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7798:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7798:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7803:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7803:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7794:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7794:3:4"
																},
																"nativeSrc": "7794:16:4",
																"nodeType": "YulFunctionCall",
																"src": "7794:16:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7788:2:4",
																	"nodeType": "YulTypedName",
																	"src": "7788:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "7826:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "7826:2:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7830:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7830:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7819:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7819:6:4"
																},
																"nativeSrc": "7819:13:4",
																"nodeType": "YulFunctionCall",
																"src": "7819:13:4"
															},
															"nativeSrc": "7819:13:4",
															"nodeType": "YulExpressionStatement",
															"src": "7819:13:4"
														},
														{
															"nativeSrc": "7841:9:4",
															"nodeType": "YulAssignment",
															"src": "7841:9:4",
															"value": {
																"name": "_1",
																"nativeSrc": "7848:2:4",
																"nodeType": "YulIdentifier",
																"src": "7848:2:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7841:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7841:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "7644:212:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7671:5:4",
														"nodeType": "YulTypedName",
														"src": "7671:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7678:3:4",
														"nodeType": "YulTypedName",
														"src": "7678:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7686:3:4",
														"nodeType": "YulTypedName",
														"src": "7686:3:4",
														"type": ""
													}
												],
												"src": "7644:212:4"
											},
											{
												"body": {
													"nativeSrc": "8048:80:4",
													"nodeType": "YulBlock",
													"src": "8048:80:4",
													"statements": [
														{
															"nativeSrc": "8058:64:4",
															"nodeType": "YulAssignment",
															"src": "8058:64:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8083:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8083:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8109:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8109:6:4"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "8117:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "8117:3:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "8091:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "8091:17:4"
																		},
																		"nativeSrc": "8091:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8091:30:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "8065:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "8065:17:4"
																},
																"nativeSrc": "8065:57:4",
																"nodeType": "YulFunctionCall",
																"src": "8065:57:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8058:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8058:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7861:267:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8016:3:4",
														"nodeType": "YulTypedName",
														"src": "8016:3:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8021:6:4",
														"nodeType": "YulTypedName",
														"src": "8021:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8029:6:4",
														"nodeType": "YulTypedName",
														"src": "8029:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8040:3:4",
														"nodeType": "YulTypedName",
														"src": "8040:3:4",
														"type": ""
													}
												],
												"src": "7861:267:4"
											},
											{
												"body": {
													"nativeSrc": "8180:89:4",
													"nodeType": "YulBlock",
													"src": "8180:89:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "8207:22:4",
																"nodeType": "YulBlock",
																"src": "8207:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8209:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "8209:16:4"
																			},
																			"nativeSrc": "8209:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8209:18:4"
																		},
																		"nativeSrc": "8209:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8209:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8200:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8200:5:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8193:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8193:6:4"
																},
																"nativeSrc": "8193:13:4",
																"nodeType": "YulFunctionCall",
																"src": "8193:13:4"
															},
															"nativeSrc": "8190:39:4",
															"nodeType": "YulIf",
															"src": "8190:39:4"
														},
														{
															"nativeSrc": "8238:25:4",
															"nodeType": "YulAssignment",
															"src": "8238:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8249:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8249:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8260:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8260:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "8256:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8256:3:4"
																		},
																		"nativeSrc": "8256:6:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8256:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8245:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8245:3:4"
																},
																"nativeSrc": "8245:18:4",
																"nodeType": "YulFunctionCall",
																"src": "8245:18:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8238:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8238:3:4"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "8133:136:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8162:5:4",
														"nodeType": "YulTypedName",
														"src": "8162:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8172:3:4",
														"nodeType": "YulTypedName",
														"src": "8172:3:4",
														"type": ""
													}
												],
												"src": "8133:136:4"
											},
											{
												"body": {
													"nativeSrc": "8477:320:4",
													"nodeType": "YulBlock",
													"src": "8477:320:4",
													"statements": [
														{
															"nativeSrc": "8487:52:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8487:52:4",
															"value": {
																"kind": "number",
																"nativeSrc": "8497:42:4",
																"nodeType": "YulLiteral",
																"src": "8497:42:4",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8491:2:4",
																	"nodeType": "YulTypedName",
																	"src": "8491:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8555:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8555:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8570:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8570:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8578:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "8578:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8566:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:4"
																		},
																		"nativeSrc": "8566:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8548:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8548:6:4"
																},
																"nativeSrc": "8548:34:4",
																"nodeType": "YulFunctionCall",
																"src": "8548:34:4"
															},
															"nativeSrc": "8548:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "8548:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8602:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8602:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8613:2:4",
																				"nodeType": "YulLiteral",
																				"src": "8613:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8598:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8598:3:4"
																		},
																		"nativeSrc": "8598:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8598:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8622:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8622:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8630:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "8630:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8618:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8618:3:4"
																		},
																		"nativeSrc": "8618:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8618:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8591:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8591:6:4"
																},
																"nativeSrc": "8591:43:4",
																"nodeType": "YulFunctionCall",
																"src": "8591:43:4"
															},
															"nativeSrc": "8591:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "8591:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8654:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8654:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8665:2:4",
																				"nodeType": "YulLiteral",
																				"src": "8665:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8650:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8650:3:4"
																		},
																		"nativeSrc": "8650:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8650:18:4"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8670:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8670:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8643:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8643:6:4"
																},
																"nativeSrc": "8643:34:4",
																"nodeType": "YulFunctionCall",
																"src": "8643:34:4"
															},
															"nativeSrc": "8643:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "8643:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8697:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8697:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8708:2:4",
																				"nodeType": "YulLiteral",
																				"src": "8708:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8693:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8693:3:4"
																		},
																		"nativeSrc": "8693:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8693:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8713:3:4",
																		"nodeType": "YulLiteral",
																		"src": "8713:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8686:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8686:6:4"
																},
																"nativeSrc": "8686:31:4",
																"nodeType": "YulFunctionCall",
																"src": "8686:31:4"
															},
															"nativeSrc": "8686:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "8686:31:4"
														},
														{
															"nativeSrc": "8726:65:4",
															"nodeType": "YulAssignment",
															"src": "8726:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8763:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8763:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8775:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8775:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8786:3:4",
																				"nodeType": "YulLiteral",
																				"src": "8786:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8771:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8771:3:4"
																		},
																		"nativeSrc": "8771:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8771:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "8734:28:4",
																	"nodeType": "YulIdentifier",
																	"src": "8734:28:4"
																},
																"nativeSrc": "8734:57:4",
																"nodeType": "YulFunctionCall",
																"src": "8734:57:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8726:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8726:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "8274:523:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8422:9:4",
														"nodeType": "YulTypedName",
														"src": "8422:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8433:6:4",
														"nodeType": "YulTypedName",
														"src": "8433:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8441:6:4",
														"nodeType": "YulTypedName",
														"src": "8441:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8449:6:4",
														"nodeType": "YulTypedName",
														"src": "8449:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8457:6:4",
														"nodeType": "YulTypedName",
														"src": "8457:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8468:4:4",
														"nodeType": "YulTypedName",
														"src": "8468:4:4",
														"type": ""
													}
												],
												"src": "8274:523:4"
											},
											{
												"body": {
													"nativeSrc": "8882:169:4",
													"nodeType": "YulBlock",
													"src": "8882:169:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "8928:16:4",
																"nodeType": "YulBlock",
																"src": "8928:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8937:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8937:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8940:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8940:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8930:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8930:6:4"
																			},
																			"nativeSrc": "8930:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8930:12:4"
																		},
																		"nativeSrc": "8930:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8930:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8903:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "8903:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8912:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8912:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8899:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8899:3:4"
																		},
																		"nativeSrc": "8899:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8899:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8924:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8924:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8895:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8895:3:4"
																},
																"nativeSrc": "8895:32:4",
																"nodeType": "YulFunctionCall",
																"src": "8895:32:4"
															},
															"nativeSrc": "8892:52:4",
															"nodeType": "YulIf",
															"src": "8892:52:4"
														},
														{
															"nativeSrc": "8953:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8953:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8972:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8972:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8966:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8966:5:4"
																},
																"nativeSrc": "8966:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8966:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8957:5:4",
																	"nodeType": "YulTypedName",
																	"src": "8957:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9015:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9015:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "8991:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "8991:23:4"
																},
																"nativeSrc": "8991:30:4",
																"nodeType": "YulFunctionCall",
																"src": "8991:30:4"
															},
															"nativeSrc": "8991:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "8991:30:4"
														},
														{
															"nativeSrc": "9030:15:4",
															"nodeType": "YulAssignment",
															"src": "9030:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "9040:5:4",
																"nodeType": "YulIdentifier",
																"src": "9040:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9030:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9030:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "8802:249:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8848:9:4",
														"nodeType": "YulTypedName",
														"src": "8848:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8859:7:4",
														"nodeType": "YulTypedName",
														"src": "8859:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8871:6:4",
														"nodeType": "YulTypedName",
														"src": "8871:6:4",
														"type": ""
													}
												],
												"src": "8802:249:4"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_Creature_$16_memory_ptr__to_t_struct$_Creature_$16_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 84)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4ECBC664 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xF052D65A EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xFD499A74 EQ PUSH2 0x42D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x36C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xA1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x33A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4ECBC664 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x3095FE91 GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x3095FE91 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x42E29B4E EQ PUSH2 0x276 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x2A0C5221 EQ PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x127D JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x12DE JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x20F JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x8FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B4 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 DUP2 AND SWAP3 PUSH1 0x40 DUP4 SWAP1 SHR DUP3 AND SWAP3 PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 SWAP3 AND SWAP2 PUSH1 0xC0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x91D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FE JUMP JUMPDEST PUSH2 0xAB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0xB12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xBCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH2 0x3EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x438 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x447 CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP2 PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x186 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x4DB JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x50F JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x524 SWAP1 PUSH2 0x146A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x550 SWAP1 PUSH2 0x146A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x572 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5AF DUP3 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x5DC JUMPI PUSH2 0x5DC PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x603 DUP3 DUP3 PUSH1 0x1 PUSH2 0xD31 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x611 DUP3 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x651 JUMPI PUSH2 0x651 PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x6C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6C9 JUMPI PUSH2 0x6C9 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x75F JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x75D JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0x75D JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP1 PUSH0 SUB PUSH2 0x7C0 JUMPI PUSH2 0x7C0 PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x7D3 DUP2 PUSH2 0xEA3 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 SWAP1 DUP2 ADD SLOAD DUP6 DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP4 DUP1 DUP5 SHR DUP3 AND SWAP4 PUSH1 0x80 DUP3 DUP2 SHR DUP5 AND SWAP5 PUSH1 0xC0 SWAP4 DUP5 SHR SWAP5 DUP1 DUP3 AND SWAP5 SWAP4 DUP3 SWAP1 SHR DUP2 AND SWAP4 SWAP3 DUP3 SWAP1 SHR AND SWAP2 SHR DUP1 DUP3 PUSH2 0x82F DUP6 DUP8 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x839 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x843 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST DUP6 DUP8 PUSH2 0x84F DUP11 DUP13 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST GT ISZERO PUSH2 0x8AF JUMPI PUSH2 0x874 DUP12 PUSH1 0x1 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x87E DUP11 PUSH0 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP11 SWAP1 DUP13 SWAP1 PUSH32 0x37FDF7CDA6EC1C848E98866FE5E1F781B2B5976A1D79C7770394E65503CE92AF SWAP1 PUSH0 SWAP1 LOG3 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x8B9 DUP12 PUSH0 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x8C4 DUP11 PUSH1 0x1 PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP11 SWAP1 DUP13 SWAP1 PUSH32 0x37FDF7CDA6EC1C848E98866FE5E1F781B2B5976A1D79C7770394E65503CE92AF SWAP1 PUSH0 SWAP1 LOG3 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x918 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PREVRANDAO DUP3 DUP5 ADD MSTORE CALLER PUSH1 0x60 DUP2 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP5 ADD MSTORE DUP4 MLOAD PUSH1 0x54 DUP2 DUP6 SUB ADD DUP2 MSTORE PUSH1 0x74 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH1 0xF4 DUP5 ADD SWAP1 SWAP5 MSTORE PUSH1 0x9 SLOAD DUP3 MSTORE PUSH1 0x94 DUP4 ADD MSTORE SWAP1 PUSH1 0xB4 ADD PUSH2 0x9EE PUSH2 0x985 PUSH2 0x3E8 DUP6 PUSH2 0x14DD JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x992 DUP2 DUP8 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x9AC PUSH3 0xF4240 DUP9 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x9C7 PUSH4 0x3B9ACA00 DUP10 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0x9D1 SWAP2 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xC0 SHL DUP4 PUSH1 0x80 SHL DUP6 PUSH1 0x40 SHL DUP8 PUSH0 SHL OR OR OR SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 MSTORE PUSH1 0x9 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH2 0xA60 CALLER PUSH1 0x1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 SLOAD ADD PUSH1 0x9 SSTORE PUSH2 0xA70 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x9 SLOAD PUSH32 0xFCE6B98DB3CC5152281E5D3E4C7332ADFB0D4B574CC5723DC73792F7624043CC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH2 0x50F DUP3 PUSH2 0xE14 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAED JUMPI PUSH2 0xAED PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x524 SWAP1 PUSH2 0x146A JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB97 DUP5 DUP5 DUP5 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBB3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBD8 DUP3 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0xC05 JUMPI PUSH2 0xC05 PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST PUSH0 PUSH2 0xC1A PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0xC38 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xC63 JUMP JUMPDEST DUP1 PUSH2 0xC42 DUP5 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC53 SWAP3 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC9A PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xD24 JUMPI PUSH0 JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xD1A JUMPI PUSH2 0xD13 DUP4 PUSH2 0x152E JUMP JUMPDEST SWAP3 POP PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD3B DUP4 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xD53 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDAB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xDAB JUMPI PUSH2 0xDAB PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH0 SUB PUSH2 0xE81 JUMPI PUSH0 SLOAD DUP3 LT PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST JUMPDEST POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xE42 JUMPI PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0xE6C JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7C PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0xE93 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x233DE59500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH1 0x80 SHR DUP4 PUSH1 0x1 DUP2 EQ PUSH2 0xF35 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST POP PUSH2 0xF49 DUP3 DUP3 PUSH1 0x80 SHL OR SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x603 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xFA5 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFDF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xFDC SWAP2 DUP2 ADD SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1032 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x102A JUMPI PUSH2 0x102A PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x1069 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109D DUP4 DUP4 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x918 JUMPI PUSH0 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0x10C5 PUSH0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x10D9 JUMPI PUSH2 0x10D9 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0xD29 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x10B3 JUMPI DUP2 PUSH0 SLOAD EQ PUSH2 0x10EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x1127 JUMPI PUSH2 0x1127 PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP9 EQ PUSH1 0xE1 SHL OR DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP7 MUL ADD SWAP1 SSTORE SWAP1 DUP2 SWAP1 SUB PUSH2 0x119E JUMPI PUSH2 0x119E PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH2 0xD29 JUMP JUMPDEST DUP2 DUP4 ADD DUP3 JUMPDEST DUP1 DUP4 PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0x11A3 JUMPI POP PUSH0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xEF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC63 DUP2 PUSH2 0x11E0 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xC63 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1210 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1260 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD24 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1297 DUP4 PUSH2 0x1267 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12C0 DUP5 PUSH2 0x1267 JUMP JUMPDEST SWAP3 POP PUSH2 0x12CE PUSH1 0x20 DUP6 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC63 DUP3 PUSH2 0x1267 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1328 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1331 DUP4 PUSH2 0x1267 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1345 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1377 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1380 DUP6 PUSH2 0x1267 JUMP JUMPDEST SWAP4 POP PUSH2 0x138E PUSH1 0x20 DUP7 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13D6 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13FE JUMPI PUSH2 0x13FE PUSH2 0x1350 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1416 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1453 DUP4 PUSH2 0x1267 JUMP JUMPDEST SWAP2 POP PUSH2 0x1461 PUSH1 0x20 DUP5 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x147E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x149C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x50F JUMPI PUSH2 0x50F PUSH2 0x14A2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x14EB JUMPI PUSH2 0x14EB PUSH2 0x14C9 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x14FE JUMPI PUSH2 0x14FE PUSH2 0x14C9 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1048 PUSH2 0x1528 DUP4 DUP7 PUSH2 0x1503 JUMP JUMPDEST DUP5 PUSH2 0x1503 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x153C JUMPI PUSH2 0x153C PUSH2 0x14A2 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1574 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1210 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x158E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC63 DUP2 PUSH2 0x11E0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xC DUP12 PUSH22 0x8F9DAE14C894A2D9DB75EAA65F8D1B9E5401BCD7AFEF ORIGIN SWAP3 DUP7 0xB3 0xD5 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "252:7253:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10689:630:2;;;;;;;;;;-1:-1:-1;10689:630:2;;;;;:::i;:::-;;:::i;:::-;;;611:14:4;;604:22;586:41;;574:2;559:18;10689:630:2;;;;;;;;11573:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;18636:223::-;;;;;;;;;;-1:-1:-1;18636:223:2;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1528:55:4;;;1510:74;;1498:2;1483:18;18636:223:2;1364:226:4;18364:122:2;;;;;;:::i;:::-;;:::i;:::-;;6890:564;;;;;;;;;;-1:-1:-1;7328:12:2;;6951:14;7312:13;:28;6890:564;;;2201:25:4;;;2189:2;2174:18;6890:564:2;2055:177:4;22796:3447:2;;;;;;:::i;:::-;;:::i;5739:1166:0:-;;;;;;;;;;-1:-1:-1;5739:1166:0;;;;;:::i;:::-;;:::i;1563:101::-;;;;;;;;;;-1:-1:-1;1642:14:0;;1563:101;;26334:187:2;;;;;;:::i;:::-;;:::i;2939:645:0:-;;;;;;;;;;-1:-1:-1;2939:645:0;;;;;:::i;:::-;3286:18;3249:56;;;;3294:2;3334:30;;;3330:55;;;3423:19;3419:35;;;3415:60;;;;3513:20;3509:36;;2939:645;;;;;3054:25:4;;;3110:2;3095:18;;3088:34;;;;3138:18;;;3131:34;3196:2;3181:18;;3174:34;3041:3;3026:19;2939:645:0;2823:391:4;4728:967:0;;;;;;;;;;;;;:::i;12934:150:2:-;;;;;;;;;;-1:-1:-1;12934:150:2;;;;;:::i;:::-;;:::i;8570:239::-;;;;;;;;;;-1:-1:-1;8570:239:2;;;;;:::i;:::-;;:::i;11742:102::-;;;;;;;;;;;;;:::i;19186:231::-;;;;;;;;;;-1:-1:-1;19186:231:2;;;;;:::i;:::-;;:::i;27102:405::-;;;;;;:::i;:::-;;:::i;11945:322::-;;;;;;;;;;-1:-1:-1;11945:322:2;;;;;:::i;:::-;;:::i;19567:162::-;;;;;;;;;;-1:-1:-1;19567:162:2;;;;;:::i;:::-;-1:-1:-1;;;;;19687:25:2;;;19664:4;19687:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;19567:162;1672:112:0;;;;;;;;;;-1:-1:-1;1672:112:0;;;;;:::i;:::-;;:::i;:::-;;;;;;5572:13:4;;5554:32;;5646:4;5634:17;;;5628:24;-1:-1:-1;;;;;5624:73:4;5602:20;;;5595:103;5754:4;5742:17;;;5736:24;5714:20;;;5707:54;5817:4;5805:17;;;5799:24;5777:20;;;5770:54;;;;5541:3;5526:19;;5359:471;4258:462:0;;;;;;;;;;-1:-1:-1;4258:462:0;;;;;:::i;:::-;4518:19;4482:56;;;4526:3;4648:32;;;;;4258:462;;;;;6009:25:4;;;6065:2;6050:18;;6043:34;;;;5982:18;4258:462:0;5835:248:4;10689:630:2;10774:4;11092:25;-1:-1:-1;;;;;;11092:25:2;;;;:101;;-1:-1:-1;11168:25:2;-1:-1:-1;;;;;;11168:25:2;;;11092:101;:177;;;-1:-1:-1;11244:25:2;-1:-1:-1;;;;;;11244:25:2;;;11092:177;11073:196;10689:630;-1:-1:-1;;10689:630:2:o;11573:98::-;11627:13;11659:5;11652:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11573:98;:::o;18636:223::-;18712:7;18736:16;18744:7;18736;:16::i;:::-;18731:73;;18754:50;18762:41;18754:7;:50::i;:::-;-1:-1:-1;18822:24:2;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;18822:30:2;;18636:223::o;18364:122::-;18452:27;18461:2;18465:7;18474:4;18452:8;:27::i;:::-;18364:122;;:::o;22796:3447::-;22933:27;22963;22982:7;22963:18;:27::i;:::-;-1:-1:-1;;;;;23115:22:2;;;;22933:57;;-1:-1:-1;23173:45:2;;;;23169:95;;23220:44;23228:35;23220:7;:44::i;:::-;23276:27;21929:24;;;:15;:24;;;;;22153:26;;47819:10;21566:30;;;-1:-1:-1;;;;;21263:28:2;;21544:20;;;21541:56;23459:188;;-1:-1:-1;;;;;19687:25:2;;19664:4;19687:25;;;:18;:25;;;;;;;;47819:10;19687:35;;;;;;;;;;23546:101;;23596:51;23604:42;23596:7;:51::i;:::-;23790:15;23787:157;;;23928:1;23907:19;23900:30;23787:157;-1:-1:-1;;;;;24316:24:2;;;;;;;:18;:24;;;;;;24314:26;;-1:-1:-1;;24314:26:2;;;24384:22;;;;;;;;;24382:24;;-1:-1:-1;24382:24:2;;;17492:11;17467:23;17463:41;17450:63;-1:-1:-1;;;17450:63:2;24670:26;;;;:17;:26;;;;;:172;;;;-1:-1:-1;;;24959:47:2;;:52;;24955:617;;25063:1;25053:11;;25031:19;25184:30;;;:17;:30;;;;;;:35;;25180:378;;25320:13;;25305:11;:28;25301:239;;25465:30;;;;:17;:30;;;;;:52;;;25301:239;25013:559;24955:617;-1:-1:-1;;;;;25700:20:2;;26071:7;25700:20;26003:4;25946:25;25681:16;;25814:292;26129:8;26141:1;26129:13;26125:58;;26144:39;26152:30;26144:7;:39::i;:::-;22923:3320;;;;22796:3447;;;:::o;5739:1166:0:-;5835:15;1424:23;1444:2;1424:19;:23::i;:::-;5864:21:::1;5981:26:::0;;;:9:::1;:26;::::0;;;;;:36:::1;::::0;;::::1;::::0;6159:29;;;;;;;:39:::1;::::0;3286:18;3249:56;;;;3334:30;;;3330:55;;;3423:19;3419:35;;;3415:60;;;3513:20;3509:36;;;;3249:56;;;;3334:30;;;;3330:55;;;3419:35;;;;3415:60;;3509:36;;3415:60;6412:34:::1;3330:55:::0;3249:56;6412:34:::1;:::i;:::-;:57;;;;:::i;:::-;:80;;;;:::i;:::-;6392:17:::0;6372;6341:28:::1;6357:12:::0;6341:13;:28:::1;:::i;:::-;:48;;;;:::i;:::-;:68;;;;:::i;:::-;:151;6337:561;;;6509:42;6529:15;6546:4;6509:19;:42::i;:::-;6566:46;6586:18;6606:5;6566:19;:46::i;:::-;6632:49;::::0;6662:18;;6645:15;;6632:49:::1;::::0;;;::::1;6337:561;;;6714:43;6734:15;6751:5;6714:19;:43::i;:::-;6772:45;6792:18;6812:4;6772:19;:45::i;:::-;6837:49;::::0;6867:18;;6850:15;;6837:49:::1;::::0;;;::::1;6337:561;5852:1053;;;;;;;;5739:1166:::0;;;:::o;26334:187:2:-;26475:39;26492:4;26498:2;26502:7;26475:39;;;;;;;;;;;;:16;:39::i;:::-;26334:187;;;:::o;4728:967:0:-;4813:65;;;4830:15;4813:65;;;;7034:19:4;;;;4847:16:0;7069:12:4;;;7062:28;47819:10:2;7128:2:4;7124:15;;;-1:-1:-1;;7120:53:4;7106:12;;;7099:75;4813:65:0;;;;;;;;;7190:12:4;;;4813:65:0;;;4803:76;;;;;;;4921:406;;;;;;4944:14;;4921:406;;;;;;7190:12:4;4921:406:0;;5095:184;5127:11;5134:4;4803:76;5127:11;:::i;:::-;5173:4;5158:11;5173:4;5158;:11;:::i;:::-;5157:20;;;;:::i;:::-;5215:4;5197:14;5204:7;5197:4;:14;:::i;:::-;5196:23;;;;:::i;:::-;5260:4;5239:17;5246:10;5239:4;:17;:::i;:::-;5238:26;;;;:::i;:::-;2168:17;2813:12;2791:20;2787:39;2728:12;2707:19;2703:38;2641:7;2625:14;2621:28;2581:8;2564:15;2560:30;2527:149;2498:266;2473:372;2442:403;;1997:866;;;;;;;5095:184;4921:406;;;;5311:1;4921:406;;4903:14;;4893:25;;;;:9;:25;;;;;;;;;:434;;;;;;;;;;;;;-1:-1:-1;;4893:434:0;-1:-1:-1;;;;;4893:434:0;;;;;;;;;;;;;;;;;;;;;;;;;;;5365:26;47819:10:2;5389:1:0;5365:9;:26::i;:::-;5579:1;5535:19;5529:26;5503:96;5464:19;5439:175;5674:12;47819:10:2;;47733:103;5674:12:0;-1:-1:-1;;;;;5642:45:0;5658:14;;5642:45;;;;;;;;;;4769:926;4728:967::o;12934:150:2:-;13006:7;13048:27;13067:7;13048:18;:27::i;8570:239::-;8642:7;-1:-1:-1;;;;;8665:19:2;;8661:69;;8686:44;8694:35;8686:7;:44::i;:::-;-1:-1:-1;;;;;;8747:25:2;;;;;:18;:25;;;;;;1518:13;8747:55;;8570:239::o;11742:102::-;11798:13;11830:7;11823:14;;;;;:::i;19186:231::-;47819:10;19280:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;19280:49:2;;;;;;;;;;;;:60;;-1:-1:-1;;19280:60:2;;;;;;;;;;19355:55;;586:41:4;;;19280:49:2;;47819:10;19355:55;;559:18:4;19355:55:2;;;;;;;19186:231;;:::o;27102:405::-;27271:31;27284:4;27290:2;27294:7;27271:12;:31::i;:::-;-1:-1:-1;;;;;27316:14:2;;;:19;27312:189;;27354:56;27385:4;27391:2;27395:7;27404:5;27354:30;:56::i;:::-;27349:152;;27430:56;-1:-1:-1;;;27430:7:2;:56::i;:::-;27102:405;;;;:::o;11945:322::-;12018:13;12048:16;12056:7;12048;:16::i;:::-;12043:68;;12066:45;12074:36;12066:7;:45::i;:::-;12122:21;12146:10;12588:9;;;;;;;;;-1:-1:-1;12588:9:2;;;12512:92;12146:10;12122:34;;12179:7;12173:21;12198:1;12173:26;:87;;;;;;;;;;;;;;;;;12226:7;12235:18;12245:7;12235:9;:18::i;:::-;12209:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12173:87;12166:94;11945:322;-1:-1:-1;;;11945:322:2:o;1672:112:0:-;1728:15;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1728:15:0;-1:-1:-1;1763:13:0;;;;:9;:13;;;;;;;;;1756:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;1756:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:112::o;19978:465:2:-;20043:11;20231:13;;20221:7;:23;20217:210;;;20264:14;20296:60;-1:-1:-1;20313:26:2;;;;:17;:26;;;;;;;20303:42;;;20296:60;;20347:9;;;:::i;:::-;;;20296:60;;;-1:-1:-1;;;20383:24:2;:29;;-1:-1:-1;20217:210:2;19978:465;;;:::o;49703:160::-;49802:13;49796:4;49789:27;49842:4;49836;49829:18;41333:460;41457:13;41473:16;41481:7;41473;:16::i;:::-;41457:32;;41504:13;:45;;;;-1:-1:-1;47819:10:2;-1:-1:-1;;;;;41521:28:2;;;;41504:45;41500:198;;;-1:-1:-1;;;;;19687:25:2;;19664:4;19687:25;;;:18;:25;;;;;;;;47819:10;19687:35;;;;;;;;;;41563:135;;41632:51;41640:42;41632:7;:51::i;:::-;41708:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;41708:35:2;-1:-1:-1;;;;;41708:35:2;;;;;;;;;41758:28;;41708:24;;41758:28;;;;;;;41447:346;41333:460;;;:::o;14380:2173::-;14528:26;;;;:17;:26;;;;;;14847:6;14857:1;14847:11;14843:1270;;14893:13;;14882:7;:24;14878:77;;14908:47;-1:-1:-1;;;14908:7:2;:47::i;:::-;15502:597;-1:-1:-1;;;15596:9:2;15578:28;;;;:17;:28;;;;;;15650:25;;15502:597;15650:25;-1:-1:-1;;;15701:6:2;:24;15729:1;15701:29;15697:48;;14380:2173;;;:::o;15697:48::-;16033:47;-1:-1:-1;;;16033:7:2;:47::i;:::-;15502:597;;14843:1270;-1:-1:-1;;;16435:6:2;:24;16463:1;16435:29;16431:48;;14380:2173;;;:::o;16431:48::-;16499:47;-1:-1:-1;;;16499:7:2;:47::i;6913:139:0:-;6982:13;;;;:9;:13;;;;;:19;;;-1:-1:-1;;;;;6982:19:0;47819:10:2;6982:35:0;6978:66;;7026:18;;;;;;;;;;;;;;6978:66;6913:139;:::o;7060:442::-;7138:25;7166:21;;;:9;:21;;;;;7250;;;;4518:19;4482:56;;;4526:3;4648:32;7316:3;7338:4;7333:34;;;;7413:1;7405:6;7401:14;7391:24;;7309:108;;7333:34;7363:1;7357:4;7353:12;7345:20;;7309:108;;7464:30;7481:4;7487:6;4123:13;4119:26;4049:115;;3798:384;7464:30;7440:8;:21;;:54;;;;7127:375;;;7060:442;;:::o;36661:110:2:-;36737:27;36747:2;36751:8;36737:27;;;;;;;;;;;;:9;:27::i;29533:673::-;29711:88;;-1:-1:-1;;;29711:88:2;;29691:4;;-1:-1:-1;;;;;29711:45:2;;;;;:88;;47819:10;;29778:4;;29784:7;;29793:5;;29711:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29711:88:2;;;;;;;;-1:-1:-1;;29711:88:2;;;;;;;;;;;;:::i;:::-;;;29707:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29989:6;:13;30006:1;29989:18;29985:113;;30027:56;-1:-1:-1;;;30027:7:2;:56::i;:::-;30168:6;30162:13;30153:6;30149:2;30145:15;30138:38;29707:493;-1:-1:-1;;;;;;29867:64:2;-1:-1:-1;;;29867:64:2;;-1:-1:-1;29707:493:2;29533:673;;;;;;:::o;47933:1708::-;47998:17;48426:4;48419;48413:11;48409:22;48516:1;48510:4;48503:15;48589:4;48586:1;48582:12;48575:19;;;48669:1;48664:3;48657:14;48770:3;49004:5;48986:419;49051:1;49046:3;49042:11;49035:18;;49219:2;49213:4;49209:13;49205:2;49201:22;49196:3;49188:36;49311:2;49301:13;;49366:25;48986:419;49366:25;-1:-1:-1;49433:13:2;;;-1:-1:-1;;49546:14:2;;;49606:19;;;49546:14;47933:1708;-1:-1:-1;47933:1708:2:o;35816:766::-;35942:19;35948:2;35952:8;35942:5;:19::i;:::-;-1:-1:-1;;;;;36000:14:2;;;:19;35996:570;;36039:11;36053:13;36100:14;;;36132:238;36162:62;36201:1;36205:2;36209:7;;;;;;36218:5;36162:30;:62::i;:::-;36157:174;;36252:56;-1:-1:-1;;;36252:7:2;:56::i;:::-;36365:3;36357:5;:11;36132:238;;36538:3;36521:13;;:20;36517:34;;36543:8;;;36517:34;36021:545;;35816:766;;;:::o;30652:2343::-;30724:20;30747:13;;;30774;;;30770:53;;30789:34;30797:25;30789:7;:34::i;:::-;31323:31;;;;:17;:31;;;;;;;;-1:-1:-1;;;;;17320:28:2;;17492:11;17467:23;17463:41;17925:1;17912:15;;17886:24;17882:46;17460:52;17450:63;;31323:170;;;31704:22;;;:18;:22;;;;;:71;;31742:32;31730:45;;31704:71;;;17320:28;31960:13;;;31956:54;;31975:35;31983:26;31975:7;:35::i;:::-;32039:23;;;;32213:662;32623:7;32580:8;32536:1;32471:25;32409:1;32345;32315:351;32870:3;32857:9;;;;;;:16;32213:662;;-1:-1:-1;32889:13:2;:19;-1:-1:-1;26334:187:2;;;:::o;14:177:4:-;-1:-1:-1;;;;;;92:5:4;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:300::-;691:3;729:5;723:12;756:6;751:3;744:19;812:6;805:4;798:5;794:16;787:4;782:3;778:14;772:47;864:1;857:4;848:6;843:3;839:16;835:27;828:38;927:4;920:2;916:7;911:2;903:6;899:15;895:29;890:3;886:39;882:50;875:57;;;638:300;;;;:::o;943:231::-;1092:2;1081:9;1074:21;1055:4;1112:56;1164:2;1153:9;1149:18;1141:6;1112:56;:::i;1179:180::-;1238:6;1291:2;1279:9;1270:7;1266:23;1262:32;1259:52;;;1307:1;1304;1297:12;1259:52;-1:-1:-1;1330:23:4;;1179:180;-1:-1:-1;1179:180:4:o;1595:196::-;1663:20;;-1:-1:-1;;;;;1712:54:4;;1702:65;;1692:93;;1781:1;1778;1771:12;1796:254;1864:6;1872;1925:2;1913:9;1904:7;1900:23;1896:32;1893:52;;;1941:1;1938;1931:12;1893:52;1964:29;1983:9;1964:29;:::i;:::-;1954:39;2040:2;2025:18;;;;2012:32;;-1:-1:-1;;;1796:254:4:o;2237:328::-;2314:6;2322;2330;2383:2;2371:9;2362:7;2358:23;2354:32;2351:52;;;2399:1;2396;2389:12;2351:52;2422:29;2441:9;2422:29;:::i;:::-;2412:39;;2470:38;2504:2;2493:9;2489:18;2470:38;:::i;:::-;2460:48;;2555:2;2544:9;2540:18;2527:32;2517:42;;2237:328;;;;;:::o;2570:248::-;2638:6;2646;2699:2;2687:9;2678:7;2674:23;2670:32;2667:52;;;2715:1;2712;2705:12;2667:52;-1:-1:-1;;2738:23:4;;;2808:2;2793:18;;;2780:32;;-1:-1:-1;2570:248:4:o;3219:186::-;3278:6;3331:2;3319:9;3310:7;3306:23;3302:32;3299:52;;;3347:1;3344;3337:12;3299:52;3370:29;3389:9;3370:29;:::i;3410:347::-;3475:6;3483;3536:2;3524:9;3515:7;3511:23;3507:32;3504:52;;;3552:1;3549;3542:12;3504:52;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3654:2;3643:9;3639:18;3626:32;3701:5;3694:13;3687:21;3680:5;3677:32;3667:60;;3723:1;3720;3713:12;3667:60;3746:5;3736:15;;;3410:347;;;;;:::o;3762:184::-;-1:-1:-1;;;3811:1:4;3804:88;3911:4;3908:1;3901:15;3935:4;3932:1;3925:15;3951:1138;4046:6;4054;4062;4070;4123:3;4111:9;4102:7;4098:23;4094:33;4091:53;;;4140:1;4137;4130:12;4091:53;4163:29;4182:9;4163:29;:::i;:::-;4153:39;;4211:38;4245:2;4234:9;4230:18;4211:38;:::i;:::-;4201:48;;4296:2;4285:9;4281:18;4268:32;4258:42;;4351:2;4340:9;4336:18;4323:32;4374:18;4415:2;4407:6;4404:14;4401:34;;;4431:1;4428;4421:12;4401:34;4469:6;4458:9;4454:22;4444:32;;4514:7;4507:4;4503:2;4499:13;4495:27;4485:55;;4536:1;4533;4526:12;4485:55;4572:2;4559:16;4594:2;4590;4587:10;4584:36;;;4600:18;;:::i;:::-;4675:2;4669:9;4643:2;4729:13;;-1:-1:-1;;4725:22:4;;;4749:2;4721:31;4717:40;4705:53;;;4773:18;;;4793:22;;;4770:46;4767:72;;;4819:18;;:::i;:::-;4859:10;4855:2;4848:22;4894:2;4886:6;4879:18;4934:7;4929:2;4924;4920;4916:11;4912:20;4909:33;4906:53;;;4955:1;4952;4945:12;4906:53;5011:2;5006;5002;4998:11;4993:2;4985:6;4981:15;4968:46;5056:1;5051:2;5046;5038:6;5034:15;5030:24;5023:35;5077:6;5067:16;;;;;;;3951:1138;;;;;;;:::o;5094:260::-;5162:6;5170;5223:2;5211:9;5202:7;5198:23;5194:32;5191:52;;;5239:1;5236;5229:12;5191:52;5262:29;5281:9;5262:29;:::i;:::-;5252:39;;5310:38;5344:2;5333:9;5329:18;5310:38;:::i;:::-;5300:48;;5094:260;;;;;:::o;6088:437::-;6167:1;6163:12;;;;6210;;;6231:61;;6285:4;6277:6;6273:17;6263:27;;6231:61;6338:2;6330:6;6327:14;6307:18;6304:38;6301:218;;-1:-1:-1;;;6372:1:4;6365:88;6476:4;6473:1;6466:15;6504:4;6501:1;6494:15;6301:218;;6088:437;;;:::o;6530:184::-;-1:-1:-1;;;6579:1:4;6572:88;6679:4;6676:1;6669:15;6703:4;6700:1;6693:15;6719:125;6784:9;;;6805:10;;;6802:36;;;6818:18;;:::i;7213:184::-;-1:-1:-1;;;7262:1:4;7255:88;7362:4;7359:1;7352:15;7386:4;7383:1;7376:15;7402:112;7434:1;7460;7450:35;;7465:18;;:::i;:::-;-1:-1:-1;7499:9:4;;7402:112::o;7519:120::-;7559:1;7585;7575:35;;7590:18;;:::i;:::-;-1:-1:-1;7624:9:4;;7519:120::o;7644:212::-;7686:3;7724:5;7718:12;7768:6;7761:4;7754:5;7750:16;7745:3;7739:36;7830:1;7794:16;;7819:13;;;-1:-1:-1;7794:16:4;;7644:212;-1:-1:-1;7644:212:4:o;7861:267::-;8040:3;8065:57;8091:30;8117:3;8109:6;8091:30;:::i;:::-;8083:6;8065:57;:::i;8133:136::-;8172:3;8200:5;8190:39;;8209:18;;:::i;:::-;-1:-1:-1;;;8245:18:4;;8133:136::o;8274:523::-;8468:4;-1:-1:-1;;;;;8578:2:4;8570:6;8566:15;8555:9;8548:34;8630:2;8622:6;8618:15;8613:2;8602:9;8598:18;8591:43;;8670:6;8665:2;8654:9;8650:18;8643:34;8713:3;8708:2;8697:9;8693:18;8686:31;8734:57;8786:3;8775:9;8771:19;8763:6;8734:57;:::i;:::-;8726:65;8274:523;-1:-1:-1;;;;;;8274:523:4:o;8802:249::-;8871:6;8924:2;8912:9;8903:7;8899:23;8895:32;8892:52;;;8940:1;8937;8930:12;8892:52;8972:9;8966:16;8991:30;9015:5;8991:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1116600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2636",
								"battle(uint256,uint256)": "infinite",
								"createRandomCreature()": "infinite",
								"getApproved(uint256)": "infinite",
								"getCreature(uint256)": "9221",
								"getNextCreatureId()": "2336",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26671",
								"supportsInterface(bytes4)": "536",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4475",
								"transferFrom(address,address,uint256)": "infinite",
								"unpackBattleRecord(uint256)": "406",
								"unpackGameStats(uint256)": "479"
							},
							"internal": {
								"_checkCreatureOwned(uint256)": "infinite",
								"_updateBattleRecord(uint256,bool)": "24420",
								"packBattleRecord(uint256,uint256)": "infinite",
								"packGameStats(uint256,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 7505,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1555,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4469676974757265"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1111D5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5335,
									"end": 5340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5327,
									"end": 5332,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 5327,
									"end": 5340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5350,
									"end": 5357,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 5360,
									"end": 5367,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5350,
									"end": 5357,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 5350,
									"end": 5367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6022,
									"end": 6029,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5377,
									"end": 5408,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5377,
									"end": 5408,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1546,
									"end": 1547,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1529,
									"end": 1543,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1529,
									"end": 1547,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 4,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 7505,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e0c8b758f9dae14c894a2d9db75eaa65f8d1b9e5401bcd7afef329286b3d5c964736f6c63430008190033",
									".code": [
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "4ECBC664"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "F052D65A"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "FD499A74"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "4ECBC664"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "3095FE91"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "3095FE91"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "42E29B4E"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "2A0C5221"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 252,
											"end": 7505,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 10689,
											"end": 11319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 10689,
											"end": 11319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 611,
											"end": 625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 604,
											"end": 626,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 11573,
											"end": 11671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 18636,
											"end": 18859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 18636,
											"end": 18859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 18364,
											"end": 18486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 18364,
											"end": 18486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6951,
											"end": 6965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7325,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2055,
											"end": 2232,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 22796,
											"end": 26243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 22796,
											"end": 26243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5739,
											"end": 6905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5739,
											"end": 6905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1642,
											"end": 1656,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1642,
											"end": 1656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1563,
											"end": 1664,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 26334,
											"end": 26521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 26334,
											"end": 26521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2939,
											"end": 3584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3442,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3419,
											"end": 3454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3454,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3475,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 3509,
											"end": 3545,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3079,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3079,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3079,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3110,
											"end": 3112,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3122,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3122,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3131,
											"end": 3165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3198,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3181,
											"end": 3199,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3181,
											"end": 3199,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3044,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3026,
											"end": 3045,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2823,
											"end": 3214,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4728,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 12934,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 12934,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 8570,
											"end": 8809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8570,
											"end": 8809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11742,
											"end": 11844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 19186,
											"end": 19417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 19186,
											"end": 19417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 27102,
											"end": 27507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 27102,
											"end": 27507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 11945,
											"end": 12267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 11945,
											"end": 12267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 19567,
											"end": 19729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19664,
											"end": 19668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1672,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1672,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5572,
											"end": 5585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5572,
											"end": 5585,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5554,
											"end": 5586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5554,
											"end": 5586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5650,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5634,
											"end": 5651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5652,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5624,
											"end": 5697,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5595,
											"end": 5698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5736,
											"end": 5760,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5761,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5817,
											"end": 5821,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5805,
											"end": 5822,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5805,
											"end": 5822,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5805,
											"end": 5822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5823,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5541,
											"end": 5544,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5526,
											"end": 5545,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5359,
											"end": 5830,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4258,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4518,
											"end": 4537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4482,
											"end": 4538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4482,
											"end": 4538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4482,
											"end": 4538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4526,
											"end": 4529,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6009,
											"end": 6034,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6009,
											"end": 6034,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6009,
											"end": 6034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6065,
											"end": 6067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6043,
											"end": 6077,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5835,
											"end": 6083,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10774,
											"end": 10778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11073,
											"end": 11269,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10689,
											"end": 11319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11640,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11659,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 11652,
											"end": 11664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 11652,
											"end": 11664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18712,
											"end": 18719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18736,
											"end": 18752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 18744,
											"end": 18751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18736,
											"end": 18743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 18736,
											"end": 18752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18736,
											"end": 18752,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 18736,
											"end": 18752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18731,
											"end": 18804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 18731,
											"end": 18804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18754,
											"end": 18804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 18762,
											"end": 18803,
											"name": "PUSH",
											"source": 2,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18754,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 18754,
											"end": 18804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18754,
											"end": 18804,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 18754,
											"end": 18804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18837,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18852,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18822,
											"end": 18852,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18452,
											"end": 18479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 18461,
											"end": 18463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18465,
											"end": 18472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18474,
											"end": 18478,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 18452,
											"end": 18460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 18452,
											"end": 18479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18452,
											"end": 18479,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 18452,
											"end": 18479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22933,
											"end": 22960,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22963,
											"end": 22990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 22982,
											"end": 22989,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22963,
											"end": 22981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 22963,
											"end": 22990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22963,
											"end": 22990,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 22963,
											"end": 22990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 22933,
											"end": 22990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22933,
											"end": 22990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 23169,
											"end": 23264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 23169,
											"end": 23264,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23220,
											"end": 23264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 23228,
											"end": 23263,
											"name": "PUSH",
											"source": 2,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23220,
											"end": 23227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 23220,
											"end": 23264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23220,
											"end": 23264,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 23220,
											"end": 23264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23276,
											"end": 23303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21929,
											"end": 21944,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22153,
											"end": 22179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22153,
											"end": 22179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 21566,
											"end": 21596,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21566,
											"end": 21596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21566,
											"end": 21596,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21263,
											"end": 21291,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 21263,
											"end": 21291,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21544,
											"end": 21564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21544,
											"end": 21564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21544,
											"end": 21564,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 21541,
											"end": 21597,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 23459,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 23459,
											"end": 23647,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19664,
											"end": 19668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23546,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 23546,
											"end": 23647,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23596,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 23604,
											"end": 23646,
											"name": "PUSH",
											"source": 2,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23596,
											"end": 23603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 23596,
											"end": 23647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23596,
											"end": 23647,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 23596,
											"end": 23647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23790,
											"end": 23805,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23928,
											"end": 23929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23907,
											"end": 23926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23900,
											"end": 23930,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24334,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17492,
											"end": 17503,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 17467,
											"end": 17490,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 17463,
											"end": 17504,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17513,
											"name": "OR",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17450,
											"end": 17513,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24687,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24959,
											"end": 25006,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24959,
											"end": 25006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 24959,
											"end": 25011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24959,
											"end": 25011,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25063,
											"end": 25064,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 25053,
											"end": 25064,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 25053,
											"end": 25064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 25031,
											"end": 25050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25201,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25219,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 25180,
											"end": 25558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 25180,
											"end": 25558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25320,
											"end": 25333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25333,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 25305,
											"end": 25316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25305,
											"end": 25333,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25013,
											"end": 25572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25700,
											"end": 25720,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 25700,
											"end": 25720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26071,
											"end": 26078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 25700,
											"end": 25720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26003,
											"end": 26007,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 25946,
											"end": 25971,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25681,
											"end": 25697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25681,
											"end": 25697,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 25814,
											"end": 26106,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 26129,
											"end": 26137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26141,
											"end": 26142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26129,
											"end": 26142,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 26125,
											"end": 26183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 26125,
											"end": 26183,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 26144,
											"end": 26183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 26152,
											"end": 26182,
											"name": "PUSH",
											"source": 2,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26144,
											"end": 26151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 26144,
											"end": 26183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26144,
											"end": 26183,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 26144,
											"end": 26183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5835,
											"end": 5850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1424,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 6007,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 5990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5981,
											"end": 6007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 6007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6007,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5981,
											"end": 6017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6188,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3385,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3423,
											"end": 3442,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3419,
											"end": 3454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3454,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3475,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3475,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 3509,
											"end": 3545,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3545,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3545,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3545,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3364,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3330,
											"end": 3385,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3454,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3545,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3330,
											"end": 3385,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3305,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6412,
											"end": 6446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6412,
											"end": 6446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6412,
											"end": 6469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6412,
											"end": 6469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6412,
											"end": 6469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6412,
											"end": 6492,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6492,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6412,
											"end": 6492,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6492,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6412,
											"end": 6492,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6392,
											"end": 6409,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6372,
											"end": 6389,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6357,
											"end": 6369,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6354,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6341,
											"end": 6369,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6341,
											"end": 6369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6341,
											"end": 6389,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6341,
											"end": 6389,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6341,
											"end": 6389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6341,
											"end": 6409,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6341,
											"end": 6409,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6341,
											"end": 6409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6341,
											"end": 6492,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6898,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6337,
											"end": 6898,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6509,
											"end": 6551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6529,
											"end": 6544,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6546,
											"end": 6550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6509,
											"end": 6528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6509,
											"end": 6551,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6509,
											"end": 6551,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6509,
											"end": 6551,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6586,
											"end": 6604,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6606,
											"end": 6611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6566,
											"end": 6612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6566,
											"end": 6612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6632,
											"end": 6681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6645,
											"end": 6660,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 6645,
											"end": 6660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "37FDF7CDA6EC1C848E98866FE5E1F781B2B5976A1D79C7770394E65503CE92AF"
										},
										{
											"begin": 6632,
											"end": 6681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6681,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6337,
											"end": 6898,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6337,
											"end": 6898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6734,
											"end": 6749,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6714,
											"end": 6757,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 6757,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6714,
											"end": 6757,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6792,
											"end": 6810,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 6816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6772,
											"end": 6791,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6772,
											"end": 6817,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6817,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6772,
											"end": 6817,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6837,
											"end": 6886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6865,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 6850,
											"end": 6865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "37FDF7CDA6EC1C848E98866FE5E1F781B2B5976A1D79C7770394E65503CE92AF"
										},
										{
											"begin": 6837,
											"end": 6886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6837,
											"end": 6886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6837,
											"end": 6886,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 6898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6337,
											"end": 6898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 6905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 6905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 6905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 6905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 6905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 6905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 6905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5852,
											"end": 6905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 6905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 26492,
											"end": 26496,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 26498,
											"end": 26500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 26502,
											"end": 26509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 26475,
											"end": 26514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4728,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4845,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4847,
											"end": 4863,
											"name": "PREVRANDAO",
											"source": 0
										},
										{
											"begin": 7069,
											"end": 7081,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7081,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7062,
											"end": 7090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7130,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7124,
											"end": 7139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7124,
											"end": 7139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7124,
											"end": 7139,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7120,
											"end": 7173,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7106,
											"end": 7118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7106,
											"end": 7118,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7106,
											"end": 7118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7099,
											"end": 7174,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "PUSH",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7202,
											"name": "PUSH",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 7190,
											"end": 7202,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7190,
											"end": 7202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4879,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "F4"
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4944,
											"end": 4958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7190,
											"end": 7202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "B4"
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5095,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5127,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 5134,
											"end": 5138,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 4803,
											"end": 4879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5127,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5127,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5127,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 5127,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5173,
											"end": 5177,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 5158,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 5173,
											"end": 5177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5158,
											"end": 5169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5169,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 5158,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5157,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5219,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 5197,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "PUSH",
											"source": 0,
											"value": "F4240"
										},
										{
											"begin": 5197,
											"end": 5201,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5197,
											"end": 5211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5211,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5197,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5196,
											"end": 5219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5196,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5219,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5196,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5264,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 5239,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 5246,
											"end": 5256,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5239,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5239,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5239,
											"end": 5256,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 5239,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5238,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 5238,
											"end": 5264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5238,
											"end": 5264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5238,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 5238,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5238,
											"end": 5264,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 5238,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2811,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 2787,
											"end": 2826,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2648,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2589,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2590,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2676,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2764,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2845,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2863,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2863,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2863,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5095,
											"end": 5279,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5095,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4921,
											"end": 5327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4903,
											"end": 4917,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4903,
											"end": 4917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4902,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 5327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 5365,
											"end": 5391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5391,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5365,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5535,
											"end": 5554,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5529,
											"end": 5555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5483,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5439,
											"end": 5614,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 47733,
											"end": 47836,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5674,
											"end": 5686,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 5674,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5658,
											"end": 5672,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5658,
											"end": 5672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "PUSH",
											"source": 0,
											"value": "FCE6B98DB3CC5152281E5D3E4C7332ADFB0D4B574CC5723DC73792F7624043CC"
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5687,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4769,
											"end": 5695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 5695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13006,
											"end": 13013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13048,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 13067,
											"end": 13074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 13048,
											"end": 13075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8665,
											"end": 8684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8665,
											"end": 8684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8661,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8661,
											"end": 8730,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8686,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8694,
											"end": 8729,
											"name": "PUSH",
											"source": 2,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8686,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 8686,
											"end": 8730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8686,
											"end": 8730,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8686,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8747,
											"end": 8802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11798,
											"end": 11811,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11830,
											"end": 11837,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 11823,
											"end": 11837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19298,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27271,
											"end": 27302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 27284,
											"end": 27288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27290,
											"end": 27292,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27294,
											"end": 27301,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27271,
											"end": 27283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 27271,
											"end": 27302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27271,
											"end": 27302,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 27271,
											"end": 27302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27316,
											"end": 27330,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 27316,
											"end": 27330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 27316,
											"end": 27330,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 27316,
											"end": 27335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 27312,
											"end": 27501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 27312,
											"end": 27501,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 27354,
											"end": 27410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 27385,
											"end": 27389,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27391,
											"end": 27393,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27395,
											"end": 27402,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27404,
											"end": 27409,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27354,
											"end": 27384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 27354,
											"end": 27410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27354,
											"end": 27410,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 27354,
											"end": 27410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27349,
											"end": 27501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 27349,
											"end": 27501,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 27430,
											"end": 27486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27430,
											"end": 27437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 27430,
											"end": 27486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27430,
											"end": 27486,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 27430,
											"end": 27486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12018,
											"end": 12031,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12048,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 12056,
											"end": 12063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12048,
											"end": 12055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 12048,
											"end": 12064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12048,
											"end": 12064,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 12048,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12043,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 12043,
											"end": 12111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12066,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 12074,
											"end": 12110,
											"name": "PUSH",
											"source": 2,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12066,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 12066,
											"end": 12111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12066,
											"end": 12111,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 12066,
											"end": 12111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12122,
											"end": 12143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12146,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12512,
											"end": 12604,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12146,
											"end": 12156,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 12146,
											"end": 12156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12122,
											"end": 12156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12122,
											"end": 12156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12179,
											"end": 12186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12198,
											"end": 12199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12199,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 12245,
											"end": 12252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 12235,
											"end": 12253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12253,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 12235,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 12209,
											"end": 12254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12166,
											"end": 12260,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11945,
											"end": 12267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1672,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1728,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 1743,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1728,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20043,
											"end": 20054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20231,
											"end": 20244,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20231,
											"end": 20244,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20221,
											"end": 20228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20221,
											"end": 20244,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20264,
											"end": 20278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20330,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20303,
											"end": 20345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20303,
											"end": 20345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20303,
											"end": 20345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 20347,
											"end": 20356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20383,
											"end": 20407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20383,
											"end": 20412,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20383,
											"end": 20412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19978,
											"end": 20443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 49703,
											"end": 49863,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 49703,
											"end": 49863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 49802,
											"end": 49815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 49796,
											"end": 49800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 49789,
											"end": 49816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 49842,
											"end": 49846,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 49836,
											"end": 49840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 49829,
											"end": 49847,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41457,
											"end": 41470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 41473,
											"end": 41489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 41481,
											"end": 41488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 41473,
											"end": 41480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 41473,
											"end": 41489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 41473,
											"end": 41489,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 41473,
											"end": 41489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41457,
											"end": 41489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 41457,
											"end": 41489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41504,
											"end": 41517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41500,
											"end": 41698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 41500,
											"end": 41698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 41500,
											"end": 41698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19664,
											"end": 19668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 41563,
											"end": 41698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 41563,
											"end": 41698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 41632,
											"end": 41683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 41640,
											"end": 41682,
											"name": "PUSH",
											"source": 2,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41632,
											"end": 41639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 41632,
											"end": 41683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 41632,
											"end": 41683,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 41632,
											"end": 41683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41723,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 41447,
											"end": 41793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41333,
											"end": 41793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14545,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14857,
											"end": 14858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14847,
											"end": 14858,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14906,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14882,
											"end": 14889,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14882,
											"end": 14906,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14878,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 14878,
											"end": 14955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14908,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14908,
											"end": 14915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 14908,
											"end": 14955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14908,
											"end": 14955,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 14908,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15596,
											"end": 15605,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15650,
											"end": 15675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15650,
											"end": 15675,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 15650,
											"end": 15675,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15701,
											"end": 15707,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15729,
											"end": 15730,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15701,
											"end": 15730,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16033,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16033,
											"end": 16040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 16033,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16033,
											"end": 16080,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 16033,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16435,
											"end": 16441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16435,
											"end": 16459,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16463,
											"end": 16464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16435,
											"end": 16464,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16499,
											"end": 16546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16499,
											"end": 16506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 16499,
											"end": 16546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6913,
											"end": 7052,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6913,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6982,
											"end": 6995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 6995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 6995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 6991,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6982,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6982,
											"end": 6995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6982,
											"end": 6995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 6995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6982,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6982,
											"end": 7001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6982,
											"end": 7001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6982,
											"end": 7017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 6978,
											"end": 7044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "PUSH",
											"source": 0,
											"value": "233DE59500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7044,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 6978,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6913,
											"end": 7052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6913,
											"end": 7052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7502,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7060,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7175,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7166,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7166,
											"end": 7187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7166,
											"end": 7187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7271,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7250,
											"end": 7271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4518,
											"end": 4537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4482,
											"end": 4538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4482,
											"end": 4538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4482,
											"end": 4538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4526,
											"end": 4529,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7338,
											"end": 7342,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7391,
											"end": 7415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7391,
											"end": 7415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 7309,
											"end": 7417,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7357,
											"end": 7361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7353,
											"end": 7365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7345,
											"end": 7365,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7345,
											"end": 7365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7417,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 7309,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 7481,
											"end": 7485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7487,
											"end": 7493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4136,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4119,
											"end": 4145,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4049,
											"end": 4164,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4049,
											"end": 4164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 4182,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7464,
											"end": 7494,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 7464,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7448,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7461,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7440,
											"end": 7461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7494,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7127,
											"end": 7502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36661,
											"end": 36771,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 36661,
											"end": 36771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 36747,
											"end": 36749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 36751,
											"end": 36759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 36737,
											"end": 36764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36737,
											"end": 36746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 36737,
											"end": 36764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29691,
											"end": 29695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29691,
											"end": 29695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29778,
											"end": 29782,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 29778,
											"end": 29782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29784,
											"end": 29791,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 29784,
											"end": 29791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29793,
											"end": 29798,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 29793,
											"end": 29798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 29711,
											"end": 29799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 29711,
											"end": 29799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29989,
											"end": 29995,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29989,
											"end": 30002,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 30006,
											"end": 30007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29989,
											"end": 30007,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 29985,
											"end": 30098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 29985,
											"end": 30098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 30027,
											"end": 30083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30027,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 30027,
											"end": 30083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 30027,
											"end": 30083,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 30027,
											"end": 30083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 30168,
											"end": 30174,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 30162,
											"end": 30175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 30153,
											"end": 30159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 30149,
											"end": 30151,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 30145,
											"end": 30160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 30138,
											"end": 30176,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29867,
											"end": 29931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29867,
											"end": 29931,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 29867,
											"end": 29931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 47933,
											"end": 49641,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 47933,
											"end": 49641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 47998,
											"end": 48015,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 48426,
											"end": 48430,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 48419,
											"end": 48423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 48413,
											"end": 48424,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 48409,
											"end": 48431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 48516,
											"end": 48517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 48510,
											"end": 48514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 48503,
											"end": 48518,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 48589,
											"end": 48593,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 48586,
											"end": 48587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 48582,
											"end": 48594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 48575,
											"end": 48594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 48575,
											"end": 48594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 48575,
											"end": 48594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 48669,
											"end": 48670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 48664,
											"end": 48667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 48657,
											"end": 48671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 48770,
											"end": 48773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 49004,
											"end": 49009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 48986,
											"end": 49405,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 48986,
											"end": 49405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 49051,
											"end": 49052,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 49046,
											"end": 49049,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 49042,
											"end": 49053,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 49035,
											"end": 49053,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 49035,
											"end": 49053,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 49219,
											"end": 49221,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 49213,
											"end": 49217,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 49209,
											"end": 49222,
											"name": "MOD",
											"source": 2
										},
										{
											"begin": 49205,
											"end": 49207,
											"name": "PUSH",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 49201,
											"end": 49223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 49196,
											"end": 49199,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 49188,
											"end": 49224,
											"name": "MSTORE8",
											"source": 2
										},
										{
											"begin": 49311,
											"end": 49313,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 49301,
											"end": 49314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 49301,
											"end": 49314,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 49366,
											"end": 49391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 48986,
											"end": 49405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 49366,
											"end": 49391,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49433,
											"end": 49446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 49433,
											"end": 49446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 49433,
											"end": 49446,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 49606,
											"end": 49625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 49606,
											"end": 49625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 49606,
											"end": 49625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 47933,
											"end": 49641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47933,
											"end": 49641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 35816,
											"end": 36582,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 35816,
											"end": 36582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 35942,
											"end": 35961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 35948,
											"end": 35950,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 35952,
											"end": 35960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 35942,
											"end": 35947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 35942,
											"end": 35961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 35942,
											"end": 35961,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 35942,
											"end": 35961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36000,
											"end": 36014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 36000,
											"end": 36014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36000,
											"end": 36014,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 36000,
											"end": 36019,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 35996,
											"end": 36566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 35996,
											"end": 36566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 36039,
											"end": 36050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36053,
											"end": 36066,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 36100,
											"end": 36114,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 36100,
											"end": 36114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36100,
											"end": 36114,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 36132,
											"end": 36370,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 36132,
											"end": 36370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36162,
											"end": 36224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 36201,
											"end": 36202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36205,
											"end": 36207,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 36209,
											"end": 36216,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 36209,
											"end": 36216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 36209,
											"end": 36216,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 36209,
											"end": 36216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 36209,
											"end": 36216,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 36209,
											"end": 36216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36218,
											"end": 36223,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 36162,
											"end": 36192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 36162,
											"end": 36224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 36162,
											"end": 36224,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 36162,
											"end": 36224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36157,
											"end": 36331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 36157,
											"end": 36331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 36252,
											"end": 36308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36252,
											"end": 36259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 36252,
											"end": 36308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 36252,
											"end": 36308,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 36252,
											"end": 36308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36365,
											"end": 36368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36357,
											"end": 36362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36357,
											"end": 36368,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 36132,
											"end": 36370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 36132,
											"end": 36370,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 36538,
											"end": 36541,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36521,
											"end": 36534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36521,
											"end": 36534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 36521,
											"end": 36541,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 36517,
											"end": 36551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 36517,
											"end": 36551,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 36543,
											"end": 36551,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36543,
											"end": 36551,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 36543,
											"end": 36551,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 36517,
											"end": 36551,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 36517,
											"end": 36551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36021,
											"end": 36566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36021,
											"end": 36566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 35816,
											"end": 36582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 35816,
											"end": 36582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 35816,
											"end": 36582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 35816,
											"end": 36582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 30652,
											"end": 32995,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 30652,
											"end": 32995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 30724,
											"end": 30744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 30747,
											"end": 30760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 30747,
											"end": 30760,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 30747,
											"end": 30760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 30774,
											"end": 30787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 30774,
											"end": 30787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 30774,
											"end": 30787,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 30770,
											"end": 30823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 30770,
											"end": 30823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 30789,
											"end": 30823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 30797,
											"end": 30822,
											"name": "PUSH",
											"source": 2,
											"value": "B562E8DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30789,
											"end": 30796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 30789,
											"end": 30823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 30789,
											"end": 30823,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 30789,
											"end": 30823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31354,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17320,
											"end": 17348,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17320,
											"end": 17348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17492,
											"end": 17503,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 17467,
											"end": 17490,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 17463,
											"end": 17504,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17926,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17912,
											"end": 17927,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 17912,
											"end": 17927,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17886,
											"end": 17910,
											"name": "PUSH",
											"source": 2,
											"value": "E1"
										},
										{
											"begin": 17882,
											"end": 17928,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17460,
											"end": 17512,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17513,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 31323,
											"end": 31493,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31726,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31726,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31722,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 31704,
											"end": 31726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31726,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31726,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31726,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31726,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31775,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 31742,
											"end": 31774,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000001"
										},
										{
											"begin": 31730,
											"end": 31775,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 31730,
											"end": 31775,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 31704,
											"end": 31775,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17320,
											"end": 17348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 31960,
											"end": 31973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 31960,
											"end": 31973,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 31960,
											"end": 31973,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 31956,
											"end": 32010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 31956,
											"end": 32010,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 31975,
											"end": 32010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 31983,
											"end": 32009,
											"name": "PUSH",
											"source": 2,
											"value": "2E07630000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31975,
											"end": 31982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 31975,
											"end": 32010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 31975,
											"end": 32010,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 31975,
											"end": 32010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32039,
											"end": 32062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32039,
											"end": 32062,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 32039,
											"end": 32062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 32039,
											"end": 32062,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 32213,
											"end": 32875,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 32213,
											"end": 32875,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32623,
											"end": 32630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 32580,
											"end": 32588,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 32536,
											"end": 32537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 32471,
											"end": 32496,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 32409,
											"end": 32410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 32345,
											"end": 32346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 32315,
											"end": 32666,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 32870,
											"end": 32873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32857,
											"end": 32866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32857,
											"end": 32866,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 32857,
											"end": 32866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 32857,
											"end": 32866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 32857,
											"end": 32866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32857,
											"end": 32866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 32857,
											"end": 32873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 32213,
											"end": 32875,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 32213,
											"end": 32875,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32889,
											"end": 32902,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 32889,
											"end": 32908,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 88,
											"end": 166,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 167,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 68,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 171,
											"end": 183,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 196,
											"end": 441,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 196,
											"end": 441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 381,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 638,
											"end": 938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 691,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 723,
											"end": 735,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 754,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 744,
											"end": 763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 805,
											"end": 809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 794,
											"end": 810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 778,
											"end": 792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 772,
											"end": 819,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 864,
											"end": 865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 848,
											"end": 854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 843,
											"end": 846,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 839,
											"end": 855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 835,
											"end": 862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 828,
											"end": 866,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 922,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 916,
											"end": 923,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 911,
											"end": 913,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 899,
											"end": 914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 924,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 890,
											"end": 893,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 886,
											"end": 925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 882,
											"end": 932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 875,
											"end": 932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 875,
											"end": 932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 875,
											"end": 932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1174,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 943,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1164,
											"end": 1166,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1167,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1147,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 1112,
											"end": 1168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1293,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1277,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1289,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1294,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1683,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1766,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1767,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 1692,
											"end": 1785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1783,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 2050,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1796,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1922,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 1923,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1896,
											"end": 1928,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 1964,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2044,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2044,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2369,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2358,
											"end": 2381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2400,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2397,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2401,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "tag",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 2441,
											"end": 2450,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 2422,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2412,
											"end": 2451,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2412,
											"end": 2451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 2504,
											"end": 2506,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 2470,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2559,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2818,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2570,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2652,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2678,
											"end": 2685,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2697,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2702,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2719,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 2667,
											"end": 2719,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2715,
											"end": 2716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2717,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2719,
											"name": "tag",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 2667,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2761,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2793,
											"end": 2811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2793,
											"end": 2811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2812,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3405,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3219,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3278,
											"end": 3284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3333,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3328,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3317,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3329,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 3334,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3351,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 3299,
											"end": 3351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3337,
											"end": 3349,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3351,
											"name": "tag",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 3299,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 3370,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3757,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3410,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3489,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3536,
											"end": 3538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3533,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3522,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3534,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3507,
											"end": 3539,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3504,
											"end": 3556,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3504,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 3504,
											"end": 3556,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3504,
											"end": 3556,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 3504,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 3575,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3643,
											"end": 3652,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3639,
											"end": 3657,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3658,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3701,
											"end": 3706,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3707,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3708,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3709,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 3667,
											"end": 3727,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3725,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3727,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 3667,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3751,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3757,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3757,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3946,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 3762,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 3892,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3908,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3901,
											"end": 3916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 3939,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3932,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3940,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 5089,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3951,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4062,
											"end": 4068,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4123,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4111,
											"end": 4120,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4109,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4121,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4127,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4140,
											"end": 4141,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4138,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4142,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4163,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 4182,
											"end": 4191,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4163,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 4163,
											"end": 4192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4163,
											"end": 4192,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 4163,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4192,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4211,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 4245,
											"end": 4247,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4243,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4211,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 4211,
											"end": 4249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4211,
											"end": 4249,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 4211,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4249,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4296,
											"end": 4298,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4285,
											"end": 4294,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4281,
											"end": 4299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4300,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4323,
											"end": 4355,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4415,
											"end": 4417,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4413,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4404,
											"end": 4418,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4431,
											"end": 4432,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4433,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4467,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4454,
											"end": 4476,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4511,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4503,
											"end": 4505,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4522,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 4485,
											"end": 4540,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4526,
											"end": 4538,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4540,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 4485,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4559,
											"end": 4575,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4587,
											"end": 4597,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4620,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 4584,
											"end": 4620,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 4600,
											"end": 4618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4669,
											"end": 4678,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4643,
											"end": 4645,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4729,
											"end": 4742,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4725,
											"end": 4747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4747,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4751,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 4721,
											"end": 4752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 4758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 4758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 4758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4815,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4815,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4770,
											"end": 4816,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 4767,
											"end": 4839,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 4819,
											"end": 4837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4859,
											"end": 4869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4857,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 4870,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4894,
											"end": 4896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4892,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4941,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 4931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4924,
											"end": 4926,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4922,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 4927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4942,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4959,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 4906,
											"end": 4959,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4955,
											"end": 4956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4952,
											"end": 4953,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 4957,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4959,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 4906,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5011,
											"end": 5013,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5006,
											"end": 5008,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5004,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4993,
											"end": 4995,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 5014,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 5056,
											"end": 5057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5053,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5046,
											"end": 5048,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5038,
											"end": 5044,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5049,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5023,
											"end": 5058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 5089,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 5089,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 5089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 5089,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 5089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 5089,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 5089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 5089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5354,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5094,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5176,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5225,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5220,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5209,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5221,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5243,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 5191,
											"end": 5243,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5239,
											"end": 5240,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5237,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5241,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5243,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 5191,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 5262,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5291,
											"name": "tag",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 5262,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5333,
											"end": 5342,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 5310,
											"end": 5348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5348,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 5310,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5300,
											"end": 5348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5300,
											"end": 5348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5354,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5354,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6525,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6088,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6168,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6163,
											"end": 6175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6163,
											"end": 6175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6163,
											"end": 6175,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 6163,
											"end": 6175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6222,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6222,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6231,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 6231,
											"end": 6292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 6277,
											"end": 6283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6273,
											"end": 6290,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6263,
											"end": 6290,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6263,
											"end": 6290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6231,
											"end": 6292,
											"name": "tag",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 6231,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6330,
											"end": 6336,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6327,
											"end": 6341,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6304,
											"end": 6342,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6301,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 6301,
											"end": 6519,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6372,
											"end": 6373,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6453,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6480,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6504,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6501,
											"end": 6502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6509,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6301,
											"end": 6519,
											"name": "tag",
											"source": 4,
											"value": "449"
										},
										{
											"begin": 6301,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6301,
											"end": 6519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6525,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6525,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6530,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 6530,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6683,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6676,
											"end": 6677,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6669,
											"end": 6684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6703,
											"end": 6707,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6700,
											"end": 6701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6719,
											"end": 6844,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6719,
											"end": 6844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6815,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6802,
											"end": 6838,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6802,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6802,
											"end": 6838,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6818,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 6818,
											"end": 6836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7213,
											"end": 7397,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 7213,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7262,
											"end": 7263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7255,
											"end": 7343,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 7359,
											"end": 7360,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7352,
											"end": 7367,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7386,
											"end": 7390,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7376,
											"end": 7391,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7402,
											"end": 7514,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 7402,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7434,
											"end": 7435,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 7450,
											"end": 7485,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 7465,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 7465,
											"end": 7483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7483,
											"name": "tag",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 7465,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7499,
											"end": 7508,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 7499,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7402,
											"end": 7514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7639,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 7519,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7586,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7575,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 7575,
											"end": 7610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7590,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 7590,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 7590,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7590,
											"end": 7608,
											"name": "tag",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 7590,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7624,
											"end": 7633,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7644,
											"end": 7856,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 7644,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7724,
											"end": 7729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7718,
											"end": 7730,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 7765,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7754,
											"end": 7759,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7766,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7748,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7739,
											"end": 7775,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 7830,
											"end": 7831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7810,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7794,
											"end": 7810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7832,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7832,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7819,
											"end": 7832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7794,
											"end": 7810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7794,
											"end": 7810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7644,
											"end": 7856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7644,
											"end": 7856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7861,
											"end": 8128,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7861,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8040,
											"end": 8043,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8065,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 8117,
											"end": 8120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8109,
											"end": 8115,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 8091,
											"end": 8121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 8091,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8083,
											"end": 8089,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8065,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 8065,
											"end": 8122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8133,
											"end": 8269,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 8133,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8172,
											"end": 8175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8205,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8190,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 8190,
											"end": 8229,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 8209,
											"end": 8227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8245,
											"end": 8263,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8133,
											"end": 8269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8274,
											"end": 8797,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 8274,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8468,
											"end": 8472,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8578,
											"end": 8580,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8570,
											"end": 8576,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8566,
											"end": 8581,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8555,
											"end": 8564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8548,
											"end": 8582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8628,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8618,
											"end": 8633,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8613,
											"end": 8615,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8602,
											"end": 8611,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8598,
											"end": 8616,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8634,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8591,
											"end": 8634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8670,
											"end": 8676,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8665,
											"end": 8667,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8654,
											"end": 8663,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8650,
											"end": 8668,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8643,
											"end": 8677,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8716,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8708,
											"end": 8710,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8697,
											"end": 8706,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8693,
											"end": 8711,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8686,
											"end": 8717,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8734,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 8786,
											"end": 8789,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8775,
											"end": 8784,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8790,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8763,
											"end": 8769,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8734,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 8734,
											"end": 8791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8734,
											"end": 8791,
											"name": "tag",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 8734,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8791,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 8274,
											"end": 8797,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8274,
											"end": 8797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8802,
											"end": 9051,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 8802,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 8877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8924,
											"end": 8926,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8912,
											"end": 8921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8903,
											"end": 8910,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8922,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 8927,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 8892,
											"end": 8944,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8892,
											"end": 8944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 8892,
											"end": 8944,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8940,
											"end": 8941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8930,
											"end": 8942,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8892,
											"end": 8944,
											"name": "tag",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 8892,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8972,
											"end": 8981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8966,
											"end": 8982,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8991,
											"end": 9021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 9015,
											"end": 9020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8991,
											"end": 9021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 8991,
											"end": 9021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractV/ContractVV1.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
								"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"battle(uint256,uint256)": "2a0c5221",
							"createRandomCreature()": "4ecbc664",
							"getApproved(uint256)": "081812fc",
							"getCreature(uint256)": "f052d65a",
							"getNextCreatureId()": "3095fe91",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpackBattleRecord(uint256)": "fd499a74",
							"unpackGameStats(uint256)": "42e29b4e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreatureNotOwned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"winnerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loserId\",\"type\":\"uint256\"}],\"name\":\"BattleResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"creatureId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CreatureCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ownerCreatureId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"opponentCreatureId\",\"type\":\"uint256\"}],\"name\":\"battle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createRandomCreature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getCreature\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gameStats\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"battleRecord\",\"type\":\"uint256\"}],\"internalType\":\"struct ContractVV1.Creature\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextCreatureId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"battleRecord\",\"type\":\"uint256\"}],\"name\":\"unpackBattleRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"wins\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"losses\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameStats\",\"type\":\"uint256\"}],\"name\":\"unpackGameStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"strength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"agility\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intelligence\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"specialPower\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContractV/ContractVV1.sol\":\"ContractVV1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/ContractV/ContractVV1.sol\":{\"keccak256\":\"0x98db14fcc8e47fd5561bc581a4ee2c75c6546b4622d38c4197ec97c0015f5591\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8355fd805b894132dc0b9c158efc10ea50ef5f0c4c5d72645ddda9693e23b9c\",\"dweb:/ipfs/QmPEMiFsPuxLdmc896Ldw27LFS1366F41uyNWyYUEx4N6U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 485,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 487,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 489,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 491,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 495,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 499,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 504,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)417_storage)"
							},
							{
								"astId": 510,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 512,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "_spotMinted",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 18,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "nextCreatureId",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
								"label": "creatures",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_struct(Creature)16_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Creature)16_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ContractVV1.Creature)",
								"numberOfBytes": "32",
								"value": "t_struct(Creature)16_storage"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)417_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)417_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Creature)16_storage": {
								"encoding": "inplace",
								"label": "struct ContractVV1.Creature",
								"members": [
									{
										"astId": 9,
										"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 11,
										"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
										"label": "owner",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 13,
										"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
										"label": "gameStats",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 15,
										"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
										"label": "battleRecord",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(TokenApprovalRef)417_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 416,
										"contract": "contracts/ContractV/ContractVV1.sol:ContractVV1",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. The `_sequentialUpTo()` function can be overriden to enable spot mints (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1053:49865  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5261:5507  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5327:5332  _name */\n  0x02\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5327:5340  _name = name_ */\n  tag_6\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5335:5340  name_ */\n  dup4\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5327:5332  _name */\n  dup3\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5327:5340  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5357  _symbol */\n  0x03\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5367  _symbol = symbol_ */\n  tag_8\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5360:5367  symbol_ */\n  dup3\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5357  _symbol */\n  dup3\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5367  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6022:6029  uint256 */\n  0x00\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5377:5408  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1053:49865  contract ERC721A is IERC721A {... */\n  jump(tag_27)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:862   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_30:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_32\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_34\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":709:712   */\n  dup7\n    /* \"#utility.yul\":702:706   */\n  0x20\n    /* \"#utility.yul\":697:699   */\n  dup6\n    /* \"#utility.yul\":689:695   */\n  dup9\n    /* \"#utility.yul\":685:700   */\n  add\n    /* \"#utility.yul\":681:707   */\n  add\n    /* \"#utility.yul\":678:713   */\n  gt\n    /* \"#utility.yul\":675:730   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":726:727   */\n  0x00\n    /* \"#utility.yul\":723:724   */\n  dup1\n    /* \"#utility.yul\":716:728   */\n  revert\n    /* \"#utility.yul\":675:730   */\ntag_35:\n    /* \"#utility.yul\":783:785   */\n  dup4\n    /* \"#utility.yul\":776:780   */\n  0x20\n    /* \"#utility.yul\":768:774   */\n  dup8\n    /* \"#utility.yul\":764:781   */\n  add\n    /* \"#utility.yul\":757:761   */\n  0x20\n    /* \"#utility.yul\":749:755   */\n  dup4\n    /* \"#utility.yul\":745:762   */\n  add\n    /* \"#utility.yul\":739:786   */\n  mcopy\n    /* \"#utility.yul\":830:831   */\n  0x00\n    /* \"#utility.yul\":823:827   */\n  0x20\n    /* \"#utility.yul\":818:820   */\n  dup6\n    /* \"#utility.yul\":810:816   */\n  dup4\n    /* \"#utility.yul\":806:821   */\n  add\n    /* \"#utility.yul\":802:828   */\n  add\n    /* \"#utility.yul\":795:832   */\n  mstore\n    /* \"#utility.yul\":850:856   */\n  dup1\n    /* \"#utility.yul\":841:856   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:862   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":867:1429   */\ntag_3:\n    /* \"#utility.yul\":966:972   */\n  0x00\n    /* \"#utility.yul\":974:980   */\n  dup1\n    /* \"#utility.yul\":1027:1029   */\n  0x40\n    /* \"#utility.yul\":1015:1024   */\n  dup4\n    /* \"#utility.yul\":1006:1013   */\n  dup6\n    /* \"#utility.yul\":1002:1025   */\n  sub\n    /* \"#utility.yul\":998:1030   */\n  slt\n    /* \"#utility.yul\":995:1047   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1043:1044   */\n  0x00\n    /* \"#utility.yul\":1040:1041   */\n  dup1\n    /* \"#utility.yul\":1033:1045   */\n  revert\n    /* \"#utility.yul\":995:1047   */\ntag_37:\n    /* \"#utility.yul\":1070:1086   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1135:1149   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1132:1166   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1162:1163   */\n  0x00\n    /* \"#utility.yul\":1159:1160   */\n  dup1\n    /* \"#utility.yul\":1152:1164   */\n  revert\n    /* \"#utility.yul\":1132:1166   */\ntag_38:\n    /* \"#utility.yul\":1185:1246   */\n  tag_39\n    /* \"#utility.yul\":1238:1245   */\n  dup7\n    /* \"#utility.yul\":1229:1235   */\n  dup4\n    /* \"#utility.yul\":1218:1227   */\n  dup8\n    /* \"#utility.yul\":1214:1236   */\n  add\n    /* \"#utility.yul\":1185:1246   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1175:1246   */\n  swap4\n  pop\n    /* \"#utility.yul\":1292:1294   */\n  0x20\n    /* \"#utility.yul\":1281:1290   */\n  dup6\n    /* \"#utility.yul\":1277:1295   */\n  add\n    /* \"#utility.yul\":1271:1296   */\n  mload\n    /* \"#utility.yul\":1255:1296   */\n  swap2\n  pop\n    /* \"#utility.yul\":1321:1323   */\n  dup1\n    /* \"#utility.yul\":1311:1319   */\n  dup3\n    /* \"#utility.yul\":1308:1324   */\n  gt\n    /* \"#utility.yul\":1305:1341   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1337:1338   */\n  0x00\n    /* \"#utility.yul\":1334:1335   */\n  dup1\n    /* \"#utility.yul\":1327:1339   */\n  revert\n    /* \"#utility.yul\":1305:1341   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1360:1423   */\n  tag_41\n    /* \"#utility.yul\":1415:1422   */\n  dup6\n    /* \"#utility.yul\":1404:1412   */\n  dup3\n    /* \"#utility.yul\":1393:1402   */\n  dup7\n    /* \"#utility.yul\":1389:1413   */\n  add\n    /* \"#utility.yul\":1360:1423   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1350:1423   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":867:1429   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1434:1814   */\ntag_23:\n    /* \"#utility.yul\":1513:1514   */\n  0x01\n    /* \"#utility.yul\":1509:1521   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1556:1568   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1577:1638   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1631:1635   */\n  0x7f\n    /* \"#utility.yul\":1623:1629   */\n  dup3\n    /* \"#utility.yul\":1619:1636   */\n  and\n    /* \"#utility.yul\":1609:1636   */\n  swap2\n  pop\n    /* \"#utility.yul\":1577:1638   */\ntag_43:\n    /* \"#utility.yul\":1684:1686   */\n  0x20\n    /* \"#utility.yul\":1676:1682   */\n  dup3\n    /* \"#utility.yul\":1673:1687   */\n  lt\n    /* \"#utility.yul\":1653:1671   */\n  dup2\n    /* \"#utility.yul\":1650:1688   */\n  sub\n    /* \"#utility.yul\":1647:1808   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1730:1740   */\n  0x4e487b71\n    /* \"#utility.yul\":1725:1728   */\n  0xe0\n    /* \"#utility.yul\":1721:1741   */\n  shl\n    /* \"#utility.yul\":1718:1719   */\n  0x00\n    /* \"#utility.yul\":1711:1742   */\n  mstore\n    /* \"#utility.yul\":1765:1769   */\n  0x22\n    /* \"#utility.yul\":1762:1763   */\n  0x04\n    /* \"#utility.yul\":1755:1770   */\n  mstore\n    /* \"#utility.yul\":1793:1797   */\n  0x24\n    /* \"#utility.yul\":1790:1791   */\n  0x00\n    /* \"#utility.yul\":1783:1798   */\n  revert\n    /* \"#utility.yul\":1647:1808   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1434:1814   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1945:2463   */\ntag_25:\n    /* \"#utility.yul\":2047:2049   */\n  0x1f\n    /* \"#utility.yul\":2042:2045   */\n  dup3\n    /* \"#utility.yul\":2039:2050   */\n  gt\n    /* \"#utility.yul\":2036:2457   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2083:2088   */\n  dup1\n    /* \"#utility.yul\":2080:2081   */\n  0x00\n    /* \"#utility.yul\":2073:2089   */\n  mstore\n    /* \"#utility.yul\":2127:2131   */\n  0x20\n    /* \"#utility.yul\":2124:2125   */\n  0x00\n    /* \"#utility.yul\":2114:2132   */\n  keccak256\n    /* \"#utility.yul\":2197:2199   */\n  0x1f\n    /* \"#utility.yul\":2185:2195   */\n  dup5\n    /* \"#utility.yul\":2181:2200   */\n  add\n    /* \"#utility.yul\":2178:2179   */\n  0x05\n    /* \"#utility.yul\":2174:2201   */\n  shr\n    /* \"#utility.yul\":2168:2172   */\n  dup2\n    /* \"#utility.yul\":2164:2202   */\n  add\n    /* \"#utility.yul\":2233:2237   */\n  0x20\n    /* \"#utility.yul\":2221:2231   */\n  dup6\n    /* \"#utility.yul\":2218:2238   */\n  lt\n    /* \"#utility.yul\":2215:2262   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2256:2260   */\n  dup1\n    /* \"#utility.yul\":2215:2262   */\ntag_48:\n    /* \"#utility.yul\":2311:2313   */\n  0x1f\n    /* \"#utility.yul\":2306:2309   */\n  dup5\n    /* \"#utility.yul\":2302:2314   */\n  add\n    /* \"#utility.yul\":2299:2300   */\n  0x05\n    /* \"#utility.yul\":2295:2315   */\n  shr\n    /* \"#utility.yul\":2289:2293   */\n  dup3\n    /* \"#utility.yul\":2285:2316   */\n  add\n    /* \"#utility.yul\":2275:2316   */\n  swap2\n  pop\n    /* \"#utility.yul\":2366:2447   */\ntag_49:\n    /* \"#utility.yul\":2384:2386   */\n  dup2\n    /* \"#utility.yul\":2377:2382   */\n  dup2\n    /* \"#utility.yul\":2374:2387   */\n  lt\n    /* \"#utility.yul\":2366:2447   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2443:2444   */\n  0x00\n    /* \"#utility.yul\":2429:2445   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2410:2411   */\n  0x01\n    /* \"#utility.yul\":2399:2412   */\n  add\n    /* \"#utility.yul\":2366:2447   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":2370:2373   */\n  pop\n  pop\n    /* \"#utility.yul\":2036:2457   */\ntag_47:\n    /* \"#utility.yul\":1945:2463   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2639:3984   */\ntag_7:\n    /* \"#utility.yul\":2759:2769   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2781:2811   */\n  dup2\n  gt\n    /* \"#utility.yul\":2778:2834   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2814:2832   */\n  tag_55\n  tag_21\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2843:2940   */\n  tag_56\n    /* \"#utility.yul\":2933:2939   */\n  dup2\n    /* \"#utility.yul\":2893:2931   */\n  tag_57\n    /* \"#utility.yul\":2925:2929   */\n  dup5\n    /* \"#utility.yul\":2919:2930   */\n  sload\n    /* \"#utility.yul\":2893:2931   */\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2887:2891   */\n  dup5\n    /* \"#utility.yul\":2843:2940   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2995:2999   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3052:3054   */\n  0x1f\n    /* \"#utility.yul\":3041:3055   */\n  dup4\n  gt\n    /* \"#utility.yul\":3069:3070   */\n  0x01\n    /* \"#utility.yul\":3064:3727   */\n  dup2\n  eq\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3771:3772   */\n  0x00\n    /* \"#utility.yul\":3788:3794   */\n  dup5\n    /* \"#utility.yul\":3785:3874   */\n  iszero\n  tag_60\n  jumpi\n  pop\n    /* \"#utility.yul\":3840:3859   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3834:3860   */\n  mload\n    /* \"#utility.yul\":3785:3874   */\ntag_60:\n  not(0x00)\n    /* \"#utility.yul\":2596:2597   */\n  0x03\n    /* \"#utility.yul\":2592:2603   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2588:2612   */\n  shr\n    /* \"#utility.yul\":2584:2613   */\n  not\n    /* \"#utility.yul\":2574:2614   */\n  and\n    /* \"#utility.yul\":2620:2621   */\n  0x01\n    /* \"#utility.yul\":2616:2627   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2571:2628   */\n  or\n    /* \"#utility.yul\":3887:3968   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3034:3978   */\n  jump(tag_58)\n    /* \"#utility.yul\":3064:3727   */\ntag_59:\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1885:1899   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1929:1933   */\n  0x20\n    /* \"#utility.yul\":1916:1934   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3100:3120   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3218:3454   */\ntag_63:\n    /* \"#utility.yul\":3232:3239   */\n  dup3\n    /* \"#utility.yul\":3229:3230   */\n  dup2\n    /* \"#utility.yul\":3226:3240   */\n  lt\n    /* \"#utility.yul\":3218:3454   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3321:3340   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3315:3341   */\n  mload\n    /* \"#utility.yul\":3300:3342   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3413:3440   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3381:3382   */\n  0x01\n    /* \"#utility.yul\":3369:3383   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3248:3267   */\n  dup5\n  add\n    /* \"#utility.yul\":3218:3454   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":3222:3225   */\n  pop\n    /* \"#utility.yul\":3482:3488   */\n  dup6\n    /* \"#utility.yul\":3473:3480   */\n  dup3\n    /* \"#utility.yul\":3470:3489   */\n  lt\n    /* \"#utility.yul\":3467:3668   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3543:3562   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3537:3563   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3626:3627   */\n  0x03\n    /* \"#utility.yul\":3622:3636   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3638:3641   */\n  0xf8\n    /* \"#utility.yul\":3618:3642   */\n  and\n    /* \"#utility.yul\":3614:3651   */\n  shr\n    /* \"#utility.yul\":3610:3652   */\n  not\n    /* \"#utility.yul\":3595:3653   */\n  and\n    /* \"#utility.yul\":3580:3654   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3467:3668   */\ntag_66:\n  pop\n  pop\n    /* \"#utility.yul\":3714:3715   */\n  0x01\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3702:3703   */\n  0x01\n    /* \"#utility.yul\":3698:3712   */\n  shl\n    /* \"#utility.yul\":3694:3716   */\n  add\n    /* \"#utility.yul\":3688:3692   */\n  dup6\n    /* \"#utility.yul\":3681:3717   */\n  sstore\n    /* \"#utility.yul\":3034:3978   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2639:3984   */\n  pop\n  pop\n  jump\t// out\ntag_27:\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1053:49865  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1053:49865  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":611:625   */\n      swap1\n      iszero\n        /* \"#utility.yul\":604:626   */\n      iszero\n        /* \"#utility.yul\":586:627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":574:576   */\n      0x20\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11573:11671  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1583   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1510:1584   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1498:1500   */\n      0x20\n        /* \"#utility.yul\":1483:1501   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18486  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6890:7454  function totalSupply() public view virtual override returns (uint256 result) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7328:7340  _burnCounter */\n      sload(0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6951:6965  uint256 result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7312:7325  _currentIndex */\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7312:7340  _currentIndex - _burnCounter */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6890:7454  function totalSupply() public view virtual override returns (uint256 result) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":2201:2226   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2189:2191   */\n      0x20\n        /* \"#utility.yul\":2174:2192   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6890:7454  function totalSupply() public view virtual override returns (uint256 result) {... */\n      tag_24\n        /* \"#utility.yul\":2055:2232   */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22796:26243  function transferFrom(... */\n    tag_7:\n      tag_38\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26334:26521  function safeTransferFrom(... */\n    tag_8:\n      tag_38\n      tag_52\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12934:13084  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8570:8809  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_43\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11742:11844  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_27\n      tag_67\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19186:19417  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_38\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27102:27507  function safeTransferFrom(... */\n    tag_13:\n      tag_38\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11945:12267  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_27\n      tag_80\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19567:19729  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_20\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19664:19668  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19705  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19722  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19567:19729  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10774:10778  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11117  interfaceId == 0x01ffc9a7 */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup4\n      and\n      eq\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11193  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_90\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11168:11193  interfaceId == 0x80ac58cd */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup4\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11193  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11269  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11244:11269  interfaceId == 0x5b5e139f */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup4\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11269  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11073:11269  return... */\n      swap3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11573:11671  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11627:11640  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11659:11664  _name */\n      0x02\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11652:11664  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11573:11671  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18712:18719  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18736:18752  _exists(tokenId) */\n      tag_100\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18744:18751  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18736:18743  _exists */\n      tag_101\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18736:18752  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18731:18804  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18754:18804  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18762:18803  ApprovalQueryForNonexistentToken.selector */\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18754:18761  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18754:18804  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18846  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18837  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18846  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18852  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18486  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18452:18479  _approve(to, tokenId, true) */\n      tag_106\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18461:18463  to */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18465:18472  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18474:18478  true */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18452:18460  _approve */\n      tag_107\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18452:18479  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_106:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18486  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22796:26243  function transferFrom(... */\n    tag_50:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22933:22960  uint256 prevOwnershipPacked */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22963:22990  _packedOwnershipOf(tokenId) */\n      tag_115\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22982:22989  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22963:22981  _packedOwnershipOf */\n      tag_116\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22963:22990  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23115:23137  uint256(uint160(from)) */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22933:22990  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23173:23218  address(uint160(prevOwnershipPacked)) != from */\n      dup2\n      and\n      dup5\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23169:23264  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_118\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23220:23264  _revert(TransferFromIncorrectOwner.selector) */\n      tag_118\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23228:23263  TransferFromIncorrectOwner.selector */\n      0xa114810000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23220:23227  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23220:23264  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_118:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23276:23303  uint256 approvedAddressSlot */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21929:21953  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21929:21944  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21929:21953  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22153:22179  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21566:21596  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21263:21291  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21544:21564  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21541:21597  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23459:23647  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_129\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23551:23594  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_126\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23568:23572  from */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19567:19729  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23551:23594  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_126:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23546:23647  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_129\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23596:23647  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23604:23646  TransferCallerNotOwnerNorApproved.selector */\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23596:23603  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23596:23647  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_129:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23790:23805  approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23787:23944  if approvedAddress {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23928:23929  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23907:23926  approvedAddressSlot */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23900:23930  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23787:23944  if approvedAddress {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24316:24340  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24316:24334  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24316:24340  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24314:24340  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24384:24406  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24382:24406  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17492:17503  timestamp() */\n      timestamp\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17467:17490  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17463:17504  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17450:17513  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24696  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24687  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24696  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24842  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24959:25006  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24959:25011  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24955:25572  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_137\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25063:25064  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25053:25064  tokenId + 1 */\n      dup5\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25031:25050  uint256 nextTokenId */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25214  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25201  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25214  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25219  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25180:25558  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_139\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25320:25333  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25305:25316  nextTokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25305:25333  nextTokenId != _currentIndex */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25301:25540  if (nextTokenId != _currentIndex) {... */\n      tag_139\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25495  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25482  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25495  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25517  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25301:25540  if (nextTokenId != _currentIndex) {... */\n    tag_139:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25013:25572  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24955:25572  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25700:25720  uint256(uint160(to)) */\n      dup6\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26071:26078  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25700:25720  uint256(uint160(to)) */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26003:26007  from */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25946:25971  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25681:25697  uint256 toMasked */\n      0x00\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25814:26106  log4(... */\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26129:26137  toMasked */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26141:26142  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26129:26142  toMasked == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26125:26183  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_141\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26144:26183  _revert(TransferToZeroAddress.selector) */\n      tag_141\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26152:26182  TransferToZeroAddress.selector */\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26144:26151  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26144:26183  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_141:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22923:26243  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22796:26243  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26334:26521  function safeTransferFrom(... */\n    tag_53:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26514  safeTransferFrom(from, to, tokenId, '') */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26492:26496  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26498:26500  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26502:26509  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26514  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26491  safeTransferFrom */\n      tag_77\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26514  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_145:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26334:26521  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12934:13084  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13006:13013  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13048:13075  _packedOwnershipOf(tokenId) */\n      tag_91\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13067:13074  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13048:13066  _packedOwnershipOf */\n      tag_116\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13048:13075  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8570:8809  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8642:8649  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8665:8684  owner == address(0) */\n      dup3\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8661:8730  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_150\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8686:8730  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_150\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8694:8729  BalanceQueryForZeroAddress.selector */\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8686:8693  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8686:8730  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_150:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8772  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8765  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8772  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1518:1531  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8802  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8570:8809  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11742:11844  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11798:11811  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11830:11837  _symbol */\n      0x03\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11823:11837  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19186:19417  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19319  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19298  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19319  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19329  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19340  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19355:19410  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":586:627   */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19329  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      swap2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19355:19410  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19355:19410  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19186:19417  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27102:27507  function safeTransferFrom(... */\n    tag_77:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27271:27302  transferFrom(from, to, tokenId) */\n      tag_162\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27284:27288  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27290:27292  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27294:27301  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27271:27283  transferFrom */\n      tag_50\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27271:27302  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27316:27330  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27316:27335  to.code.length != 0 */\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27312:27501  if (to.code.length != 0)... */\n      tag_167\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27354:27410  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_164\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27385:27389  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27391:27393  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27395:27402  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27404:27409  _data */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27354:27384  _checkContractOnERC721Received */\n      tag_165\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27354:27410  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_164:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27349:27501  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_167\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27430:27486  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_167\n      shl(0xe1, 0x68d2bf6b)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27430:27437  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27430:27486  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_167:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27102:27507  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11945:12267  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12018:12031  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12048:12064  _exists(tokenId) */\n      tag_169\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12056:12063  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12048:12055  _exists */\n      tag_101\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12048:12064  _exists(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12043:12111  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_171\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12066:12111  _revert(URIQueryForNonexistentToken.selector) */\n      tag_171\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12074:12110  URIQueryForNonexistentToken.selector */\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12066:12073  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12066:12111  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_171:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12122:12143  string memory baseURI */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12146:12156  _baseURI() */\n      tag_172\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12588:12597  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12512:12604  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12146:12156  _baseURI() */\n    tag_172:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12122:12156  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12179:12186  baseURI */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12194  bytes(baseURI).length */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12198:12199  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12199  bytes(baseURI).length != 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12260  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_174\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_175)\n    tag_174:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12226:12233  baseURI */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12235:12253  _toString(tokenId) */\n      tag_176\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12245:12252  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12235:12244  _toString */\n      tag_177\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12235:12253  _toString(tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12209:12254  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_178\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12260  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_175:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12166:12260  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11945:12267  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19978:20443  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_101:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20043:20054  bool result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20231:20244  _currentIndex */\n      dup1\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20221:20228  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20221:20244  tokenId < _currentIndex */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20217:20427  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20264:20278  uint256 packed */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20296:20356  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_189:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20313:20339  _packedOwnerships[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20313:20330  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20313:20339  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20303:20345  (packed = _packedOwnerships[tokenId]) == 0 */\n      dup2\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20296:20356  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      tag_190\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20347:20356  --tokenId */\n      tag_191\n      dup4\n      tag_192\n      jump\t// in\n    tag_191:\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20296:20356  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_189)\n    tag_190:\n      shl(0xe0, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20383:20407  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20383:20412  packed & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20217:20427  if (tokenId < _currentIndex) {... */\n    tag_188:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19978:20443  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49703:49863  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_104:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49802:49815  errorSelector */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49796:49800  0x00 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49789:49816  mstore(0x00, errorSelector) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49842:49846  0x04 */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49836:49840  0x00 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49829:49847  revert(0x00, 0x04) */\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41333:41793  function _approve(... */\n    tag_107:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41457:41470  address owner */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41473:41489  ownerOf(tokenId) */\n      tag_195\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41481:41488  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41473:41480  ownerOf */\n      tag_57\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41473:41489  ownerOf(tokenId) */\n      jump\t// in\n    tag_195:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41457:41489  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41504:41517  approvalCheck */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41504:41549  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_196\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41521:41549  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41504:41549  approvalCheck && _msgSenderERC721A() != owner */\n    tag_196:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41500:41698  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_202\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41568:41612  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_199\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41585:41590  owner */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19567:19729  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41568:41612  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_199:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41563:41698  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_202\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41632:41683  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_202\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41640:41682  ApprovalCallerNotOwnerNorApproved.selector */\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41632:41639  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41632:41683  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_202:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41732  _tokenApprovals[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41723  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41732  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41743  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41758:41786  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41732  _tokenApprovals[tokenId] */\n      dup7\n      swap4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41758:41786  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41447:41793  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41333:41793  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14380:16553  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_116:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14528:14554  _packedOwnerships[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14528:14545  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14528:14554  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14847:14853  packed */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14857:14858  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14847:14858  packed == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14843:16113  if (packed == 0) {... */\n      tag_213\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14893:14906  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14882:14889  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14882:14906  tokenId >= _currentIndex */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14878:14955  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_215\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14908:14955  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_215\n      shl(0xe1, 0x6f96cda1)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14908:14915  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14908:14955  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_215:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15502:16099  for (;;) {... */\n    tag_216:\n      pop\n      not(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15596:15605  --tokenId */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15578:15606  _packedOwnerships[--tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15578:15595  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15578:15606  _packedOwnerships[--tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15650:15675  if (packed == 0) continue */\n      dup1\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15502:16099  for (;;) {... */\n      tag_216\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15650:15675  if (packed == 0) continue */\n      jumpi\n      shl(0xe0, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15701:15707  packed */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15701:15725  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15729:15730  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15701:15730  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15697:15745  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_220\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14380:16553  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15697:15745  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_220:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16033:16080  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_221\n      shl(0xe1, 0x6f96cda1)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16033:16040  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16033:16080  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_221:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15502:16099  for (;;) {... */\n      jump(tag_216)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14843:16113  if (packed == 0) {... */\n    tag_213:\n      shl(0xe0, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16435:16441  packed */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16435:16459  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16463:16464  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16435:16464  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16431:16479  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_222\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14380:16553  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16431:16479  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_222:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16499:16546  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_188\n      shl(0xe1, 0x6f96cda1)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16499:16506  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16499:16546  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29533:30206  function _checkContractOnERC721Received(... */\n    tag_165:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29799  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29691:29695  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29756  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29799  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_235\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29778:29782  from */\n      dup10\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29784:29791  tokenId */\n      dup9\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29793:29798  _data */\n      dup9\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29799  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_236\n      jump\t// in\n    tag_235:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_237\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_238\n      swap2\n      dup2\n      add\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      0x01\n    tag_237:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29707:30200  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_240\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_245\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_244)\n    tag_245:\n      0x60\n      swap2\n      pop\n    tag_244:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29989:29995  reason */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29989:30002  reason.length */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30006:30007  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29989:30007  reason.length == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29985:30098  if (reason.length == 0) {... */\n      tag_247\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30027:30083  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_247\n      shl(0xe1, 0x68d2bf6b)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30027:30034  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30027:30083  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_247:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30168:30174  reason */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30162:30175  mload(reason) */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30153:30159  reason */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30149:30151  32 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30145:30160  add(32, reason) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30138:30176  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29707:30200  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_240:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29867:29931  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29707:30200  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_248:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29533:30206  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47933:49641  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_177:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47998:48015  string memory str */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48426:48430  0xa0 */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48419:48423  0x40 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48413:48424  mload(0x40) */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48409:48431  add(mload(0x40), 0xa0) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48516:48517  m */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48510:48514  0x40 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48503:48518  mstore(0x40, m) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48589:48593  0x20 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48586:48587  m */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48582:48594  sub(m, 0x20) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48575:48594  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48669:48670  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48664:48667  str */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48657:48671  mstore(str, 0) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48770:48773  str */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49004:49009  value */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48986:49405  for { let temp := value } 1 {} {... */\n    tag_251:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49051:49052  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49046:49049  str */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49042:49053  sub(str, 1) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49035:49053  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49219:49221  10 */\n      0x0a\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49213:49217  temp */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49209:49222  mod(temp, 10) */\n      mod\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49205:49207  48 */\n      0x30\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49201:49223  add(48, mod(temp, 10)) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49196:49199  str */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49188:49224  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49311:49313  10 */\n      0x0a\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49301:49314  div(temp, 10) */\n      swap1\n      div\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49366:49391  if iszero(temp) { break } */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48986:49405  for { let temp := value } 1 {} {... */\n      tag_251\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49366:49391  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49433:49446  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49546:49560  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49606:49625  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49546:49560  sub(str, 0x20) */\n      swap2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47933:49641  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:191   */\n    tag_257:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":88:166   */\n      and\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":78:167   */\n      eq\n        /* \"#utility.yul\":68:185   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":181:182   */\n      0x00\n        /* \"#utility.yul\":178:179   */\n      dup1\n        /* \"#utility.yul\":171:183   */\n      revert\n        /* \"#utility.yul\":68:185   */\n    tag_264:\n        /* \"#utility.yul\":14:191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:441   */\n    tag_22:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_266:\n        /* \"#utility.yul\":362:371   */\n      dup2\n        /* \"#utility.yul\":349:372   */\n      calldataload\n        /* \"#utility.yul\":381:411   */\n      tag_175\n        /* \"#utility.yul\":405:410   */\n      dup2\n        /* \"#utility.yul\":381:411   */\n      tag_257\n      jump\t// in\n        /* \"#utility.yul\":638:938   */\n    tag_258:\n        /* \"#utility.yul\":691:694   */\n      0x00\n        /* \"#utility.yul\":729:734   */\n      dup2\n        /* \"#utility.yul\":723:735   */\n      mload\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":751:754   */\n      dup5\n        /* \"#utility.yul\":744:763   */\n      mstore\n        /* \"#utility.yul\":812:818   */\n      dup1\n        /* \"#utility.yul\":805:809   */\n      0x20\n        /* \"#utility.yul\":798:803   */\n      dup5\n        /* \"#utility.yul\":794:810   */\n      add\n        /* \"#utility.yul\":787:791   */\n      0x20\n        /* \"#utility.yul\":782:785   */\n      dup7\n        /* \"#utility.yul\":778:792   */\n      add\n        /* \"#utility.yul\":772:819   */\n      mcopy\n        /* \"#utility.yul\":864:865   */\n      0x00\n        /* \"#utility.yul\":857:861   */\n      0x20\n        /* \"#utility.yul\":848:854   */\n      dup3\n        /* \"#utility.yul\":843:846   */\n      dup7\n        /* \"#utility.yul\":839:855   */\n      add\n        /* \"#utility.yul\":835:862   */\n      add\n        /* \"#utility.yul\":828:866   */\n      mstore\n        /* \"#utility.yul\":927:931   */\n      0x20\n        /* \"#utility.yul\":920:922   */\n      0x1f\n        /* \"#utility.yul\":916:923   */\n      not\n        /* \"#utility.yul\":911:913   */\n      0x1f\n        /* \"#utility.yul\":903:909   */\n      dup4\n        /* \"#utility.yul\":899:914   */\n      add\n        /* \"#utility.yul\":895:924   */\n      and\n        /* \"#utility.yul\":890:893   */\n      dup6\n        /* \"#utility.yul\":886:925   */\n      add\n        /* \"#utility.yul\":882:932   */\n      add\n        /* \"#utility.yul\":875:932   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":638:938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":943:1174   */\n    tag_30:\n        /* \"#utility.yul\":1092:1094   */\n      0x20\n        /* \"#utility.yul\":1081:1090   */\n      dup2\n        /* \"#utility.yul\":1074:1095   */\n      mstore\n        /* \"#utility.yul\":1055:1059   */\n      0x00\n        /* \"#utility.yul\":1112:1168   */\n      tag_175\n        /* \"#utility.yul\":1164:1166   */\n      0x20\n        /* \"#utility.yul\":1153:1162   */\n      dup4\n        /* \"#utility.yul\":1149:1167   */\n      add\n        /* \"#utility.yul\":1141:1147   */\n      dup5\n        /* \"#utility.yul\":1112:1168   */\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":1179:1359   */\n    tag_34:\n        /* \"#utility.yul\":1238:1244   */\n      0x00\n        /* \"#utility.yul\":1291:1293   */\n      0x20\n        /* \"#utility.yul\":1279:1288   */\n      dup3\n        /* \"#utility.yul\":1270:1277   */\n      dup5\n        /* \"#utility.yul\":1266:1289   */\n      sub\n        /* \"#utility.yul\":1262:1294   */\n      slt\n        /* \"#utility.yul\":1259:1311   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1307:1308   */\n      0x00\n        /* \"#utility.yul\":1304:1305   */\n      dup1\n        /* \"#utility.yul\":1297:1309   */\n      revert\n        /* \"#utility.yul\":1259:1311   */\n    tag_273:\n      pop\n        /* \"#utility.yul\":1330:1353   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1179:1359   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1595:1791   */\n    tag_259:\n        /* \"#utility.yul\":1663:1683   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1712:1766   */\n      dup2\n      and\n        /* \"#utility.yul\":1702:1767   */\n      dup2\n      eq\n        /* \"#utility.yul\":1692:1785   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1781:1782   */\n      0x00\n        /* \"#utility.yul\":1778:1779   */\n      dup1\n        /* \"#utility.yul\":1771:1783   */\n      revert\n        /* \"#utility.yul\":1796:2050   */\n    tag_40:\n        /* \"#utility.yul\":1864:1870   */\n      0x00\n        /* \"#utility.yul\":1872:1878   */\n      dup1\n        /* \"#utility.yul\":1925:1927   */\n      0x40\n        /* \"#utility.yul\":1913:1922   */\n      dup4\n        /* \"#utility.yul\":1904:1911   */\n      dup6\n        /* \"#utility.yul\":1900:1923   */\n      sub\n        /* \"#utility.yul\":1896:1928   */\n      slt\n        /* \"#utility.yul\":1893:1945   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":1941:1942   */\n      0x00\n        /* \"#utility.yul\":1938:1939   */\n      dup1\n        /* \"#utility.yul\":1931:1943   */\n      revert\n        /* \"#utility.yul\":1893:1945   */\n    tag_278:\n        /* \"#utility.yul\":1964:1993   */\n      tag_279\n        /* \"#utility.yul\":1983:1992   */\n      dup4\n        /* \"#utility.yul\":1964:1993   */\n      tag_259\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1954:1993   */\n      swap5\n        /* \"#utility.yul\":2040:2042   */\n      0x20\n        /* \"#utility.yul\":2025:2043   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2012:2044   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1796:2050   */\n      jump\t// out\n        /* \"#utility.yul\":2237:2565   */\n    tag_49:\n        /* \"#utility.yul\":2314:2320   */\n      0x00\n        /* \"#utility.yul\":2322:2328   */\n      dup1\n        /* \"#utility.yul\":2330:2336   */\n      0x00\n        /* \"#utility.yul\":2383:2385   */\n      0x60\n        /* \"#utility.yul\":2371:2380   */\n      dup5\n        /* \"#utility.yul\":2362:2369   */\n      dup7\n        /* \"#utility.yul\":2358:2381   */\n      sub\n        /* \"#utility.yul\":2354:2386   */\n      slt\n        /* \"#utility.yul\":2351:2403   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2399:2400   */\n      0x00\n        /* \"#utility.yul\":2396:2397   */\n      dup1\n        /* \"#utility.yul\":2389:2401   */\n      revert\n        /* \"#utility.yul\":2351:2403   */\n    tag_282:\n        /* \"#utility.yul\":2422:2451   */\n      tag_283\n        /* \"#utility.yul\":2441:2450   */\n      dup5\n        /* \"#utility.yul\":2422:2451   */\n      tag_259\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2412:2451   */\n      swap3\n      pop\n        /* \"#utility.yul\":2470:2508   */\n      tag_284\n        /* \"#utility.yul\":2504:2506   */\n      0x20\n        /* \"#utility.yul\":2493:2502   */\n      dup6\n        /* \"#utility.yul\":2489:2507   */\n      add\n        /* \"#utility.yul\":2470:2508   */\n      tag_259\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2460:2508   */\n      swap2\n      pop\n        /* \"#utility.yul\":2555:2557   */\n      0x40\n        /* \"#utility.yul\":2544:2553   */\n      dup5\n        /* \"#utility.yul\":2540:2558   */\n      add\n        /* \"#utility.yul\":2527:2559   */\n      calldataload\n        /* \"#utility.yul\":2517:2559   */\n      swap1\n      pop\n        /* \"#utility.yul\":2237:2565   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2570:2756   */\n    tag_62:\n        /* \"#utility.yul\":2629:2635   */\n      0x00\n        /* \"#utility.yul\":2682:2684   */\n      0x20\n        /* \"#utility.yul\":2670:2679   */\n      dup3\n        /* \"#utility.yul\":2661:2668   */\n      dup5\n        /* \"#utility.yul\":2657:2680   */\n      sub\n        /* \"#utility.yul\":2653:2685   */\n      slt\n        /* \"#utility.yul\":2650:2702   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2698:2699   */\n      0x00\n        /* \"#utility.yul\":2695:2696   */\n      dup1\n        /* \"#utility.yul\":2688:2700   */\n      revert\n        /* \"#utility.yul\":2650:2702   */\n    tag_286:\n        /* \"#utility.yul\":2721:2750   */\n      tag_175\n        /* \"#utility.yul\":2740:2749   */\n      dup3\n        /* \"#utility.yul\":2721:2750   */\n      tag_259\n      jump\t// in\n        /* \"#utility.yul\":2761:3108   */\n    tag_72:\n        /* \"#utility.yul\":2826:2832   */\n      0x00\n        /* \"#utility.yul\":2834:2840   */\n      dup1\n        /* \"#utility.yul\":2887:2889   */\n      0x40\n        /* \"#utility.yul\":2875:2884   */\n      dup4\n        /* \"#utility.yul\":2866:2873   */\n      dup6\n        /* \"#utility.yul\":2862:2885   */\n      sub\n        /* \"#utility.yul\":2858:2890   */\n      slt\n        /* \"#utility.yul\":2855:2907   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2903:2904   */\n      0x00\n        /* \"#utility.yul\":2900:2901   */\n      dup1\n        /* \"#utility.yul\":2893:2905   */\n      revert\n        /* \"#utility.yul\":2855:2907   */\n    tag_289:\n        /* \"#utility.yul\":2926:2955   */\n      tag_290\n        /* \"#utility.yul\":2945:2954   */\n      dup4\n        /* \"#utility.yul\":2926:2955   */\n      tag_259\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2916:2955   */\n      swap2\n      pop\n        /* \"#utility.yul\":3005:3007   */\n      0x20\n        /* \"#utility.yul\":2994:3003   */\n      dup4\n        /* \"#utility.yul\":2990:3008   */\n      add\n        /* \"#utility.yul\":2977:3009   */\n      calldataload\n        /* \"#utility.yul\":3052:3057   */\n      dup1\n        /* \"#utility.yul\":3045:3058   */\n      iszero\n        /* \"#utility.yul\":3038:3059   */\n      iszero\n        /* \"#utility.yul\":3031:3036   */\n      dup2\n        /* \"#utility.yul\":3028:3060   */\n      eq\n        /* \"#utility.yul\":3018:3078   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3074:3075   */\n      0x00\n        /* \"#utility.yul\":3071:3072   */\n      dup1\n        /* \"#utility.yul\":3064:3076   */\n      revert\n        /* \"#utility.yul\":3018:3078   */\n    tag_291:\n        /* \"#utility.yul\":3097:3102   */\n      dup1\n        /* \"#utility.yul\":3087:3102   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2761:3108   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3113:3297   */\n    tag_260:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3162:3163   */\n      0x00\n        /* \"#utility.yul\":3155:3243   */\n      mstore\n        /* \"#utility.yul\":3262:3266   */\n      0x41\n        /* \"#utility.yul\":3259:3260   */\n      0x04\n        /* \"#utility.yul\":3252:3267   */\n      mstore\n        /* \"#utility.yul\":3286:3290   */\n      0x24\n        /* \"#utility.yul\":3283:3284   */\n      0x00\n        /* \"#utility.yul\":3276:3291   */\n      revert\n        /* \"#utility.yul\":3302:4440   */\n    tag_76:\n        /* \"#utility.yul\":3397:3403   */\n      0x00\n        /* \"#utility.yul\":3405:3411   */\n      dup1\n        /* \"#utility.yul\":3413:3419   */\n      0x00\n        /* \"#utility.yul\":3421:3427   */\n      dup1\n        /* \"#utility.yul\":3474:3477   */\n      0x80\n        /* \"#utility.yul\":3462:3471   */\n      dup6\n        /* \"#utility.yul\":3453:3460   */\n      dup8\n        /* \"#utility.yul\":3449:3472   */\n      sub\n        /* \"#utility.yul\":3445:3478   */\n      slt\n        /* \"#utility.yul\":3442:3495   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":3491:3492   */\n      0x00\n        /* \"#utility.yul\":3488:3489   */\n      dup1\n        /* \"#utility.yul\":3481:3493   */\n      revert\n        /* \"#utility.yul\":3442:3495   */\n    tag_294:\n        /* \"#utility.yul\":3514:3543   */\n      tag_295\n        /* \"#utility.yul\":3533:3542   */\n      dup6\n        /* \"#utility.yul\":3514:3543   */\n      tag_259\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3504:3543   */\n      swap4\n      pop\n        /* \"#utility.yul\":3562:3600   */\n      tag_296\n        /* \"#utility.yul\":3596:3598   */\n      0x20\n        /* \"#utility.yul\":3585:3594   */\n      dup7\n        /* \"#utility.yul\":3581:3599   */\n      add\n        /* \"#utility.yul\":3562:3600   */\n      tag_259\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3552:3600   */\n      swap3\n      pop\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3636:3645   */\n      dup6\n        /* \"#utility.yul\":3632:3650   */\n      add\n        /* \"#utility.yul\":3619:3651   */\n      calldataload\n        /* \"#utility.yul\":3609:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3702:3704   */\n      0x60\n        /* \"#utility.yul\":3691:3700   */\n      dup6\n        /* \"#utility.yul\":3687:3705   */\n      add\n        /* \"#utility.yul\":3674:3706   */\n      calldataload\n        /* \"#utility.yul\":3725:3743   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3766:3768   */\n      dup1\n        /* \"#utility.yul\":3758:3764   */\n      dup3\n        /* \"#utility.yul\":3755:3769   */\n      gt\n        /* \"#utility.yul\":3752:3786   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3779:3780   */\n      dup1\n        /* \"#utility.yul\":3772:3784   */\n      revert\n        /* \"#utility.yul\":3752:3786   */\n    tag_297:\n        /* \"#utility.yul\":3820:3826   */\n      dup2\n        /* \"#utility.yul\":3809:3818   */\n      dup8\n        /* \"#utility.yul\":3805:3827   */\n      add\n        /* \"#utility.yul\":3795:3827   */\n      swap2\n      pop\n        /* \"#utility.yul\":3865:3872   */\n      dup8\n        /* \"#utility.yul\":3858:3862   */\n      0x1f\n        /* \"#utility.yul\":3854:3856   */\n      dup4\n        /* \"#utility.yul\":3850:3863   */\n      add\n        /* \"#utility.yul\":3846:3873   */\n      slt\n        /* \"#utility.yul\":3836:3891   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3887:3888   */\n      0x00\n        /* \"#utility.yul\":3884:3885   */\n      dup1\n        /* \"#utility.yul\":3877:3889   */\n      revert\n        /* \"#utility.yul\":3836:3891   */\n    tag_298:\n        /* \"#utility.yul\":3923:3925   */\n      dup2\n        /* \"#utility.yul\":3910:3926   */\n      calldataload\n        /* \"#utility.yul\":3945:3947   */\n      dup2\n        /* \"#utility.yul\":3941:3943   */\n      dup2\n        /* \"#utility.yul\":3938:3948   */\n      gt\n        /* \"#utility.yul\":3935:3971   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":3951:3969   */\n      tag_300\n      tag_260\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4026:4028   */\n      0x40\n        /* \"#utility.yul\":4020:4029   */\n      mload\n        /* \"#utility.yul\":3994:3996   */\n      0x1f\n        /* \"#utility.yul\":4080:4093   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4076:4098   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4100:4102   */\n      0x3f\n        /* \"#utility.yul\":4072:4103   */\n      add\n        /* \"#utility.yul\":4068:4108   */\n      and\n        /* \"#utility.yul\":4056:4109   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4124:4142   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4144:4166   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4121:4167   */\n      or\n        /* \"#utility.yul\":4118:4190   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4170:4188   */\n      tag_302\n      tag_260\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4210:4220   */\n      dup2\n        /* \"#utility.yul\":4206:4208   */\n      0x40\n        /* \"#utility.yul\":4199:4221   */\n      mstore\n        /* \"#utility.yul\":4245:4247   */\n      dup3\n        /* \"#utility.yul\":4237:4243   */\n      dup2\n        /* \"#utility.yul\":4230:4248   */\n      mstore\n        /* \"#utility.yul\":4285:4292   */\n      dup11\n        /* \"#utility.yul\":4280:4282   */\n      0x20\n        /* \"#utility.yul\":4275:4277   */\n      dup5\n        /* \"#utility.yul\":4271:4273   */\n      dup8\n        /* \"#utility.yul\":4267:4278   */\n      add\n        /* \"#utility.yul\":4263:4283   */\n      add\n        /* \"#utility.yul\":4260:4293   */\n      gt\n        /* \"#utility.yul\":4257:4310   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":4306:4307   */\n      0x00\n        /* \"#utility.yul\":4303:4304   */\n      dup1\n        /* \"#utility.yul\":4296:4308   */\n      revert\n        /* \"#utility.yul\":4257:4310   */\n    tag_303:\n        /* \"#utility.yul\":4362:4364   */\n      dup3\n        /* \"#utility.yul\":4357:4359   */\n      0x20\n        /* \"#utility.yul\":4353:4355   */\n      dup7\n        /* \"#utility.yul\":4349:4360   */\n      add\n        /* \"#utility.yul\":4344:4346   */\n      0x20\n        /* \"#utility.yul\":4336:4342   */\n      dup4\n        /* \"#utility.yul\":4332:4347   */\n      add\n        /* \"#utility.yul\":4319:4365   */\n      calldatacopy\n        /* \"#utility.yul\":4407:4408   */\n      0x00\n        /* \"#utility.yul\":4402:4404   */\n      0x20\n        /* \"#utility.yul\":4397:4399   */\n      dup5\n        /* \"#utility.yul\":4389:4395   */\n      dup4\n        /* \"#utility.yul\":4385:4400   */\n      add\n        /* \"#utility.yul\":4381:4405   */\n      add\n        /* \"#utility.yul\":4374:4409   */\n      mstore\n        /* \"#utility.yul\":4428:4434   */\n      dup1\n        /* \"#utility.yul\":4418:4434   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3302:4440   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4445:4705   */\n    tag_86:\n        /* \"#utility.yul\":4513:4519   */\n      0x00\n        /* \"#utility.yul\":4521:4527   */\n      dup1\n        /* \"#utility.yul\":4574:4576   */\n      0x40\n        /* \"#utility.yul\":4562:4571   */\n      dup4\n        /* \"#utility.yul\":4553:4560   */\n      dup6\n        /* \"#utility.yul\":4549:4572   */\n      sub\n        /* \"#utility.yul\":4545:4577   */\n      slt\n        /* \"#utility.yul\":4542:4594   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4542:4594   */\n    tag_305:\n        /* \"#utility.yul\":4613:4642   */\n      tag_306\n        /* \"#utility.yul\":4632:4641   */\n      dup4\n        /* \"#utility.yul\":4613:4642   */\n      tag_259\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4603:4642   */\n      swap2\n      pop\n        /* \"#utility.yul\":4661:4699   */\n      tag_307\n        /* \"#utility.yul\":4695:4697   */\n      0x20\n        /* \"#utility.yul\":4684:4693   */\n      dup5\n        /* \"#utility.yul\":4680:4698   */\n      add\n        /* \"#utility.yul\":4661:4699   */\n      tag_259\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4651:4699   */\n      swap1\n      pop\n        /* \"#utility.yul\":4445:4705   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4710:5147   */\n    tag_94:\n        /* \"#utility.yul\":4789:4790   */\n      0x01\n        /* \"#utility.yul\":4785:4797   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4832:4844   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4853:4914   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":4907:4911   */\n      0x7f\n        /* \"#utility.yul\":4899:4905   */\n      dup3\n        /* \"#utility.yul\":4895:4912   */\n      and\n        /* \"#utility.yul\":4885:4912   */\n      swap2\n      pop\n        /* \"#utility.yul\":4853:4914   */\n    tag_309:\n        /* \"#utility.yul\":4960:4962   */\n      0x20\n        /* \"#utility.yul\":4952:4958   */\n      dup3\n        /* \"#utility.yul\":4949:4963   */\n      lt\n        /* \"#utility.yul\":4929:4947   */\n      dup2\n        /* \"#utility.yul\":4926:4964   */\n      sub\n        /* \"#utility.yul\":4923:5141   */\n      tag_310\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4994:4995   */\n      0x00\n        /* \"#utility.yul\":4987:5075   */\n      mstore\n        /* \"#utility.yul\":5098:5102   */\n      0x22\n        /* \"#utility.yul\":5095:5096   */\n      0x04\n        /* \"#utility.yul\":5088:5103   */\n      mstore\n        /* \"#utility.yul\":5126:5130   */\n      0x24\n        /* \"#utility.yul\":5123:5124   */\n      0x00\n        /* \"#utility.yul\":5116:5131   */\n      revert\n        /* \"#utility.yul\":4923:5141   */\n    tag_310:\n      pop\n        /* \"#utility.yul\":4710:5147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5152:5364   */\n    tag_261:\n        /* \"#utility.yul\":5194:5197   */\n      0x00\n        /* \"#utility.yul\":5232:5237   */\n      dup2\n        /* \"#utility.yul\":5226:5238   */\n      mload\n        /* \"#utility.yul\":5276:5282   */\n      dup1\n        /* \"#utility.yul\":5269:5273   */\n      0x20\n        /* \"#utility.yul\":5262:5267   */\n      dup5\n        /* \"#utility.yul\":5258:5274   */\n      add\n        /* \"#utility.yul\":5253:5256   */\n      dup6\n        /* \"#utility.yul\":5247:5283   */\n      mcopy\n        /* \"#utility.yul\":5338:5339   */\n      0x00\n        /* \"#utility.yul\":5302:5318   */\n      swap4\n      add\n        /* \"#utility.yul\":5327:5340   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":5302:5318   */\n      swap1\n      swap2\n        /* \"#utility.yul\":5152:5364   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5369:5636   */\n    tag_179:\n        /* \"#utility.yul\":5548:5551   */\n      0x00\n        /* \"#utility.yul\":5573:5630   */\n      tag_248\n        /* \"#utility.yul\":5599:5629   */\n      tag_314\n        /* \"#utility.yul\":5625:5628   */\n      dup4\n        /* \"#utility.yul\":5617:5623   */\n      dup7\n        /* \"#utility.yul\":5599:5629   */\n      tag_261\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5591:5597   */\n      dup5\n        /* \"#utility.yul\":5573:5630   */\n      tag_261\n      jump\t// in\n        /* \"#utility.yul\":5641:5931   */\n    tag_192:\n        /* \"#utility.yul\":5680:5683   */\n      0x00\n        /* \"#utility.yul\":5708:5713   */\n      dup2\n        /* \"#utility.yul\":5698:5891   */\n      tag_316\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5744:5745   */\n      0x00\n        /* \"#utility.yul\":5737:5825   */\n      mstore\n        /* \"#utility.yul\":5848:5852   */\n      0x11\n        /* \"#utility.yul\":5845:5846   */\n      0x04\n        /* \"#utility.yul\":5838:5853   */\n      mstore\n        /* \"#utility.yul\":5876:5880   */\n      0x24\n        /* \"#utility.yul\":5873:5874   */\n      0x00\n        /* \"#utility.yul\":5866:5881   */\n      revert\n        /* \"#utility.yul\":5698:5891   */\n    tag_316:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":5907:5925   */\n      add\n      swap1\n        /* \"#utility.yul\":5641:5931   */\n      jump\t// out\n        /* \"#utility.yul\":5936:6459   */\n    tag_236:\n        /* \"#utility.yul\":6130:6134   */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6240:6242   */\n      dup1\n        /* \"#utility.yul\":6232:6238   */\n      dup8\n        /* \"#utility.yul\":6228:6243   */\n      and\n        /* \"#utility.yul\":6217:6226   */\n      dup4\n        /* \"#utility.yul\":6210:6244   */\n      mstore\n        /* \"#utility.yul\":6292:6294   */\n      dup1\n        /* \"#utility.yul\":6284:6290   */\n      dup7\n        /* \"#utility.yul\":6280:6295   */\n      and\n        /* \"#utility.yul\":6275:6277   */\n      0x20\n        /* \"#utility.yul\":6264:6273   */\n      dup5\n        /* \"#utility.yul\":6260:6278   */\n      add\n        /* \"#utility.yul\":6253:6296   */\n      mstore\n      pop\n        /* \"#utility.yul\":6332:6338   */\n      dup4\n        /* \"#utility.yul\":6327:6329   */\n      0x40\n        /* \"#utility.yul\":6316:6325   */\n      dup4\n        /* \"#utility.yul\":6312:6330   */\n      add\n        /* \"#utility.yul\":6305:6339   */\n      mstore\n        /* \"#utility.yul\":6375:6378   */\n      0x80\n        /* \"#utility.yul\":6370:6372   */\n      0x60\n        /* \"#utility.yul\":6359:6368   */\n      dup4\n        /* \"#utility.yul\":6355:6373   */\n      add\n        /* \"#utility.yul\":6348:6379   */\n      mstore\n        /* \"#utility.yul\":6396:6453   */\n      tag_318\n        /* \"#utility.yul\":6448:6451   */\n      0x80\n        /* \"#utility.yul\":6437:6446   */\n      dup4\n        /* \"#utility.yul\":6433:6452   */\n      add\n        /* \"#utility.yul\":6425:6431   */\n      dup5\n        /* \"#utility.yul\":6396:6453   */\n      tag_258\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6388:6453   */\n      swap7\n        /* \"#utility.yul\":5936:6459   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6464:6713   */\n    tag_239:\n        /* \"#utility.yul\":6533:6539   */\n      0x00\n        /* \"#utility.yul\":6586:6588   */\n      0x20\n        /* \"#utility.yul\":6574:6583   */\n      dup3\n        /* \"#utility.yul\":6565:6572   */\n      dup5\n        /* \"#utility.yul\":6561:6584   */\n      sub\n        /* \"#utility.yul\":6557:6589   */\n      slt\n        /* \"#utility.yul\":6554:6606   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6602:6603   */\n      0x00\n        /* \"#utility.yul\":6599:6600   */\n      dup1\n        /* \"#utility.yul\":6592:6604   */\n      revert\n        /* \"#utility.yul\":6554:6606   */\n    tag_320:\n        /* \"#utility.yul\":6634:6643   */\n      dup2\n        /* \"#utility.yul\":6628:6644   */\n      mload\n        /* \"#utility.yul\":6653:6683   */\n      tag_175\n        /* \"#utility.yul\":6677:6682   */\n      dup2\n        /* \"#utility.yul\":6653:6683   */\n      tag_257\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220e17496b2867d8dfcbbf6daeffc9875bcd72a2888c438625453fa68e86c1048d264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_544": {
									"entryPoint": null,
									"id": 544,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_2492": {
									"entryPoint": null,
									"id": 2492,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_sequentialUpTo_566": {
									"entryPoint": null,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_553": {
									"entryPoint": null,
									"id": 553,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 82,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3986:4",
										"nodeType": "YulBlock",
										"src": "0:3986:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:4",
													"nodeType": "YulBlock",
													"src": "46:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:4",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:4",
																				"nodeType": "YulLiteral",
																				"src": "70:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:4",
																				"nodeType": "YulLiteral",
																				"src": "75:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:4"
																		},
																		"nativeSrc": "66:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nativeSrc": "56:31:4",
																"nodeType": "YulFunctionCall",
																"src": "56:31:4"
															},
															"nativeSrc": "56:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:4",
																		"nodeType": "YulLiteral",
																		"src": "103:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:4",
																		"nodeType": "YulLiteral",
																		"src": "106:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:4"
																},
																"nativeSrc": "96:15:4",
																"nodeType": "YulFunctionCall",
																"src": "96:15:4"
															},
															"nativeSrc": "96:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:4",
																		"nodeType": "YulLiteral",
																		"src": "127:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:4",
																		"nodeType": "YulLiteral",
																		"src": "130:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nativeSrc": "120:15:4",
																"nodeType": "YulFunctionCall",
																"src": "120:15:4"
															},
															"nativeSrc": "120:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:4"
											},
											{
												"body": {
													"nativeSrc": "210:652:4",
													"nodeType": "YulBlock",
													"src": "210:652:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:4",
																"nodeType": "YulBlock",
																"src": "259:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:4",
																					"nodeType": "YulLiteral",
																					"src": "268:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:4",
																					"nodeType": "YulLiteral",
																					"src": "271:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:4"
																			},
																			"nativeSrc": "261:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:4"
																		},
																		"nativeSrc": "261:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:4",
																						"nodeType": "YulLiteral",
																						"src": "246:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:4"
																				},
																				"nativeSrc": "234:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:4"
																		},
																		"nativeSrc": "230:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:4"
																},
																"nativeSrc": "223:35:4",
																"nodeType": "YulFunctionCall",
																"src": "223:35:4"
															},
															"nativeSrc": "220:55:4",
															"nodeType": "YulIf",
															"src": "220:55:4"
														},
														{
															"nativeSrc": "284:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:4"
																},
																"nativeSrc": "294:13:4",
																"nodeType": "YulFunctionCall",
																"src": "294:13:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:4",
																	"nodeType": "YulTypedName",
																	"src": "288:2:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:4",
																				"nodeType": "YulLiteral",
																				"src": "334:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:4",
																				"nodeType": "YulLiteral",
																				"src": "338:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:4"
																		},
																		"nativeSrc": "330:10:4",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:4",
																		"nodeType": "YulLiteral",
																		"src": "342:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:4"
																},
																"nativeSrc": "326:18:4",
																"nodeType": "YulFunctionCall",
																"src": "326:18:4"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:4",
																	"nodeType": "YulTypedName",
																	"src": "320:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:4",
																"nodeType": "YulBlock",
																"src": "367:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:4"
																			},
																			"nativeSrc": "369:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:4"
																		},
																		"nativeSrc": "369:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:4"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:4"
																},
																"nativeSrc": "356:10:4",
																"nodeType": "YulFunctionCall",
																"src": "356:10:4"
															},
															"nativeSrc": "353:36:4",
															"nodeType": "YulIf",
															"src": "353:36:4"
														},
														{
															"nativeSrc": "398:17:4",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:4",
																		"nodeType": "YulLiteral",
																		"src": "412:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:4"
																},
																"nativeSrc": "408:7:4",
																"nodeType": "YulFunctionCall",
																"src": "408:7:4"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:4",
																	"nodeType": "YulTypedName",
																	"src": "402:2:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:4",
																		"nodeType": "YulLiteral",
																		"src": "444:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:4"
																},
																"nativeSrc": "438:9:4",
																"nodeType": "YulFunctionCall",
																"src": "438:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:4",
																	"nodeType": "YulTypedName",
																	"src": "428:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:4",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:4",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:4",
																										"nodeType": "YulLiteral",
																										"src": "506:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:4"
																								},
																								"nativeSrc": "498:13:4",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:4"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:4",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:4"
																						},
																						"nativeSrc": "494:22:4",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:4",
																						"nodeType": "YulLiteral",
																						"src": "518:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:4"
																				},
																				"nativeSrc": "490:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:4"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:4"
																		},
																		"nativeSrc": "486:40:4",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:4"
																},
																"nativeSrc": "474:53:4",
																"nodeType": "YulFunctionCall",
																"src": "474:53:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:4",
																	"nodeType": "YulTypedName",
																	"src": "460:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:4",
																"nodeType": "YulBlock",
																"src": "586:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:4"
																			},
																			"nativeSrc": "588:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:4"
																		},
																		"nativeSrc": "588:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:4"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:4"
																		},
																		"nativeSrc": "542:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:4"
																		},
																		"nativeSrc": "562:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:4"
																},
																"nativeSrc": "539:46:4",
																"nodeType": "YulFunctionCall",
																"src": "539:46:4"
															},
															"nativeSrc": "536:72:4",
															"nodeType": "YulIf",
															"src": "536:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:4",
																		"nodeType": "YulLiteral",
																		"src": "624:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:4"
																},
																"nativeSrc": "617:22:4",
																"nodeType": "YulFunctionCall",
																"src": "617:22:4"
															},
															"nativeSrc": "617:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:4"
																},
																"nativeSrc": "648:18:4",
																"nodeType": "YulFunctionCall",
																"src": "648:18:4"
															},
															"nativeSrc": "648:18:4",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:4"
														},
														{
															"body": {
																"nativeSrc": "714:16:4",
																"nodeType": "YulBlock",
																"src": "714:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "723:1:4",
																					"nodeType": "YulLiteral",
																					"src": "723:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "726:1:4",
																					"nodeType": "YulLiteral",
																					"src": "726:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "716:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "716:6:4"
																			},
																			"nativeSrc": "716:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "716:12:4"
																		},
																		"nativeSrc": "716:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "716:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "689:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "689:6:4"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "697:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "697:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "685:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "685:3:4"
																				},
																				"nativeSrc": "685:15:4",
																				"nodeType": "YulFunctionCall",
																				"src": "685:15:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:4:4",
																				"nodeType": "YulLiteral",
																				"src": "702:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "681:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:4"
																		},
																		"nativeSrc": "681:26:4",
																		"nodeType": "YulFunctionCall",
																		"src": "681:26:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "709:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "678:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "678:2:4"
																},
																"nativeSrc": "678:35:4",
																"nodeType": "YulFunctionCall",
																"src": "678:35:4"
															},
															"nativeSrc": "675:55:4",
															"nodeType": "YulIf",
															"src": "675:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "749:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "749:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "757:4:4",
																				"nodeType": "YulLiteral",
																				"src": "757:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "745:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "745:3:4"
																		},
																		"nativeSrc": "745:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "745:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "768:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "776:4:4",
																				"nodeType": "YulLiteral",
																				"src": "776:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "764:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "764:3:4"
																		},
																		"nativeSrc": "764:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "764:17:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "783:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "783:2:4"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "739:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "739:5:4"
																},
																"nativeSrc": "739:47:4",
																"nodeType": "YulFunctionCall",
																"src": "739:47:4"
															},
															"nativeSrc": "739:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "739:47:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "810:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:4"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "818:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "818:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "806:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "806:3:4"
																				},
																				"nativeSrc": "806:15:4",
																				"nodeType": "YulFunctionCall",
																				"src": "806:15:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "823:4:4",
																				"nodeType": "YulLiteral",
																				"src": "823:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "802:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:4"
																		},
																		"nativeSrc": "802:26:4",
																		"nodeType": "YulFunctionCall",
																		"src": "802:26:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:4",
																		"nodeType": "YulLiteral",
																		"src": "830:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:4"
																},
																"nativeSrc": "795:37:4",
																"nodeType": "YulFunctionCall",
																"src": "795:37:4"
															},
															"nativeSrc": "795:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "795:37:4"
														},
														{
															"nativeSrc": "841:15:4",
															"nodeType": "YulAssignment",
															"src": "841:15:4",
															"value": {
																"name": "memPtr",
																"nativeSrc": "850:6:4",
																"nodeType": "YulIdentifier",
																"src": "850:6:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "841:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "841:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:716:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:4",
														"nodeType": "YulTypedName",
														"src": "184:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:4",
														"nodeType": "YulTypedName",
														"src": "192:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:4",
														"nodeType": "YulTypedName",
														"src": "200:5:4",
														"type": ""
													}
												],
												"src": "146:716:4"
											},
											{
												"body": {
													"nativeSrc": "985:444:4",
													"nodeType": "YulBlock",
													"src": "985:444:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1031:16:4",
																"nodeType": "YulBlock",
																"src": "1031:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1043:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1043:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1033:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1033:6:4"
																			},
																			"nativeSrc": "1033:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1033:12:4"
																		},
																		"nativeSrc": "1033:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1033:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1006:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1006:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1015:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1002:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:4"
																		},
																		"nativeSrc": "1002:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1002:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1027:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1027:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "998:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "998:3:4"
																},
																"nativeSrc": "998:32:4",
																"nodeType": "YulFunctionCall",
																"src": "998:32:4"
															},
															"nativeSrc": "995:52:4",
															"nodeType": "YulIf",
															"src": "995:52:4"
														},
														{
															"nativeSrc": "1056:30:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1056:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1076:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1076:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1070:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1070:5:4"
																},
																"nativeSrc": "1070:16:4",
																"nodeType": "YulFunctionCall",
																"src": "1070:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1060:6:4",
																	"nodeType": "YulTypedName",
																	"src": "1060:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1095:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1095:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1113:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1113:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1117:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1117:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1109:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:4"
																		},
																		"nativeSrc": "1109:10:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1109:10:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1105:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1105:3:4"
																},
																"nativeSrc": "1105:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1105:18:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1099:2:4",
																	"nodeType": "YulTypedName",
																	"src": "1099:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1150:16:4",
																"nodeType": "YulBlock",
																"src": "1150:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1159:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1159:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1162:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1152:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1152:6:4"
																			},
																			"nativeSrc": "1152:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1152:12:4"
																		},
																		"nativeSrc": "1152:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1152:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1138:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1138:6:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1146:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "1146:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1135:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1135:2:4"
																},
																"nativeSrc": "1135:14:4",
																"nodeType": "YulFunctionCall",
																"src": "1135:14:4"
															},
															"nativeSrc": "1132:34:4",
															"nodeType": "YulIf",
															"src": "1132:34:4"
														},
														{
															"nativeSrc": "1175:71:4",
															"nodeType": "YulAssignment",
															"src": "1175:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1218:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1218:9:4"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1229:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1214:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1214:3:4"
																		},
																		"nativeSrc": "1214:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1214:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1238:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1238:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1185:28:4",
																	"nodeType": "YulIdentifier",
																	"src": "1185:28:4"
																},
																"nativeSrc": "1185:61:4",
																"nodeType": "YulFunctionCall",
																"src": "1185:61:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1175:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1175:6:4"
																}
															]
														},
														{
															"nativeSrc": "1255:41:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1281:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1281:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1292:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1292:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1277:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1277:3:4"
																		},
																		"nativeSrc": "1277:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1277:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1271:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1271:5:4"
																},
																"nativeSrc": "1271:25:4",
																"nodeType": "YulFunctionCall",
																"src": "1271:25:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1259:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1259:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1325:16:4",
																"nodeType": "YulBlock",
																"src": "1325:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1334:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1334:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1337:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1337:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1327:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1327:6:4"
																			},
																			"nativeSrc": "1327:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1327:12:4"
																		},
																		"nativeSrc": "1327:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1327:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1311:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "1311:8:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1321:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "1321:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1308:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1308:2:4"
																},
																"nativeSrc": "1308:16:4",
																"nodeType": "YulFunctionCall",
																"src": "1308:16:4"
															},
															"nativeSrc": "1305:36:4",
															"nodeType": "YulIf",
															"src": "1305:36:4"
														},
														{
															"nativeSrc": "1350:73:4",
															"nodeType": "YulAssignment",
															"src": "1350:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1393:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1404:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "1404:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1389:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:4"
																		},
																		"nativeSrc": "1389:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1415:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1415:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1360:28:4",
																	"nodeType": "YulIdentifier",
																	"src": "1360:28:4"
																},
																"nativeSrc": "1360:63:4",
																"nodeType": "YulFunctionCall",
																"src": "1360:63:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1350:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "867:562:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "943:9:4",
														"nodeType": "YulTypedName",
														"src": "943:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "954:7:4",
														"nodeType": "YulTypedName",
														"src": "954:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "966:6:4",
														"nodeType": "YulTypedName",
														"src": "966:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "974:6:4",
														"nodeType": "YulTypedName",
														"src": "974:6:4",
														"type": ""
													}
												],
												"src": "867:562:4"
											},
											{
												"body": {
													"nativeSrc": "1489:325:4",
													"nodeType": "YulBlock",
													"src": "1489:325:4",
													"statements": [
														{
															"nativeSrc": "1499:22:4",
															"nodeType": "YulAssignment",
															"src": "1499:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1513:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1513:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1516:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1516:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1509:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:4"
																},
																"nativeSrc": "1509:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1509:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1499:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:4"
																}
															]
														},
														{
															"nativeSrc": "1530:38:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1530:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1560:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1560:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1566:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1566:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1556:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1556:3:4"
																},
																"nativeSrc": "1556:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1556:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1534:18:4",
																	"nodeType": "YulTypedName",
																	"src": "1534:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:31:4",
																"nodeType": "YulBlock",
																"src": "1607:31:4",
																"statements": [
																	{
																		"nativeSrc": "1609:27:4",
																		"nodeType": "YulAssignment",
																		"src": "1609:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1623:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "1623:6:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1631:4:4",
																					"nodeType": "YulLiteral",
																					"src": "1631:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1619:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "1619:3:4"
																			},
																			"nativeSrc": "1619:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1619:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1609:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1609:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1587:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "1587:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1580:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:4"
																},
																"nativeSrc": "1580:26:4",
																"nodeType": "YulFunctionCall",
																"src": "1580:26:4"
															},
															"nativeSrc": "1577:61:4",
															"nodeType": "YulIf",
															"src": "1577:61:4"
														},
														{
															"body": {
																"nativeSrc": "1697:111:4",
																"nodeType": "YulBlock",
																"src": "1697:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1718:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1718:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1725:3:4",
																							"nodeType": "YulLiteral",
																							"src": "1725:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1730:10:4",
																							"nodeType": "YulLiteral",
																							"src": "1730:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1721:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "1721:3:4"
																					},
																					"nativeSrc": "1721:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1721:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1711:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:4"
																			},
																			"nativeSrc": "1711:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1711:31:4"
																		},
																		"nativeSrc": "1711:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1711:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1762:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1762:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1765:4:4",
																					"nodeType": "YulLiteral",
																					"src": "1765:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1755:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1755:6:4"
																			},
																			"nativeSrc": "1755:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1755:15:4"
																		},
																		"nativeSrc": "1755:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1755:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1790:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1790:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1793:4:4",
																					"nodeType": "YulLiteral",
																					"src": "1793:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1783:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1783:6:4"
																			},
																			"nativeSrc": "1783:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1783:15:4"
																		},
																		"nativeSrc": "1783:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1783:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1653:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "1653:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1676:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1684:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1684:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1673:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1673:2:4"
																		},
																		"nativeSrc": "1673:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1650:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1650:2:4"
																},
																"nativeSrc": "1650:38:4",
																"nodeType": "YulFunctionCall",
																"src": "1650:38:4"
															},
															"nativeSrc": "1647:161:4",
															"nodeType": "YulIf",
															"src": "1647:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1434:380:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1469:4:4",
														"nodeType": "YulTypedName",
														"src": "1469:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1478:6:4",
														"nodeType": "YulTypedName",
														"src": "1478:6:4",
														"type": ""
													}
												],
												"src": "1434:380:4"
											},
											{
												"body": {
													"nativeSrc": "1875:65:4",
													"nodeType": "YulBlock",
													"src": "1875:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1892:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1892:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1895:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1885:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1885:6:4"
																},
																"nativeSrc": "1885:14:4",
																"nodeType": "YulFunctionCall",
																"src": "1885:14:4"
															},
															"nativeSrc": "1885:14:4",
															"nodeType": "YulExpressionStatement",
															"src": "1885:14:4"
														},
														{
															"nativeSrc": "1908:26:4",
															"nodeType": "YulAssignment",
															"src": "1908:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1926:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1926:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1929:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1929:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1916:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1916:9:4"
																},
																"nativeSrc": "1916:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1916:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1908:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1908:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1819:121:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1858:3:4",
														"nodeType": "YulTypedName",
														"src": "1858:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1866:4:4",
														"nodeType": "YulTypedName",
														"src": "1866:4:4",
														"type": ""
													}
												],
												"src": "1819:121:4"
											},
											{
												"body": {
													"nativeSrc": "2026:437:4",
													"nodeType": "YulBlock",
													"src": "2026:437:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2059:398:4",
																"nodeType": "YulBlock",
																"src": "2059:398:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2080:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2080:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2083:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "2083:5:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2073:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2073:6:4"
																			},
																			"nativeSrc": "2073:16:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2073:16:4"
																		},
																		"nativeSrc": "2073:16:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2073:16:4"
																	},
																	{
																		"nativeSrc": "2102:30:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2102:30:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2124:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2124:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2127:4:4",
																					"nodeType": "YulLiteral",
																					"src": "2127:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2114:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2114:9:4"
																			},
																			"nativeSrc": "2114:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2114:18:4"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2106:4:4",
																				"nodeType": "YulTypedName",
																				"src": "2106:4:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2145:57:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2145:57:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2168:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "2168:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2178:1:4",
																							"nodeType": "YulLiteral",
																							"src": "2178:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2185:10:4",
																									"nodeType": "YulIdentifier",
																									"src": "2185:10:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2197:2:4",
																									"nodeType": "YulLiteral",
																									"src": "2197:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2181:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "2181:3:4"
																							},
																							"nativeSrc": "2181:19:4",
																							"nodeType": "YulFunctionCall",
																							"src": "2181:19:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2174:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2174:3:4"
																					},
																					"nativeSrc": "2174:27:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2174:27:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2164:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2164:3:4"
																			},
																			"nativeSrc": "2164:38:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2164:38:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2149:11:4",
																				"nodeType": "YulTypedName",
																				"src": "2149:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2239:23:4",
																			"nodeType": "YulBlock",
																			"src": "2239:23:4",
																			"statements": [
																				{
																					"nativeSrc": "2241:19:4",
																					"nodeType": "YulAssignment",
																					"src": "2241:19:4",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2256:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "2256:4:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2241:11:4",
																							"nodeType": "YulIdentifier",
																							"src": "2241:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2221:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "2221:10:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2233:4:4",
																					"nodeType": "YulLiteral",
																					"src": "2233:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2218:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "2218:2:4"
																			},
																			"nativeSrc": "2218:20:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2218:20:4"
																		},
																		"nativeSrc": "2215:47:4",
																		"nodeType": "YulIf",
																		"src": "2215:47:4"
																	},
																	{
																		"nativeSrc": "2275:41:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2275:41:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2289:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "2289:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2299:1:4",
																							"nodeType": "YulLiteral",
																							"src": "2299:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2306:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "2306:3:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2311:2:4",
																									"nodeType": "YulLiteral",
																									"src": "2311:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2302:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "2302:3:4"
																							},
																							"nativeSrc": "2302:12:4",
																							"nodeType": "YulFunctionCall",
																							"src": "2302:12:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2295:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2295:3:4"
																					},
																					"nativeSrc": "2295:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2295:20:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2285:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2285:3:4"
																			},
																			"nativeSrc": "2285:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2285:31:4"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2279:2:4",
																				"nodeType": "YulTypedName",
																				"src": "2279:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2329:24:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2329:24:4",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2342:11:4",
																			"nodeType": "YulIdentifier",
																			"src": "2342:11:4"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2333:5:4",
																				"nodeType": "YulTypedName",
																				"src": "2333:5:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2427:20:4",
																			"nodeType": "YulBlock",
																			"src": "2427:20:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2436:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "2436:5:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2443:1:4",
																								"nodeType": "YulLiteral",
																								"src": "2443:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2429:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "2429:6:4"
																						},
																						"nativeSrc": "2429:16:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2429:16:4"
																					},
																					"nativeSrc": "2429:16:4",
																					"nodeType": "YulExpressionStatement",
																					"src": "2429:16:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2377:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "2377:5:4"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2384:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "2384:2:4"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2374:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "2374:2:4"
																			},
																			"nativeSrc": "2374:13:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2374:13:4"
																		},
																		"nativeSrc": "2366:81:4",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2388:26:4",
																			"nodeType": "YulBlock",
																			"src": "2388:26:4",
																			"statements": [
																				{
																					"nativeSrc": "2390:22:4",
																					"nodeType": "YulAssignment",
																					"src": "2390:22:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2403:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "2403:5:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2410:1:4",
																								"nodeType": "YulLiteral",
																								"src": "2410:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2399:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "2399:3:4"
																						},
																						"nativeSrc": "2399:13:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2399:13:4"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2390:5:4",
																							"nodeType": "YulIdentifier",
																							"src": "2390:5:4"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2370:3:4",
																			"nodeType": "YulBlock",
																			"src": "2370:3:4",
																			"statements": []
																		},
																		"src": "2366:81:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2042:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2042:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2047:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2047:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2039:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2039:2:4"
																},
																"nativeSrc": "2039:11:4",
																"nodeType": "YulFunctionCall",
																"src": "2039:11:4"
															},
															"nativeSrc": "2036:421:4",
															"nodeType": "YulIf",
															"src": "2036:421:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1945:518:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1998:5:4",
														"nodeType": "YulTypedName",
														"src": "1998:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2005:3:4",
														"nodeType": "YulTypedName",
														"src": "2005:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2010:10:4",
														"nodeType": "YulTypedName",
														"src": "2010:10:4",
														"type": ""
													}
												],
												"src": "1945:518:4"
											},
											{
												"body": {
													"nativeSrc": "2553:81:4",
													"nodeType": "YulBlock",
													"src": "2553:81:4",
													"statements": [
														{
															"nativeSrc": "2563:65:4",
															"nodeType": "YulAssignment",
															"src": "2563:65:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2578:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2578:4:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2596:1:4",
																										"nodeType": "YulLiteral",
																										"src": "2596:1:4",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2599:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "2599:3:4"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2592:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "2592:3:4"
																								},
																								"nativeSrc": "2592:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2592:11:4"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2609:1:4",
																										"nodeType": "YulLiteral",
																										"src": "2609:1:4",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2605:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "2605:3:4"
																								},
																								"nativeSrc": "2605:6:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2605:6:4"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2588:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "2588:3:4"
																						},
																						"nativeSrc": "2588:24:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2588:24:4"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2584:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2584:3:4"
																				},
																				"nativeSrc": "2584:29:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:29:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2574:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:4"
																		},
																		"nativeSrc": "2574:40:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:40:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:4",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2623:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2623:3:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2616:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2616:3:4"
																		},
																		"nativeSrc": "2616:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2616:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2571:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2571:2:4"
																},
																"nativeSrc": "2571:57:4",
																"nodeType": "YulFunctionCall",
																"src": "2571:57:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2563:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2563:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2468:166:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2530:4:4",
														"nodeType": "YulTypedName",
														"src": "2530:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2536:3:4",
														"nodeType": "YulTypedName",
														"src": "2536:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2544:4:4",
														"nodeType": "YulTypedName",
														"src": "2544:4:4",
														"type": ""
													}
												],
												"src": "2468:166:4"
											},
											{
												"body": {
													"nativeSrc": "2735:1249:4",
													"nodeType": "YulBlock",
													"src": "2735:1249:4",
													"statements": [
														{
															"nativeSrc": "2745:24:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2745:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2765:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2765:3:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2759:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2759:5:4"
																},
																"nativeSrc": "2759:10:4",
																"nodeType": "YulFunctionCall",
																"src": "2759:10:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2749:6:4",
																	"nodeType": "YulTypedName",
																	"src": "2749:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2812:22:4",
																"nodeType": "YulBlock",
																"src": "2812:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2814:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "2814:16:4"
																			},
																			"nativeSrc": "2814:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2814:18:4"
																		},
																		"nativeSrc": "2814:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2814:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2800:2:4",
																						"nodeType": "YulLiteral",
																						"src": "2800:2:4",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2804:1:4",
																						"nodeType": "YulLiteral",
																						"src": "2804:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2796:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:4"
																				},
																				"nativeSrc": "2796:10:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2796:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2808:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2808:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2792:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:4"
																		},
																		"nativeSrc": "2792:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:18:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2781:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2781:2:4"
																},
																"nativeSrc": "2781:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2781:30:4"
															},
															"nativeSrc": "2778:56:4",
															"nodeType": "YulIf",
															"src": "2778:56:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2887:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2887:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2925:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "2925:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2919:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "2919:5:4"
																				},
																				"nativeSrc": "2919:11:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:11:4"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2893:25:4",
																			"nodeType": "YulIdentifier",
																			"src": "2893:25:4"
																		},
																		"nativeSrc": "2893:38:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2893:38:4"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2933:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2843:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2843:43:4"
																},
																"nativeSrc": "2843:97:4",
																"nodeType": "YulFunctionCall",
																"src": "2843:97:4"
															},
															"nativeSrc": "2843:97:4",
															"nodeType": "YulExpressionStatement",
															"src": "2843:97:4"
														},
														{
															"nativeSrc": "2949:18:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2949:18:4",
															"value": {
																"kind": "number",
																"nativeSrc": "2966:1:4",
																"nodeType": "YulLiteral",
																"src": "2966:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2953:9:4",
																	"nodeType": "YulTypedName",
																	"src": "2953:9:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2976:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2976:23:4",
															"value": {
																"kind": "number",
																"nativeSrc": "2995:4:4",
																"nodeType": "YulLiteral",
																"src": "2995:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2980:11:4",
																	"nodeType": "YulTypedName",
																	"src": "2980:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3008:17:4",
															"nodeType": "YulAssignment",
															"src": "3008:17:4",
															"value": {
																"kind": "number",
																"nativeSrc": "3021:4:4",
																"nodeType": "YulLiteral",
																"src": "3021:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3008:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "3008:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3071:656:4",
																		"nodeType": "YulBlock",
																		"src": "3071:656:4",
																		"statements": [
																			{
																				"nativeSrc": "3085:35:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3085:35:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3104:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "3104:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3116:2:4",
																									"nodeType": "YulLiteral",
																									"src": "3116:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3112:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "3112:3:4"
																							},
																							"nativeSrc": "3112:7:4",
																							"nodeType": "YulFunctionCall",
																							"src": "3112:7:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3100:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "3100:3:4"
																					},
																					"nativeSrc": "3100:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3100:20:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3089:7:4",
																						"nodeType": "YulTypedName",
																						"src": "3089:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3133:49:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3133:49:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3177:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "3177:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3147:29:4",
																						"nodeType": "YulIdentifier",
																						"src": "3147:29:4"
																					},
																					"nativeSrc": "3147:35:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3147:35:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3137:6:4",
																						"nodeType": "YulTypedName",
																						"src": "3137:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3195:10:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3195:10:4",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3204:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3204:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3199:1:4",
																						"nodeType": "YulTypedName",
																						"src": "3199:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3282:172:4",
																					"nodeType": "YulBlock",
																					"src": "3282:172:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3307:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "3307:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3325:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "3325:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3330:9:4",
																														"nodeType": "YulIdentifier",
																														"src": "3330:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3321:3:4",
																													"nodeType": "YulIdentifier",
																													"src": "3321:3:4"
																												},
																												"nativeSrc": "3321:19:4",
																												"nodeType": "YulFunctionCall",
																												"src": "3321:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3315:5:4",
																											"nodeType": "YulIdentifier",
																											"src": "3315:5:4"
																										},
																										"nativeSrc": "3315:26:4",
																										"nodeType": "YulFunctionCall",
																										"src": "3315:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3300:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "3300:6:4"
																								},
																								"nativeSrc": "3300:42:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3300:42:4"
																							},
																							"nativeSrc": "3300:42:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "3300:42:4"
																						},
																						{
																							"nativeSrc": "3359:24:4",
																							"nodeType": "YulAssignment",
																							"src": "3359:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3373:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "3373:6:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3381:1:4",
																										"nodeType": "YulLiteral",
																										"src": "3381:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3369:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "3369:3:4"
																								},
																								"nativeSrc": "3369:14:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3369:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3359:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "3359:6:4"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3400:40:4",
																							"nodeType": "YulAssignment",
																							"src": "3400:40:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3417:9:4",
																										"nodeType": "YulIdentifier",
																										"src": "3417:9:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3428:11:4",
																										"nodeType": "YulIdentifier",
																										"src": "3428:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3413:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "3413:3:4"
																								},
																								"nativeSrc": "3413:27:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3413:27:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3400:9:4",
																									"nodeType": "YulIdentifier",
																									"src": "3400:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3229:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "3229:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3232:7:4",
																							"nodeType": "YulIdentifier",
																							"src": "3232:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3226:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "3226:2:4"
																					},
																					"nativeSrc": "3226:14:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3226:14:4"
																				},
																				"nativeSrc": "3218:236:4",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3241:28:4",
																					"nodeType": "YulBlock",
																					"src": "3241:28:4",
																					"statements": [
																						{
																							"nativeSrc": "3243:24:4",
																							"nodeType": "YulAssignment",
																							"src": "3243:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3252:1:4",
																										"nodeType": "YulIdentifier",
																										"src": "3252:1:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3255:11:4",
																										"nodeType": "YulIdentifier",
																										"src": "3255:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3248:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "3248:3:4"
																								},
																								"nativeSrc": "3248:19:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3248:19:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3243:1:4",
																									"nodeType": "YulIdentifier",
																									"src": "3243:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3222:3:4",
																					"nodeType": "YulBlock",
																					"src": "3222:3:4",
																					"statements": []
																				},
																				"src": "3218:236:4"
																			},
																			{
																				"body": {
																					"nativeSrc": "3502:166:4",
																					"nodeType": "YulBlock",
																					"src": "3502:166:4",
																					"statements": [
																						{
																							"nativeSrc": "3520:43:4",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3520:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3547:3:4",
																												"nodeType": "YulIdentifier",
																												"src": "3547:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3552:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "3552:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3543:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "3543:3:4"
																										},
																										"nativeSrc": "3543:19:4",
																										"nodeType": "YulFunctionCall",
																										"src": "3543:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3537:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "3537:5:4"
																								},
																								"nativeSrc": "3537:26:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3537:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3524:9:4",
																									"nodeType": "YulTypedName",
																									"src": "3524:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3587:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "3587:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3599:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "3599:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3626:1:4",
																																				"nodeType": "YulLiteral",
																																				"src": "3626:1:4",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3629:6:4",
																																				"nodeType": "YulIdentifier",
																																				"src": "3629:6:4"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3622:3:4",
																																			"nodeType": "YulIdentifier",
																																			"src": "3622:3:4"
																																		},
																																		"nativeSrc": "3622:14:4",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3622:14:4"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3638:3:4",
																																		"nodeType": "YulLiteral",
																																		"src": "3638:3:4",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3618:3:4",
																																	"nodeType": "YulIdentifier",
																																	"src": "3618:3:4"
																																},
																																"nativeSrc": "3618:24:4",
																																"nodeType": "YulFunctionCall",
																																"src": "3618:24:4"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3648:1:4",
																																		"nodeType": "YulLiteral",
																																		"src": "3648:1:4",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3644:3:4",
																																	"nodeType": "YulIdentifier",
																																	"src": "3644:3:4"
																																},
																																"nativeSrc": "3644:6:4",
																																"nodeType": "YulFunctionCall",
																																"src": "3644:6:4"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3614:3:4",
																															"nodeType": "YulIdentifier",
																															"src": "3614:3:4"
																														},
																														"nativeSrc": "3614:37:4",
																														"nodeType": "YulFunctionCall",
																														"src": "3614:37:4"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3610:3:4",
																													"nodeType": "YulIdentifier",
																													"src": "3610:3:4"
																												},
																												"nativeSrc": "3610:42:4",
																												"nodeType": "YulFunctionCall",
																												"src": "3610:42:4"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3595:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "3595:3:4"
																										},
																										"nativeSrc": "3595:58:4",
																										"nodeType": "YulFunctionCall",
																										"src": "3595:58:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3580:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "3580:6:4"
																								},
																								"nativeSrc": "3580:74:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3580:74:4"
																							},
																							"nativeSrc": "3580:74:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "3580:74:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3473:7:4",
																							"nodeType": "YulIdentifier",
																							"src": "3473:7:4"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3482:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "3482:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3470:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "3470:2:4"
																					},
																					"nativeSrc": "3470:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3470:19:4"
																				},
																				"nativeSrc": "3467:201:4",
																				"nodeType": "YulIf",
																				"src": "3467:201:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3688:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "3688:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3702:1:4",
																											"nodeType": "YulLiteral",
																											"src": "3702:1:4",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3705:6:4",
																											"nodeType": "YulIdentifier",
																											"src": "3705:6:4"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3698:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "3698:3:4"
																									},
																									"nativeSrc": "3698:14:4",
																									"nodeType": "YulFunctionCall",
																									"src": "3698:14:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3714:1:4",
																									"nodeType": "YulLiteral",
																									"src": "3714:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3694:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "3694:3:4"
																							},
																							"nativeSrc": "3694:22:4",
																							"nodeType": "YulFunctionCall",
																							"src": "3694:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3681:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3681:6:4"
																					},
																					"nativeSrc": "3681:36:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3681:36:4"
																				},
																				"nativeSrc": "3681:36:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "3681:36:4"
																			}
																		]
																	},
																	"nativeSrc": "3064:663:4",
																	"nodeType": "YulCase",
																	"src": "3064:663:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3069:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3069:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3744:234:4",
																		"nodeType": "YulBlock",
																		"src": "3744:234:4",
																		"statements": [
																			{
																				"nativeSrc": "3758:14:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3758:14:4",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3771:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3771:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3762:5:4",
																						"nodeType": "YulTypedName",
																						"src": "3762:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3807:67:4",
																					"nodeType": "YulBlock",
																					"src": "3807:67:4",
																					"statements": [
																						{
																							"nativeSrc": "3825:35:4",
																							"nodeType": "YulAssignment",
																							"src": "3825:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3844:3:4",
																												"nodeType": "YulIdentifier",
																												"src": "3844:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3849:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "3849:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3840:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "3840:3:4"
																										},
																										"nativeSrc": "3840:19:4",
																										"nodeType": "YulFunctionCall",
																										"src": "3840:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3834:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "3834:5:4"
																								},
																								"nativeSrc": "3834:26:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3834:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3825:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "3825:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3788:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3788:6:4"
																				},
																				"nativeSrc": "3785:89:4",
																				"nodeType": "YulIf",
																				"src": "3785:89:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3894:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "3894:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:4"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3960:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "3960:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3900:52:4",
																								"nodeType": "YulIdentifier",
																								"src": "3900:52:4"
																							},
																							"nativeSrc": "3900:67:4",
																							"nodeType": "YulFunctionCall",
																							"src": "3900:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3887:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3887:6:4"
																					},
																					"nativeSrc": "3887:81:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3887:81:4"
																				},
																				"nativeSrc": "3887:81:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "3887:81:4"
																			}
																		]
																	},
																	"nativeSrc": "3736:242:4",
																	"nodeType": "YulCase",
																	"src": "3736:242:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3044:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3044:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3052:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3041:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3041:2:4"
																},
																"nativeSrc": "3041:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3041:14:4"
															},
															"nativeSrc": "3034:944:4",
															"nodeType": "YulSwitch",
															"src": "3034:944:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2639:1345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2720:4:4",
														"nodeType": "YulTypedName",
														"src": "2720:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2726:3:4",
														"nodeType": "YulTypedName",
														"src": "2726:3:4",
														"type": ""
													}
												],
												"src": "2639:1345:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10A8 CODESIZE SUB DUP1 PUSH2 0x10A8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x2 PUSH2 0x3A DUP4 DUP3 PUSH2 0x1D1 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x47 DUP3 DUP3 PUSH2 0x1D1 JUMP JUMPDEST POP POP PUSH0 DUP1 SSTORE POP PUSH2 0x290 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x75 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x8F JUMPI PUSH2 0x8F PUSH2 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB7 JUMPI PUSH2 0xB7 PUSH2 0x52 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x121 DUP7 DUP4 DUP8 ADD PUSH2 0x66 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 DUP6 DUP3 DUP7 ADD PUSH2 0x66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x161 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1CC JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1AA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1EA JUMPI PUSH2 0x1EA PUSH2 0x52 JUMP JUMPDEST PUSH2 0x1FE DUP2 PUSH2 0x1F8 DUP5 SLOAD PUSH2 0x14D JUMP JUMPDEST DUP5 PUSH2 0x185 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x231 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x21A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x288 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x240 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x27C JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE0B DUP1 PUSH2 0x29D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x132 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x669 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x311 JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x345 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x35A SWAP1 PUSH2 0xCFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x386 SWAP1 PUSH2 0xCFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3E5 DUP3 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x412 JUMPI PUSH2 0x412 PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x439 DUP3 DUP3 PUSH1 0x1 PUSH2 0x80B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x447 DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x487 JUMPI PUSH2 0x487 PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x4E3 JUMPI PUSH2 0x4B6 DUP7 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x4E3 JUMPI PUSH2 0x4E3 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x579 JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x577 JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0x577 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP1 PUSH0 SUB PUSH2 0x5DA JUMPI PUSH2 0x5DA PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5FD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x345 DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x644 JUMPI PUSH2 0x644 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x35A SWAP1 PUSH2 0xCFB JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6EE DUP5 DUP5 DUP5 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x71E JUMPI PUSH2 0x70A DUP5 DUP5 DUP5 DUP5 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x71E JUMPI PUSH2 0x71E PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x72F DUP3 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x75C JUMPI PUSH2 0x75C PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 PUSH2 0x771 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7BA JUMP JUMPDEST DUP1 PUSH2 0x799 DUP5 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7AA SWAP3 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x7FE JUMPI PUSH0 JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x7F4 JUMPI PUSH2 0x7ED DUP4 PUSH2 0xD5E JUMP JUMPDEST SWAP3 POP PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x815 DUP4 PUSH2 0x602 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x82D JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x869 JUMPI PUSH2 0x83C DUP2 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x869 JUMPI PUSH2 0x869 PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH0 SUB PUSH2 0x94A JUMPI PUSH0 SLOAD DUP3 LT PUSH2 0x90A JUMPI PUSH2 0x90A PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST JUMPDEST POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x90B JUMPI PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x935 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x945 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x95C JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FE PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x9A0 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9DA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9D7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA2D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xA25 JUMPI PUSH2 0xA25 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xA64 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7BA DUP2 PUSH2 0xA8E JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x7BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB48 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB71 DUP5 PUSH2 0xB18 JUMP JUMPDEST SWAP3 POP PUSH2 0xB7F PUSH1 0x20 DUP6 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP3 PUSH2 0xB18 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBC2 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC08 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC11 DUP6 PUSH2 0xB18 JUMP JUMPDEST SWAP4 POP PUSH2 0xC1F PUSH1 0x20 DUP7 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC55 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC67 JUMPI PUSH2 0xC67 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC8F JUMPI PUSH2 0xC8F PUSH2 0xBE1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xCA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCE4 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF2 PUSH1 0x20 DUP5 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD0F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA43 PUSH2 0xD58 DUP4 DUP7 PUSH2 0xD33 JUMP JUMPDEST DUP5 PUSH2 0xD33 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xD78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xDB0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7BA DUP2 PUSH2 0xA8E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH21 0x96B2867D8DFCBBF6DAEFFC9875BCD72A2888C43862 SLOAD MSTORE8 STATICCALL PUSH9 0xE86C1048D264736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "1053:48812:2:-:0;;;5261:246;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5327:5;:13;5335:5;5327;:13;:::i;:::-;-1:-1:-1;5350:7:2;:17;5360:7;5350;:17;:::i;:::-;-1:-1:-1;;6022:7:2;5377:31;;-1:-1:-1;1053:48812:2;;14:127:4;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:716;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:4;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:4;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;709:3;702:4;697:2;689:6;685:15;681:26;678:35;675:55;;;726:1;723;716:12;675:55;783:2;776:4;768:6;764:17;757:4;749:6;745:17;739:47;830:1;823:4;818:2;810:6;806:15;802:26;795:37;850:6;841:15;;;;;;146:716;;;;:::o;867:562::-;966:6;974;1027:2;1015:9;1006:7;1002:23;998:32;995:52;;;1043:1;1040;1033:12;995:52;1070:16;;-1:-1:-1;;;;;1135:14:4;;;1132:34;;;1162:1;1159;1152:12;1132:34;1185:61;1238:7;1229:6;1218:9;1214:22;1185:61;:::i;:::-;1175:71;;1292:2;1281:9;1277:18;1271:25;1255:41;;1321:2;1311:8;1308:16;1305:36;;;1337:1;1334;1327:12;1305:36;;1360:63;1415:7;1404:8;1393:9;1389:24;1360:63;:::i;:::-;1350:73;;;867:562;;;;;:::o;1434:380::-;1513:1;1509:12;;;;1556;;;1577:61;;1631:4;1623:6;1619:17;1609:27;;1577:61;1684:2;1676:6;1673:14;1653:18;1650:38;1647:161;;1730:10;1725:3;1721:20;1718:1;1711:31;1765:4;1762:1;1755:15;1793:4;1790:1;1783:15;1647:161;;1434:380;;;:::o;1945:518::-;2047:2;2042:3;2039:11;2036:421;;;2083:5;2080:1;2073:16;2127:4;2124:1;2114:18;2197:2;2185:10;2181:19;2178:1;2174:27;2168:4;2164:38;2233:4;2221:10;2218:20;2215:47;;;-1:-1:-1;2256:4:4;2215:47;2311:2;2306:3;2302:12;2299:1;2295:20;2289:4;2285:31;2275:41;;2366:81;2384:2;2377:5;2374:13;2366:81;;;2443:1;2429:16;;2410:1;2399:13;2366:81;;;2370:3;;2036:421;1945:518;;;:::o;2639:1345::-;2759:10;;-1:-1:-1;;;;;2781:30:4;;2778:56;;;2814:18;;:::i;:::-;2843:97;2933:6;2893:38;2925:4;2919:11;2893:38;:::i;:::-;2887:4;2843:97;:::i;:::-;2995:4;;3052:2;3041:14;;3069:1;3064:663;;;;3771:1;3788:6;3785:89;;;-1:-1:-1;3840:19:4;;;3834:26;3785:89;-1:-1:-1;;2596:1:4;2592:11;;;2588:24;2584:29;2574:40;2620:1;2616:11;;;2571:57;3887:81;;3034:944;;3064:663;1892:1;1885:14;;;1929:4;1916:18;;-1:-1:-1;;3100:20:4;;;3218:236;3232:7;3229:1;3226:14;3218:236;;;3321:19;;;3315:26;3300:42;;3413:27;;;;3381:1;3369:14;;;;3248:19;;3218:236;;;3222:3;3482:6;3473:7;3470:19;3467:201;;;3543:19;;;3537:26;-1:-1:-1;;3626:1:4;3622:14;;;3638:3;3618:24;3614:37;3610:42;3595:58;3580:74;;3467:201;;;3714:1;3705:6;3702:1;3698:14;3694:22;3688:4;3681:36;3034:944;;;;;2639:1345;;:::o;:::-;1053:48812:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1565": {
									"entryPoint": null,
									"id": 1565,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2206": {
									"entryPoint": 2059,
									"id": 2206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_867": {
									"entryPoint": null,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1552": {
									"entryPoint": null,
									"id": 1552,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1621": {
									"entryPoint": 2412,
									"id": 1621,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1264": {
									"entryPoint": 1985,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2431": {
									"entryPoint": null,
									"id": 2431,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1288": {
									"entryPoint": null,
									"id": 1288,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_2474": {
									"entryPoint": null,
									"id": 2474,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2464": {
									"entryPoint": null,
									"id": 2464,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_1115": {
									"entryPoint": null,
									"id": 1115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipExists_1274": {
									"entryPoint": null,
									"id": 1274,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1049": {
									"entryPoint": 2269,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_2492": {
									"entryPoint": 2051,
									"id": 2492,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_sequentialUpTo_566": {
									"entryPoint": null,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_553": {
									"entryPoint": null,
									"id": 553,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2484": {
									"entryPoint": 2635,
									"id": 2484,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_1141": {
									"entryPoint": 1069,
									"id": 1141,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_680": {
									"entryPoint": 1548,
									"id": 680,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1166": {
									"entryPoint": 987,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1210": {
									"entryPoint": null,
									"id": 1210,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_803": {
									"entryPoint": 843,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_887": {
									"entryPoint": 1538,
									"id": 887,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1499": {
									"entryPoint": 1507,
									"id": 1499,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1539": {
									"entryPoint": 1763,
									"id": 1539,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1192": {
									"entryPoint": 1656,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_793": {
									"entryPoint": 687,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_813": {
									"entryPoint": 1641,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_858": {
									"entryPoint": 1828,
									"id": 858,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_606": {
									"entryPoint": null,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1480": {
									"entryPoint": 1085,
									"id": 1480,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6715:4",
										"nodeType": "YulBlock",
										"src": "0:6715:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:133:4",
													"nodeType": "YulBlock",
													"src": "58:133:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "169:16:4",
																"nodeType": "YulBlock",
																"src": "169:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:4",
																					"nodeType": "YulLiteral",
																					"src": "178:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:4",
																					"nodeType": "YulLiteral",
																					"src": "181:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:4"
																			},
																			"nativeSrc": "171:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:4"
																		},
																		"nativeSrc": "171:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "99:66:4",
																						"nodeType": "YulLiteral",
																						"src": "99:66:4",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:4"
																				},
																				"nativeSrc": "88:78:4",
																				"nodeType": "YulFunctionCall",
																				"src": "88:78:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:4"
																		},
																		"nativeSrc": "78:89:4",
																		"nodeType": "YulFunctionCall",
																		"src": "78:89:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:4"
																},
																"nativeSrc": "71:97:4",
																"nodeType": "YulFunctionCall",
																"src": "71:97:4"
															},
															"nativeSrc": "68:117:4",
															"nodeType": "YulIf",
															"src": "68:117:4"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:4",
														"nodeType": "YulTypedName",
														"src": "47:5:4",
														"type": ""
													}
												],
												"src": "14:177:4"
											},
											{
												"body": {
													"nativeSrc": "265:176:4",
													"nodeType": "YulBlock",
													"src": "265:176:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "311:16:4",
																"nodeType": "YulBlock",
																"src": "311:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:4",
																					"nodeType": "YulLiteral",
																					"src": "320:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "323:1:4",
																					"nodeType": "YulLiteral",
																					"src": "323:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "313:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:4"
																			},
																			"nativeSrc": "313:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:4"
																		},
																		"nativeSrc": "313:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "286:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "295:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "282:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:4"
																		},
																		"nativeSrc": "282:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "307:2:4",
																		"nodeType": "YulLiteral",
																		"src": "307:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "278:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:4"
																},
																"nativeSrc": "278:32:4",
																"nodeType": "YulFunctionCall",
																"src": "278:32:4"
															},
															"nativeSrc": "275:52:4",
															"nodeType": "YulIf",
															"src": "275:52:4"
														},
														{
															"nativeSrc": "336:36:4",
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "349:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:4"
																},
																"nativeSrc": "349:23:4",
																"nodeType": "YulFunctionCall",
																"src": "349:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "340:5:4",
																	"nodeType": "YulTypedName",
																	"src": "340:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "405:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "405:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "381:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "381:23:4"
																},
																"nativeSrc": "381:30:4",
																"nodeType": "YulFunctionCall",
																"src": "381:30:4"
															},
															"nativeSrc": "381:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "381:30:4"
														},
														{
															"nativeSrc": "420:15:4",
															"nodeType": "YulAssignment",
															"src": "420:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "430:5:4",
																"nodeType": "YulIdentifier",
																"src": "430:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "420:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "196:245:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "231:9:4",
														"nodeType": "YulTypedName",
														"src": "231:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "242:7:4",
														"nodeType": "YulTypedName",
														"src": "242:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "254:6:4",
														"nodeType": "YulTypedName",
														"src": "254:6:4",
														"type": ""
													}
												],
												"src": "196:245:4"
											},
											{
												"body": {
													"nativeSrc": "541:92:4",
													"nodeType": "YulBlock",
													"src": "541:92:4",
													"statements": [
														{
															"nativeSrc": "551:26:4",
															"nodeType": "YulAssignment",
															"src": "551:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "563:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "574:2:4",
																		"nodeType": "YulLiteral",
																		"src": "574:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "559:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:4"
																},
																"nativeSrc": "559:18:4",
																"nodeType": "YulFunctionCall",
																"src": "559:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "551:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "593:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "618:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "618:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "611:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "611:6:4"
																				},
																				"nativeSrc": "611:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "611:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "604:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "604:6:4"
																		},
																		"nativeSrc": "604:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "604:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "586:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:4"
																},
																"nativeSrc": "586:41:4",
																"nodeType": "YulFunctionCall",
																"src": "586:41:4"
															},
															"nativeSrc": "586:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "586:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "446:187:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "510:9:4",
														"nodeType": "YulTypedName",
														"src": "510:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "521:6:4",
														"nodeType": "YulTypedName",
														"src": "521:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "532:4:4",
														"nodeType": "YulTypedName",
														"src": "532:4:4",
														"type": ""
													}
												],
												"src": "446:187:4"
											},
											{
												"body": {
													"nativeSrc": "699:239:4",
													"nodeType": "YulBlock",
													"src": "699:239:4",
													"statements": [
														{
															"nativeSrc": "709:26:4",
															"nodeType": "YulVariableDeclaration",
															"src": "709:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "729:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "729:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "723:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "723:5:4"
																},
																"nativeSrc": "723:12:4",
																"nodeType": "YulFunctionCall",
																"src": "723:12:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "713:6:4",
																	"nodeType": "YulTypedName",
																	"src": "713:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "751:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "751:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "756:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "756:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "744:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:4"
																},
																"nativeSrc": "744:19:4",
																"nodeType": "YulFunctionCall",
																"src": "744:19:4"
															},
															"nativeSrc": "744:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "744:19:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "782:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "782:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "787:4:4",
																				"nodeType": "YulLiteral",
																				"src": "787:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "778:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "778:3:4"
																		},
																		"nativeSrc": "778:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "778:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "798:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "798:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "805:4:4",
																				"nodeType": "YulLiteral",
																				"src": "805:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:4"
																		},
																		"nativeSrc": "794:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "794:16:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "812:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:4"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "772:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "772:5:4"
																},
																"nativeSrc": "772:47:4",
																"nodeType": "YulFunctionCall",
																"src": "772:47:4"
															},
															"nativeSrc": "772:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "772:47:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "843:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "843:3:4"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "848:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "848:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "839:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "839:3:4"
																				},
																				"nativeSrc": "839:16:4",
																				"nodeType": "YulFunctionCall",
																				"src": "839:16:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "857:4:4",
																				"nodeType": "YulLiteral",
																				"src": "857:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "835:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "835:3:4"
																		},
																		"nativeSrc": "835:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "835:27:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:4",
																		"nodeType": "YulLiteral",
																		"src": "864:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "828:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "828:6:4"
																},
																"nativeSrc": "828:38:4",
																"nodeType": "YulFunctionCall",
																"src": "828:38:4"
															},
															"nativeSrc": "828:38:4",
															"nodeType": "YulExpressionStatement",
															"src": "828:38:4"
														},
														{
															"nativeSrc": "875:57:4",
															"nodeType": "YulAssignment",
															"src": "875:57:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "890:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "890:3:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "903:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "903:6:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "911:2:4",
																								"nodeType": "YulLiteral",
																								"src": "911:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "899:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "899:3:4"
																						},
																						"nativeSrc": "899:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "899:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "920:2:4",
																								"nodeType": "YulLiteral",
																								"src": "920:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "916:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "916:3:4"
																						},
																						"nativeSrc": "916:7:4",
																						"nodeType": "YulFunctionCall",
																						"src": "916:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "895:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "895:3:4"
																				},
																				"nativeSrc": "895:29:4",
																				"nodeType": "YulFunctionCall",
																				"src": "895:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "886:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "886:3:4"
																		},
																		"nativeSrc": "886:39:4",
																		"nodeType": "YulFunctionCall",
																		"src": "886:39:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "927:4:4",
																		"nodeType": "YulLiteral",
																		"src": "927:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "882:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "882:3:4"
																},
																"nativeSrc": "882:50:4",
																"nodeType": "YulFunctionCall",
																"src": "882:50:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "875:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "638:300:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "676:5:4",
														"nodeType": "YulTypedName",
														"src": "676:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "683:3:4",
														"nodeType": "YulTypedName",
														"src": "683:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "691:3:4",
														"nodeType": "YulTypedName",
														"src": "691:3:4",
														"type": ""
													}
												],
												"src": "638:300:4"
											},
											{
												"body": {
													"nativeSrc": "1064:110:4",
													"nodeType": "YulBlock",
													"src": "1064:110:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1081:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1092:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1092:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1074:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:4"
																},
																"nativeSrc": "1074:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1074:21:4"
															},
															"nativeSrc": "1074:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1074:21:4"
														},
														{
															"nativeSrc": "1104:64:4",
															"nodeType": "YulAssignment",
															"src": "1104:64:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1141:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1141:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1153:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1153:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1164:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1164:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1149:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1149:3:4"
																		},
																		"nativeSrc": "1149:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1112:28:4",
																	"nodeType": "YulIdentifier",
																	"src": "1112:28:4"
																},
																"nativeSrc": "1112:56:4",
																"nodeType": "YulFunctionCall",
																"src": "1112:56:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1104:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1104:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "943:231:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1033:9:4",
														"nodeType": "YulTypedName",
														"src": "1033:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1044:6:4",
														"nodeType": "YulTypedName",
														"src": "1044:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1055:4:4",
														"nodeType": "YulTypedName",
														"src": "1055:4:4",
														"type": ""
													}
												],
												"src": "943:231:4"
											},
											{
												"body": {
													"nativeSrc": "1249:110:4",
													"nodeType": "YulBlock",
													"src": "1249:110:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1295:16:4",
																"nodeType": "YulBlock",
																"src": "1295:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1304:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1304:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1307:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1297:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1297:6:4"
																			},
																			"nativeSrc": "1297:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1297:12:4"
																		},
																		"nativeSrc": "1297:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1297:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1270:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1270:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1279:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1279:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1266:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:4"
																		},
																		"nativeSrc": "1266:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1266:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1291:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1291:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1262:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:4"
																},
																"nativeSrc": "1262:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1262:32:4"
															},
															"nativeSrc": "1259:52:4",
															"nodeType": "YulIf",
															"src": "1259:52:4"
														},
														{
															"nativeSrc": "1320:33:4",
															"nodeType": "YulAssignment",
															"src": "1320:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1343:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1343:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1330:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1330:12:4"
																},
																"nativeSrc": "1330:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1330:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1320:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1179:180:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1215:9:4",
														"nodeType": "YulTypedName",
														"src": "1215:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1226:7:4",
														"nodeType": "YulTypedName",
														"src": "1226:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1238:6:4",
														"nodeType": "YulTypedName",
														"src": "1238:6:4",
														"type": ""
													}
												],
												"src": "1179:180:4"
											},
											{
												"body": {
													"nativeSrc": "1465:125:4",
													"nodeType": "YulBlock",
													"src": "1465:125:4",
													"statements": [
														{
															"nativeSrc": "1475:26:4",
															"nodeType": "YulAssignment",
															"src": "1475:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1487:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1487:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1498:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1483:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:4"
																},
																"nativeSrc": "1483:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1483:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1475:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1475:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1517:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1532:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1540:42:4",
																				"nodeType": "YulLiteral",
																				"src": "1540:42:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1528:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1528:3:4"
																		},
																		"nativeSrc": "1528:55:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1528:55:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1510:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:4"
																},
																"nativeSrc": "1510:74:4",
																"nodeType": "YulFunctionCall",
																"src": "1510:74:4"
															},
															"nativeSrc": "1510:74:4",
															"nodeType": "YulExpressionStatement",
															"src": "1510:74:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1364:226:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1434:9:4",
														"nodeType": "YulTypedName",
														"src": "1434:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1445:6:4",
														"nodeType": "YulTypedName",
														"src": "1445:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1456:4:4",
														"nodeType": "YulTypedName",
														"src": "1456:4:4",
														"type": ""
													}
												],
												"src": "1364:226:4"
											},
											{
												"body": {
													"nativeSrc": "1644:147:4",
													"nodeType": "YulBlock",
													"src": "1644:147:4",
													"statements": [
														{
															"nativeSrc": "1654:29:4",
															"nodeType": "YulAssignment",
															"src": "1654:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1676:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1676:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1663:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1663:12:4"
																},
																"nativeSrc": "1663:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1663:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1654:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1654:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1769:16:4",
																"nodeType": "YulBlock",
																"src": "1769:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1778:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1778:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1781:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1781:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1771:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1771:6:4"
																			},
																			"nativeSrc": "1771:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1771:12:4"
																		},
																		"nativeSrc": "1771:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1771:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1705:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1705:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1716:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1716:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1723:42:4",
																						"nodeType": "YulLiteral",
																						"src": "1723:42:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1712:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1712:3:4"
																				},
																				"nativeSrc": "1712:54:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1712:54:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1702:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1702:2:4"
																		},
																		"nativeSrc": "1702:65:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1702:65:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1695:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:4"
																},
																"nativeSrc": "1695:73:4",
																"nodeType": "YulFunctionCall",
																"src": "1695:73:4"
															},
															"nativeSrc": "1692:93:4",
															"nodeType": "YulIf",
															"src": "1692:93:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1595:196:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1623:6:4",
														"nodeType": "YulTypedName",
														"src": "1623:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1634:5:4",
														"nodeType": "YulTypedName",
														"src": "1634:5:4",
														"type": ""
													}
												],
												"src": "1595:196:4"
											},
											{
												"body": {
													"nativeSrc": "1883:167:4",
													"nodeType": "YulBlock",
													"src": "1883:167:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1929:16:4",
																"nodeType": "YulBlock",
																"src": "1929:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1938:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1938:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1941:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1941:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1931:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1931:6:4"
																			},
																			"nativeSrc": "1931:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1931:12:4"
																		},
																		"nativeSrc": "1931:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1931:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1904:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1904:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1913:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1913:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1900:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1900:3:4"
																		},
																		"nativeSrc": "1900:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1925:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1925:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1896:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1896:3:4"
																},
																"nativeSrc": "1896:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1896:32:4"
															},
															"nativeSrc": "1893:52:4",
															"nodeType": "YulIf",
															"src": "1893:52:4"
														},
														{
															"nativeSrc": "1954:39:4",
															"nodeType": "YulAssignment",
															"src": "1954:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1964:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "1964:18:4"
																},
																"nativeSrc": "1964:29:4",
																"nodeType": "YulFunctionCall",
																"src": "1964:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1954:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1954:6:4"
																}
															]
														},
														{
															"nativeSrc": "2002:42:4",
															"nodeType": "YulAssignment",
															"src": "2002:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2029:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2029:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2040:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2040:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2025:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2025:3:4"
																		},
																		"nativeSrc": "2025:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2025:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2012:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2012:12:4"
																},
																"nativeSrc": "2012:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2012:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2002:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1796:254:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1841:9:4",
														"nodeType": "YulTypedName",
														"src": "1841:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1852:7:4",
														"nodeType": "YulTypedName",
														"src": "1852:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1864:6:4",
														"nodeType": "YulTypedName",
														"src": "1864:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1872:6:4",
														"nodeType": "YulTypedName",
														"src": "1872:6:4",
														"type": ""
													}
												],
												"src": "1796:254:4"
											},
											{
												"body": {
													"nativeSrc": "2156:76:4",
													"nodeType": "YulBlock",
													"src": "2156:76:4",
													"statements": [
														{
															"nativeSrc": "2166:26:4",
															"nodeType": "YulAssignment",
															"src": "2166:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2178:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2178:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2189:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2189:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2174:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:4"
																},
																"nativeSrc": "2174:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2174:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2166:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2166:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2208:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2208:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2219:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2219:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2201:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:4"
																},
																"nativeSrc": "2201:25:4",
																"nodeType": "YulFunctionCall",
																"src": "2201:25:4"
															},
															"nativeSrc": "2201:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "2201:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2055:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2125:9:4",
														"nodeType": "YulTypedName",
														"src": "2125:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2136:6:4",
														"nodeType": "YulTypedName",
														"src": "2136:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2147:4:4",
														"nodeType": "YulTypedName",
														"src": "2147:4:4",
														"type": ""
													}
												],
												"src": "2055:177:4"
											},
											{
												"body": {
													"nativeSrc": "2341:224:4",
													"nodeType": "YulBlock",
													"src": "2341:224:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2387:16:4",
																"nodeType": "YulBlock",
																"src": "2387:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2396:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2396:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2399:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2399:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2389:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2389:6:4"
																			},
																			"nativeSrc": "2389:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2389:12:4"
																		},
																		"nativeSrc": "2389:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2389:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2362:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2362:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2371:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2371:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2358:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2358:3:4"
																		},
																		"nativeSrc": "2358:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2358:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2383:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2383:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2354:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2354:3:4"
																},
																"nativeSrc": "2354:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2354:32:4"
															},
															"nativeSrc": "2351:52:4",
															"nodeType": "YulIf",
															"src": "2351:52:4"
														},
														{
															"nativeSrc": "2412:39:4",
															"nodeType": "YulAssignment",
															"src": "2412:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2441:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2441:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2422:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "2422:18:4"
																},
																"nativeSrc": "2422:29:4",
																"nodeType": "YulFunctionCall",
																"src": "2422:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2412:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2412:6:4"
																}
															]
														},
														{
															"nativeSrc": "2460:48:4",
															"nodeType": "YulAssignment",
															"src": "2460:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2493:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2493:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2504:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2504:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2489:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2489:3:4"
																		},
																		"nativeSrc": "2489:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2489:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2470:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "2470:18:4"
																},
																"nativeSrc": "2470:38:4",
																"nodeType": "YulFunctionCall",
																"src": "2470:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2460:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2460:6:4"
																}
															]
														},
														{
															"nativeSrc": "2517:42:4",
															"nodeType": "YulAssignment",
															"src": "2517:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2544:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2555:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2555:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2540:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:4"
																		},
																		"nativeSrc": "2540:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2540:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2527:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2527:12:4"
																},
																"nativeSrc": "2527:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2527:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2517:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2237:328:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2291:9:4",
														"nodeType": "YulTypedName",
														"src": "2291:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2302:7:4",
														"nodeType": "YulTypedName",
														"src": "2302:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2314:6:4",
														"nodeType": "YulTypedName",
														"src": "2314:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2322:6:4",
														"nodeType": "YulTypedName",
														"src": "2322:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2330:6:4",
														"nodeType": "YulTypedName",
														"src": "2330:6:4",
														"type": ""
													}
												],
												"src": "2237:328:4"
											},
											{
												"body": {
													"nativeSrc": "2640:116:4",
													"nodeType": "YulBlock",
													"src": "2640:116:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2686:16:4",
																"nodeType": "YulBlock",
																"src": "2686:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2695:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2695:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2698:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2698:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2688:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2688:6:4"
																			},
																			"nativeSrc": "2688:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2688:12:4"
																		},
																		"nativeSrc": "2688:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2688:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2661:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2661:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2670:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2670:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2657:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2657:3:4"
																		},
																		"nativeSrc": "2657:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2682:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2653:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2653:3:4"
																},
																"nativeSrc": "2653:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2653:32:4"
															},
															"nativeSrc": "2650:52:4",
															"nodeType": "YulIf",
															"src": "2650:52:4"
														},
														{
															"nativeSrc": "2711:39:4",
															"nodeType": "YulAssignment",
															"src": "2711:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2740:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2740:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2721:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "2721:18:4"
																},
																"nativeSrc": "2721:29:4",
																"nodeType": "YulFunctionCall",
																"src": "2721:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2711:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2570:186:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2606:9:4",
														"nodeType": "YulTypedName",
														"src": "2606:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2617:7:4",
														"nodeType": "YulTypedName",
														"src": "2617:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2629:6:4",
														"nodeType": "YulTypedName",
														"src": "2629:6:4",
														"type": ""
													}
												],
												"src": "2570:186:4"
											},
											{
												"body": {
													"nativeSrc": "2845:263:4",
													"nodeType": "YulBlock",
													"src": "2845:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2891:16:4",
																"nodeType": "YulBlock",
																"src": "2891:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2900:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2900:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2903:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2903:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2893:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2893:6:4"
																			},
																			"nativeSrc": "2893:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2893:12:4"
																		},
																		"nativeSrc": "2893:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2893:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2866:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2866:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2875:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2875:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2862:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2862:3:4"
																		},
																		"nativeSrc": "2862:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2862:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2887:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2858:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:4"
																},
																"nativeSrc": "2858:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2858:32:4"
															},
															"nativeSrc": "2855:52:4",
															"nodeType": "YulIf",
															"src": "2855:52:4"
														},
														{
															"nativeSrc": "2916:39:4",
															"nodeType": "YulAssignment",
															"src": "2916:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2945:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2945:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2926:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "2926:18:4"
																},
																"nativeSrc": "2926:29:4",
																"nodeType": "YulFunctionCall",
																"src": "2926:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2916:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:4"
																}
															]
														},
														{
															"nativeSrc": "2964:45:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2964:45:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2994:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3005:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3005:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2990:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:4"
																		},
																		"nativeSrc": "2990:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2990:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2977:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2977:12:4"
																},
																"nativeSrc": "2977:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2977:32:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2968:5:4",
																	"nodeType": "YulTypedName",
																	"src": "2968:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3062:16:4",
																"nodeType": "YulBlock",
																"src": "3062:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3071:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3071:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3074:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3074:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3064:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3064:6:4"
																			},
																			"nativeSrc": "3064:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3064:12:4"
																		},
																		"nativeSrc": "3064:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3064:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3031:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3031:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3052:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "3052:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3045:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "3045:6:4"
																						},
																						"nativeSrc": "3045:13:4",
																						"nodeType": "YulFunctionCall",
																						"src": "3045:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3038:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3038:6:4"
																				},
																				"nativeSrc": "3038:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3038:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3028:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3028:2:4"
																		},
																		"nativeSrc": "3028:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3028:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3021:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3021:6:4"
																},
																"nativeSrc": "3021:40:4",
																"nodeType": "YulFunctionCall",
																"src": "3021:40:4"
															},
															"nativeSrc": "3018:60:4",
															"nodeType": "YulIf",
															"src": "3018:60:4"
														},
														{
															"nativeSrc": "3087:15:4",
															"nodeType": "YulAssignment",
															"src": "3087:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "3097:5:4",
																"nodeType": "YulIdentifier",
																"src": "3097:5:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3087:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2761:347:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2803:9:4",
														"nodeType": "YulTypedName",
														"src": "2803:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2814:7:4",
														"nodeType": "YulTypedName",
														"src": "2814:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2826:6:4",
														"nodeType": "YulTypedName",
														"src": "2826:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2834:6:4",
														"nodeType": "YulTypedName",
														"src": "2834:6:4",
														"type": ""
													}
												],
												"src": "2761:347:4"
											},
											{
												"body": {
													"nativeSrc": "3145:152:4",
													"nodeType": "YulBlock",
													"src": "3145:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3162:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3162:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3165:77:4",
																		"nodeType": "YulLiteral",
																		"src": "3165:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3155:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3155:6:4"
																},
																"nativeSrc": "3155:88:4",
																"nodeType": "YulFunctionCall",
																"src": "3155:88:4"
															},
															"nativeSrc": "3155:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "3155:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3259:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3259:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3262:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3262:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3252:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3252:6:4"
																},
																"nativeSrc": "3252:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3252:15:4"
															},
															"nativeSrc": "3252:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3252:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3283:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3283:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3286:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3286:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3276:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:4"
																},
																"nativeSrc": "3276:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3276:15:4"
															},
															"nativeSrc": "3276:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3276:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3113:184:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3113:184:4"
											},
											{
												"body": {
													"nativeSrc": "3432:1008:4",
													"nodeType": "YulBlock",
													"src": "3432:1008:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3479:16:4",
																"nodeType": "YulBlock",
																"src": "3479:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3488:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3488:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3491:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3491:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3481:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3481:6:4"
																			},
																			"nativeSrc": "3481:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3481:12:4"
																		},
																		"nativeSrc": "3481:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3481:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3453:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3453:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3462:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3462:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3449:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3449:3:4"
																		},
																		"nativeSrc": "3449:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3449:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3474:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3474:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3445:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3445:3:4"
																},
																"nativeSrc": "3445:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3445:33:4"
															},
															"nativeSrc": "3442:53:4",
															"nodeType": "YulIf",
															"src": "3442:53:4"
														},
														{
															"nativeSrc": "3504:39:4",
															"nodeType": "YulAssignment",
															"src": "3504:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3533:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3533:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3514:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "3514:18:4"
																},
																"nativeSrc": "3514:29:4",
																"nodeType": "YulFunctionCall",
																"src": "3514:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3504:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:4"
																}
															]
														},
														{
															"nativeSrc": "3552:48:4",
															"nodeType": "YulAssignment",
															"src": "3552:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3585:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3585:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3596:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3596:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3581:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3581:3:4"
																		},
																		"nativeSrc": "3581:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3581:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3562:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "3562:18:4"
																},
																"nativeSrc": "3562:38:4",
																"nodeType": "YulFunctionCall",
																"src": "3562:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3552:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3552:6:4"
																}
															]
														},
														{
															"nativeSrc": "3609:42:4",
															"nodeType": "YulAssignment",
															"src": "3609:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3636:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3636:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3647:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3647:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3632:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3632:3:4"
																		},
																		"nativeSrc": "3632:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3632:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3619:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3619:12:4"
																},
																"nativeSrc": "3619:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3619:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3609:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:4"
																}
															]
														},
														{
															"nativeSrc": "3660:46:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3660:46:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3691:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3691:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3702:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3702:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3687:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:4"
																		},
																		"nativeSrc": "3687:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3687:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3674:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3674:12:4"
																},
																"nativeSrc": "3674:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3674:32:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3664:6:4",
																	"nodeType": "YulTypedName",
																	"src": "3664:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3715:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3715:28:4",
															"value": {
																"kind": "number",
																"nativeSrc": "3725:18:4",
																"nodeType": "YulLiteral",
																"src": "3725:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3719:2:4",
																	"nodeType": "YulTypedName",
																	"src": "3719:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3770:16:4",
																"nodeType": "YulBlock",
																"src": "3770:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3779:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3779:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3782:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3782:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3772:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3772:6:4"
																			},
																			"nativeSrc": "3772:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3772:12:4"
																		},
																		"nativeSrc": "3772:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3772:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3758:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3766:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "3766:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3755:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3755:2:4"
																},
																"nativeSrc": "3755:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3755:14:4"
															},
															"nativeSrc": "3752:34:4",
															"nodeType": "YulIf",
															"src": "3752:34:4"
														},
														{
															"nativeSrc": "3795:32:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3795:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3809:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3809:9:4"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3820:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3820:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3805:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3805:3:4"
																},
																"nativeSrc": "3805:22:4",
																"nodeType": "YulFunctionCall",
																"src": "3805:22:4"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3799:2:4",
																	"nodeType": "YulTypedName",
																	"src": "3799:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3875:16:4",
																"nodeType": "YulBlock",
																"src": "3875:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3884:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3884:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3887:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3887:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3877:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3877:6:4"
																			},
																			"nativeSrc": "3877:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3877:12:4"
																		},
																		"nativeSrc": "3877:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3877:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3854:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "3854:2:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3858:4:4",
																						"nodeType": "YulLiteral",
																						"src": "3858:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3850:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3850:3:4"
																				},
																				"nativeSrc": "3850:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3850:13:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3865:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3865:7:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3846:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3846:3:4"
																		},
																		"nativeSrc": "3846:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3839:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3839:6:4"
																},
																"nativeSrc": "3839:35:4",
																"nodeType": "YulFunctionCall",
																"src": "3839:35:4"
															},
															"nativeSrc": "3836:55:4",
															"nodeType": "YulIf",
															"src": "3836:55:4"
														},
														{
															"nativeSrc": "3900:26:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3900:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3923:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "3923:2:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3910:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3910:12:4"
																},
																"nativeSrc": "3910:16:4",
																"nodeType": "YulFunctionCall",
																"src": "3910:16:4"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3904:2:4",
																	"nodeType": "YulTypedName",
																	"src": "3904:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3949:22:4",
																"nodeType": "YulBlock",
																"src": "3949:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3951:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3951:16:4"
																			},
																			"nativeSrc": "3951:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3951:18:4"
																		},
																		"nativeSrc": "3951:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3951:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "3941:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "3941:2:4"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3945:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "3945:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3938:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3938:2:4"
																},
																"nativeSrc": "3938:10:4",
																"nodeType": "YulFunctionCall",
																"src": "3938:10:4"
															},
															"nativeSrc": "3935:36:4",
															"nodeType": "YulIf",
															"src": "3935:36:4"
														},
														{
															"nativeSrc": "3980:17:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3980:17:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3994:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3990:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3990:3:4"
																},
																"nativeSrc": "3990:7:4",
																"nodeType": "YulFunctionCall",
																"src": "3990:7:4"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "3984:2:4",
																	"nodeType": "YulTypedName",
																	"src": "3984:2:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4006:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4006:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4026:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4026:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4020:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4020:5:4"
																},
																"nativeSrc": "4020:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4020:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4010:6:4",
																	"nodeType": "YulTypedName",
																	"src": "4010:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4038:71:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4038:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4060:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4060:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4084:2:4",
																										"nodeType": "YulIdentifier",
																										"src": "4084:2:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4088:4:4",
																										"nodeType": "YulLiteral",
																										"src": "4088:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4080:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "4080:3:4"
																								},
																								"nativeSrc": "4080:13:4",
																								"nodeType": "YulFunctionCall",
																								"src": "4080:13:4"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4095:2:4",
																								"nodeType": "YulIdentifier",
																								"src": "4095:2:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4076:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "4076:3:4"
																						},
																						"nativeSrc": "4076:22:4",
																						"nodeType": "YulFunctionCall",
																						"src": "4076:22:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4100:2:4",
																						"nodeType": "YulLiteral",
																						"src": "4100:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4072:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4072:3:4"
																				},
																				"nativeSrc": "4072:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4072:31:4"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4105:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4105:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4068:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:4"
																		},
																		"nativeSrc": "4068:40:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4068:40:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4056:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:4"
																},
																"nativeSrc": "4056:53:4",
																"nodeType": "YulFunctionCall",
																"src": "4056:53:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4042:10:4",
																	"nodeType": "YulTypedName",
																	"src": "4042:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4168:22:4",
																"nodeType": "YulBlock",
																"src": "4168:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4170:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4170:16:4"
																			},
																			"nativeSrc": "4170:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4170:18:4"
																		},
																		"nativeSrc": "4170:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4170:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4127:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "4127:10:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4139:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4139:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4124:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4124:2:4"
																		},
																		"nativeSrc": "4124:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4124:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4147:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "4147:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4159:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4159:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4144:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4144:2:4"
																		},
																		"nativeSrc": "4144:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4121:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4121:2:4"
																},
																"nativeSrc": "4121:46:4",
																"nodeType": "YulFunctionCall",
																"src": "4121:46:4"
															},
															"nativeSrc": "4118:72:4",
															"nodeType": "YulIf",
															"src": "4118:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4206:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4206:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4210:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "4210:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4199:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:4"
																},
																"nativeSrc": "4199:22:4",
																"nodeType": "YulFunctionCall",
																"src": "4199:22:4"
															},
															"nativeSrc": "4199:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "4199:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4237:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4237:6:4"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4245:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4245:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4230:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:4"
																},
																"nativeSrc": "4230:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4230:18:4"
															},
															"nativeSrc": "4230:18:4",
															"nodeType": "YulExpressionStatement",
															"src": "4230:18:4"
														},
														{
															"body": {
																"nativeSrc": "4294:16:4",
																"nodeType": "YulBlock",
																"src": "4294:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4303:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4303:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4306:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4306:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4296:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4296:6:4"
																			},
																			"nativeSrc": "4296:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4296:12:4"
																		},
																		"nativeSrc": "4296:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4296:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4271:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4271:2:4"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4275:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4275:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4267:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4267:3:4"
																				},
																				"nativeSrc": "4267:11:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4267:11:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4280:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4280:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4263:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:4"
																		},
																		"nativeSrc": "4263:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4263:20:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4285:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "4285:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4260:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4260:2:4"
																},
																"nativeSrc": "4260:33:4",
																"nodeType": "YulFunctionCall",
																"src": "4260:33:4"
															},
															"nativeSrc": "4257:53:4",
															"nodeType": "YulIf",
															"src": "4257:53:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4336:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4336:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4344:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4344:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4332:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:4"
																		},
																		"nativeSrc": "4332:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4332:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4353:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4353:2:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4357:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4357:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:4"
																		},
																		"nativeSrc": "4349:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:11:4"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4362:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4362:2:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4319:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "4319:12:4"
																},
																"nativeSrc": "4319:46:4",
																"nodeType": "YulFunctionCall",
																"src": "4319:46:4"
															},
															"nativeSrc": "4319:46:4",
															"nodeType": "YulExpressionStatement",
															"src": "4319:46:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4389:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4389:6:4"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4397:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4397:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4385:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4385:3:4"
																				},
																				"nativeSrc": "4385:15:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4385:15:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4402:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4402:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4381:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4381:3:4"
																		},
																		"nativeSrc": "4381:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4381:24:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4407:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4407:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4374:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:4"
																},
																"nativeSrc": "4374:35:4",
																"nodeType": "YulFunctionCall",
																"src": "4374:35:4"
															},
															"nativeSrc": "4374:35:4",
															"nodeType": "YulExpressionStatement",
															"src": "4374:35:4"
														},
														{
															"nativeSrc": "4418:16:4",
															"nodeType": "YulAssignment",
															"src": "4418:16:4",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4428:6:4",
																"nodeType": "YulIdentifier",
																"src": "4428:6:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4418:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3302:1138:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3374:9:4",
														"nodeType": "YulTypedName",
														"src": "3374:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3385:7:4",
														"nodeType": "YulTypedName",
														"src": "3385:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3397:6:4",
														"nodeType": "YulTypedName",
														"src": "3397:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3405:6:4",
														"nodeType": "YulTypedName",
														"src": "3405:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3413:6:4",
														"nodeType": "YulTypedName",
														"src": "3413:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3421:6:4",
														"nodeType": "YulTypedName",
														"src": "3421:6:4",
														"type": ""
													}
												],
												"src": "3302:1138:4"
											},
											{
												"body": {
													"nativeSrc": "4532:173:4",
													"nodeType": "YulBlock",
													"src": "4532:173:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4578:16:4",
																"nodeType": "YulBlock",
																"src": "4578:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4587:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4590:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4580:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:4"
																			},
																			"nativeSrc": "4580:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:4"
																		},
																		"nativeSrc": "4580:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4553:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4553:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4562:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4562:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4549:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:4"
																		},
																		"nativeSrc": "4549:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4549:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4574:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4574:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4545:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4545:3:4"
																},
																"nativeSrc": "4545:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4545:32:4"
															},
															"nativeSrc": "4542:52:4",
															"nodeType": "YulIf",
															"src": "4542:52:4"
														},
														{
															"nativeSrc": "4603:39:4",
															"nodeType": "YulAssignment",
															"src": "4603:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4632:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4632:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4613:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "4613:18:4"
																},
																"nativeSrc": "4613:29:4",
																"nodeType": "YulFunctionCall",
																"src": "4613:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4603:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:4"
																}
															]
														},
														{
															"nativeSrc": "4651:48:4",
															"nodeType": "YulAssignment",
															"src": "4651:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4684:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4684:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4695:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4695:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4680:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4680:3:4"
																		},
																		"nativeSrc": "4680:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4680:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4661:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "4661:18:4"
																},
																"nativeSrc": "4661:38:4",
																"nodeType": "YulFunctionCall",
																"src": "4661:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4651:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4651:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4445:260:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4490:9:4",
														"nodeType": "YulTypedName",
														"src": "4490:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4501:7:4",
														"nodeType": "YulTypedName",
														"src": "4501:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4513:6:4",
														"nodeType": "YulTypedName",
														"src": "4513:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4521:6:4",
														"nodeType": "YulTypedName",
														"src": "4521:6:4",
														"type": ""
													}
												],
												"src": "4445:260:4"
											},
											{
												"body": {
													"nativeSrc": "4765:382:4",
													"nodeType": "YulBlock",
													"src": "4765:382:4",
													"statements": [
														{
															"nativeSrc": "4775:22:4",
															"nodeType": "YulAssignment",
															"src": "4775:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4789:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4789:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4792:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4792:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4785:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4785:3:4"
																},
																"nativeSrc": "4785:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4785:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4775:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4775:6:4"
																}
															]
														},
														{
															"nativeSrc": "4806:38:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4806:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4836:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4836:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4842:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4832:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4832:3:4"
																},
																"nativeSrc": "4832:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4832:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4810:18:4",
																	"nodeType": "YulTypedName",
																	"src": "4810:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4883:31:4",
																"nodeType": "YulBlock",
																"src": "4883:31:4",
																"statements": [
																	{
																		"nativeSrc": "4885:27:4",
																		"nodeType": "YulAssignment",
																		"src": "4885:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4899:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "4899:6:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4907:4:4",
																					"nodeType": "YulLiteral",
																					"src": "4907:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4895:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "4895:3:4"
																			},
																			"nativeSrc": "4895:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4895:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4885:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4885:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4863:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "4863:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4856:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4856:6:4"
																},
																"nativeSrc": "4856:26:4",
																"nodeType": "YulFunctionCall",
																"src": "4856:26:4"
															},
															"nativeSrc": "4853:61:4",
															"nodeType": "YulIf",
															"src": "4853:61:4"
														},
														{
															"body": {
																"nativeSrc": "4973:168:4",
																"nodeType": "YulBlock",
																"src": "4973:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4994:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4994:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4997:77:4",
																					"nodeType": "YulLiteral",
																					"src": "4997:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4987:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4987:6:4"
																			},
																			"nativeSrc": "4987:88:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4987:88:4"
																		},
																		"nativeSrc": "4987:88:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4987:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5095:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5095:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5098:4:4",
																					"nodeType": "YulLiteral",
																					"src": "5098:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5088:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5088:6:4"
																			},
																			"nativeSrc": "5088:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5088:15:4"
																		},
																		"nativeSrc": "5088:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5088:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5123:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5123:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5126:4:4",
																					"nodeType": "YulLiteral",
																					"src": "5126:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5116:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5116:6:4"
																			},
																			"nativeSrc": "5116:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5116:15:4"
																		},
																		"nativeSrc": "5116:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5116:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4929:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4952:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4952:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4960:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4960:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4949:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4949:2:4"
																		},
																		"nativeSrc": "4949:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4949:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4926:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4926:2:4"
																},
																"nativeSrc": "4926:38:4",
																"nodeType": "YulFunctionCall",
																"src": "4926:38:4"
															},
															"nativeSrc": "4923:218:4",
															"nodeType": "YulIf",
															"src": "4923:218:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4710:437:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4745:4:4",
														"nodeType": "YulTypedName",
														"src": "4745:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4754:6:4",
														"nodeType": "YulTypedName",
														"src": "4754:6:4",
														"type": ""
													}
												],
												"src": "4710:437:4"
											},
											{
												"body": {
													"nativeSrc": "5202:162:4",
													"nodeType": "YulBlock",
													"src": "5202:162:4",
													"statements": [
														{
															"nativeSrc": "5212:26:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5212:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5232:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5232:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5226:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5226:5:4"
																},
																"nativeSrc": "5226:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5226:12:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5216:6:4",
																	"nodeType": "YulTypedName",
																	"src": "5216:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5253:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5253:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5262:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5262:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5269:4:4",
																				"nodeType": "YulLiteral",
																				"src": "5269:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5258:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:4"
																		},
																		"nativeSrc": "5258:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5258:16:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5276:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5276:6:4"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5247:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5247:5:4"
																},
																"nativeSrc": "5247:36:4",
																"nodeType": "YulFunctionCall",
																"src": "5247:36:4"
															},
															"nativeSrc": "5247:36:4",
															"nodeType": "YulExpressionStatement",
															"src": "5247:36:4"
														},
														{
															"nativeSrc": "5292:26:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5292:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5306:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5306:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5311:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5311:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5302:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5302:3:4"
																},
																"nativeSrc": "5302:16:4",
																"nodeType": "YulFunctionCall",
																"src": "5302:16:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5296:2:4",
																	"nodeType": "YulTypedName",
																	"src": "5296:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "5334:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "5334:2:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5338:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5338:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5327:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5327:6:4"
																},
																"nativeSrc": "5327:13:4",
																"nodeType": "YulFunctionCall",
																"src": "5327:13:4"
															},
															"nativeSrc": "5327:13:4",
															"nodeType": "YulExpressionStatement",
															"src": "5327:13:4"
														},
														{
															"nativeSrc": "5349:9:4",
															"nodeType": "YulAssignment",
															"src": "5349:9:4",
															"value": {
																"name": "_1",
																"nativeSrc": "5356:2:4",
																"nodeType": "YulIdentifier",
																"src": "5356:2:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5349:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5349:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "5152:212:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5179:5:4",
														"nodeType": "YulTypedName",
														"src": "5179:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5186:3:4",
														"nodeType": "YulTypedName",
														"src": "5186:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5194:3:4",
														"nodeType": "YulTypedName",
														"src": "5194:3:4",
														"type": ""
													}
												],
												"src": "5152:212:4"
											},
											{
												"body": {
													"nativeSrc": "5556:80:4",
													"nodeType": "YulBlock",
													"src": "5556:80:4",
													"statements": [
														{
															"nativeSrc": "5566:64:4",
															"nodeType": "YulAssignment",
															"src": "5566:64:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5591:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5617:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5617:6:4"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "5625:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "5625:3:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "5599:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "5599:17:4"
																		},
																		"nativeSrc": "5599:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5599:30:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "5573:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5573:17:4"
																},
																"nativeSrc": "5573:57:4",
																"nodeType": "YulFunctionCall",
																"src": "5573:57:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5566:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5566:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5369:267:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5524:3:4",
														"nodeType": "YulTypedName",
														"src": "5524:3:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5529:6:4",
														"nodeType": "YulTypedName",
														"src": "5529:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5537:6:4",
														"nodeType": "YulTypedName",
														"src": "5537:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5548:3:4",
														"nodeType": "YulTypedName",
														"src": "5548:3:4",
														"type": ""
													}
												],
												"src": "5369:267:4"
											},
											{
												"body": {
													"nativeSrc": "5688:243:4",
													"nodeType": "YulBlock",
													"src": "5688:243:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5723:168:4",
																"nodeType": "YulBlock",
																"src": "5723:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5744:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5744:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5747:77:4",
																					"nodeType": "YulLiteral",
																					"src": "5747:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5737:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5737:6:4"
																			},
																			"nativeSrc": "5737:88:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5737:88:4"
																		},
																		"nativeSrc": "5737:88:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5737:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5845:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5845:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5848:4:4",
																					"nodeType": "YulLiteral",
																					"src": "5848:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5838:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5838:6:4"
																			},
																			"nativeSrc": "5838:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5838:15:4"
																		},
																		"nativeSrc": "5838:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5838:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5873:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5873:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5876:4:4",
																					"nodeType": "YulLiteral",
																					"src": "5876:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5866:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5866:6:4"
																			},
																			"nativeSrc": "5866:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5866:15:4"
																		},
																		"nativeSrc": "5866:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5866:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5708:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5708:5:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5701:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5701:6:4"
																},
																"nativeSrc": "5701:13:4",
																"nodeType": "YulFunctionCall",
																"src": "5701:13:4"
															},
															"nativeSrc": "5698:193:4",
															"nodeType": "YulIf",
															"src": "5698:193:4"
														},
														{
															"nativeSrc": "5900:25:4",
															"nodeType": "YulAssignment",
															"src": "5900:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5911:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5911:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5922:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5922:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5918:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5918:3:4"
																		},
																		"nativeSrc": "5918:6:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5918:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5907:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5907:3:4"
																},
																"nativeSrc": "5907:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5907:18:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5900:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5900:3:4"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "5641:290:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5670:5:4",
														"nodeType": "YulTypedName",
														"src": "5670:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5680:3:4",
														"nodeType": "YulTypedName",
														"src": "5680:3:4",
														"type": ""
													}
												],
												"src": "5641:290:4"
											},
											{
												"body": {
													"nativeSrc": "6139:320:4",
													"nodeType": "YulBlock",
													"src": "6139:320:4",
													"statements": [
														{
															"nativeSrc": "6149:52:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6149:52:4",
															"value": {
																"kind": "number",
																"nativeSrc": "6159:42:4",
																"nodeType": "YulLiteral",
																"src": "6159:42:4",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6153:2:4",
																	"nodeType": "YulTypedName",
																	"src": "6153:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6217:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6217:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6232:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6232:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6240:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "6240:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6228:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:4"
																		},
																		"nativeSrc": "6228:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6228:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6210:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6210:6:4"
																},
																"nativeSrc": "6210:34:4",
																"nodeType": "YulFunctionCall",
																"src": "6210:34:4"
															},
															"nativeSrc": "6210:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "6210:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6264:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6264:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6275:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6275:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6260:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6260:3:4"
																		},
																		"nativeSrc": "6260:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6260:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6284:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6284:6:4"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6292:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "6292:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6280:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6280:3:4"
																		},
																		"nativeSrc": "6280:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6280:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6253:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6253:6:4"
																},
																"nativeSrc": "6253:43:4",
																"nodeType": "YulFunctionCall",
																"src": "6253:43:4"
															},
															"nativeSrc": "6253:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "6253:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6316:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6316:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6327:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6327:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6312:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6312:3:4"
																		},
																		"nativeSrc": "6312:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6312:18:4"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6332:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6332:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6305:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6305:6:4"
																},
																"nativeSrc": "6305:34:4",
																"nodeType": "YulFunctionCall",
																"src": "6305:34:4"
															},
															"nativeSrc": "6305:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "6305:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6359:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6359:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6370:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6370:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6355:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6355:3:4"
																		},
																		"nativeSrc": "6355:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6375:3:4",
																		"nodeType": "YulLiteral",
																		"src": "6375:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6348:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:4"
																},
																"nativeSrc": "6348:31:4",
																"nodeType": "YulFunctionCall",
																"src": "6348:31:4"
															},
															"nativeSrc": "6348:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "6348:31:4"
														},
														{
															"nativeSrc": "6388:65:4",
															"nodeType": "YulAssignment",
															"src": "6388:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6425:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6425:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6437:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6437:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6448:3:4",
																				"nodeType": "YulLiteral",
																				"src": "6448:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6433:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6433:3:4"
																		},
																		"nativeSrc": "6433:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6433:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "6396:28:4",
																	"nodeType": "YulIdentifier",
																	"src": "6396:28:4"
																},
																"nativeSrc": "6396:57:4",
																"nodeType": "YulFunctionCall",
																"src": "6396:57:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6388:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6388:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "5936:523:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6084:9:4",
														"nodeType": "YulTypedName",
														"src": "6084:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6095:6:4",
														"nodeType": "YulTypedName",
														"src": "6095:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6103:6:4",
														"nodeType": "YulTypedName",
														"src": "6103:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6111:6:4",
														"nodeType": "YulTypedName",
														"src": "6111:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6119:6:4",
														"nodeType": "YulTypedName",
														"src": "6119:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6130:4:4",
														"nodeType": "YulTypedName",
														"src": "6130:4:4",
														"type": ""
													}
												],
												"src": "5936:523:4"
											},
											{
												"body": {
													"nativeSrc": "6544:169:4",
													"nodeType": "YulBlock",
													"src": "6544:169:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6590:16:4",
																"nodeType": "YulBlock",
																"src": "6590:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6599:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6599:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6602:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6602:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6592:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6592:6:4"
																			},
																			"nativeSrc": "6592:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6592:12:4"
																		},
																		"nativeSrc": "6592:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6592:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6574:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6574:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6561:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6561:3:4"
																		},
																		"nativeSrc": "6561:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6561:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6586:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6586:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6557:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6557:3:4"
																},
																"nativeSrc": "6557:32:4",
																"nodeType": "YulFunctionCall",
																"src": "6557:32:4"
															},
															"nativeSrc": "6554:52:4",
															"nodeType": "YulIf",
															"src": "6554:52:4"
														},
														{
															"nativeSrc": "6615:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6615:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6634:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6634:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6628:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6628:5:4"
																},
																"nativeSrc": "6628:16:4",
																"nodeType": "YulFunctionCall",
																"src": "6628:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6619:5:4",
																	"nodeType": "YulTypedName",
																	"src": "6619:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6677:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6677:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "6653:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "6653:23:4"
																},
																"nativeSrc": "6653:30:4",
																"nodeType": "YulFunctionCall",
																"src": "6653:30:4"
															},
															"nativeSrc": "6653:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "6653:30:4"
														},
														{
															"nativeSrc": "6692:15:4",
															"nodeType": "YulAssignment",
															"src": "6692:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "6702:5:4",
																"nodeType": "YulIdentifier",
																"src": "6702:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6692:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6692:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "6464:249:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6510:9:4",
														"nodeType": "YulTypedName",
														"src": "6510:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6521:7:4",
														"nodeType": "YulTypedName",
														"src": "6521:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6533:6:4",
														"nodeType": "YulTypedName",
														"src": "6533:6:4",
														"type": ""
													}
												],
												"src": "6464:249:4"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100d9575f3560e01c80636352211e1161007c578063a22cb46511610057578063a22cb46514610217578063b88d4fde14610236578063c87b56dd14610249578063e985e9c514610268575f80fd5b80636352211e146101c557806370a08231146101e457806395d89b4114610203575f80fd5b8063095ea7b3116100b7578063095ea7b31461016957806318160ddd1461017e57806323b872dd1461019f57806342842e0e146101b2575f80fd5b806301ffc9a7146100dd57806306fdde0314610111578063081812fc14610132575b5f80fd5b3480156100e8575f80fd5b506100fc6100f7366004610aa6565b6102af565b60405190151581526020015b60405180910390f35b34801561011c575f80fd5b5061012561034b565b6040516101089190610aef565b34801561013d575f80fd5b5061015161014c366004610b01565b6103db565b6040516001600160a01b039091168152602001610108565b61017c610177366004610b2e565b61042d565b005b348015610189575f80fd5b506001545f54035b604051908152602001610108565b61017c6101ad366004610b56565b61043d565b61017c6101c0366004610b56565b6105e3565b3480156101d0575f80fd5b506101516101df366004610b01565b610602565b3480156101ef575f80fd5b506101916101fe366004610b8f565b61060c565b34801561020e575f80fd5b50610125610669565b348015610222575f80fd5b5061017c610231366004610ba8565b610678565b61017c610244366004610bf5565b6106e3565b348015610254575f80fd5b50610125610263366004610b01565b610724565b348015610273575f80fd5b506100fc610282366004610cca565b6001600160a01b039182165f90815260076020908152604080832093909416825291909152205460ff1690565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061031157507f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b8061034557507f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606002805461035a90610cfb565b80601f016020809104026020016040519081016040528092919081815260200182805461038690610cfb565b80156103d15780601f106103a8576101008083540402835291602001916103d1565b820191905f5260205f20905b8154815290600101906020018083116103b457829003601f168201915b5050505050905090565b5f6103e5826107c1565b610412576104127fcf4700e400000000000000000000000000000000000000000000000000000000610803565b505f908152600660205260409020546001600160a01b031690565b6104398282600161080b565b5050565b5f610447826108dd565b6001600160a01b039485169490915081168414610487576104877fa114810000000000000000000000000000000000000000000000000000000000610803565b5f8281526006602052604090208054338082146001600160a01b038816909114176104e3576104b68633610282565b6104e3576104e37f59c896be00000000000000000000000000000000000000000000000000000000610803565b80156104ed575f82555b6001600160a01b038681165f9081526005602052604080822080545f19019055918716808252919020805460010190554260a01b17600160e11b175f85815260046020526040812091909155600160e11b8416900361057957600184015f818152600460205260408120549003610577575f548114610577575f8181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4805f036105da576105da7fea553b3400000000000000000000000000000000000000000000000000000000610803565b50505050505050565b6105fd83838360405180602001604052805f8152506106e3565b505050565b5f610345826108dd565b5f6001600160a01b038216610644576106447f8f4eb60400000000000000000000000000000000000000000000000000000000610803565b506001600160a01b03165f9081526005602052604090205467ffffffffffffffff1690565b60606003805461035a90610cfb565b335f8181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106ee84848461043d565b6001600160a01b0383163b1561071e5761070a8484848461096c565b61071e5761071e6368d2bf6b60e11b610803565b50505050565b606061072f826107c1565b61075c5761075c7fa14c4b5000000000000000000000000000000000000000000000000000000000610803565b5f61077160408051602081019091525f815290565b905080515f0361078f5760405180602001604052805f8152506107ba565b8061079984610a4b565b6040516020016107aa929190610d4a565b6040516020818303038152906040525b9392505050565b5f80548210156107fe575f5b505f82815260046020526040812054908190036107f4576107ed83610d5e565b92506107cd565b600160e01b161590505b919050565b805f5260045ffd5b5f61081583610602565b905081801561082d5750336001600160a01b03821614155b156108695761083c8133610282565b610869576108697fcfb3b94200000000000000000000000000000000000000000000000000000000610803565b5f8381526006602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b5f81815260046020526040902054805f0361094a575f54821061090a5761090a636f96cda160e11b610803565b5b505f19015f81815260046020526040902054801561090b57600160e01b81165f0361093557919050565b610945636f96cda160e11b610803565b61090b565b600160e01b81165f0361095c57919050565b6107fe636f96cda160e11b610803565b604051630a85bd0160e11b81525f906001600160a01b0385169063150b7a02906109a0903390899088908890600401610d7f565b6020604051808303815f875af19250505080156109da575060408051601f3d908101601f191682019092526109d791810190610dba565b60015b610a2d573d808015610a07576040519150601f19603f3d011682016040523d82523d5f602084013e610a0c565b606091505b5080515f03610a2557610a256368d2bf6b60e11b610803565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b606060a06040510180604052602081039150505f815280825b600183039250600a81066030018353600a900480610a645750819003601f19909101908152919050565b6001600160e01b031981168114610aa3575f80fd5b50565b5f60208284031215610ab6575f80fd5b81356107ba81610a8e565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6107ba6020830184610ac1565b5f60208284031215610b11575f80fd5b5035919050565b80356001600160a01b03811681146107fe575f80fd5b5f8060408385031215610b3f575f80fd5b610b4883610b18565b946020939093013593505050565b5f805f60608486031215610b68575f80fd5b610b7184610b18565b9250610b7f60208501610b18565b9150604084013590509250925092565b5f60208284031215610b9f575f80fd5b6107ba82610b18565b5f8060408385031215610bb9575f80fd5b610bc283610b18565b915060208301358015158114610bd6575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215610c08575f80fd5b610c1185610b18565b9350610c1f60208601610b18565b925060408501359150606085013567ffffffffffffffff80821115610c42575f80fd5b818701915087601f830112610c55575f80fd5b813581811115610c6757610c67610be1565b604051601f8201601f19908116603f01168101908382118183101715610c8f57610c8f610be1565b816040528281528a6020848701011115610ca7575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f8060408385031215610cdb575f80fd5b610ce483610b18565b9150610cf260208401610b18565b90509250929050565b600181811c90821680610d0f57607f821691505b602082108103610d2d57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f81518060208401855e5f93019283525090919050565b5f610a43610d588386610d33565b84610d33565b5f81610d7857634e487b7160e01b5f52601160045260245ffd5b505f190190565b5f6001600160a01b03808716835280861660208401525083604083015260806060830152610db06080830184610ac1565b9695505050505050565b5f60208284031215610dca575f80fd5b81516107ba81610a8e56fea2646970667358221220e17496b2867d8dfcbbf6daeffc9875bcd72a2888c438625453fa68e86c1048d264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x132 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x669 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x311 JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x345 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x35A SWAP1 PUSH2 0xCFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x386 SWAP1 PUSH2 0xCFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3E5 DUP3 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x412 JUMPI PUSH2 0x412 PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x439 DUP3 DUP3 PUSH1 0x1 PUSH2 0x80B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x447 DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x487 JUMPI PUSH2 0x487 PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x4E3 JUMPI PUSH2 0x4B6 DUP7 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x4E3 JUMPI PUSH2 0x4E3 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x579 JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x577 JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0x577 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP1 PUSH0 SUB PUSH2 0x5DA JUMPI PUSH2 0x5DA PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5FD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x345 DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x644 JUMPI PUSH2 0x644 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x35A SWAP1 PUSH2 0xCFB JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6EE DUP5 DUP5 DUP5 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x71E JUMPI PUSH2 0x70A DUP5 DUP5 DUP5 DUP5 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x71E JUMPI PUSH2 0x71E PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x72F DUP3 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x75C JUMPI PUSH2 0x75C PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 PUSH2 0x771 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7BA JUMP JUMPDEST DUP1 PUSH2 0x799 DUP5 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7AA SWAP3 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x7FE JUMPI PUSH0 JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x7F4 JUMPI PUSH2 0x7ED DUP4 PUSH2 0xD5E JUMP JUMPDEST SWAP3 POP PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x815 DUP4 PUSH2 0x602 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x82D JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x869 JUMPI PUSH2 0x83C DUP2 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x869 JUMPI PUSH2 0x869 PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH0 SUB PUSH2 0x94A JUMPI PUSH0 SLOAD DUP3 LT PUSH2 0x90A JUMPI PUSH2 0x90A PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST JUMPDEST POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x90B JUMPI PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x935 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x945 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x95C JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FE PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x9A0 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9DA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9D7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA2D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xA25 JUMPI PUSH2 0xA25 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xA64 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7BA DUP2 PUSH2 0xA8E JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x7BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB48 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB71 DUP5 PUSH2 0xB18 JUMP JUMPDEST SWAP3 POP PUSH2 0xB7F PUSH1 0x20 DUP6 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP3 PUSH2 0xB18 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBC2 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC08 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC11 DUP6 PUSH2 0xB18 JUMP JUMPDEST SWAP4 POP PUSH2 0xC1F PUSH1 0x20 DUP7 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC55 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC67 JUMPI PUSH2 0xC67 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC8F JUMPI PUSH2 0xC8F PUSH2 0xBE1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xCA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCE4 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF2 PUSH1 0x20 DUP5 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD0F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA43 PUSH2 0xD58 DUP4 DUP7 PUSH2 0xD33 JUMP JUMPDEST DUP5 PUSH2 0xD33 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xD78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xDB0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7BA DUP2 PUSH2 0xA8E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH21 0x96B2867D8DFCBBF6DAEFFC9875BCD72A2888C43862 SLOAD MSTORE8 STATICCALL PUSH9 0xE86C1048D264736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "1053:48812:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10689:630;;;;;;;;;;-1:-1:-1;10689:630:2;;;;;:::i;:::-;;:::i;:::-;;;611:14:4;;604:22;586:41;;574:2;559:18;10689:630:2;;;;;;;;11573:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;18636:223::-;;;;;;;;;;-1:-1:-1;18636:223:2;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1528:55:4;;;1510:74;;1498:2;1483:18;18636:223:2;1364:226:4;18364:122:2;;;;;;:::i;:::-;;:::i;:::-;;6890:564;;;;;;;;;;-1:-1:-1;7328:12:2;;6951:14;7312:13;:28;6890:564;;;2201:25:4;;;2189:2;2174:18;6890:564:2;2055:177:4;22796:3447:2;;;;;;:::i;:::-;;:::i;26334:187::-;;;;;;:::i;:::-;;:::i;12934:150::-;;;;;;;;;;-1:-1:-1;12934:150:2;;;;;:::i;:::-;;:::i;8570:239::-;;;;;;;;;;-1:-1:-1;8570:239:2;;;;;:::i;:::-;;:::i;11742:102::-;;;;;;;;;;;;;:::i;19186:231::-;;;;;;;;;;-1:-1:-1;19186:231:2;;;;;:::i;:::-;;:::i;27102:405::-;;;;;;:::i;:::-;;:::i;11945:322::-;;;;;;;;;;-1:-1:-1;11945:322:2;;;;;:::i;:::-;;:::i;19567:162::-;;;;;;;;;;-1:-1:-1;19567:162:2;;;;;:::i;:::-;-1:-1:-1;;;;;19687:25:2;;;19664:4;19687:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;19567:162;10689:630;10774:4;11092:25;-1:-1:-1;;;;;;11092:25:2;;;;:101;;-1:-1:-1;11168:25:2;-1:-1:-1;;;;;;11168:25:2;;;11092:101;:177;;;-1:-1:-1;11244:25:2;-1:-1:-1;;;;;;11244:25:2;;;11092:177;11073:196;10689:630;-1:-1:-1;;10689:630:2:o;11573:98::-;11627:13;11659:5;11652:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11573:98;:::o;18636:223::-;18712:7;18736:16;18744:7;18736;:16::i;:::-;18731:73;;18754:50;18762:41;18754:7;:50::i;:::-;-1:-1:-1;18822:24:2;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;18822:30:2;;18636:223::o;18364:122::-;18452:27;18461:2;18465:7;18474:4;18452:8;:27::i;:::-;18364:122;;:::o;22796:3447::-;22933:27;22963;22982:7;22963:18;:27::i;:::-;-1:-1:-1;;;;;23115:22:2;;;;22933:57;;-1:-1:-1;23173:45:2;;;;23169:95;;23220:44;23228:35;23220:7;:44::i;:::-;23276:27;21929:24;;;:15;:24;;;;;22153:26;;47819:10;21566:30;;;-1:-1:-1;;;;;21263:28:2;;21544:20;;;21541:56;23459:188;;23551:43;23568:4;47819:10;19567:162;:::i;23551:43::-;23546:101;;23596:51;23604:42;23596:7;:51::i;:::-;23790:15;23787:157;;;23928:1;23907:19;23900:30;23787:157;-1:-1:-1;;;;;24316:24:2;;;;;;;:18;:24;;;;;;24314:26;;-1:-1:-1;;24314:26:2;;;24384:22;;;;;;;;;24382:24;;-1:-1:-1;24382:24:2;;;17492:11;17467:23;17463:41;17450:63;-1:-1:-1;;;17450:63:2;24670:26;;;;:17;:26;;;;;:172;;;;-1:-1:-1;;;24959:47:2;;:52;;24955:617;;25063:1;25053:11;;25031:19;25184:30;;;:17;:30;;;;;;:35;;25180:378;;25320:13;;25305:11;:28;25301:239;;25465:30;;;;:17;:30;;;;;:52;;;25301:239;25013:559;24955:617;-1:-1:-1;;;;;25700:20:2;;26071:7;25700:20;26003:4;25946:25;25681:16;;25814:292;26129:8;26141:1;26129:13;26125:58;;26144:39;26152:30;26144:7;:39::i;:::-;22923:3320;;;;22796:3447;;;:::o;26334:187::-;26475:39;26492:4;26498:2;26502:7;26475:39;;;;;;;;;;;;:16;:39::i;:::-;26334:187;;;:::o;12934:150::-;13006:7;13048:27;13067:7;13048:18;:27::i;8570:239::-;8642:7;-1:-1:-1;;;;;8665:19:2;;8661:69;;8686:44;8694:35;8686:7;:44::i;:::-;-1:-1:-1;;;;;;8747:25:2;;;;;:18;:25;;;;;;1518:13;8747:55;;8570:239::o;11742:102::-;11798:13;11830:7;11823:14;;;;;:::i;19186:231::-;47819:10;19280:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;19280:49:2;;;;;;;;;;;;:60;;-1:-1:-1;;19280:60:2;;;;;;;;;;19355:55;;586:41:4;;;19280:49:2;;47819:10;19355:55;;559:18:4;19355:55:2;;;;;;;19186:231;;:::o;27102:405::-;27271:31;27284:4;27290:2;27294:7;27271:12;:31::i;:::-;-1:-1:-1;;;;;27316:14:2;;;:19;27312:189;;27354:56;27385:4;27391:2;27395:7;27404:5;27354:30;:56::i;:::-;27349:152;;27430:56;-1:-1:-1;;;27430:7:2;:56::i;:::-;27102:405;;;;:::o;11945:322::-;12018:13;12048:16;12056:7;12048;:16::i;:::-;12043:68;;12066:45;12074:36;12066:7;:45::i;:::-;12122:21;12146:10;12588:9;;;;;;;;;-1:-1:-1;12588:9:2;;;12512:92;12146:10;12122:34;;12179:7;12173:21;12198:1;12173:26;:87;;;;;;;;;;;;;;;;;12226:7;12235:18;12245:7;12235:9;:18::i;:::-;12209:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12173:87;12166:94;11945:322;-1:-1:-1;;;11945:322:2:o;19978:465::-;20043:11;20231:13;;20221:7;:23;20217:210;;;20264:14;20296:60;-1:-1:-1;20313:26:2;;;;:17;:26;;;;;;;20303:42;;;20296:60;;20347:9;;;:::i;:::-;;;20296:60;;;-1:-1:-1;;;20383:24:2;:29;;-1:-1:-1;20217:210:2;19978:465;;;:::o;49703:160::-;49802:13;49796:4;49789:27;49842:4;49836;49829:18;41333:460;41457:13;41473:16;41481:7;41473;:16::i;:::-;41457:32;;41504:13;:45;;;;-1:-1:-1;47819:10:2;-1:-1:-1;;;;;41521:28:2;;;;41504:45;41500:198;;;41568:44;41585:5;47819:10;19567:162;:::i;41568:44::-;41563:135;;41632:51;41640:42;41632:7;:51::i;:::-;41708:24;;;;:15;:24;;;;;;:35;;;;-1:-1:-1;;;;;41708:35:2;;;;;;;;;41758:28;;41708:24;;41758:28;;;;;;;41447:346;41333:460;;;:::o;14380:2173::-;14528:26;;;;:17;:26;;;;;;14847:6;14857:1;14847:11;14843:1270;;14893:13;;14882:7;:24;14878:77;;14908:47;-1:-1:-1;;;14908:7:2;:47::i;:::-;15502:597;-1:-1:-1;;;15596:9:2;15578:28;;;;:17;:28;;;;;;15650:25;;15502:597;15650:25;-1:-1:-1;;;15701:6:2;:24;15729:1;15701:29;15697:48;;14380:2173;;;:::o;15697:48::-;16033:47;-1:-1:-1;;;16033:7:2;:47::i;:::-;15502:597;;14843:1270;-1:-1:-1;;;16435:6:2;:24;16463:1;16435:29;16431:48;;14380:2173;;;:::o;16431:48::-;16499:47;-1:-1:-1;;;16499:7:2;:47::i;29533:673::-;29711:88;;-1:-1:-1;;;29711:88:2;;29691:4;;-1:-1:-1;;;;;29711:45:2;;;;;:88;;47819:10;;29778:4;;29784:7;;29793:5;;29711:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29711:88:2;;;;;;;;-1:-1:-1;;29711:88:2;;;;;;;;;;;;:::i;:::-;;;29707:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29989:6;:13;30006:1;29989:18;29985:113;;30027:56;-1:-1:-1;;;30027:7:2;:56::i;:::-;30168:6;30162:13;30153:6;30149:2;30145:15;30138:38;29707:493;-1:-1:-1;;;;;;29867:64:2;-1:-1:-1;;;29867:64:2;;-1:-1:-1;29707:493:2;29533:673;;;;;;:::o;47933:1708::-;47998:17;48426:4;48419;48413:11;48409:22;48516:1;48510:4;48503:15;48589:4;48586:1;48582:12;48575:19;;;48669:1;48664:3;48657:14;48770:3;49004:5;48986:419;49051:1;49046:3;49042:11;49035:18;;49219:2;49213:4;49209:13;49205:2;49201:22;49196:3;49188:36;49311:2;49301:13;;49366:25;48986:419;49366:25;-1:-1:-1;49433:13:2;;;-1:-1:-1;;49546:14:2;;;49606:19;;;49546:14;47933:1708;-1:-1:-1;47933:1708:2:o;14:177:4:-;-1:-1:-1;;;;;;92:5:4;88:78;81:5;78:89;68:117;;181:1;178;171:12;68:117;14:177;:::o;196:245::-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:300::-;691:3;729:5;723:12;756:6;751:3;744:19;812:6;805:4;798:5;794:16;787:4;782:3;778:14;772:47;864:1;857:4;848:6;843:3;839:16;835:27;828:38;927:4;920:2;916:7;911:2;903:6;899:15;895:29;890:3;886:39;882:50;875:57;;;638:300;;;;:::o;943:231::-;1092:2;1081:9;1074:21;1055:4;1112:56;1164:2;1153:9;1149:18;1141:6;1112:56;:::i;1179:180::-;1238:6;1291:2;1279:9;1270:7;1266:23;1262:32;1259:52;;;1307:1;1304;1297:12;1259:52;-1:-1:-1;1330:23:4;;1179:180;-1:-1:-1;1179:180:4:o;1595:196::-;1663:20;;-1:-1:-1;;;;;1712:54:4;;1702:65;;1692:93;;1781:1;1778;1771:12;1796:254;1864:6;1872;1925:2;1913:9;1904:7;1900:23;1896:32;1893:52;;;1941:1;1938;1931:12;1893:52;1964:29;1983:9;1964:29;:::i;:::-;1954:39;2040:2;2025:18;;;;2012:32;;-1:-1:-1;;;1796:254:4:o;2237:328::-;2314:6;2322;2330;2383:2;2371:9;2362:7;2358:23;2354:32;2351:52;;;2399:1;2396;2389:12;2351:52;2422:29;2441:9;2422:29;:::i;:::-;2412:39;;2470:38;2504:2;2493:9;2489:18;2470:38;:::i;:::-;2460:48;;2555:2;2544:9;2540:18;2527:32;2517:42;;2237:328;;;;;:::o;2570:186::-;2629:6;2682:2;2670:9;2661:7;2657:23;2653:32;2650:52;;;2698:1;2695;2688:12;2650:52;2721:29;2740:9;2721:29;:::i;2761:347::-;2826:6;2834;2887:2;2875:9;2866:7;2862:23;2858:32;2855:52;;;2903:1;2900;2893:12;2855:52;2926:29;2945:9;2926:29;:::i;:::-;2916:39;;3005:2;2994:9;2990:18;2977:32;3052:5;3045:13;3038:21;3031:5;3028:32;3018:60;;3074:1;3071;3064:12;3018:60;3097:5;3087:15;;;2761:347;;;;;:::o;3113:184::-;-1:-1:-1;;;3162:1:4;3155:88;3262:4;3259:1;3252:15;3286:4;3283:1;3276:15;3302:1138;3397:6;3405;3413;3421;3474:3;3462:9;3453:7;3449:23;3445:33;3442:53;;;3491:1;3488;3481:12;3442:53;3514:29;3533:9;3514:29;:::i;:::-;3504:39;;3562:38;3596:2;3585:9;3581:18;3562:38;:::i;:::-;3552:48;;3647:2;3636:9;3632:18;3619:32;3609:42;;3702:2;3691:9;3687:18;3674:32;3725:18;3766:2;3758:6;3755:14;3752:34;;;3782:1;3779;3772:12;3752:34;3820:6;3809:9;3805:22;3795:32;;3865:7;3858:4;3854:2;3850:13;3846:27;3836:55;;3887:1;3884;3877:12;3836:55;3923:2;3910:16;3945:2;3941;3938:10;3935:36;;;3951:18;;:::i;:::-;4026:2;4020:9;3994:2;4080:13;;-1:-1:-1;;4076:22:4;;;4100:2;4072:31;4068:40;4056:53;;;4124:18;;;4144:22;;;4121:46;4118:72;;;4170:18;;:::i;:::-;4210:10;4206:2;4199:22;4245:2;4237:6;4230:18;4285:7;4280:2;4275;4271;4267:11;4263:20;4260:33;4257:53;;;4306:1;4303;4296:12;4257:53;4362:2;4357;4353;4349:11;4344:2;4336:6;4332:15;4319:46;4407:1;4402:2;4397;4389:6;4385:15;4381:24;4374:35;4428:6;4418:16;;;;;;;3302:1138;;;;;;;:::o;4445:260::-;4513:6;4521;4574:2;4562:9;4553:7;4549:23;4545:32;4542:52;;;4590:1;4587;4580:12;4542:52;4613:29;4632:9;4613:29;:::i;:::-;4603:39;;4661:38;4695:2;4684:9;4680:18;4661:38;:::i;:::-;4651:48;;4445:260;;;;;:::o;4710:437::-;4789:1;4785:12;;;;4832;;;4853:61;;4907:4;4899:6;4895:17;4885:27;;4853:61;4960:2;4952:6;4949:14;4929:18;4926:38;4923:218;;-1:-1:-1;;;4994:1:4;4987:88;5098:4;5095:1;5088:15;5126:4;5123:1;5116:15;4923:218;;4710:437;;;:::o;5152:212::-;5194:3;5232:5;5226:12;5276:6;5269:4;5262:5;5258:16;5253:3;5247:36;5338:1;5302:16;;5327:13;;;-1:-1:-1;5302:16:4;;5152:212;-1:-1:-1;5152:212:4:o;5369:267::-;5548:3;5573:57;5599:30;5625:3;5617:6;5599:30;:::i;:::-;5591:6;5573:57;:::i;5641:290::-;5680:3;5708:5;5698:193;;-1:-1:-1;;;5744:1:4;5737:88;5848:4;5845:1;5838:15;5876:4;5873:1;5866:15;5698:193;-1:-1:-1;;;5907:18:4;;5641:290::o;5936:523::-;6130:4;-1:-1:-1;;;;;6240:2:4;6232:6;6228:15;6217:9;6210:34;6292:2;6284:6;6280:15;6275:2;6264:9;6260:18;6253:43;;6332:6;6327:2;6316:9;6312:18;6305:34;6375:3;6370:2;6359:9;6355:18;6348:31;6396:57;6448:3;6437:9;6433:19;6425:6;6396:57;:::i;:::-;6388:65;5936:523;-1:-1:-1;;;;;;5936:523:4:o;6464:249::-;6533:6;6586:2;6574:9;6565:7;6561:23;6557:32;6554:52;;;6602:1;6599;6592:12;6554:52;6634:9;6628:16;6653:30;6677:5;6653:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "719000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2636",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26604",
								"supportsInterface(bytes4)": "513",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4430",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_mintSpot(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipIsInitialized(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipExists(uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "17",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeMintSpot(address,uint256)": "infinite",
								"_safeMintSpot(address,uint256,bytes memory)": "infinite",
								"_sequentialUpTo()": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_totalSpotMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 5261,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5327,
									"end": 5332,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 5335,
									"end": 5340,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5327,
									"end": 5332,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 5327,
									"end": 5340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5350,
									"end": 5357,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 5360,
									"end": 5367,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5350,
									"end": 5357,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 5350,
									"end": 5367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6022,
									"end": 6029,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5377,
									"end": 5408,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5377,
									"end": 5408,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 146,
									"end": 862,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 862,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 709,
									"end": 712,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 702,
									"end": 706,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 697,
									"end": 699,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 685,
									"end": 700,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 681,
									"end": 707,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 678,
									"end": 713,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 675,
									"end": 730,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 675,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 726,
									"end": 727,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 724,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 716,
									"end": 728,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 675,
									"end": 730,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 783,
									"end": 785,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 776,
									"end": 780,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 768,
									"end": 774,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 764,
									"end": 781,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 757,
									"end": 761,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 749,
									"end": 755,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 745,
									"end": 762,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 739,
									"end": 786,
									"name": "MCOPY",
									"source": 4
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 810,
									"end": 816,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 806,
									"end": 821,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 802,
									"end": 828,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 795,
									"end": 832,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 850,
									"end": 856,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 966,
									"end": 972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 980,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1027,
									"end": 1029,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1015,
									"end": 1024,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1006,
									"end": 1013,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1002,
									"end": 1025,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 998,
									"end": 1030,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1043,
									"end": 1044,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1033,
									"end": 1045,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1086,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1086,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1163,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1152,
									"end": 1164,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1238,
									"end": 1245,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1229,
									"end": 1235,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1218,
									"end": 1227,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1214,
									"end": 1236,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1185,
									"end": 1246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1294,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1281,
									"end": 1290,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1295,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1296,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 1323,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1319,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1308,
									"end": 1324,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1337,
									"end": 1338,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 1335,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1327,
									"end": 1339,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1415,
									"end": 1422,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1404,
									"end": 1412,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1393,
									"end": 1402,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1413,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1360,
									"end": 1423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 867,
									"end": 1429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1631,
									"end": 1635,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 1623,
									"end": 1629,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1619,
									"end": 1636,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1609,
									"end": 1636,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1609,
									"end": 1636,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1676,
									"end": 1682,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1673,
									"end": 1687,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1653,
									"end": 1671,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1650,
									"end": 1688,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 1725,
									"end": 1728,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 1721,
									"end": 1741,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1718,
									"end": 1719,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1765,
									"end": 1769,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1762,
									"end": 1763,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1755,
									"end": 1770,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1793,
									"end": 1797,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1790,
									"end": 1791,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1783,
									"end": 1798,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2047,
									"end": 2049,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2042,
									"end": 2045,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2039,
									"end": 2050,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2083,
									"end": 2088,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2080,
									"end": 2081,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2073,
									"end": 2089,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2127,
									"end": 2131,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2124,
									"end": 2125,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 2197,
									"end": 2199,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2185,
									"end": 2195,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2181,
									"end": 2200,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2178,
									"end": 2179,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2168,
									"end": 2172,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2164,
									"end": 2202,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2233,
									"end": 2237,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2221,
									"end": 2231,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2218,
									"end": 2238,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2256,
									"end": 2260,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2311,
									"end": 2313,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2306,
									"end": 2309,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2302,
									"end": 2314,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2299,
									"end": 2300,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2295,
									"end": 2315,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2289,
									"end": 2293,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2285,
									"end": 2316,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2275,
									"end": 2316,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2275,
									"end": 2316,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2384,
									"end": 2386,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2382,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2374,
									"end": 2387,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2444,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2445,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2429,
									"end": 2445,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2399,
									"end": 2412,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1945,
									"end": 2463,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2759,
									"end": 2769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2759,
									"end": 2769,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2781,
									"end": 2811,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2781,
									"end": 2811,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2814,
									"end": 2832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2933,
									"end": 2939,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2925,
									"end": 2929,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2919,
									"end": 2930,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2893,
									"end": 2931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2887,
									"end": 2891,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 2843,
									"end": 2940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2995,
									"end": 2999,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2995,
									"end": 2999,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3054,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3041,
									"end": 3055,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3041,
									"end": 3055,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3069,
									"end": 3070,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3771,
									"end": 3772,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3788,
									"end": 3794,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3834,
									"end": 3860,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2596,
									"end": 2597,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2588,
									"end": 2612,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2584,
									"end": 2613,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2574,
									"end": 2614,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2620,
									"end": 2621,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2571,
									"end": 2628,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3887,
									"end": 3968,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3887,
									"end": 3968,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1929,
									"end": 1933,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1916,
									"end": 1934,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1916,
									"end": 1934,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3232,
									"end": 3239,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3229,
									"end": 3230,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3226,
									"end": 3240,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3315,
									"end": 3341,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3300,
									"end": 3342,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3300,
									"end": 3342,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 3381,
									"end": 3382,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3248,
									"end": 3267,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3248,
									"end": 3267,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3222,
									"end": 3225,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3482,
									"end": 3488,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3473,
									"end": 3480,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3470,
									"end": 3489,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3537,
									"end": 3563,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3626,
									"end": 3627,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 3638,
									"end": 3641,
									"name": "PUSH",
									"source": 4,
									"value": "F8"
								},
								{
									"begin": 3618,
									"end": 3642,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3614,
									"end": 3651,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3610,
									"end": 3652,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3595,
									"end": 3653,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3580,
									"end": 3654,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3580,
									"end": 3654,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3714,
									"end": 3715,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3702,
									"end": 3703,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 3694,
									"end": 3716,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3688,
									"end": 3692,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3681,
									"end": 3717,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 3984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e17496b2867d8dfcbbf6daeffc9875bcd72a2888c438625453fa68e86c1048d264736f6c63430008190033",
									".code": [
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "C87B56DD"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "81812FC"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 10689,
											"end": 11319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 10689,
											"end": 11319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 611,
											"end": 625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 604,
											"end": 626,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 11573,
											"end": 11671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 11573,
											"end": 11671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 18636,
											"end": 18859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 18636,
											"end": 18859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18364,
											"end": 18486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 18364,
											"end": 18486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6951,
											"end": 6965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7325,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2055,
											"end": 2232,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 22796,
											"end": 26243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 22796,
											"end": 26243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 26334,
											"end": 26521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 26334,
											"end": 26521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 12934,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 12934,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 8570,
											"end": 8809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 8570,
											"end": 8809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 11742,
											"end": 11844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 19186,
											"end": 19417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 19186,
											"end": 19417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 27102,
											"end": 27507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 27102,
											"end": 27507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 11945,
											"end": 12267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 11945,
											"end": 12267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 19567,
											"end": 19729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19664,
											"end": 19668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10774,
											"end": 10778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11073,
											"end": 11269,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10689,
											"end": 11319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11627,
											"end": 11640,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11659,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11652,
											"end": 11664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11652,
											"end": 11664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18712,
											"end": 18719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18736,
											"end": 18752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18744,
											"end": 18751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18736,
											"end": 18743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 18736,
											"end": 18752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18736,
											"end": 18752,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18736,
											"end": 18752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18731,
											"end": 18804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 18731,
											"end": 18804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18754,
											"end": 18804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 18762,
											"end": 18803,
											"name": "PUSH",
											"source": 2,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18754,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 18754,
											"end": 18804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18754,
											"end": 18804,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 18754,
											"end": 18804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18837,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18852,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18822,
											"end": 18852,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18822,
											"end": 18852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18636,
											"end": 18859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18452,
											"end": 18479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 18461,
											"end": 18463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18465,
											"end": 18472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18474,
											"end": 18478,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 18452,
											"end": 18460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 18452,
											"end": 18479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18452,
											"end": 18479,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 18452,
											"end": 18479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18364,
											"end": 18486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22933,
											"end": 22960,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22963,
											"end": 22990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 22982,
											"end": 22989,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22963,
											"end": 22981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 22963,
											"end": 22990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22963,
											"end": 22990,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 22963,
											"end": 22990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 22933,
											"end": 22990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22933,
											"end": 22990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 23169,
											"end": 23264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 23169,
											"end": 23264,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23220,
											"end": 23264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 23228,
											"end": 23263,
											"name": "PUSH",
											"source": 2,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23220,
											"end": 23227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 23220,
											"end": 23264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23220,
											"end": 23264,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 23220,
											"end": 23264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23276,
											"end": 23303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21929,
											"end": 21944,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22153,
											"end": 22179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22153,
											"end": 22179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 21566,
											"end": 21596,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21566,
											"end": 21596,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21566,
											"end": 21596,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21263,
											"end": 21291,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 21263,
											"end": 21291,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21544,
											"end": 21564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21544,
											"end": 21564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21544,
											"end": 21564,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 21541,
											"end": 21597,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 23459,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 23459,
											"end": 23647,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23551,
											"end": 23594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 23568,
											"end": 23572,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 19567,
											"end": 19729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23551,
											"end": 23594,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 23551,
											"end": 23594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23546,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 23546,
											"end": 23647,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23596,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 23604,
											"end": 23646,
											"name": "PUSH",
											"source": 2,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23596,
											"end": 23603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 23596,
											"end": 23647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23596,
											"end": 23647,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 23596,
											"end": 23647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23790,
											"end": 23805,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23928,
											"end": 23929,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23907,
											"end": 23926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23900,
											"end": 23930,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24334,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17492,
											"end": 17503,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 17467,
											"end": 17490,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 17463,
											"end": 17504,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17450,
											"end": 17513,
											"name": "OR",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17450,
											"end": 17513,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24687,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24959,
											"end": 25006,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24959,
											"end": 25006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 24959,
											"end": 25011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24959,
											"end": 25011,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25063,
											"end": 25064,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 25053,
											"end": 25064,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 25053,
											"end": 25064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 25031,
											"end": 25050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25201,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25219,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 25180,
											"end": 25558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 25180,
											"end": 25558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25320,
											"end": 25333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25333,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 25305,
											"end": 25316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25305,
											"end": 25333,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25465,
											"end": 25517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25013,
											"end": 25572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25700,
											"end": 25720,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 25700,
											"end": 25720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26071,
											"end": 26078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 25700,
											"end": 25720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26003,
											"end": 26007,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 25946,
											"end": 25971,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25681,
											"end": 25697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25681,
											"end": 25697,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 25814,
											"end": 26106,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 26129,
											"end": 26137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26141,
											"end": 26142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26129,
											"end": 26142,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 26125,
											"end": 26183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 26125,
											"end": 26183,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 26144,
											"end": 26183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 26152,
											"end": 26182,
											"name": "PUSH",
											"source": 2,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26144,
											"end": 26151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 26144,
											"end": 26183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26144,
											"end": 26183,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 26144,
											"end": 26183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22796,
											"end": 26243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 26492,
											"end": 26496,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 26498,
											"end": 26500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 26502,
											"end": 26509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 26475,
											"end": 26514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13006,
											"end": 13013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13048,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 13067,
											"end": 13074,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 13048,
											"end": 13075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8665,
											"end": 8684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8665,
											"end": 8684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8661,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 8661,
											"end": 8730,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8686,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 8694,
											"end": 8729,
											"name": "PUSH",
											"source": 2,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8686,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 8686,
											"end": 8730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8686,
											"end": 8730,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 8686,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8747,
											"end": 8802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8570,
											"end": 8809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11798,
											"end": 11811,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11830,
											"end": 11837,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11823,
											"end": 11837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19298,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19186,
											"end": 19417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27271,
											"end": 27302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 27284,
											"end": 27288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27290,
											"end": 27292,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27294,
											"end": 27301,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27271,
											"end": 27283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 27271,
											"end": 27302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27271,
											"end": 27302,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 27271,
											"end": 27302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27316,
											"end": 27330,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 27316,
											"end": 27330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 27316,
											"end": 27330,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 27316,
											"end": 27335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 27312,
											"end": 27501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 27312,
											"end": 27501,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 27354,
											"end": 27410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 27385,
											"end": 27389,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27391,
											"end": 27393,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27395,
											"end": 27402,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27404,
											"end": 27409,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 27354,
											"end": 27384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 27354,
											"end": 27410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27354,
											"end": 27410,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 27354,
											"end": 27410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27349,
											"end": 27501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 27349,
											"end": 27501,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 27430,
											"end": 27486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27430,
											"end": 27437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 27430,
											"end": 27486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27430,
											"end": 27486,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 27430,
											"end": 27486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27102,
											"end": 27507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12018,
											"end": 12031,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12048,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 12056,
											"end": 12063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12048,
											"end": 12055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 12048,
											"end": 12064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12048,
											"end": 12064,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 12048,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12043,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 12043,
											"end": 12111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12066,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 12074,
											"end": 12110,
											"name": "PUSH",
											"source": 2,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12066,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 12066,
											"end": 12111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12066,
											"end": 12111,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 12066,
											"end": 12111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12122,
											"end": 12143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12146,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12512,
											"end": 12604,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12146,
											"end": 12156,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 12146,
											"end": 12156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12122,
											"end": 12156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12122,
											"end": 12156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12179,
											"end": 12186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12198,
											"end": 12199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12199,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 12245,
											"end": 12252,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 12235,
											"end": 12253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12235,
											"end": 12253,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 12235,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 12209,
											"end": 12254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12166,
											"end": 12260,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11945,
											"end": 12267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20043,
											"end": 20054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20231,
											"end": 20244,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20231,
											"end": 20244,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20221,
											"end": 20228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20221,
											"end": 20244,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20264,
											"end": 20278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20330,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20303,
											"end": 20345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20303,
											"end": 20345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20303,
											"end": 20345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 20347,
											"end": 20356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20383,
											"end": 20407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20383,
											"end": 20412,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20383,
											"end": 20412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19978,
											"end": 20443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 49703,
											"end": 49863,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 49703,
											"end": 49863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 49802,
											"end": 49815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 49796,
											"end": 49800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 49789,
											"end": 49816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 49842,
											"end": 49846,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 49836,
											"end": 49840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 49829,
											"end": 49847,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41457,
											"end": 41470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 41473,
											"end": 41489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 41481,
											"end": 41488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 41473,
											"end": 41480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 41473,
											"end": 41489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 41473,
											"end": 41489,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 41473,
											"end": 41489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41457,
											"end": 41489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 41457,
											"end": 41489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41504,
											"end": 41517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41500,
											"end": 41698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 41500,
											"end": 41698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 41500,
											"end": 41698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 41568,
											"end": 41612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 41585,
											"end": 41590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 19567,
											"end": 19729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 41568,
											"end": 41612,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 41568,
											"end": 41612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41563,
											"end": 41698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 41563,
											"end": 41698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 41632,
											"end": 41683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 41640,
											"end": 41682,
											"name": "PUSH",
											"source": 2,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41632,
											"end": 41639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 41632,
											"end": 41683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 41632,
											"end": 41683,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 41632,
											"end": 41683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41723,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 41447,
											"end": 41793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41333,
											"end": 41793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14545,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14857,
											"end": 14858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14847,
											"end": 14858,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14906,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14882,
											"end": 14889,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14882,
											"end": 14906,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14878,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 14878,
											"end": 14955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14908,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14908,
											"end": 14915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 14908,
											"end": 14955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14908,
											"end": 14955,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 14908,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15596,
											"end": 15605,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15650,
											"end": 15675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15650,
											"end": 15675,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15650,
											"end": 15675,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15701,
											"end": 15707,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15701,
											"end": 15725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15729,
											"end": 15730,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15701,
											"end": 15730,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16033,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16033,
											"end": 16040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 16033,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16033,
											"end": 16080,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 16033,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16435,
											"end": 16441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16435,
											"end": 16459,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16463,
											"end": 16464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16435,
											"end": 16464,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14380,
											"end": 16553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16499,
											"end": 16546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16499,
											"end": 16506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 16499,
											"end": 16546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29691,
											"end": 29695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29691,
											"end": 29695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29778,
											"end": 29782,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 29778,
											"end": 29782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29784,
											"end": 29791,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 29784,
											"end": 29791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29793,
											"end": 29798,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 29793,
											"end": 29798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 29711,
											"end": 29799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 29711,
											"end": 29799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29989,
											"end": 29995,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29989,
											"end": 30002,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 30006,
											"end": 30007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29989,
											"end": 30007,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 29985,
											"end": 30098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 29985,
											"end": 30098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 30027,
											"end": 30083,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30027,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 30027,
											"end": 30083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 30027,
											"end": 30083,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 30027,
											"end": 30083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 30168,
											"end": 30174,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 30162,
											"end": 30175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 30153,
											"end": 30159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 30149,
											"end": 30151,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 30145,
											"end": 30160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 30138,
											"end": 30176,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29867,
											"end": 29931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29867,
											"end": 29931,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 29867,
											"end": 29931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29533,
											"end": 30206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 47933,
											"end": 49641,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 47933,
											"end": 49641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 47998,
											"end": 48015,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 48426,
											"end": 48430,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 48419,
											"end": 48423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 48413,
											"end": 48424,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 48409,
											"end": 48431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 48516,
											"end": 48517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 48510,
											"end": 48514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 48503,
											"end": 48518,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 48589,
											"end": 48593,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 48586,
											"end": 48587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 48582,
											"end": 48594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 48575,
											"end": 48594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 48575,
											"end": 48594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 48575,
											"end": 48594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 48669,
											"end": 48670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 48664,
											"end": 48667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 48657,
											"end": 48671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 48770,
											"end": 48773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 49004,
											"end": 49009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 48986,
											"end": 49405,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 48986,
											"end": 49405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 49051,
											"end": 49052,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 49046,
											"end": 49049,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 49042,
											"end": 49053,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 49035,
											"end": 49053,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 49035,
											"end": 49053,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 49219,
											"end": 49221,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 49213,
											"end": 49217,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 49209,
											"end": 49222,
											"name": "MOD",
											"source": 2
										},
										{
											"begin": 49205,
											"end": 49207,
											"name": "PUSH",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 49201,
											"end": 49223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 49196,
											"end": 49199,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 49188,
											"end": 49224,
											"name": "MSTORE8",
											"source": 2
										},
										{
											"begin": 49311,
											"end": 49313,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 49301,
											"end": 49314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 49301,
											"end": 49314,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 49366,
											"end": 49391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 48986,
											"end": 49405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 49366,
											"end": 49391,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49433,
											"end": 49446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 49433,
											"end": 49446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 49433,
											"end": 49446,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 49606,
											"end": 49625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 49606,
											"end": 49625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 49606,
											"end": 49625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 47933,
											"end": 49641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47933,
											"end": 49641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 88,
											"end": 166,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 167,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 68,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 171,
											"end": 183,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 68,
											"end": 185,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 196,
											"end": 441,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 196,
											"end": 441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 381,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 638,
											"end": 938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 691,
											"end": 694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 723,
											"end": 735,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 754,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 744,
											"end": 763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 805,
											"end": 809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 794,
											"end": 810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 778,
											"end": 792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 772,
											"end": 819,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 864,
											"end": 865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 848,
											"end": 854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 843,
											"end": 846,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 839,
											"end": 855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 835,
											"end": 862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 828,
											"end": 866,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 922,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 916,
											"end": 923,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 911,
											"end": 913,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 899,
											"end": 914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 924,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 890,
											"end": 893,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 886,
											"end": 925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 882,
											"end": 932,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 875,
											"end": 932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 875,
											"end": 932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 875,
											"end": 932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 943,
											"end": 1174,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 943,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1059,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1164,
											"end": 1166,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1167,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1147,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 1112,
											"end": 1168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1293,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1270,
											"end": 1277,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1289,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1294,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1683,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1766,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1767,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1692,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1692,
											"end": 1785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1783,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 2050,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1922,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 1923,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1896,
											"end": 1928,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 1964,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2044,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2044,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2369,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2358,
											"end": 2381,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2400,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2397,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2401,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 2441,
											"end": 2450,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2422,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2412,
											"end": 2451,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2412,
											"end": 2451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 2504,
											"end": 2506,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2470,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2559,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2756,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2570,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2670,
											"end": 2679,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2657,
											"end": 2680,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2685,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2702,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 2650,
											"end": 2702,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2696,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2702,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 2650,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2721,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2884,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2873,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2885,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2890,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2926,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2955,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2955,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2994,
											"end": 3003,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3009,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3038,
											"end": 3059,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3076,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3097,
											"end": 3102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3113,
											"end": 3297,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3113,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3243,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3266,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3259,
											"end": 3260,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3286,
											"end": 3290,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3291,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 3403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3474,
											"end": 3477,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3462,
											"end": 3471,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3472,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3478,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3489,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3493,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3514,
											"end": 3543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3504,
											"end": 3543,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3504,
											"end": 3543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 3596,
											"end": 3598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3585,
											"end": 3594,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3562,
											"end": 3600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3600,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3636,
											"end": 3645,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3651,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3702,
											"end": 3704,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3674,
											"end": 3706,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3766,
											"end": 3768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3772,
											"end": 3784,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3826,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3809,
											"end": 3818,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3827,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3863,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3873,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3887,
											"end": 3888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3923,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3910,
											"end": 3926,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3948,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 3971,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 3935,
											"end": 3971,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3951,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4020,
											"end": 4029,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4102,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 4072,
											"end": 4103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4121,
											"end": 4167,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 4170,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4206,
											"end": 4208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4221,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4245,
											"end": 4247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4282,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4260,
											"end": 4293,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4304,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4362,
											"end": 4364,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4355,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4349,
											"end": 4360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4342,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4332,
											"end": 4347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4365,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4395,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 4440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4560,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4577,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 4632,
											"end": 4641,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4613,
											"end": 4642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4603,
											"end": 4642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4603,
											"end": 4642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 4695,
											"end": 4697,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4693,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4661,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4790,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4907,
											"end": 4911,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 4899,
											"end": 4905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4895,
											"end": 4912,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 4962,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4952,
											"end": 4958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 4947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4926,
											"end": 4964,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 4995,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5075,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 5095,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5131,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4710,
											"end": 5147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5152,
											"end": 5364,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 5152,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5194,
											"end": 5197,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5238,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5269,
											"end": 5273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5262,
											"end": 5267,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5274,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5253,
											"end": 5256,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5283,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5318,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5327,
											"end": 5340,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5327,
											"end": 5340,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5327,
											"end": 5340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5302,
											"end": 5318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5152,
											"end": 5364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5369,
											"end": 5636,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5369,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 5599,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 5625,
											"end": 5628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5599,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 5599,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5599,
											"end": 5629,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 5599,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 5573,
											"end": 5630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5931,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 5641,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5713,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 5698,
											"end": 5891,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5744,
											"end": 5745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5852,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5838,
											"end": 5853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5876,
											"end": 5880,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5873,
											"end": 5874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5881,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5891,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 5698,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5936,
											"end": 6459,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5936,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6240,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6228,
											"end": 6243,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6226,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6244,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6294,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6290,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6280,
											"end": 6295,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6273,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6253,
											"end": 6296,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6253,
											"end": 6296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6332,
											"end": 6338,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6327,
											"end": 6329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6312,
											"end": 6330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6375,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6370,
											"end": 6372,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6359,
											"end": 6368,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6348,
											"end": 6379,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6396,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6437,
											"end": 6446,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6425,
											"end": 6431,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6396,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 6396,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6396,
											"end": 6453,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 6396,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6388,
											"end": 6453,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 5936,
											"end": 6459,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 6459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6713,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 6464,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6533,
											"end": 6539,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6584,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6589,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6634,
											"end": 6643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6653,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6677,
											"end": 6682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6653,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 6653,
											"end": 6683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractV/ContractVV1.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
								"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. The `_sequentialUpTo()` function can be overriden to enable spot mints (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 485,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 487,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 489,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 491,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 495,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 499,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 504,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)417_storage)"
							},
							{
								"astId": 510,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 512,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_spotMinted",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)417_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)417_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)417_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 416,
										"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ContractV/ContractVV1.sol": {
				"ast": {
					"absolutePath": "contracts/ContractV/ContractVV1.sol",
					"exportedSymbols": {
						"Context": [
							393
						],
						"ContractVV1": [
							363
						],
						"ERC721A": [
							2493
						],
						"ERC721A__IERC721Receiver": [
							411
						],
						"IERC721A": [
							2714
						]
					},
					"id": 364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
							"file": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 364,
							"sourceUnit": 2494,
							"src": "63:79:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 364,
							"sourceUnit": 394,
							"src": "144:104:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC721A",
										"nameLocations": [
											"276:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2493,
										"src": "276:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "276:7:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nameLocations": [
											"285:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 393,
										"src": "285:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "285:7:0"
								}
							],
							"canonicalName": "ContractVV1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 363,
							"linearizedBaseContracts": [
								363,
								393,
								2493,
								2714
							],
							"name": "ContractVV1",
							"nameLocation": "261:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ContractVV1.Creature",
									"id": 16,
									"members": [
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "335:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "327:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "327:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "356:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "348:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 10,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "348:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "gameStats",
											"nameLocation": "542:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "534:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 12,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "534:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "battleRecord",
											"nameLocation": "655:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "647:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 14,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "647:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Creature",
									"nameLocation": "307:8:0",
									"nodeType": "StructDefinition",
									"scope": 363,
									"src": "300:375:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "nextCreatureId",
									"nameLocation": "699:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 363,
									"src": "683:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "683:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "creatures",
									"nameLocation": "758:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 363,
									"src": "720:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Creature_$16_storage_$",
										"typeString": "mapping(uint256 => struct ContractVV1.Creature)"
									},
									"typeName": {
										"id": 22,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 19,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "729:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "720:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Creature_$16_storage_$",
											"typeString": "mapping(uint256 => struct ContractVV1.Creature)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 21,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 20,
												"name": "Creature",
												"nameLocations": [
													"740:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 16,
												"src": "740:8:0"
											},
											"referencedDeclaration": 16,
											"src": "740:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Creature_$16_storage_ptr",
												"typeString": "struct ContractVV1.Creature"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "fce6b98db3cc5152281e5d3e4c7332adfb0d4b574cc5723dc73792f7624043cc",
									"id": 29,
									"name": "CreatureCreated",
									"nameLocation": "782:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "creatureId",
												"nameLocation": "814:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "798:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "842:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "826:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:51:0"
									},
									"src": "776:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "37fdf7cda6ec1c848e98866fe5e1f781b2b5976a1d79c7770394e65503ce92af",
									"id": 35,
									"name": "BattleResult",
									"nameLocation": "861:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "winnerId",
												"nameLocation": "890:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "874:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "loserId",
												"nameLocation": "916:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "900:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:51:0"
									},
									"src": "855:70:0"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "STRENGTH_BITPOS",
									"nameLocation": "1006:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 363,
									"src": "981:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 36,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1024:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 41,
									"mutability": "constant",
									"name": "AGILITY_BITPOS",
									"nameLocation": "1057:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 363,
									"src": "1032:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 39,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1032:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 40,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 44,
									"mutability": "constant",
									"name": "INTELLIGENCE_BITPOS",
									"nameLocation": "1108:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 363,
									"src": "1083:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 42,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1083:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 43,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 47,
									"mutability": "constant",
									"name": "SPECIAL_POWER_BITPOS",
									"nameLocation": "1165:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 363,
									"src": "1140:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 45,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1140:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 46,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1188:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 50,
									"mutability": "constant",
									"name": "WINS_BITPOS",
									"nameLocation": "1266:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 363,
									"src": "1241:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 48,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1241:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 49,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1280:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 53,
									"mutability": "constant",
									"name": "LOSSES_BITPOS",
									"nameLocation": "1313:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 363,
									"src": "1288:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1288:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 52,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1329:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "233de595",
									"id": 55,
									"name": "CreatureNotOwned",
									"nameLocation": "1347:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1363:2:0"
									},
									"src": "1341:25:0"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1413:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 60,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1444:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 59,
														"name": "_checkCreatureOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "1424:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1424:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1424:23:0"
											},
											{
												"id": 63,
												"nodeType": "PlaceholderStatement",
												"src": "1460:1:0"
											}
										]
									},
									"id": 65,
									"name": "onlyOwnedCreature",
									"nameLocation": "1383:17:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1409:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1401:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:12:0"
									},
									"src": "1374:95:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1518:37:0",
										"statements": [
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "nextCreatureId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1529:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1546:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1529:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1529:18:0"
											}
										]
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4469676974757265",
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1499:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5015b3cef792bb3a08923072ca9951988f9e7056838e18c18fabf148e3b1764",
														"typeString": "literal_string \"Digiture\""
													},
													"value": "Digiture"
												},
												{
													"hexValue": "444754",
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1511:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_efb7686f5df66561ae3fb953df9052f92f2dab4058c529a366f1236017649000",
														"typeString": "literal_string \"DGT\""
													},
													"value": "DGT"
												}
											],
											"id": 70,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 67,
												"name": "ERC721A",
												"nameLocations": [
													"1491:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2493,
												"src": "1491:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1491:26:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1488:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:0:0"
									},
									"scope": 363,
									"src": "1477:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1624:40:0",
										"statements": [
											{
												"expression": {
													"id": 82,
													"name": "nextCreatureId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "1642:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 83,
												"nodeType": "Return",
												"src": "1635:21:0"
											}
										]
									},
									"functionSelector": "3095fe91",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextCreatureId",
									"nameLocation": "1572:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1589:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1615:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:9:0"
									},
									"scope": 363,
									"src": "1563:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "1745:39:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "creatures",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1763:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Creature_$16_storage_$",
															"typeString": "mapping(uint256 => struct ContractVV1.Creature storage ref)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "1773:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1763:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Creature_$16_storage",
														"typeString": "struct ContractVV1.Creature storage ref"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "1756:20:0"
											}
										]
									},
									"functionSelector": "f052d65a",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCreature",
									"nameLocation": "1681:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1701:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1693:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1692:12:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1728:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Creature_$16_memory_ptr",
													"typeString": "struct ContractVV1.Creature"
												},
												"typeName": {
													"id": 90,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 89,
														"name": "Creature",
														"nameLocations": [
															"1728:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 16,
														"src": "1728:8:0"
													},
													"referencedDeclaration": 16,
													"src": "1728:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Creature_$16_storage_ptr",
														"typeString": "struct ContractVV1.Creature"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:17:0"
									},
									"scope": 363,
									"src": "1672:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "2187:676:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2207:649:0",
													"nodeType": "YulBlock",
													"src": "2207:649:0",
													"statements": [
														{
															"nativeSrc": "2442:403:0",
															"nodeType": "YulAssignment",
															"src": "2442:403:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "STRENGTH_BITPOS",
																								"nativeSrc": "2564:15:0",
																								"nodeType": "YulIdentifier",
																								"src": "2564:15:0"
																							},
																							{
																								"name": "strength",
																								"nativeSrc": "2581:8:0",
																								"nodeType": "YulIdentifier",
																								"src": "2581:8:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2560:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2560:3:0"
																						},
																						"nativeSrc": "2560:30:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2560:30:0"
																					},
																					{
																						"arguments": [
																							{
																								"name": "AGILITY_BITPOS",
																								"nativeSrc": "2625:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "2625:14:0"
																							},
																							{
																								"name": "agility",
																								"nativeSrc": "2641:7:0",
																								"nodeType": "YulIdentifier",
																								"src": "2641:7:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2621:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2621:3:0"
																						},
																						"nativeSrc": "2621:28:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2621:28:0"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nativeSrc": "2527:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "2527:2:0"
																				},
																				"nativeSrc": "2527:149:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2527:149:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "INTELLIGENCE_BITPOS",
																						"nativeSrc": "2707:19:0",
																						"nodeType": "YulIdentifier",
																						"src": "2707:19:0"
																					},
																					{
																						"name": "intelligence",
																						"nativeSrc": "2728:12:0",
																						"nodeType": "YulIdentifier",
																						"src": "2728:12:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2703:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2703:3:0"
																				},
																				"nativeSrc": "2703:38:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2703:38:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2498:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2498:2:0"
																		},
																		"nativeSrc": "2498:266:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2498:266:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "SPECIAL_POWER_BITPOS",
																				"nativeSrc": "2791:20:0",
																				"nodeType": "YulIdentifier",
																				"src": "2791:20:0"
																			},
																			{
																				"name": "specialPower",
																				"nativeSrc": "2813:12:0",
																				"nodeType": "YulIdentifier",
																				"src": "2813:12:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2787:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:0"
																		},
																		"nativeSrc": "2787:39:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2787:39:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2473:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "2473:2:0"
																},
																"nativeSrc": "2473:372:0",
																"nodeType": "YulFunctionCall",
																"src": "2473:372:0"
															},
															"variableNames": [
																{
																	"name": "gameStats",
																	"nativeSrc": "2442:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "2442:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 41,
														"isOffset": false,
														"isSlot": false,
														"src": "2625:14:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "2707:19:0",
														"valueSize": 1
													},
													{
														"declaration": 47,
														"isOffset": false,
														"isSlot": false,
														"src": "2791:20:0",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2564:15:0",
														"valueSize": 1
													},
													{
														"declaration": 102,
														"isOffset": false,
														"isSlot": false,
														"src": "2641:7:0",
														"valueSize": 1
													},
													{
														"declaration": 109,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:9:0",
														"valueSize": 1
													},
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "2728:12:0",
														"valueSize": 1
													},
													{
														"declaration": 106,
														"isOffset": false,
														"isSlot": false,
														"src": "2813:12:0",
														"valueSize": 1
													},
													{
														"declaration": 100,
														"isOffset": false,
														"isSlot": false,
														"src": "2581:8:0",
														"valueSize": 1
													}
												],
												"id": 111,
												"nodeType": "InlineAssembly",
												"src": "2198:658:0"
											}
										]
									},
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "packGameStats",
									"nameLocation": "2006:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "strength",
												"nameLocation": "2038:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2030:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "agility",
												"nameLocation": "2066:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2058:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "intelligence",
												"nameLocation": "2093:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2085:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "specialPower",
												"nameLocation": "2125:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2117:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2019:125:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "gameStats",
												"nameLocation": "2176:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2168:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2167:19:0"
									},
									"scope": 363,
									"src": "1997:866:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3126:458:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3146:431:0",
													"nodeType": "YulBlock",
													"src": "3146:431:0",
													"statements": [
														{
															"nativeSrc": "3237:68:0",
															"nodeType": "YulAssignment",
															"src": "3237:68:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "STRENGTH_BITPOS",
																				"nativeSrc": "3257:15:0",
																				"nodeType": "YulIdentifier",
																				"src": "3257:15:0"
																			},
																			{
																				"name": "gameStats",
																				"nativeSrc": "3274:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:9:0"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "3253:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3253:3:0"
																		},
																		"nativeSrc": "3253:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3253:31:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3294:2:0",
																						"nodeType": "YulLiteral",
																						"src": "3294:2:0",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3298:1:0",
																						"nodeType": "YulLiteral",
																						"src": "3298:1:0",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3290:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3290:3:0"
																				},
																				"nativeSrc": "3290:10:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3290:10:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3302:1:0",
																				"nodeType": "YulLiteral",
																				"src": "3302:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3286:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3286:3:0"
																		},
																		"nativeSrc": "3286:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3286:18:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3249:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "3249:3:0"
																},
																"nativeSrc": "3249:56:0",
																"nodeType": "YulFunctionCall",
																"src": "3249:56:0"
															},
															"variableNames": [
																{
																	"name": "strength",
																	"nativeSrc": "3237:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "3237:8:0"
																}
															]
														},
														{
															"nativeSrc": "3319:66:0",
															"nodeType": "YulAssignment",
															"src": "3319:66:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "AGILITY_BITPOS",
																				"nativeSrc": "3338:14:0",
																				"nodeType": "YulIdentifier",
																				"src": "3338:14:0"
																			},
																			{
																				"name": "gameStats",
																				"nativeSrc": "3354:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "3354:9:0"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "3334:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3334:3:0"
																		},
																		"nativeSrc": "3334:30:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:30:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3374:2:0",
																						"nodeType": "YulLiteral",
																						"src": "3374:2:0",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3378:1:0",
																						"nodeType": "YulLiteral",
																						"src": "3378:1:0",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3370:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3370:3:0"
																				},
																				"nativeSrc": "3370:10:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3370:10:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3382:1:0",
																				"nodeType": "YulLiteral",
																				"src": "3382:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3366:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3366:3:0"
																		},
																		"nativeSrc": "3366:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3366:18:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3330:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:0"
																},
																"nativeSrc": "3330:55:0",
																"nodeType": "YulFunctionCall",
																"src": "3330:55:0"
															},
															"variableNames": [
																{
																	"name": "agility",
																	"nativeSrc": "3319:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "3319:7:0"
																}
															]
														},
														{
															"nativeSrc": "3399:76:0",
															"nodeType": "YulAssignment",
															"src": "3399:76:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "INTELLIGENCE_BITPOS",
																				"nativeSrc": "3423:19:0",
																				"nodeType": "YulIdentifier",
																				"src": "3423:19:0"
																			},
																			{
																				"name": "gameStats",
																				"nativeSrc": "3444:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "3444:9:0"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "3419:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3419:3:0"
																		},
																		"nativeSrc": "3419:35:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3419:35:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3464:2:0",
																						"nodeType": "YulLiteral",
																						"src": "3464:2:0",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3468:1:0",
																						"nodeType": "YulLiteral",
																						"src": "3468:1:0",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3460:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3460:3:0"
																				},
																				"nativeSrc": "3460:10:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3460:10:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3472:1:0",
																				"nodeType": "YulLiteral",
																				"src": "3472:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3456:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:0"
																		},
																		"nativeSrc": "3456:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:18:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3415:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "3415:3:0"
																},
																"nativeSrc": "3415:60:0",
																"nodeType": "YulFunctionCall",
																"src": "3415:60:0"
															},
															"variableNames": [
																{
																	"name": "intelligence",
																	"nativeSrc": "3399:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "3399:12:0"
																}
															]
														},
														{
															"nativeSrc": "3489:77:0",
															"nodeType": "YulAssignment",
															"src": "3489:77:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "SPECIAL_POWER_BITPOS",
																				"nativeSrc": "3513:20:0",
																				"nodeType": "YulIdentifier",
																				"src": "3513:20:0"
																			},
																			{
																				"name": "gameStats",
																				"nativeSrc": "3535:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "3535:9:0"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "3509:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:0"
																		},
																		"nativeSrc": "3509:36:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3509:36:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3555:2:0",
																						"nodeType": "YulLiteral",
																						"src": "3555:2:0",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3559:1:0",
																						"nodeType": "YulLiteral",
																						"src": "3559:1:0",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3551:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3551:3:0"
																				},
																				"nativeSrc": "3551:10:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3551:10:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3563:1:0",
																				"nodeType": "YulLiteral",
																				"src": "3563:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3547:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3547:3:0"
																		},
																		"nativeSrc": "3547:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3547:18:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3505:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:0"
																},
																"nativeSrc": "3505:61:0",
																"nodeType": "YulFunctionCall",
																"src": "3505:61:0"
															},
															"variableNames": [
																{
																	"name": "specialPower",
																	"nativeSrc": "3489:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "3489:12:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 41,
														"isOffset": false,
														"isSlot": false,
														"src": "3338:14:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "3423:19:0",
														"valueSize": 1
													},
													{
														"declaration": 47,
														"isOffset": false,
														"isSlot": false,
														"src": "3513:20:0",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "3257:15:0",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "3319:7:0",
														"valueSize": 1
													},
													{
														"declaration": 115,
														"isOffset": false,
														"isSlot": false,
														"src": "3274:9:0",
														"valueSize": 1
													},
													{
														"declaration": 115,
														"isOffset": false,
														"isSlot": false,
														"src": "3354:9:0",
														"valueSize": 1
													},
													{
														"declaration": 115,
														"isOffset": false,
														"isSlot": false,
														"src": "3444:9:0",
														"valueSize": 1
													},
													{
														"declaration": 115,
														"isOffset": false,
														"isSlot": false,
														"src": "3535:9:0",
														"valueSize": 1
													},
													{
														"declaration": 122,
														"isOffset": false,
														"isSlot": false,
														"src": "3399:12:0",
														"valueSize": 1
													},
													{
														"declaration": 124,
														"isOffset": false,
														"isSlot": false,
														"src": "3489:12:0",
														"valueSize": 1
													},
													{
														"declaration": 118,
														"isOffset": false,
														"isSlot": false,
														"src": "3237:8:0",
														"valueSize": 1
													}
												],
												"id": 126,
												"nodeType": "InlineAssembly",
												"src": "3137:440:0"
											}
										]
									},
									"functionSelector": "42e29b4e",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackGameStats",
									"nameLocation": "2948:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "gameStats",
												"nameLocation": "2972:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2964:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2963:19:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "strength",
												"nameLocation": "3022:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3014:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "agility",
												"nameLocation": "3049:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3041:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "intelligence",
												"nameLocation": "3075:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3067:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "specialPower",
												"nameLocation": "3106:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3098:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:122:0"
									},
									"scope": 363,
									"src": "2939:645:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "3899:283:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3919:256:0",
													"nodeType": "YulBlock",
													"src": "3919:256:0",
													"statements": [
														{
															"nativeSrc": "4015:149:0",
															"nodeType": "YulAssignment",
															"src": "4015:149:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "WINS_BITPOS",
																				"nativeSrc": "4078:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "4078:11:0"
																			},
																			{
																				"name": "wins",
																				"nativeSrc": "4091:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "4091:4:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4074:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:0"
																		},
																		"nativeSrc": "4074:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4074:22:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "LOSSES_BITPOS",
																				"nativeSrc": "4123:13:0",
																				"nodeType": "YulIdentifier",
																				"src": "4123:13:0"
																			},
																			{
																				"name": "losses",
																				"nativeSrc": "4138:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "4138:6:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4119:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4119:3:0"
																		},
																		"nativeSrc": "4119:26:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4119:26:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4049:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "4049:2:0"
																},
																"nativeSrc": "4049:115:0",
																"nodeType": "YulFunctionCall",
																"src": "4049:115:0"
															},
															"variableNames": [
																{
																	"name": "battleRecord",
																	"nativeSrc": "4015:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "4015:12:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 53,
														"isOffset": false,
														"isSlot": false,
														"src": "4123:13:0",
														"valueSize": 1
													},
													{
														"declaration": 50,
														"isOffset": false,
														"isSlot": false,
														"src": "4078:11:0",
														"valueSize": 1
													},
													{
														"declaration": 135,
														"isOffset": false,
														"isSlot": false,
														"src": "4015:12:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "4138:6:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "4091:4:0",
														"valueSize": 1
													}
												],
												"id": 137,
												"nodeType": "InlineAssembly",
												"src": "3910:265:0"
											}
										]
									},
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "packBattleRecord",
									"nameLocation": "3807:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "wins",
												"nameLocation": "3832:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3824:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "losses",
												"nameLocation": "3846:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3838:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3823:30:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "battleRecord",
												"nameLocation": "3885:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3877:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3876:22:0"
									},
									"scope": 363,
									"src": "3798:384:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4359:361:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4379:334:0",
													"nodeType": "YulBlock",
													"src": "4379:334:0",
													"statements": [
														{
															"nativeSrc": "4474:64:0",
															"nodeType": "YulAssignment",
															"src": "4474:64:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "WINS_BITPOS",
																				"nativeSrc": "4490:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "4490:11:0"
																			},
																			{
																				"name": "battleRecord",
																				"nativeSrc": "4503:12:0",
																				"nodeType": "YulIdentifier",
																				"src": "4503:12:0"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "4486:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4486:3:0"
																		},
																		"nativeSrc": "4486:30:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4486:30:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4526:3:0",
																						"nodeType": "YulLiteral",
																						"src": "4526:3:0",
																						"type": "",
																						"value": "128"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4531:1:0",
																						"nodeType": "YulLiteral",
																						"src": "4531:1:0",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4522:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4522:3:0"
																				},
																				"nativeSrc": "4522:11:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4522:11:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4535:1:0",
																				"nodeType": "YulLiteral",
																				"src": "4535:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4518:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4518:3:0"
																		},
																		"nativeSrc": "4518:19:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4518:19:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4482:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "4482:3:0"
																},
																"nativeSrc": "4482:56:0",
																"nodeType": "YulFunctionCall",
																"src": "4482:56:0"
															},
															"variableNames": [
																{
																	"name": "wins",
																	"nativeSrc": "4474:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "4474:4:0"
																}
															]
														},
														{
															"nativeSrc": "4634:68:0",
															"nodeType": "YulAssignment",
															"src": "4634:68:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "LOSSES_BITPOS",
																				"nativeSrc": "4652:13:0",
																				"nodeType": "YulIdentifier",
																				"src": "4652:13:0"
																			},
																			{
																				"name": "battleRecord",
																				"nativeSrc": "4667:12:0",
																				"nodeType": "YulIdentifier",
																				"src": "4667:12:0"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nativeSrc": "4648:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4648:3:0"
																		},
																		"nativeSrc": "4648:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4648:32:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4690:3:0",
																						"nodeType": "YulLiteral",
																						"src": "4690:3:0",
																						"type": "",
																						"value": "128"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4695:1:0",
																						"nodeType": "YulLiteral",
																						"src": "4695:1:0",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4686:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4686:3:0"
																				},
																				"nativeSrc": "4686:11:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4686:11:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4699:1:0",
																				"nodeType": "YulLiteral",
																				"src": "4699:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4682:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:0"
																		},
																		"nativeSrc": "4682:19:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:19:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4644:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "4644:3:0"
																},
																"nativeSrc": "4644:58:0",
																"nodeType": "YulFunctionCall",
																"src": "4644:58:0"
															},
															"variableNames": [
																{
																	"name": "losses",
																	"nativeSrc": "4634:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 53,
														"isOffset": false,
														"isSlot": false,
														"src": "4652:13:0",
														"valueSize": 1
													},
													{
														"declaration": 50,
														"isOffset": false,
														"isSlot": false,
														"src": "4490:11:0",
														"valueSize": 1
													},
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "4503:12:0",
														"valueSize": 1
													},
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "4667:12:0",
														"valueSize": 1
													},
													{
														"declaration": 146,
														"isOffset": false,
														"isSlot": false,
														"src": "4634:6:0",
														"valueSize": 1
													},
													{
														"declaration": 144,
														"isOffset": false,
														"isSlot": false,
														"src": "4474:4:0",
														"valueSize": 1
													}
												],
												"id": 148,
												"nodeType": "InlineAssembly",
												"src": "4370:343:0"
											}
										]
									},
									"functionSelector": "fd499a74",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackBattleRecord",
									"nameLocation": "4267:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "battleRecord",
												"nameLocation": "4294:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4286:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4285:22:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "wins",
												"nameLocation": "4337:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4329:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "losses",
												"nameLocation": "4351:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4343:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:30:0"
									},
									"scope": 363,
									"src": "4258:462:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "4769:926:0",
										"statements": [
											{
												"assignments": [
													154
												],
												"declarations": [
													{
														"constant": false,
														"id": 154,
														"mutability": "mutable",
														"name": "rand",
														"nameLocation": "4788:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "4780:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 153,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4780:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 169,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 160,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4830:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4836:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4830:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 162,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4847:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4853:10:0",
																			"memberName": "prevrandao",
																			"nodeType": "MemberAccess",
																			"src": "4847:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 164,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "4865:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4865:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 158,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "4813:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4817:12:0",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "4813:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4813:65:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 157,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "4803:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4803:76:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4795:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4795:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4780:100:0"
											},
											{
												"expression": {
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 170,
															"name": "creatures",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "4893:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Creature_$16_storage_$",
																"typeString": "mapping(uint256 => struct ContractVV1.Creature storage ref)"
															}
														},
														"id": 172,
														"indexExpression": {
															"id": 171,
															"name": "nextCreatureId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "4903:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4893:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Creature_$16_storage",
															"typeString": "struct ContractVV1.Creature storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 174,
																"name": "nextCreatureId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "4944:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 175,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "4973:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4973:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 178,
																			"name": "rand",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 154,
																			"src": "5127:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5134:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "5127:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 183,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 181,
																						"name": "rand",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 154,
																						"src": "5158:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "31303030",
																						"id": 182,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5165:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000_by_1",
																							"typeString": "int_const 1000"
																						},
																						"value": "1000"
																					},
																					"src": "5158:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 184,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5157:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5173:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "5157:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 189,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 187,
																						"name": "rand",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 154,
																						"src": "5197:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "31303030303030",
																						"id": 188,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5204:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000_by_1",
																							"typeString": "int_const 1000000"
																						},
																						"value": "1000000"
																					},
																					"src": "5197:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 190,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5196:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5215:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "5196:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 193,
																						"name": "rand",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 154,
																						"src": "5239:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "31303030303030303030",
																						"id": 194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5246:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000_by_1",
																							"typeString": "int_const 1000000000"
																						},
																						"value": "1000000000"
																					},
																					"src": "5239:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 196,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5238:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5260:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "5238:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 177,
																	"name": "packGameStats",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "5095:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5095:184:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5311:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5314:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 200,
																	"name": "packBattleRecord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "5294:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5294:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 173,
															"name": "Creature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "4921:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Creature_$16_storage_ptr_$",
																"typeString": "type(struct ContractVV1.Creature storage pointer)"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4921:406:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Creature_$16_memory_ptr",
															"typeString": "struct ContractVV1.Creature memory"
														}
													},
													"src": "4893:434:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Creature_$16_storage",
														"typeString": "struct ContractVV1.Creature storage ref"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "4893:434:0"
											},
											{
												"id": 213,
												"nodeType": "UncheckedBlock",
												"src": "5340:63:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 208,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "5375:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5375:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "31",
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5389:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 207,
																"name": "_safeMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1948,
																	1963
																],
																"referencedDeclaration": 1963,
																"src": "5365:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,uint256)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5365:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 212,
														"nodeType": "ExpressionStatement",
														"src": "5365:26:0"
													}
												]
											},
											{
												"AST": {
													"nativeSrc": "5424:201:0",
													"nodeType": "YulBlock",
													"src": "5424:201:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "nextCreatureId.slot",
																		"nativeSrc": "5464:19:0",
																		"nodeType": "YulIdentifier",
																		"src": "5464:19:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "nextCreatureId.slot",
																						"nativeSrc": "5535:19:0",
																						"nodeType": "YulIdentifier",
																						"src": "5535:19:0"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5529:5:0",
																					"nodeType": "YulIdentifier",
																					"src": "5529:5:0"
																				},
																				"nativeSrc": "5529:26:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5529:26:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5579:1:0",
																				"nodeType": "YulLiteral",
																				"src": "5579:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5503:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5503:3:0"
																		},
																		"nativeSrc": "5503:96:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:96:0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5439:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5439:6:0"
																},
																"nativeSrc": "5439:175:0",
																"nodeType": "YulFunctionCall",
																"src": "5439:175:0"
															},
															"nativeSrc": "5439:175:0",
															"nodeType": "YulExpressionStatement",
															"src": "5439:175:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 18,
														"isOffset": false,
														"isSlot": true,
														"src": "5464:19:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 18,
														"isOffset": false,
														"isSlot": true,
														"src": "5535:19:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 214,
												"nodeType": "InlineAssembly",
												"src": "5415:210:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 216,
															"name": "nextCreatureId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "5658:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 217,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "5674:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5674:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 215,
														"name": "CreatureCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "5642:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5642:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "EmitStatement",
												"src": "5637:50:0"
											}
										]
									},
									"functionSelector": "4ecbc664",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createRandomCreature",
									"nameLocation": "4737:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4757:2:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4769:0:0"
									},
									"scope": 363,
									"src": "4728:967:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "5852:1053:0",
										"statements": [
											{
												"assignments": [
													233,
													235,
													237,
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "ownerStrength",
														"nameLocation": "5872:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "5864:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5864:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "ownerAgility",
														"nameLocation": "5895:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "5887:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "ownerIntelligence",
														"nameLocation": "5917:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "5909:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "ownerSpecialPower",
														"nameLocation": "5944:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "5936:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 238,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5936:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 241,
																	"name": "creatures",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "5981:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Creature_$16_storage_$",
																		"typeString": "mapping(uint256 => struct ContractVV1.Creature storage ref)"
																	}
																},
																"id": 243,
																"indexExpression": {
																	"id": 242,
																	"name": "ownerCreatureId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "5991:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5981:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Creature_$16_storage",
																	"typeString": "struct ContractVV1.Creature storage ref"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6008:9:0",
															"memberName": "gameStats",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 13,
															"src": "5981:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 240,
														"name": "unpackGameStats",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5965:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5965:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5863:155:0"
											},
											{
												"assignments": [
													248,
													250,
													252,
													254
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "opponentStrength",
														"nameLocation": "6038:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "6030:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 247,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6030:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "opponentAgility",
														"nameLocation": "6064:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "6056:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "opponentIntelligence",
														"nameLocation": "6089:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "6081:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 254,
														"mutability": "mutable",
														"name": "opponentSpecialPower",
														"nameLocation": "6119:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "6111:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 253,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 256,
																	"name": "creatures",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "6159:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Creature_$16_storage_$",
																		"typeString": "mapping(uint256 => struct ContractVV1.Creature storage ref)"
																	}
																},
																"id": 258,
																"indexExpression": {
																	"id": 257,
																	"name": "opponentCreatureId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "6169:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6159:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Creature_$16_storage",
																	"typeString": "struct ContractVV1.Creature storage ref"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6189:9:0",
															"memberName": "gameStats",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 13,
															"src": "6159:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 255,
														"name": "unpackGameStats",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "6143:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6143:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6029:170:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 262,
																	"name": "ownerStrength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "6341:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 263,
																	"name": "ownerAgility",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "6357:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6341:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 265,
																"name": "ownerIntelligence",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "6372:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6341:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 267,
															"name": "ownerSpecialPower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6392:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6341:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 269,
																	"name": "opponentStrength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "6412:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 270,
																	"name": "opponentAgility",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "6431:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6412:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 272,
																"name": "opponentIntelligence",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "6449:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6412:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 274,
															"name": "opponentSpecialPower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "6472:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6412:80:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6341:151:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "6699:199:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 294,
																		"name": "ownerCreatureId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "6734:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6751:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 293,
																	"name": "_updateBattleRecord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "6714:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (uint256,bool)"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6714:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 297,
															"nodeType": "ExpressionStatement",
															"src": "6714:43:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 299,
																		"name": "opponentCreatureId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "6792:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6812:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 298,
																	"name": "_updateBattleRecord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "6772:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (uint256,bool)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6772:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "6772:45:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "ownerCreatureId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "6850:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 305,
																		"name": "opponentCreatureId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "6867:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 303,
																	"name": "BattleResult",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "6837:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6837:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "EmitStatement",
															"src": "6832:54:0"
														}
													]
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "6337:561:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6494:199:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "ownerCreatureId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "6529:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6546:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 277,
																	"name": "_updateBattleRecord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "6509:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (uint256,bool)"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6509:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "6509:42:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 283,
																		"name": "opponentCreatureId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "6586:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6606:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 282,
																	"name": "_updateBattleRecord",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "6566:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (uint256,bool)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6566:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "ExpressionStatement",
															"src": "6566:46:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 288,
																		"name": "ownerCreatureId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "6645:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 289,
																		"name": "opponentCreatureId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "6662:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 287,
																	"name": "BattleResult",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "6632:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6632:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 291,
															"nodeType": "EmitStatement",
															"src": "6627:54:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2a0c5221",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 229,
													"name": "ownerCreatureId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 224,
													"src": "5835:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 228,
												"name": "onlyOwnedCreature",
												"nameLocations": [
													"5817:17:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 65,
												"src": "5817:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5817:34:0"
										}
									],
									"name": "battle",
									"nameLocation": "5748:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "ownerCreatureId",
												"nameLocation": "5763:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5755:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "opponentCreatureId",
												"nameLocation": "5788:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5780:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5754:53:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5852:0:0"
									},
									"scope": 363,
									"src": "5739:1166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "6967:85:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 316,
																"name": "creatures",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "6982:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Creature_$16_storage_$",
																	"typeString": "mapping(uint256 => struct ContractVV1.Creature storage ref)"
																}
															},
															"id": 318,
															"indexExpression": {
																"id": 317,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "6992:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6982:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Creature_$16_storage",
																"typeString": "struct ContractVV1.Creature storage ref"
															}
														},
														"id": 319,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6996:5:0",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 11,
														"src": "6982:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 320,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "7005:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7005:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6982:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 326,
												"nodeType": "IfStatement",
												"src": "6978:66:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 323,
															"name": "CreatureNotOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "7026:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7026:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 325,
													"nodeType": "RevertStatement",
													"src": "7019:25:0"
												}
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkCreatureOwned",
									"nameLocation": "6922:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6950:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "6942:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6941:12:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6967:0:0"
									},
									"scope": 363,
									"src": "6913:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "7127:375:0",
										"statements": [
											{
												"assignments": [
													337
												],
												"declarations": [
													{
														"constant": false,
														"id": 337,
														"mutability": "mutable",
														"name": "creature",
														"nameLocation": "7155:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "7138:25:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Creature_$16_storage_ptr",
															"typeString": "struct ContractVV1.Creature"
														},
														"typeName": {
															"id": 336,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 335,
																"name": "Creature",
																"nameLocations": [
																	"7138:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 16,
																"src": "7138:8:0"
															},
															"referencedDeclaration": 16,
															"src": "7138:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Creature_$16_storage_ptr",
																"typeString": "struct ContractVV1.Creature"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"baseExpression": {
														"id": 338,
														"name": "creatures",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "7166:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Creature_$16_storage_$",
															"typeString": "mapping(uint256 => struct ContractVV1.Creature storage ref)"
														}
													},
													"id": 340,
													"indexExpression": {
														"id": 339,
														"name": "creatureId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "7176:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7166:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Creature_$16_storage",
														"typeString": "struct ContractVV1.Creature storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7138:49:0"
											},
											{
												"assignments": [
													343,
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "wins",
														"nameLocation": "7207:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "7199:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 342,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7199:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "losses",
														"nameLocation": "7221:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "7213:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 347,
																"name": "creature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "7250:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Creature_$16_storage_ptr",
																	"typeString": "struct ContractVV1.Creature storage pointer"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7259:12:0",
															"memberName": "battleRecord",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "7250:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "unpackBattleRecord",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "7231:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7231:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7198:74:0"
											},
											{
												"AST": {
													"nativeSrc": "7294:134:0",
													"nodeType": "YulBlock",
													"src": "7294:134:0",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7343:24:0",
																		"nodeType": "YulBlock",
																		"src": "7343:24:0",
																		"statements": [
																			{
																				"nativeSrc": "7345:20:0",
																				"nodeType": "YulAssignment",
																				"src": "7345:20:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "wins",
																							"nativeSrc": "7357:4:0",
																							"nodeType": "YulIdentifier",
																							"src": "7357:4:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7363:1:0",
																							"nodeType": "YulLiteral",
																							"src": "7363:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7353:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "7353:3:0"
																					},
																					"nativeSrc": "7353:12:0",
																					"nodeType": "YulFunctionCall",
																					"src": "7353:12:0"
																				},
																				"variableNames": [
																					{
																						"name": "wins",
																						"nativeSrc": "7345:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "7345:4:0"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "7333:34:0",
																	"nodeType": "YulCase",
																	"src": "7333:34:0",
																	"value": {
																		"kind": "bool",
																		"nativeSrc": "7338:4:0",
																		"nodeType": "YulLiteral",
																		"src": "7338:4:0",
																		"type": "",
																		"value": "true"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7389:28:0",
																		"nodeType": "YulBlock",
																		"src": "7389:28:0",
																		"statements": [
																			{
																				"nativeSrc": "7391:24:0",
																				"nodeType": "YulAssignment",
																				"src": "7391:24:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "losses",
																							"nativeSrc": "7405:6:0",
																							"nodeType": "YulIdentifier",
																							"src": "7405:6:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7413:1:0",
																							"nodeType": "YulLiteral",
																							"src": "7413:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7401:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "7401:3:0"
																					},
																					"nativeSrc": "7401:14:0",
																					"nodeType": "YulFunctionCall",
																					"src": "7401:14:0"
																				},
																				"variableNames": [
																					{
																						"name": "losses",
																						"nativeSrc": "7391:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "7391:6:0"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "7381:36:0",
																	"nodeType": "YulCase",
																	"src": "7381:36:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "won",
																"nativeSrc": "7316:3:0",
																"nodeType": "YulIdentifier",
																"src": "7316:3:0"
															},
															"nativeSrc": "7309:108:0",
															"nodeType": "YulSwitch",
															"src": "7309:108:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": false,
														"src": "7391:6:0",
														"valueSize": 1
													},
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": false,
														"src": "7405:6:0",
														"valueSize": 1
													},
													{
														"declaration": 343,
														"isOffset": false,
														"isSlot": false,
														"src": "7345:4:0",
														"valueSize": 1
													},
													{
														"declaration": 343,
														"isOffset": false,
														"isSlot": false,
														"src": "7357:4:0",
														"valueSize": 1
													},
													{
														"declaration": 332,
														"isOffset": false,
														"isSlot": false,
														"src": "7316:3:0",
														"valueSize": 1
													}
												],
												"id": 351,
												"nodeType": "InlineAssembly",
												"src": "7285:143:0"
											},
											{
												"expression": {
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 352,
															"name": "creature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "7440:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Creature_$16_storage_ptr",
																"typeString": "struct ContractVV1.Creature storage pointer"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7449:12:0",
														"memberName": "battleRecord",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "7440:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 356,
																"name": "wins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "7481:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 357,
																"name": "losses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "7487:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 355,
															"name": "packBattleRecord",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "7464:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7464:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7440:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "7440:54:0"
											}
										]
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateBattleRecord",
									"nameLocation": "7069:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "creatureId",
												"nameLocation": "7097:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7089:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "won",
												"nameLocation": "7114:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "7109:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7109:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7088:30:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7127:0:0"
									},
									"scope": 363,
									"src": "7060:442:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 364,
							"src": "252:7253:0",
							"usedErrors": [
								55,
								2499,
								2502,
								2505,
								2508,
								2511,
								2514,
								2517,
								2520,
								2523,
								2526,
								2529,
								2532,
								2535,
								2538,
								2541,
								2544,
								2547,
								2550
							],
							"usedEvents": [
								29,
								35,
								2582,
								2591,
								2600,
								2713
							]
						}
					],
					"src": "35:7470:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							393
						]
					},
					"id": 394,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 365,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 366,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 393,
							"linearizedBaseContracts": [
								393
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 371,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 370,
												"id": 373,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 393,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 380,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 379,
												"id": 382,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 393,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 388,
												"id": 390,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 393,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 394,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							2493
						],
						"ERC721A__IERC721Receiver": [
							411
						],
						"IERC721A": [
							2714
						]
					},
					"id": 2494,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 395,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:2"
						},
						{
							"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2494,
							"sourceUnit": 2715,
							"src": "109:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "135:51:2",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 411,
							"linearizedBaseContracts": [
								411
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "197:24:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "237:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "271:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "263:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "319:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "311:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "351:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "336:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 404,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:108:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "380:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 407,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:2"
									},
									"scope": 411,
									"src": "228:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2494,
							"src": "187:203:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 413,
										"name": "IERC721A",
										"nameLocations": [
											"1073:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2714,
										"src": "1073:8:2"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "1073:8:2"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "392:660:2",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n The `_sequentialUpTo()` function can be overriden to enable spot mints\n (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2493,
							"linearizedBaseContracts": [
								2493,
								2714
							],
							"name": "ERC721A",
							"nameLocation": "1062:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 417,
									"members": [
										{
											"constant": false,
											"id": 416,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1215:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 417,
											"src": "1207:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 415,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1207:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1180:16:2",
									"nodeType": "StructDefinition",
									"scope": 2493,
									"src": "1173:54:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 425,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1488:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "1463:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 418,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1463:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 424,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1519:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1524:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1519:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 422,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1518:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 423,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1530:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1518:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 428,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1629:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "1604:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 426,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1604:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 427,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1653:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 431,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1753:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "1728:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 429,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1728:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 430,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1777:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 434,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1869:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "1844:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 432,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1844:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 433,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1883:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 442,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1999:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "1974:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1974:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 441,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2026:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2031:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "2026:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 439,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2025:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 440,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2038:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2025:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 445,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "2136:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "2111:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 443,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2111:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 444,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2162:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 450,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2258:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "2233:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2233:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 449,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 447,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2276:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 448,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2281:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2276:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 453,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2390:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "2365:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 451,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2365:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 452,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2417:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 458,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2522:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "2497:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2497:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 455,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2550:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 456,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2555:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2550:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 461,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2650:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "2625:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2625:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2671:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 469,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2792:30:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "2767:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 468,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2826:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2831:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 466,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2825:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 467,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2838:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2825:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 477,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2924:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "2899:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 470,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2899:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 476,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2944:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2949:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2944:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 474,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2943:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 475,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2956:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2943:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 480,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3265:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "3240:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3240:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 479,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3300:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 483,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3451:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "3426:127:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 481,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3426:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 482,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3487:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3796:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "3780:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 484,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3780:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3868:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "3852:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 486,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3852:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 489,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3920:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "3905:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 488,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3905:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 491,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3967:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "3952:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 490,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3952:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 495,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4394:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "4358:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 494,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 492,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4366:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4358:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 493,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4377:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 499,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4653:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "4617:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 498,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 496,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4625:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4617:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 497,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4636:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 504,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4773:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "4728:60:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$417_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 503,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 500,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4736:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4728:36:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$417_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 502,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 501,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"4747:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 417,
												"src": "4747:16:2"
											},
											"referencedDeclaration": 417,
											"src": "4747:16:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$417_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 510,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4896:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "4843:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 509,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 505,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4851:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4843:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 508,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 506,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4870:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4862:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 507,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4881:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 512,
									"mutability": "mutable",
									"name": "_spotMinted",
									"nameLocation": "5060:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "5044:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 511,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5044:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "5317:190:2",
										"statements": [
											{
												"expression": {
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 519,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "5327:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 520,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "5335:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5327:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "5327:13:2"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 523,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "5350:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 524,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "5360:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5350:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "5350:17:2"
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5377:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 528,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5393:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5393:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5377:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "5377:31:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 532,
															"name": "_sequentialUpTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5423:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5423:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 534,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5443:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5423:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 542,
												"nodeType": "IfStatement",
												"src": "5419:81:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 538,
																	"name": "SequentialUpToTooSmall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2538,
																	"src": "5468:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5491:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "5468:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 537,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "5460:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5460:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 541,
													"nodeType": "ExpressionStatement",
													"src": "5460:40:2"
												}
											}
										]
									},
									"id": 544,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "5273:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 513,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5273:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5308:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "5294:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5294:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5272:44:2"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5317:0:2"
									},
									"scope": 2493,
									"src": "5261:246:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "6031:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6048:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 549,
												"id": 551,
												"nodeType": "Return",
												"src": "6041:8:2"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "5703:258:2",
										"text": " @dev Returns the starting token ID for sequential mints.\n Override this function to change the starting token ID for sequential mints.\n Note: The value returned must never change after any tokens have been minted."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5975:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:2:2"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "6022:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6022:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6021:9:2"
									},
									"scope": 2493,
									"src": "5966:90:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "6471:41:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6493:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 560,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6493:7:2",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 559,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "6488:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6488:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "6502:3:2",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "6488:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 558,
												"id": 564,
												"nodeType": "Return",
												"src": "6481:24:2"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "6062:337:2",
										"text": " @dev Returns the maximum token ID (inclusive) for sequential mints.\n Override this function to return a value less than 2**256 - 1,\n but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n Note: The value returned must never change after any tokens have been minted."
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sequentialUpTo",
									"nameLocation": "6413:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6428:2:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6462:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6462:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6461:9:2"
									},
									"scope": 2493,
									"src": "6404:108:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "6650:37:2",
										"statements": [
											{
												"expression": {
													"id": 572,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 485,
													"src": "6667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 571,
												"id": 573,
												"nodeType": "Return",
												"src": "6660:20:2"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "6518:63:2",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "6595:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6607:2:2"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "6641:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6641:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6640:9:2"
									},
									"scope": 2493,
									"src": "6586:101:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2565
									],
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6967:487:2",
										"statements": [
											{
												"id": 604,
												"nodeType": "UncheckedBlock",
												"src": "7136:312:2",
												"statements": [
													{
														"expression": {
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 582,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "7303:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 583,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "7312:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 584,
																		"name": "_burnCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 487,
																		"src": "7328:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7312:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 586,
																		"name": "_startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "7343:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7343:15:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7312:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7303:55:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 590,
														"nodeType": "ExpressionStatement",
														"src": "7303:55:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 591,
																	"name": "_sequentialUpTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "7376:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7376:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7402:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 594,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7402:7:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 593,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "7397:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7397:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7411:3:2",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "7397:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7376:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "7372:65:2",
														"trueBody": {
															"expression": {
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 599,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7416:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 600,
																	"name": "_spotMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "7426:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7416:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 602,
															"nodeType": "ExpressionStatement",
															"src": "7416:21:2"
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "6693:192:2",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6899:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6933:8:2"
									},
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6910:2:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6959:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6951:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6951:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6950:16:2"
									},
									"scope": 2493,
									"src": "6890:564:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "7618:307:2",
										"statements": [
											{
												"id": 632,
												"nodeType": "UncheckedBlock",
												"src": "7765:154:2",
												"statements": [
													{
														"expression": {
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 612,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "7789:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 613,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7798:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 614,
																		"name": "_startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "7814:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7814:15:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7798:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7789:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 618,
														"nodeType": "ExpressionStatement",
														"src": "7789:40:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 619,
																	"name": "_sequentialUpTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "7847:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7847:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7873:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7873:7:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 621,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "7868:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7868:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7882:3:2",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "7868:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7847:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 631,
														"nodeType": "IfStatement",
														"src": "7843:65:2",
														"trueBody": {
															"expression": {
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 627,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "7887:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 628,
																	"name": "_spotMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "7897:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7887:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "7887:21:2"
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7460:82:2",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "7556:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7568:2:2"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7610:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "7602:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7602:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7601:16:2"
									},
									"scope": 2493,
									"src": "7547:378:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "8066:36:2",
										"statements": [
											{
												"expression": {
													"id": 640,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "8083:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 639,
												"id": 641,
												"nodeType": "Return",
												"src": "8076:19:2"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "7931:66:2",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "8011:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8023:2:2"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "8057:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8057:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8056:9:2"
									},
									"scope": 2493,
									"src": "8002:100:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "8261:35:2",
										"statements": [
											{
												"expression": {
													"id": 649,
													"name": "_spotMinted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 512,
													"src": "8278:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 648,
												"id": 650,
												"nodeType": "Return",
												"src": "8271:18:2"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "8108:80:2",
										"text": " @dev Returns the total number of tokens that are spot-minted."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalSpotMinted",
									"nameLocation": "8202:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8218:2:2"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "8252:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8252:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8251:9:2"
									},
									"scope": 2493,
									"src": "8193:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2608
									],
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "8651:158:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "8665:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8682:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8674:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 662,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8674:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8674:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8665:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "IfStatement",
												"src": "8661:69:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 668,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2505,
																	"src": "8694:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8721:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "8694:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 667,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "8686:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8686:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 671,
													"nodeType": "ExpressionStatement",
													"src": "8686:44:2"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 673,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "8747:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 675,
														"indexExpression": {
															"id": 674,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "8766:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8747:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 676,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "8775:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8747:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 660,
												"id": 678,
												"nodeType": "Return",
												"src": "8740:62:2"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "8491:74:2",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8579:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 657,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8624:8:2"
									},
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8597:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "8589:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8589:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8588:15:2"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "8642:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8642:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8641:9:2"
									},
									"scope": 2493,
									"src": "8570:239:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "8956:106:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 688,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "8974:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 690,
																	"indexExpression": {
																		"id": 689,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "8993:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8974:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 691,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "9003:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8974:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 693,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8973:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 694,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "9028:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8973:82:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 687,
												"id": 696,
												"nodeType": "Return",
												"src": "8966:89:2"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "8815:66:2",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "8895:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8917:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "8909:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8909:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8908:15:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "8947:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8947:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8946:9:2"
									},
									"scope": 2493,
									"src": "8886:176:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "9225:106:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 706,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "9243:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 708,
																	"indexExpression": {
																		"id": 707,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 701,
																		"src": "9262:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9243:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 709,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "9272:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9243:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 711,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9242:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 712,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "9297:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9242:82:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 705,
												"id": 714,
												"nodeType": "Return",
												"src": "9235:89:2"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "9068:82:2",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "9164:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9186:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "9178:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9177:15:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "9216:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9215:9:2"
									},
									"scope": 2493,
									"src": "9155:176:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "9507:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 726,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "9531:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 728,
																"indexExpression": {
																	"id": 727,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "9550:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9531:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 729,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "9560:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9531:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9524:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 724,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "9524:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9524:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 723,
												"id": 732,
												"nodeType": "Return",
												"src": "9517:55:2"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "9337:102:2",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "9453:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9469:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9461:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9460:15:2"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9499:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 721,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9499:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9498:8:2"
									},
									"scope": 2493,
									"src": "9444:135:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "9822:334:2",
										"statements": [
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "9840:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 770,
														"src": "9832:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 742,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9832:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"baseExpression": {
														"id": 744,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "9849:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 746,
													"indexExpression": {
														"id": 745,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "9868:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9849:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9832:42:2"
											},
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "9892:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 770,
														"src": "9884:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 748,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9884:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9884:17:2"
											},
											{
												"AST": {
													"nativeSrc": "9984:40:2",
													"nodeType": "YulBlock",
													"src": "9984:40:2",
													"statements": [
														{
															"nativeSrc": "9998:16:2",
															"nodeType": "YulAssignment",
															"src": "9998:16:2",
															"value": {
																"name": "aux",
																"nativeSrc": "10011:3:2",
																"nodeType": "YulIdentifier",
																"src": "10011:3:2"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nativeSrc": "9998:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "9998:9:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 739,
														"isOffset": false,
														"isSlot": false,
														"src": "10011:3:2",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9998:9:2",
														"valueSize": 1
													}
												],
												"id": 751,
												"nodeType": "InlineAssembly",
												"src": "9975:49:2"
											},
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 752,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "10033:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 753,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "10043:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 754,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "10052:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10043:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 756,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10042:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 757,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "10080:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 758,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "10093:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10080:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 760,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10079:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10042:63:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10033:72:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "10033:72:2"
											},
											{
												"expression": {
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 764,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "10115:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 766,
														"indexExpression": {
															"id": 765,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "10134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10115:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 767,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "10143:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10115:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "10115:34:2"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "9585:171:2",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "9770:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9786:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "9778:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9778:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "9800:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "9793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 738,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9793:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9777:27:2"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9822:0:2"
									},
									"scope": 2493,
									"src": "9761:395:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2573
									],
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "10780:539:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 780,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "11092:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11107:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "11092:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 783,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "11168:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11183:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "11168:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "11092:101:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 787,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11244:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11259:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "11244:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11092:177:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 779,
												"id": 791,
												"nodeType": "Return",
												"src": "11073:196:2"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "10343:341:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "10698:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 776,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10756:8:2"
									},
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "10723:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10716:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 773,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "10716:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10715:20:2"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10774:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10774:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10773:6:2"
									},
									"scope": 2493,
									"src": "10689:630:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2688
									],
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "11642:29:2",
										"statements": [
											{
												"expression": {
													"id": 800,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "11659:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 799,
												"id": 801,
												"nodeType": "Return",
												"src": "11652:12:2"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "11510:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11582:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 796,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11609:8:2"
									},
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11586:2:2"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "11627:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11627:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11626:15:2"
									},
									"scope": 2493,
									"src": "11573:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2694
									],
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "11813:31:2",
										"statements": [
											{
												"expression": {
													"id": 810,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "11830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 809,
												"id": 811,
												"nodeType": "Return",
												"src": "11823:14:2"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "11677:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11751:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 806,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11780:8:2"
									},
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11757:2:2"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "11798:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 807,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11798:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11797:15:2"
									},
									"scope": 2493,
									"src": "11742:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2702
									],
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "12033:234:2",
										"statements": [
											{
												"condition": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12047:17:2",
													"subExpression": {
														"arguments": [
															{
																"id": 823,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "12056:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 822,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "12048:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12048:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 831,
												"nodeType": "IfStatement",
												"src": "12043:68:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 827,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2529,
																	"src": "12074:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12102:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "12074:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 826,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "12066:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12066:45:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 830,
													"nodeType": "ExpressionStatement",
													"src": "12066:45:2"
												}
											},
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "12136:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "12122:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 832,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "12122:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 834,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "12146:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12146:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12122:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 839,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "12179:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12173:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 837,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "12173:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12173:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12188:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "12173:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12198:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12173:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12258:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12173:87:2",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 848,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "12226:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 850,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 816,
																				"src": "12245:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 849,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "12235:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12235:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 846,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "12209:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "12213:12:2",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "12209:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12209:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12202:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 844,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "12202:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12202:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 821,
												"id": 856,
												"nodeType": "Return",
												"src": "12166:94:2"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "11850:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "11954:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 818,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12000:8:2"
									},
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11971:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "11963:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11963:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11962:17:2"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "12018:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 819,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12018:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12017:15:2"
									},
									"scope": 2493,
									"src": "11945:322:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "12578:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12595:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 863,
												"id": 865,
												"nodeType": "Return",
												"src": "12588:9:2"
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "12273:234:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12521:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12529:2:2"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "12563:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 861,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12563:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12562:15:2"
									},
									"scope": 2493,
									"src": "12512:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2616
									],
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "13015:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 881,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 870,
																			"src": "13067:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 880,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "13048:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13048:27:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13040:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 878,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "13040:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13040:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13032:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 876,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13032:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13032:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 875,
												"id": 885,
												"nodeType": "Return",
												"src": "13025:52:2"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "12798:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "12943:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 872,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12988:8:2"
									},
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12959:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "12951:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12951:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12950:17:2"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "13006:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13005:9:2"
									},
									"scope": 2493,
									"src": "12934:150:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "13360:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 898,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "13415:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 897,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "13396:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13396:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 896,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "13377:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2559_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13377:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2559_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 895,
												"id": 901,
												"nodeType": "Return",
												"src": "13370:54:2"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "13090:172:2",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "13276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13297:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "13289:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13288:17:2"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "13337:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2559_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 893,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 892,
														"name": "TokenOwnership",
														"nameLocations": [
															"13337:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2559,
														"src": "13337:14:2"
													},
													"referencedDeclaration": 2559,
													"src": "13337:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2559_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13336:23:2"
									},
									"scope": 2493,
									"src": "13267:164:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "13613:68:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 913,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "13649:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 915,
															"indexExpression": {
																"id": 914,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "13667:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13649:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 912,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "13630:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2559_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13630:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2559_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 911,
												"id": 917,
												"nodeType": "Return",
												"src": "13623:51:2"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "13437:80:2",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "13531:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13552:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "13544:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13544:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13543:15:2"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "13590:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2559_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 909,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 908,
														"name": "TokenOwnership",
														"nameLocations": [
															"13590:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2559,
														"src": "13590:14:2"
													},
													"referencedDeclaration": 2559,
													"src": "13590:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2559_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13589:23:2"
									},
									"scope": 2493,
									"src": "13522:159:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "13945:53:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 927,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "13962:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 929,
														"indexExpression": {
															"id": 928,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "13980:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13962:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13990:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13962:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 926,
												"id": 932,
												"nodeType": "Return",
												"src": "13955:36:2"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "13687:168:2",
										"text": " @dev Returns whether the ownership slot at `index` is initialized.\n An uninitialized slot does not necessarily mean that the slot has no owner."
									},
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipIsInitialized",
									"nameLocation": "13869:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13901:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "13893:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13892:15:2"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "13939:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13939:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13938:6:2"
									},
									"scope": 2493,
									"src": "13860:138:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "14170:128:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 940,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "14184:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 942,
														"indexExpression": {
															"id": 941,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "14202:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14184:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14212:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14184:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 954,
												"nodeType": "IfStatement",
												"src": "14180:112:2",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "14215:77:2",
													"statements": [
														{
															"expression": {
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 945,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "14229:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 947,
																	"indexExpression": {
																		"id": 946,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "14247:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14229:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 949,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "14275:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 948,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "14256:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14256:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14229:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 952,
															"nodeType": "ExpressionStatement",
															"src": "14229:52:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "14004:97:2",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "14115:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "14146:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "14138:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14138:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14137:15:2"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14170:0:2"
									},
									"scope": 2493,
									"src": "14106:192:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "14463:2090:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 964,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "14477:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14477:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 966,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "14496:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14477:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1042,
												"nodeType": "IfStatement",
												"src": "14473:2017:2",
												"trueBody": {
													"id": 1041,
													"nodeType": "Block",
													"src": "14505:1985:2",
													"statements": [
														{
															"expression": {
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 968,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "14519:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 969,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "14528:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 971,
																	"indexExpression": {
																		"id": 970,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "14546:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14528:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14519:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 973,
															"nodeType": "ExpressionStatement",
															"src": "14519:35:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 974,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "14573:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 975,
																		"name": "_sequentialUpTo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "14583:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14583:17:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14573:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 990,
															"nodeType": "IfStatement",
															"src": "14569:180:2",
															"trueBody": {
																"id": 989,
																"nodeType": "Block",
																"src": "14602:147:2",
																"statements": [
																	{
																		"condition": {
																			"arguments": [
																				{
																					"id": 979,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 962,
																					"src": "14647:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 978,
																				"name": "_packedOwnershipExists",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1274,
																				"src": "14624:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (uint256) pure returns (bool)"
																				}
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14624:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 983,
																		"nodeType": "IfStatement",
																		"src": "14620:49:2",
																		"trueBody": {
																			"expression": {
																				"id": 981,
																				"name": "packed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 962,
																				"src": "14663:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"functionReturnParameters": 963,
																			"id": 982,
																			"nodeType": "Return",
																			"src": "14656:13:2"
																		}
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 985,
																						"name": "OwnerQueryForNonexistentToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2514,
																						"src": "14695:29:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 986,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "14725:8:2",
																					"memberName": "selector",
																					"nodeType": "MemberAccess",
																					"src": "14695:38:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 984,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2492,
																				"src": "14687:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14687:47:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 988,
																		"nodeType": "ExpressionStatement",
																		"src": "14687:47:2"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 991,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "14847:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14857:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14847:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1032,
															"nodeType": "IfStatement",
															"src": "14843:1270:2",
															"trueBody": {
																"id": 1031,
																"nodeType": "Block",
																"src": "14860:1253:2",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 994,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "14882:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 995,
																				"name": "_currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "14893:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14882:24:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1002,
																		"nodeType": "IfStatement",
																		"src": "14878:77:2",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 998,
																							"name": "OwnerQueryForNonexistentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2514,
																							"src": "14916:29:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 999,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14946:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14916:38:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 997,
																					"name": "_revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "14908:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																						"typeString": "function (bytes4) pure"
																					}
																				},
																				"id": 1000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14908:47:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 1001,
																			"nodeType": "ExpressionStatement",
																			"src": "14908:47:2"
																		}
																	},
																	{
																		"body": {
																			"id": 1029,
																			"nodeType": "Block",
																			"src": "15511:588:2",
																			"statements": [
																				{
																					"id": 1010,
																					"nodeType": "UncheckedBlock",
																					"src": "15533:96:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 1008,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1003,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 962,
																									"src": "15569:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 1004,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 495,
																										"src": "15578:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1007,
																									"indexExpression": {
																										"id": 1006,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": true,
																										"src": "15596:9:2",
																										"subExpression": {
																											"id": 1005,
																											"name": "tokenId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 959,
																											"src": "15598:7:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "15578:28:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "15569:37:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1009,
																							"nodeType": "ExpressionStatement",
																							"src": "15569:37:2"
																						}
																					]
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1013,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1011,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 962,
																							"src": "15654:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1012,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15664:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "15654:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1015,
																					"nodeType": "IfStatement",
																					"src": "15650:25:2",
																					"trueBody": {
																						"id": 1014,
																						"nodeType": "Continue",
																						"src": "15667:8:2"
																					}
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1020,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1018,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1016,
																								"name": "packed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 962,
																								"src": "15701:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"id": 1017,
																								"name": "_BITMASK_BURNED",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 450,
																								"src": "15710:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "15701:24:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1019,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15729:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "15701:29:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1023,
																					"nodeType": "IfStatement",
																					"src": "15697:48:2",
																					"trueBody": {
																						"expression": {
																							"id": 1021,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 962,
																							"src": "15739:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 963,
																						"id": 1022,
																						"nodeType": "Return",
																						"src": "15732:13:2"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1025,
																									"name": "OwnerQueryForNonexistentToken",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2514,
																									"src": "16041:29:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1026,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "16071:8:2",
																								"memberName": "selector",
																								"nodeType": "MemberAccess",
																								"src": "16041:38:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							],
																							"id": 1024,
																							"name": "_revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2492,
																							"src": "16033:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																								"typeString": "function (bytes4) pure"
																							}
																						},
																						"id": 1027,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16033:47:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1028,
																					"nodeType": "ExpressionStatement",
																					"src": "16033:47:2"
																				}
																			]
																		},
																		"id": 1030,
																		"isSimpleCounterLoop": false,
																		"nodeType": "ForStatement",
																		"src": "15502:597:2"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1033,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "16435:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1034,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "16444:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16435:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16463:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16435:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1040,
															"nodeType": "IfStatement",
															"src": "16431:48:2",
															"trueBody": {
																"expression": {
																	"id": 1038,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "16473:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 963,
																"id": 1039,
																"nodeType": "Return",
																"src": "16466:13:2"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1044,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2514,
																"src": "16507:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16537:8:2",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "16507:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 1043,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2492,
														"src": "16499:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16499:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "16499:47:2"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "14304:71:2",
										"text": " @dev Returns the packed ownership data of `tokenId`."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "14389:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14416:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "14408:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14408:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14407:17:2"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14455:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "14447:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14446:16:2"
									},
									"scope": 2493,
									"src": "14380:2173:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "16746:262:2",
										"statements": [
											{
												"expression": {
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1058,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "16756:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2559_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16766:4:2",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2552,
														"src": "16756:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1065,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "16789:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16781:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1063,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "16781:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16781:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16773:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16773:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16773:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16756:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "16756:41:2"
											},
											{
												"expression": {
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1070,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "16807:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2559_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16817:14:2",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2554,
														"src": "16807:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1075,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "16841:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1076,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "16851:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16841:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16834:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1073,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "16834:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16834:41:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "16807:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "16807:68:2"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1081,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "16885:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2559_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16895:6:2",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2556,
														"src": "16885:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1084,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "16904:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1085,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "16913:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16904:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16932:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16904:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16885:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "16885:48:2"
											},
											{
												"expression": {
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1091,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "16943:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2559_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16953:9:2",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2558,
														"src": "16943:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1096,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "16972:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1097,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "16982:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16972:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16965:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 1094,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "16965:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16965:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "16943:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "16943:58:2"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "16559:83:2",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "16656:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "16683:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "16675:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16675:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16674:16:2"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "16735:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "16713:31:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2559_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "TokenOwnership",
														"nameLocations": [
															"16713:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2559,
														"src": "16713:14:2"
													},
													"referencedDeclaration": 2559,
													"src": "16713:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2559_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16712:33:2"
									},
									"scope": 2493,
									"src": "16647:361:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "17182:347:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "17201:322:2",
													"nodeType": "YulBlock",
													"src": "17201:322:2",
													"statements": [
														{
															"nativeSrc": "17311:37:2",
															"nodeType": "YulAssignment",
															"src": "17311:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "17324:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "17324:5:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "17331:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "17331:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17320:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "17320:3:2"
																},
																"nativeSrc": "17320:28:2",
																"nodeType": "YulFunctionCall",
																"src": "17320:28:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "17311:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "17311:5:2"
																}
															]
														},
														{
															"nativeSrc": "17440:73:2",
															"nodeType": "YulAssignment",
															"src": "17440:73:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "17453:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "17453:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nativeSrc": "17467:23:2",
																						"nodeType": "YulIdentifier",
																						"src": "17467:23:2"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nativeSrc": "17492:9:2",
																							"nodeType": "YulIdentifier",
																							"src": "17492:9:2"
																						},
																						"nativeSrc": "17492:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "17492:11:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "17463:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "17463:3:2"
																				},
																				"nativeSrc": "17463:41:2",
																				"nodeType": "YulFunctionCall",
																				"src": "17463:41:2"
																			},
																			{
																				"name": "flags",
																				"nativeSrc": "17506:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "17506:5:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17460:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "17460:2:2"
																		},
																		"nativeSrc": "17460:52:2",
																		"nodeType": "YulFunctionCall",
																		"src": "17460:52:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17450:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "17450:2:2"
																},
																"nativeSrc": "17450:63:2",
																"nodeType": "YulFunctionCall",
																"src": "17450:63:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17440:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "17440:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 477,
														"isOffset": false,
														"isSlot": false,
														"src": "17331:16:2",
														"valueSize": 1
													},
													{
														"declaration": 445,
														"isOffset": false,
														"isSlot": false,
														"src": "17467:23:2",
														"valueSize": 1
													},
													{
														"declaration": 1108,
														"isOffset": false,
														"isSlot": false,
														"src": "17506:5:2",
														"valueSize": 1
													},
													{
														"declaration": 1106,
														"isOffset": false,
														"isSlot": false,
														"src": "17311:5:2",
														"valueSize": 1
													},
													{
														"declaration": 1106,
														"isOffset": false,
														"isSlot": false,
														"src": "17324:5:2",
														"valueSize": 1
													},
													{
														"declaration": 1106,
														"isOffset": false,
														"isSlot": false,
														"src": "17453:5:2",
														"valueSize": 1
													},
													{
														"declaration": 1111,
														"isOffset": false,
														"isSlot": false,
														"src": "17440:6:2",
														"valueSize": 1
													}
												],
												"id": 1113,
												"nodeType": "InlineAssembly",
												"src": "17192:331:2"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "17014:67:2",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "17095:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17122:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "17114:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "17137:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "17129:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17113:30:2"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17174:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "17166:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17166:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17165:16:2"
									},
									"scope": 2493,
									"src": "17086:443:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "17712:232:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "17796:142:2",
													"nodeType": "YulBlock",
													"src": "17796:142:2",
													"statements": [
														{
															"nativeSrc": "17872:56:2",
															"nodeType": "YulAssignment",
															"src": "17872:56:2",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nativeSrc": "17886:24:2",
																		"nodeType": "YulIdentifier",
																		"src": "17886:24:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nativeSrc": "17915:8:2",
																				"nodeType": "YulIdentifier",
																				"src": "17915:8:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17925:1:2",
																				"nodeType": "YulLiteral",
																				"src": "17925:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17912:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "17912:2:2"
																		},
																		"nativeSrc": "17912:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "17912:15:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "17882:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "17882:3:2"
																},
																"nativeSrc": "17882:46:2",
																"nodeType": "YulFunctionCall",
																"src": "17882:46:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17872:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "17872:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 453,
														"isOffset": false,
														"isSlot": false,
														"src": "17886:24:2",
														"valueSize": 1
													},
													{
														"declaration": 1118,
														"isOffset": false,
														"isSlot": false,
														"src": "17915:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1121,
														"isOffset": false,
														"isSlot": false,
														"src": "17872:6:2",
														"valueSize": 1
													}
												],
												"id": 1123,
												"nodeType": "InlineAssembly",
												"src": "17787:151:2"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "17535:86:2",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "17635:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "17664:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "17656:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17655:18:2"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17704:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "17696:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17695:16:2"
									},
									"scope": 2493,
									"src": "17626:318:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2656
									],
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "18442:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1135,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "18461:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "18465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18474:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1134,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2156,
															2206
														],
														"referencedDeclaration": 2206,
														"src": "18452:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18452:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "18452:27:2"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "18137:222:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."
									},
									"functionSelector": "095ea7b3",
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "18373:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1132,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18433:8:2"
									},
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18389:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "18381:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18381:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18401:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "18393:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18393:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18380:29:2"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18442:0:2"
									},
									"scope": 2493,
									"src": "18364:122:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2672
									],
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "18721:138:2",
										"statements": [
											{
												"condition": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18735:17:2",
													"subExpression": {
														"arguments": [
															{
																"id": 1151,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "18744:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1150,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "18736:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18736:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1159,
												"nodeType": "IfStatement",
												"src": "18731:73:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1155,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "18762:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18795:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "18762:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1154,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "18754:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18754:50:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1158,
													"nodeType": "ExpressionStatement",
													"src": "18754:50:2"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1160,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18822:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$417_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 1162,
														"indexExpression": {
															"id": 1161,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "18838:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18822:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$417_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18847:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 416,
													"src": "18822:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1149,
												"id": 1164,
												"nodeType": "Return",
												"src": "18815:37:2"
											}
										]
									},
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "18492:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "18645:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1146,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18694:8:2"
									},
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18665:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "18657:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18656:17:2"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "18712:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18711:9:2"
									},
									"scope": 2493,
									"src": "18636:223:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2664
									],
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "19270:147:2",
										"statements": [
											{
												"expression": {
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1175,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "19280:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1179,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1176,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "19299:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19299:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19280:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1180,
														"indexExpression": {
															"id": 1178,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "19320:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19280:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1181,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "19332:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19280:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "19280:60:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1185,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2474,
																"src": "19370:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19370:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "19391:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "19401:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1184,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2600,
														"src": "19355:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19355:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "EmitStatement",
												"src": "19350:60:2"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "18865:316:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "19195:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19261:8:2"
									},
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19221:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "19213:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19213:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "19236:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "19231:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19231:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19212:33:2"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19270:0:2"
									},
									"scope": 2493,
									"src": "19186:231:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2682
									],
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "19670:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1203,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "19687:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1205,
														"indexExpression": {
															"id": 1204,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "19706:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19687:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1207,
													"indexExpression": {
														"id": 1206,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "19713:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19687:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1202,
												"id": 1208,
												"nodeType": "Return",
												"src": "19680:42:2"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "19423:139:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "19576:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1199,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19646:8:2"
									},
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19601:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "19593:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19593:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19616:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "19608:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19608:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19592:33:2"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "19664:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19664:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19663:6:2"
									},
									"scope": 2493,
									"src": "19567:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "20056:387:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1218,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "20070:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20070:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1220,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "20089:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20070:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "20066:371:2",
												"trueBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "20098:339:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1222,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "20116:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1223,
																		"name": "_sequentialUpTo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "20126:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20126:17:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20116:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1232,
															"nodeType": "IfStatement",
															"src": "20112:90:2",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1227,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "20175:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1229,
																			"indexExpression": {
																				"id": 1228,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1213,
																				"src": "20193:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20175:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1226,
																		"name": "_packedOwnershipExists",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "20152:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (uint256) pure returns (bool)"
																		}
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20152:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"functionReturnParameters": 1217,
																"id": 1231,
																"nodeType": "Return",
																"src": "20145:57:2"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1233,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "20221:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1234,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "20231:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20221:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1260,
															"nodeType": "IfStatement",
															"src": "20217:210:2",
															"trueBody": {
																"id": 1259,
																"nodeType": "Block",
																"src": "20246:181:2",
																"statements": [
																	{
																		"assignments": [
																			1237
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1237,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "20272:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1259,
																				"src": "20264:14:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1236,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "20264:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1238,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "20264:14:2"
																	},
																	{
																		"body": {
																			"expression": {
																				"id": 1248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "20347:9:2",
																				"subExpression": {
																					"id": 1247,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1213,
																					"src": "20349:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1249,
																			"nodeType": "ExpressionStatement",
																			"src": "20347:9:2"
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"id": 1243,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1239,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1237,
																							"src": "20304:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 1240,
																								"name": "_packedOwnerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 495,
																								"src": "20313:17:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																									"typeString": "mapping(uint256 => uint256)"
																								}
																							},
																							"id": 1242,
																							"indexExpression": {
																								"id": 1241,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1213,
																								"src": "20331:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "20313:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "20304:35:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1244,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "20303:37:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20344:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "20303:42:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1250,
																		"nodeType": "WhileStatement",
																		"src": "20296:60:2"
																	},
																	{
																		"expression": {
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1251,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1216,
																				"src": "20374:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1254,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1252,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1237,
																						"src": "20383:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"id": 1253,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 450,
																						"src": "20392:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "20383:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20411:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "20383:29:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "20374:38:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1258,
																		"nodeType": "ExpressionStatement",
																		"src": "20374:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "19735:238:2",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "19987:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20003:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "19995:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19995:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19994:17:2"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "20048:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "20043:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20043:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20042:13:2"
									},
									"scope": 2493,
									"src": "19978:465:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "20617:246:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "20636:221:2",
													"nodeType": "YulBlock",
													"src": "20636:221:2",
													"statements": [
														{
															"nativeSrc": "20774:73:2",
															"nodeType": "YulAssignment",
															"src": "20774:73:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "packed",
																				"nativeSrc": "20791:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "20791:6:2"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nativeSrc": "20799:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "20799:16:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20787:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "20787:3:2"
																		},
																		"nativeSrc": "20787:29:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20787:29:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "packed",
																				"nativeSrc": "20822:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "20822:6:2"
																			},
																			{
																				"name": "_BITMASK_BURNED",
																				"nativeSrc": "20830:15:2",
																				"nodeType": "YulIdentifier",
																				"src": "20830:15:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20818:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "20818:3:2"
																		},
																		"nativeSrc": "20818:28:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20818:28:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20784:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "20784:2:2"
																},
																"nativeSrc": "20784:63:2",
																"nodeType": "YulFunctionCall",
																"src": "20784:63:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20774:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "20774:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 477,
														"isOffset": false,
														"isSlot": false,
														"src": "20799:16:2",
														"valueSize": 1
													},
													{
														"declaration": 450,
														"isOffset": false,
														"isSlot": false,
														"src": "20830:15:2",
														"valueSize": 1
													},
													{
														"declaration": 1267,
														"isOffset": false,
														"isSlot": false,
														"src": "20791:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1267,
														"isOffset": false,
														"isSlot": false,
														"src": "20822:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1270,
														"isOffset": false,
														"isSlot": false,
														"src": "20774:6:2",
														"valueSize": 1
													}
												],
												"id": 1272,
												"nodeType": "InlineAssembly",
												"src": "20627:230:2"
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "20449:80:2",
										"text": " @dev Returns whether `packed` represents a token that exists."
									},
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipExists",
									"nameLocation": "20543:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "20574:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "20566:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20566:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20565:16:2"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "20609:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "20604:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20604:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20603:13:2"
									},
									"scope": 2493,
									"src": "20534:329:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "21125:488:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "21144:463:2",
													"nodeType": "YulBlock",
													"src": "21144:463:2",
													"statements": [
														{
															"nativeSrc": "21254:37:2",
															"nodeType": "YulAssignment",
															"src": "21254:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "21267:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "21267:5:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "21274:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "21274:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21263:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "21263:3:2"
																},
																"nativeSrc": "21263:28:2",
																"nodeType": "YulFunctionCall",
																"src": "21263:28:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "21254:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "21254:5:2"
																}
															]
														},
														{
															"nativeSrc": "21404:45:2",
															"nodeType": "YulAssignment",
															"src": "21404:45:2",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nativeSrc": "21421:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "21421:9:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "21432:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "21432:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21417:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "21417:3:2"
																},
																"nativeSrc": "21417:32:2",
																"nodeType": "YulFunctionCall",
																"src": "21417:32:2"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nativeSrc": "21404:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "21404:9:2"
																}
															]
														},
														{
															"nativeSrc": "21531:66:2",
															"nodeType": "YulAssignment",
															"src": "21531:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "21547:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "21547:9:2"
																			},
																			{
																				"name": "owner",
																				"nativeSrc": "21558:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "21558:5:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "21544:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "21544:2:2"
																		},
																		"nativeSrc": "21544:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "21544:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "21569:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "21569:9:2"
																			},
																			{
																				"name": "approvedAddress",
																				"nativeSrc": "21580:15:2",
																				"nodeType": "YulIdentifier",
																				"src": "21580:15:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "21566:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "21566:2:2"
																		},
																		"nativeSrc": "21566:30:2",
																		"nodeType": "YulFunctionCall",
																		"src": "21566:30:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21541:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "21541:2:2"
																},
																"nativeSrc": "21541:56:2",
																"nodeType": "YulFunctionCall",
																"src": "21541:56:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21531:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "21531:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 477,
														"isOffset": false,
														"isSlot": false,
														"src": "21274:16:2",
														"valueSize": 1
													},
													{
														"declaration": 477,
														"isOffset": false,
														"isSlot": false,
														"src": "21432:16:2",
														"valueSize": 1
													},
													{
														"declaration": 1277,
														"isOffset": false,
														"isSlot": false,
														"src": "21580:15:2",
														"valueSize": 1
													},
													{
														"declaration": 1281,
														"isOffset": false,
														"isSlot": false,
														"src": "21404:9:2",
														"valueSize": 1
													},
													{
														"declaration": 1281,
														"isOffset": false,
														"isSlot": false,
														"src": "21421:9:2",
														"valueSize": 1
													},
													{
														"declaration": 1281,
														"isOffset": false,
														"isSlot": false,
														"src": "21547:9:2",
														"valueSize": 1
													},
													{
														"declaration": 1281,
														"isOffset": false,
														"isSlot": false,
														"src": "21569:9:2",
														"valueSize": 1
													},
													{
														"declaration": 1279,
														"isOffset": false,
														"isSlot": false,
														"src": "21254:5:2",
														"valueSize": 1
													},
													{
														"declaration": 1279,
														"isOffset": false,
														"isSlot": false,
														"src": "21267:5:2",
														"valueSize": 1
													},
													{
														"declaration": 1279,
														"isOffset": false,
														"isSlot": false,
														"src": "21558:5:2",
														"valueSize": 1
													},
													{
														"declaration": 1284,
														"isOffset": false,
														"isSlot": false,
														"src": "21531:6:2",
														"valueSize": 1
													}
												],
												"id": 1286,
												"nodeType": "InlineAssembly",
												"src": "21135:472:2"
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "20869:93:2",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "20976:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21018:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "21010:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21010:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21051:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "21043:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "21074:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "21066:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21066:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21000:89:2"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "21117:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "21112:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21112:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21111:13:2"
									},
									"scope": 2493,
									"src": "20967:646:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "21878:317:2",
										"statements": [
											{
												"assignments": [
													1300
												],
												"declarations": [
													{
														"constant": false,
														"id": 1300,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "21913:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1306,
														"src": "21888:38:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$417_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 1299,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1298,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"21888:16:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 417,
																"src": "21888:16:2"
															},
															"referencedDeclaration": 417,
															"src": "21888:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$417_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1304,
												"initialValue": {
													"baseExpression": {
														"id": 1301,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "21929:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$417_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 1303,
													"indexExpression": {
														"id": 1302,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "21945:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21929:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$417_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21888:65:2"
											},
											{
												"AST": {
													"nativeSrc": "22066:123:2",
													"nodeType": "YulBlock",
													"src": "22066:123:2",
													"statements": [
														{
															"nativeSrc": "22080:41:2",
															"nodeType": "YulAssignment",
															"src": "22080:41:2",
															"value": {
																"name": "tokenApproval.slot",
																"nativeSrc": "22103:18:2",
																"nodeType": "YulIdentifier",
																"src": "22103:18:2"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nativeSrc": "22080:19:2",
																	"nodeType": "YulIdentifier",
																	"src": "22080:19:2"
																}
															]
														},
														{
															"nativeSrc": "22134:45:2",
															"nodeType": "YulAssignment",
															"src": "22134:45:2",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nativeSrc": "22159:19:2",
																		"nodeType": "YulIdentifier",
																		"src": "22159:19:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "22153:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "22153:5:2"
																},
																"nativeSrc": "22153:26:2",
																"nodeType": "YulFunctionCall",
																"src": "22153:26:2"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nativeSrc": "22134:15:2",
																	"nodeType": "YulIdentifier",
																	"src": "22134:15:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1296,
														"isOffset": false,
														"isSlot": false,
														"src": "22134:15:2",
														"valueSize": 1
													},
													{
														"declaration": 1294,
														"isOffset": false,
														"isSlot": false,
														"src": "22080:19:2",
														"valueSize": 1
													},
													{
														"declaration": 1294,
														"isOffset": false,
														"isSlot": false,
														"src": "22159:19:2",
														"valueSize": 1
													},
													{
														"declaration": 1300,
														"isOffset": false,
														"isSlot": true,
														"src": "22103:18:2",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1305,
												"nodeType": "InlineAssembly",
												"src": "22057:132:2"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "21619:97:2",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "21730:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21765:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "21757:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21756:17:2"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "21828:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "21820:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21857:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "21849:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21849:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21819:54:2"
									},
									"scope": 2493,
									"src": "21721:474:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2648
									],
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "22923:3320:2",
										"statements": [
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "22941:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "22933:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22933:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1323,
												"initialValue": {
													"arguments": [
														{
															"id": 1321,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "22982:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1320,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "22963:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22963:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22933:57:2"
											},
											{
												"expression": {
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1324,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "23092:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1333,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1310,
																							"src": "23131:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1332,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "23123:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 1331,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "23123:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1334,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "23123:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 1330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "23115:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1329,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "23115:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23115:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 1336,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "23140:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23115:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23107:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1327,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "23107:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23107:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23099:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1325,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23099:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23099:59:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23092:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "23092:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1346,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "23189:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23181:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1344,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "23181:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23181:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23173:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1342,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23173:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23173:37:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1349,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "23214:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23173:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "23169:95:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1352,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2520,
																	"src": "23228:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "23255:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "23228:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1351,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "23220:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23220:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1355,
													"nodeType": "ExpressionStatement",
													"src": "23220:44:2"
												}
											},
											{
												"assignments": [
													1358,
													1360
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "23284:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "23276:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "23313:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "23305:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1359,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23305:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1364,
												"initialValue": {
													"arguments": [
														{
															"id": 1362,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "23359:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1361,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "23332:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23332:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23275:92:2"
											},
											{
												"condition": {
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "23463:69:2",
													"subExpression": {
														"arguments": [
															{
																"id": 1366,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "23489:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1367,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "23506:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1368,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "23512:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23512:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1365,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "23464:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23464:68:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1384,
												"nodeType": "IfStatement",
												"src": "23459:188:2",
												"trueBody": {
													"condition": {
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "23550:44:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 1373,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "23568:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1374,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2474,
																		"src": "23574:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23574:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1372,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "23551:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23551:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1383,
													"nodeType": "IfStatement",
													"src": "23546:101:2",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1379,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "23604:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23638:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "23604:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 1378,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "23596:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23596:51:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1382,
														"nodeType": "ExpressionStatement",
														"src": "23596:51:2"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1386,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "23680:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1387,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "23686:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1388,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "23690:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23699:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1385,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "23658:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23658:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "23658:43:2"
											},
											{
												"AST": {
													"nativeSrc": "23773:181:2",
													"nodeType": "YulBlock",
													"src": "23773:181:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "23806:138:2",
																"nodeType": "YulBlock",
																"src": "23806:138:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "23907:19:2",
																					"nodeType": "YulIdentifier",
																					"src": "23907:19:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23928:1:2",
																					"nodeType": "YulLiteral",
																					"src": "23928:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "23900:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "23900:6:2"
																			},
																			"nativeSrc": "23900:30:2",
																			"nodeType": "YulFunctionCall",
																			"src": "23900:30:2"
																		},
																		"nativeSrc": "23900:30:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "23900:30:2"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "23790:15:2",
																"nodeType": "YulIdentifier",
																"src": "23790:15:2"
															},
															"nativeSrc": "23787:157:2",
															"nodeType": "YulIf",
															"src": "23787:157:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1360,
														"isOffset": false,
														"isSlot": false,
														"src": "23790:15:2",
														"valueSize": 1
													},
													{
														"declaration": 1358,
														"isOffset": false,
														"isSlot": false,
														"src": "23907:19:2",
														"valueSize": 1
													}
												],
												"id": 1392,
												"nodeType": "InlineAssembly",
												"src": "23764:190:2"
											},
											{
												"id": 1449,
												"nodeType": "UncheckedBlock",
												"src": "24221:1361:2",
												"statements": [
													{
														"expression": {
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "24314:26:2",
															"subExpression": {
																"baseExpression": {
																	"id": 1393,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "24316:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1395,
																"indexExpression": {
																	"id": 1394,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "24335:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "24316:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1397,
														"nodeType": "ExpressionStatement",
														"src": "24314:26:2"
													},
													{
														"expression": {
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "24382:24:2",
															"subExpression": {
																"baseExpression": {
																	"id": 1398,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "24384:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1400,
																"indexExpression": {
																	"id": 1399,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "24403:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "24384:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1402,
														"nodeType": "ExpressionStatement",
														"src": "24382:24:2"
													},
													{
														"expression": {
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1403,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "24670:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1405,
																"indexExpression": {
																	"id": 1404,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1314,
																	"src": "24688:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "24670:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1407,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "24735:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1408,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "24755:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1410,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "24798:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1411,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1312,
																					"src": "24804:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1412,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1319,
																					"src": "24808:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1409,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2464,
																				"src": "24783:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24783:45:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24755:73:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1406,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "24699:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24699:143:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24670:172:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1417,
														"nodeType": "ExpressionStatement",
														"src": "24670:172:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1418,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1319,
																	"src": "24959:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1419,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "24981:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24959:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25010:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24959:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1448,
														"nodeType": "IfStatement",
														"src": "24955:617:2",
														"trueBody": {
															"id": 1447,
															"nodeType": "Block",
															"src": "25013:559:2",
															"statements": [
																{
																	"assignments": [
																		1424
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1424,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "25039:11:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1447,
																			"src": "25031:19:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1423,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "25031:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1428,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1425,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1314,
																			"src": "25053:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25063:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "25053:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "25031:33:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1429,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "25184:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1431,
																			"indexExpression": {
																				"id": 1430,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "25202:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "25184:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25218:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25184:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1446,
																	"nodeType": "IfStatement",
																	"src": "25180:378:2",
																	"trueBody": {
																		"id": 1445,
																		"nodeType": "Block",
																		"src": "25221:337:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1434,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1424,
																						"src": "25305:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1435,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 485,
																						"src": "25320:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25305:28:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1444,
																				"nodeType": "IfStatement",
																				"src": "25301:239:2",
																				"trueBody": {
																					"id": 1443,
																					"nodeType": "Block",
																					"src": "25335:205:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 1441,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1437,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 495,
																										"src": "25465:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1439,
																									"indexExpression": {
																										"id": 1438,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1424,
																										"src": "25483:11:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "25465:30:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1440,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1319,
																									"src": "25498:19:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "25465:52:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1442,
																							"nodeType": "ExpressionStatement",
																							"src": "25465:52:2"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "25689:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1479,
														"src": "25681:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1450,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25681:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1461,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1456,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "25716:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25708:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1454,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "25708:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25708:11:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25700:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1452,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25700:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25700:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1459,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "25723:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25700:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25681:58:2"
											},
											{
												"AST": {
													"nativeSrc": "25758:358:2",
													"nodeType": "YulBlock",
													"src": "25758:358:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25836:1:2",
																		"nodeType": "YulLiteral",
																		"src": "25836:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25892:1:2",
																		"nodeType": "YulLiteral",
																		"src": "25892:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "25946:25:2",
																		"nodeType": "YulIdentifier",
																		"src": "25946:25:2"
																	},
																	{
																		"name": "from",
																		"nativeSrc": "26003:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "26003:4:2"
																	},
																	{
																		"name": "toMasked",
																		"nativeSrc": "26036:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "26036:8:2"
																	},
																	{
																		"name": "tokenId",
																		"nativeSrc": "26071:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "26071:7:2"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nativeSrc": "25814:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "25814:4:2"
																},
																"nativeSrc": "25814:292:2",
																"nodeType": "YulFunctionCall",
																"src": "25814:292:2"
															},
															"nativeSrc": "25814:292:2",
															"nodeType": "YulExpressionStatement",
															"src": "25814:292:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 483,
														"isOffset": false,
														"isSlot": false,
														"src": "25946:25:2",
														"valueSize": 1
													},
													{
														"declaration": 1310,
														"isOffset": false,
														"isSlot": false,
														"src": "26003:4:2",
														"valueSize": 1
													},
													{
														"declaration": 1451,
														"isOffset": false,
														"isSlot": false,
														"src": "26036:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1314,
														"isOffset": false,
														"isSlot": false,
														"src": "26071:7:2",
														"valueSize": 1
													}
												],
												"id": 1462,
												"nodeType": "InlineAssembly",
												"src": "25749:367:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1463,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "26129:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26141:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26129:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1471,
												"nodeType": "IfStatement",
												"src": "26125:58:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1467,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2526,
																	"src": "26152:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26174:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "26152:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1466,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "26144:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26144:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1470,
													"nodeType": "ExpressionStatement",
													"src": "26144:39:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1473,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "26215:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "26221:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1475,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "26225:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26234:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1472,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "26194:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26194:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "26194:42:2"
											}
										]
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "22388:403:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "22805:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1316,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22914:8:2"
									},
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22835:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "22827:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22857:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "22849:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22849:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22877:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "22869:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22869:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22817:73:2"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22923:0:2"
									},
									"scope": 2493,
									"src": "22796:3447:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2638
									],
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "26465:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1492,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "26492:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "26498:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1494,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "26502:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26511:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1491,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1499,
															1539
														],
														"referencedDeclaration": 1539,
														"src": "26475:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26475:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "26475:39:2"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "26249:80:2",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "26343:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1489,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26456:8:2"
									},
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26377:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "26369:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26369:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26399:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "26391:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26391:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26419:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "26411:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26359:73:2"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26465:0:2"
									},
									"scope": 2493,
									"src": "26334:187:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2628
									],
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "27261:246:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1513,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "27284:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1514,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "27290:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1515,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "27294:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1512,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "27271:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27271:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "27271:31:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1518,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "27316:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27319:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "27316:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27324:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27316:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27334:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27316:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1537,
												"nodeType": "IfStatement",
												"src": "27312:189:2",
												"trueBody": {
													"condition": {
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "27353:57:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 1524,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "27385:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1525,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "27391:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1526,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "27395:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1527,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "27404:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1523,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "27354:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27354:56:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1536,
													"nodeType": "IfStatement",
													"src": "27349:152:2",
													"trueBody": {
														"id": 1535,
														"nodeType": "Block",
														"src": "27412:89:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1531,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2523,
																				"src": "27438:38:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27477:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "27438:47:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1530,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2492,
																		"src": "27430:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27430:56:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1534,
																"nodeType": "ExpressionStatement",
																"src": "27430:56:2"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "26527:570:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "27111:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1510,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27252:8:2"
									},
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27145:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "27137:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27137:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27167:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "27159:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27159:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27187:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "27179:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27179:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "27217:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "27204:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27204:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27127:101:2"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27261:0:2"
									},
									"scope": 2493,
									"src": "27102:405:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "28303:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "27513:633:2",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "28160:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28199:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "28191:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28191:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28221:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "28213:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28213:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "28241:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "28233:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "28271:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "28263:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28181:104:2"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28303:0:2"
									},
									"scope": 2493,
									"src": "28151:154:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "29103:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "28311:636:2",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "28961:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28999:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "28991:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29021:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "29013:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29013:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "29041:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "29033:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29033:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "29071:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "29063:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28981:104:2"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29103:0:2"
									},
									"scope": 2493,
									"src": "28952:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "29697:509:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1600,
															"nodeType": "Block",
															"src": "29846:96:2",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1592,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "29867:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1594,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1570,
																							"src": "29902:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1593,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 411,
																						"src": "29877:24:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$411_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29877:28:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$411",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "29906:16:2",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 410,
																				"src": "29877:45:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "29923:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "29877:54:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "29867:64:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1578,
																	"id": 1599,
																	"nodeType": "Return",
																	"src": "29860:71:2"
																}
															]
														},
														"errorName": "",
														"id": 1601,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1591,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1590,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "29829:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1601,
																	"src": "29822:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1589,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "29822:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29808:37:2"
														},
														"src": "29800:142:2"
													},
													{
														"block": {
															"id": 1617,
															"nodeType": "Block",
															"src": "29971:229:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1605,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1603,
																				"src": "29989:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "29996:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "29989:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30006:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29989:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1615,
																	"nodeType": "IfStatement",
																	"src": "29985:113:2",
																	"trueBody": {
																		"id": 1614,
																		"nodeType": "Block",
																		"src": "30009:89:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1610,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2523,
																								"src": "30035:38:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 1611,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "30074:8:2",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "30035:47:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1609,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2492,
																						"src": "30027:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30027:56:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1613,
																				"nodeType": "ExpressionStatement",
																				"src": "30027:56:2"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nativeSrc": "30120:70:2",
																		"nodeType": "YulBlock",
																		"src": "30120:70:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "30149:2:2",
																									"nodeType": "YulLiteral",
																									"src": "30149:2:2",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nativeSrc": "30153:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "30153:6:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "30145:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "30145:3:2"
																							},
																							"nativeSrc": "30145:15:2",
																							"nodeType": "YulFunctionCall",
																							"src": "30145:15:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nativeSrc": "30168:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "30168:6:2"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "30162:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "30162:5:2"
																							},
																							"nativeSrc": "30162:13:2",
																							"nodeType": "YulFunctionCall",
																							"src": "30162:13:2"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "30138:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "30138:6:2"
																					},
																					"nativeSrc": "30138:38:2",
																					"nodeType": "YulFunctionCall",
																					"src": "30138:38:2"
																				},
																				"nativeSrc": "30138:38:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "30138:38:2"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1603,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "30153:6:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1603,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "30168:6:2",
																			"valueSize": 1
																		}
																	],
																	"id": 1616,
																	"nodeType": "InlineAssembly",
																	"src": "30111:79:2"
																}
															]
														},
														"errorName": "",
														"id": 1618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1604,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1603,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29963:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1618,
																	"src": "29950:19:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1602,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29950:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29949:21:2"
														},
														"src": "29943:257:2"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1583,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2474,
																"src": "29757:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29757:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1585,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "29778:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1586,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "29784:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1587,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "29793:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1580,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "29736:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1579,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "29711:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$411_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29711:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$411",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29740:16:2",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 410,
														"src": "29711:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29711:88:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1619,
												"nodeType": "TryStatement",
												"src": "29707:493:2"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "29111:417:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "29542:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29590:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "29582:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29612:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "29604:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29604:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29632:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "29624:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29624:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "29662:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "29649:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29649:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29572:101:2"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "29691:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29691:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29690:6:2"
									},
									"scope": 2493,
									"src": "29533:673:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "30714:2281:2",
										"statements": [
											{
												"assignments": [
													1630
												],
												"declarations": [
													{
														"constant": false,
														"id": 1630,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "30732:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "30724:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1629,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30724:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1632,
												"initialValue": {
													"id": 1631,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 485,
													"src": "30747:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30724:36:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1633,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "30774:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30786:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30774:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1641,
												"nodeType": "IfStatement",
												"src": "30770:53:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1637,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2511,
																	"src": "30797:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30814:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "30797:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1636,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "30789:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30789:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1640,
													"nodeType": "ExpressionStatement",
													"src": "30789:34:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30864:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30856:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1643,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30856:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30856:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1647,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "30868:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1648,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "30872:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1649,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "30886:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1642,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "30834:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30834:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "30834:61:2"
											},
											{
												"id": 1740,
												"nodeType": "UncheckedBlock",
												"src": "31078:1841:2",
												"statements": [
													{
														"expression": {
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1652,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "31323:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1654,
																"indexExpression": {
																	"id": 1653,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "31341:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31323:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1656,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "31393:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1658,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1626,
																					"src": "31434:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1657,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1125,
																				"src": "31413:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31413:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1663,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31469:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1662,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "31461:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1661,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "31461:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1664,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "31461:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1665,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1624,
																					"src": "31473:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1666,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31477:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1660,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2464,
																				"src": "31446:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31446:33:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "31413:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1655,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "31357:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31357:136:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31323:170:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1671,
														"nodeType": "ExpressionStatement",
														"src": "31323:170:2"
													},
													{
														"expression": {
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1672,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "31704:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1674,
																"indexExpression": {
																	"id": 1673,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "31723:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31704:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1675,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "31730:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1678,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1676,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31743:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1677,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 428,
																							"src": "31748:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "31743:26:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1679,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "31742:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1680,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31773:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "31742:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1682,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31741:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31730:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31704:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1685,
														"nodeType": "ExpressionStatement",
														"src": "31704:71:2"
													},
													{
														"assignments": [
															1687
														],
														"declarations": [
															{
																"constant": false,
																"id": 1687,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "31891:8:2",
																"nodeType": "VariableDeclaration",
																"scope": 1740,
																"src": "31883:16:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31883:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1697,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1692,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1624,
																				"src": "31918:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31910:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1690,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "31910:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31910:11:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31902:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1688,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31902:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31902:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1695,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "31925:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31902:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31883:58:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1698,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "31960:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31972:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31960:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1706,
														"nodeType": "IfStatement",
														"src": "31956:54:2",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1702,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "31983:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32001:8:2",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "31983:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1701,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "31975:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31975:35:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1705,
															"nodeType": "ExpressionStatement",
															"src": "31975:35:2"
														}
													},
													{
														"assignments": [
															1708
														],
														"declarations": [
															{
																"constant": false,
																"id": 1708,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "32033:3:2",
																"nodeType": "VariableDeclaration",
																"scope": 1740,
																"src": "32025:11:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1707,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "32025:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1712,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1709,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "32039:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1710,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "32054:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32039:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "32025:37:2"
													},
													{
														"assignments": [
															1714
														],
														"declarations": [
															{
																"constant": false,
																"id": 1714,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "32084:7:2",
																"nodeType": "VariableDeclaration",
																"scope": 1740,
																"src": "32076:15:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1713,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "32076:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1716,
														"initialValue": {
															"id": 1715,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "32094:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "32076:30:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1717,
																	"name": "end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "32125:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32131:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32125:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1720,
																	"name": "_sequentialUpTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "32135:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32135:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32125:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1728,
														"nodeType": "IfStatement",
														"src": "32121:77:2",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1724,
																			"name": "SequentialMintExceedsLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "32162:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32189:8:2",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "32162:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1723,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "32154:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32154:44:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1727,
															"nodeType": "ExpressionStatement",
															"src": "32154:44:2"
														}
													},
													{
														"body": {
															"id": 1730,
															"nodeType": "Block",
															"src": "32216:633:2",
															"statements": [
																{
																	"AST": {
																		"nativeSrc": "32243:441:2",
																		"nodeType": "YulBlock",
																		"src": "32243:441:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "32345:1:2",
																							"nodeType": "YulLiteral",
																							"src": "32345:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "32409:1:2",
																							"nodeType": "YulLiteral",
																							"src": "32409:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nativeSrc": "32471:25:2",
																							"nodeType": "YulIdentifier",
																							"src": "32471:25:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "32536:1:2",
																							"nodeType": "YulLiteral",
																							"src": "32536:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nativeSrc": "32580:8:2",
																							"nodeType": "YulIdentifier",
																							"src": "32580:8:2"
																						},
																						{
																							"name": "tokenId",
																							"nativeSrc": "32623:7:2",
																							"nodeType": "YulIdentifier",
																							"src": "32623:7:2"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nativeSrc": "32315:4:2",
																						"nodeType": "YulIdentifier",
																						"src": "32315:4:2"
																					},
																					"nativeSrc": "32315:351:2",
																					"nodeType": "YulFunctionCall",
																					"src": "32315:351:2"
																				},
																				"nativeSrc": "32315:351:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "32315:351:2"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 483,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "32471:25:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1687,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "32580:8:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1714,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "32623:7:2",
																			"valueSize": 1
																		}
																	],
																	"id": 1729,
																	"nodeType": "InlineAssembly",
																	"src": "32234:450:2"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "32857:9:2",
																"subExpression": {
																	"id": 1731,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "32859:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1733,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "32870:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32857:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1735,
														"nodeType": "DoWhileStatement",
														"src": "32213:662:2"
													},
													{
														"expression": {
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1736,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "32889:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1737,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "32905:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32889:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1739,
														"nodeType": "ExpressionStatement",
														"src": "32889:19:2"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1742,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1746,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "32961:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1747,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "32965:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1748,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "32979:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1741,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "32928:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32928:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "32928:60:2"
											}
										]
									},
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "30397:250:2",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "30661:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "30667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "30687:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "30679:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30666:30:2"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30714:0:2"
									},
									"scope": 2493,
									"src": "30652:2343:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "33904:1513:2",
										"statements": [
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "33922:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "33914:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33914:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1763,
												"initialValue": {
													"id": 1762,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 485,
													"src": "33937:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33914:36:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1764,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "33964:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33978:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33970:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1765,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33970:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33970:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33964:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1775,
												"nodeType": "IfStatement",
												"src": "33960:57:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1771,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2508,
																	"src": "33990:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34008:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "33990:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1770,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "33982:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33982:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1774,
													"nodeType": "ExpressionStatement",
													"src": "33982:35:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1776,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "34031:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34043:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34031:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1784,
												"nodeType": "IfStatement",
												"src": "34027:53:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1780,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2511,
																	"src": "34054:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34071:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "34054:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1779,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "34046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34046:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1783,
													"nodeType": "ExpressionStatement",
													"src": "34046:34:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1785,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "34094:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1786,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "34105:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34094:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1793,
												"nodeType": "IfStatement",
												"src": "34090:98:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1789,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "34147:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34179:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "34147:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1788,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "34139:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34139:49:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1792,
													"nodeType": "ExpressionStatement",
													"src": "34139:49:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34229:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34221:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1795,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34221:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34221:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1799,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "34233:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1800,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "34237:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1801,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "34251:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1794,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "34199:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34199:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "34199:61:2"
											},
											{
												"id": 1872,
												"nodeType": "UncheckedBlock",
												"src": "34369:972:2",
												"statements": [
													{
														"expression": {
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1804,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "34589:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1806,
																"indexExpression": {
																	"id": 1805,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1755,
																	"src": "34608:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "34589:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1807,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1757,
																	"src": "34615:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1810,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1808,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "34628:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1809,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 428,
																							"src": "34633:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "34628:26:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1811,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "34627:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34658:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "34627:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1814,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "34626:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34615:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34589:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1817,
														"nodeType": "ExpressionStatement",
														"src": "34589:71:2"
													},
													{
														"expression": {
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1818,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "34896:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1820,
																"indexExpression": {
																	"id": 1819,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "34914:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "34896:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1822,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1755,
																		"src": "34966:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1824,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1757,
																					"src": "35007:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1823,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1125,
																				"src": "34986:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34986:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1829,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35042:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1828,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "35034:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1827,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "35034:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1830,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35034:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1831,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1755,
																					"src": "35046:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "35050:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1826,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2464,
																				"src": "35019:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35019:33:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34986:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1821,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "34930:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34930:136:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34896:170:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1837,
														"nodeType": "ExpressionStatement",
														"src": "34896:170:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1838,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "35085:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1839,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "35100:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "35085:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35111:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "35085:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1843,
																	"name": "_sequentialUpTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "35115:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35115:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35085:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1851,
														"nodeType": "IfStatement",
														"src": "35081:97:2",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1847,
																			"name": "SequentialMintExceedsLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "35142:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35169:8:2",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "35142:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1846,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "35134:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35134:44:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1850,
															"nodeType": "ExpressionStatement",
															"src": "35134:44:2"
														}
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1853,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "35218:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1854,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1761,
																			"src": "35232:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1855,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1757,
																			"src": "35247:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35232:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35258:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "35232:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "35261:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1859,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "35261:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35261:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1863,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1755,
																	"src": "35273:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1852,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "35198:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35198:78:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1865,
														"nodeType": "EmitStatement",
														"src": "35193:83:2"
													},
													{
														"expression": {
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1866,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "35291:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1867,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "35307:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1868,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1757,
																	"src": "35322:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35307:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35291:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1871,
														"nodeType": "ExpressionStatement",
														"src": "35291:39:2"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35379:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35371:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1874,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35371:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35371:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1878,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "35383:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1879,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "35387:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1880,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "35401:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1873,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "35350:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35350:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1882,
												"nodeType": "ExpressionStatement",
												"src": "35350:60:2"
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "33001:829:2",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "33844:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33865:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "33857:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33857:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33877:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "33869:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33869:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33856:30:2"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33904:0:2"
									},
									"scope": 2493,
									"src": "33835:1582:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "35932:650:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1895,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1887,
															"src": "35948:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1896,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "35952:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1894,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "35942:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35942:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1898,
												"nodeType": "ExpressionStatement",
												"src": "35942:19:2"
											},
											{
												"id": 1946,
												"nodeType": "UncheckedBlock",
												"src": "35972:604:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1899,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1887,
																		"src": "36000:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "36003:4:2",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "36000:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "36008:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "36000:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36018:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "36000:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1945,
														"nodeType": "IfStatement",
														"src": "35996:570:2",
														"trueBody": {
															"id": 1944,
															"nodeType": "Block",
															"src": "36021:545:2",
															"statements": [
																{
																	"assignments": [
																		1905
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1905,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "36047:3:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1944,
																			"src": "36039:11:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1904,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "36039:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1907,
																	"initialValue": {
																		"id": 1906,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "36053:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "36039:27:2"
																},
																{
																	"assignments": [
																		1909
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1909,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "36092:5:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1944,
																			"src": "36084:13:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1908,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "36084:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1913,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1910,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1905,
																			"src": "36100:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1911,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1889,
																			"src": "36106:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36100:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "36084:30:2"
																},
																{
																	"body": {
																		"id": 1932,
																		"nodeType": "Block",
																		"src": "36135:214:2",
																		"statements": [
																			{
																				"condition": {
																					"id": 1924,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "36161:63:2",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1917,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "36201:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1916,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "36193:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1915,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "36193:7:2",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1918,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "36193:10:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1919,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1887,
																								"src": "36205:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1921,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "36209:7:2",
																								"subExpression": {
																									"id": 1920,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1909,
																									"src": "36209:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1922,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1891,
																								"src": "36218:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1914,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1621,
																							"src": "36162:30:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1923,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "36162:62:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1931,
																				"nodeType": "IfStatement",
																				"src": "36157:174:2",
																				"trueBody": {
																					"id": 1930,
																					"nodeType": "Block",
																					"src": "36226:105:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1926,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2523,
																											"src": "36260:38:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 1927,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "36299:8:2",
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "36260:47:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1925,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2492,
																									"src": "36252:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1928,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "36252:56:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1929,
																							"nodeType": "ExpressionStatement",
																							"src": "36252:56:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1933,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "36357:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1934,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1905,
																			"src": "36365:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36357:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1936,
																	"nodeType": "DoWhileStatement",
																	"src": "36132:238:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1937,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "36521:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1938,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1905,
																			"src": "36538:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36521:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1943,
																	"nodeType": "IfStatement",
																	"src": "36517:34:2",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1940,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "36543:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36543:8:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1942,
																		"nodeType": "ExpressionStatement",
																		"src": "36543:8:2"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "35423:388:2",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "35825:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35852:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "35844:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "35872:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "35864:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35864:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "35903:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "35890:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1890,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35890:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35834:80:2"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35932:0:2"
									},
									"scope": 2493,
									"src": "35816:766:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "36727:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1957,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "36747:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1958,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "36751:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36761:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1956,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1948,
															1963
														],
														"referencedDeclaration": 1948,
														"src": "36737:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36737:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1961,
												"nodeType": "ExpressionStatement",
												"src": "36737:27:2"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "36588:68:2",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "36670:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36688:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "36680:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36680:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "36700:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "36692:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36692:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36679:30:2"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36727:0:2"
									},
									"scope": 2493,
									"src": "36661:110:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "37221:1992:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1971,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "37235:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1972,
															"name": "_sequentialUpTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "37246:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37246:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37235:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1980,
												"nodeType": "IfStatement",
												"src": "37231:75:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1976,
																	"name": "SpotMintTokenIdTooSmall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "37273:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "37297:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "37273:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1975,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "37265:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37265:41:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1979,
													"nodeType": "ExpressionStatement",
													"src": "37265:41:2"
												}
											},
											{
												"assignments": [
													1982
												],
												"declarations": [
													{
														"constant": false,
														"id": 1982,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "37324:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 2073,
														"src": "37316:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1981,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37316:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1986,
												"initialValue": {
													"baseExpression": {
														"id": 1983,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "37346:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1985,
													"indexExpression": {
														"id": 1984,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "37364:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37346:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37316:56:2"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 1988,
															"name": "prevOwnershipPacked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "37409:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1987,
														"name": "_packedOwnershipExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "37386:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) pure returns (bool)"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37386:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1995,
												"nodeType": "IfStatement",
												"src": "37382:85:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1991,
																	"name": "TokenAlreadyExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "37439:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "37458:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "37439:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1990,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "37431:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37431:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1994,
													"nodeType": "ExpressionStatement",
													"src": "37431:36:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37508:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37500:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1997,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37500:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37500:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2001,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "37512:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2002,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "37516:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37525:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1996,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "37478:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37478:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "37478:49:2"
											},
											{
												"id": 2062,
												"nodeType": "UncheckedBlock",
												"src": "37762:1386:2",
												"statements": [
													{
														"expression": {
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2006,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "38019:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2008,
																"indexExpression": {
																	"id": 2007,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1968,
																	"src": "38037:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "38019:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2010,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "38084:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"hexValue": "31",
																					"id": 2012,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "38125:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					}
																				],
																				"id": 2011,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1125,
																				"src": "38104:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38104:23:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2017,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "38153:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2016,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "38145:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2015,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "38145:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2018,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38145:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2019,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1966,
																					"src": "38157:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2020,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1982,
																					"src": "38161:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2014,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2464,
																				"src": "38130:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38130:51:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "38104:77:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2009,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "38048:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38048:147:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38019:176:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2025,
														"nodeType": "ExpressionStatement",
														"src": "38019:176:2"
													},
													{
														"expression": {
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2026,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "38392:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2028,
																"indexExpression": {
																	"id": 2027,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "38411:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "38392:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "38419:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 2030,
																				"name": "_BITPOS_NUMBER_MINTED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 428,
																				"src": "38424:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "38419:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2032,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "38418:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "|",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38449:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "38418:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38392:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2036,
														"nodeType": "ExpressionStatement",
														"src": "38392:58:2"
													},
													{
														"assignments": [
															2038
														],
														"declarations": [
															{
																"constant": false,
																"id": 2038,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "38566:8:2",
																"nodeType": "VariableDeclaration",
																"scope": 2062,
																"src": "38558:16:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2037,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "38558:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2048,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2043,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1966,
																				"src": "38593:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "38585:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 2041,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "38585:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "38585:11:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 2040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38577:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2039,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "38577:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38577:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 2046,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "38600:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38577:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "38558:58:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2049,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "38635:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38647:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38635:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2057,
														"nodeType": "IfStatement",
														"src": "38631:54:2",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2053,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "38658:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "38676:8:2",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "38658:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 2052,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "38650:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38650:35:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2056,
															"nodeType": "ExpressionStatement",
															"src": "38650:35:2"
														}
													},
													{
														"AST": {
															"nativeSrc": "38709:401:2",
															"nodeType": "YulBlock",
															"src": "38709:401:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "38799:1:2",
																				"nodeType": "YulLiteral",
																				"src": "38799:1:2",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "38859:1:2",
																				"nodeType": "YulLiteral",
																				"src": "38859:1:2",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nativeSrc": "38917:25:2",
																				"nodeType": "YulIdentifier",
																				"src": "38917:25:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "38978:1:2",
																				"nodeType": "YulLiteral",
																				"src": "38978:1:2",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nativeSrc": "39018:8:2",
																				"nodeType": "YulIdentifier",
																				"src": "39018:8:2"
																			},
																			{
																				"name": "tokenId",
																				"nativeSrc": "39057:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "39057:7:2"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nativeSrc": "38773:4:2",
																			"nodeType": "YulIdentifier",
																			"src": "38773:4:2"
																		},
																		"nativeSrc": "38773:323:2",
																		"nodeType": "YulFunctionCall",
																		"src": "38773:323:2"
																	},
																	"nativeSrc": "38773:323:2",
																	"nodeType": "YulExpressionStatement",
																	"src": "38773:323:2"
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 483,
																"isOffset": false,
																"isSlot": false,
																"src": "38917:25:2",
																"valueSize": 1
															},
															{
																"declaration": 2038,
																"isOffset": false,
																"isSlot": false,
																"src": "39018:8:2",
																"valueSize": 1
															},
															{
																"declaration": 1968,
																"isOffset": false,
																"isSlot": false,
																"src": "39057:7:2",
																"valueSize": 1
															}
														],
														"id": 2058,
														"nodeType": "InlineAssembly",
														"src": "38700:410:2"
													},
													{
														"expression": {
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "39124:13:2",
															"subExpression": {
																"id": 2059,
																"name": "_spotMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "39126:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2061,
														"nodeType": "ExpressionStatement",
														"src": "39124:13:2"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39187:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39179:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2064,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "39179:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39179:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2068,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "39191:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2069,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "39195:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39204:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2063,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "39158:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39158:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "39158:48:2"
											}
										]
									},
									"documentation": {
										"id": 1964,
										"nodeType": "StructuredDocumentation",
										"src": "36777:374:2",
										"text": " @dev Mints a single token at `tokenId`.\n Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` must be greater than `_sequentialUpTo()`.\n - `tokenId` must not exist.\n Emits a {Transfer} event for each mint."
									},
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintSpot",
									"nameLocation": "37165:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "37175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "37187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37174:29:2"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37221:0:2"
									},
									"scope": 2493,
									"src": "37156:2057:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2125,
										"nodeType": "Block",
										"src": "39798:557:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2085,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "39818:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2086,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "39822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2084,
														"name": "_mintSpot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "39808:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39808:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2088,
												"nodeType": "ExpressionStatement",
												"src": "39808:22:2"
											},
											{
												"id": 2124,
												"nodeType": "UncheckedBlock",
												"src": "39841:508:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 2089,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2077,
																		"src": "39869:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "39872:4:2",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "39869:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "39877:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "39869:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39887:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "39869:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2123,
														"nodeType": "IfStatement",
														"src": "39865:474:2",
														"trueBody": {
															"id": 2122,
															"nodeType": "Block",
															"src": "39890:449:2",
															"statements": [
																{
																	"assignments": [
																		2095
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2095,
																			"mutability": "mutable",
																			"name": "currentSpotMinted",
																			"nameLocation": "39916:17:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 2122,
																			"src": "39908:25:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2094,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "39908:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2097,
																	"initialValue": {
																		"id": 2096,
																		"name": "_spotMinted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 512,
																		"src": "39936:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "39908:39:2"
																},
																{
																	"condition": {
																		"id": 2107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "39969:63:2",
																		"subExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2101,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "40009:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2100,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "40001:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2099,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "40001:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2102,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "40001:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2103,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2077,
																					"src": "40013:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2104,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2079,
																					"src": "40017:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2105,
																					"name": "_data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2081,
																					"src": "40026:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2098,
																				"name": "_checkContractOnERC721Received",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1621,
																				"src": "39970:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																				}
																			},
																			"id": 2106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "39970:62:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2114,
																	"nodeType": "IfStatement",
																	"src": "39965:166:2",
																	"trueBody": {
																		"id": 2113,
																		"nodeType": "Block",
																		"src": "40034:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 2109,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2523,
																								"src": "40064:38:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 2110,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "40103:8:2",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "40064:47:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 2108,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2492,
																						"src": "40056:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 2111,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "40056:56:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2112,
																				"nodeType": "ExpressionStatement",
																				"src": "40056:56:2"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2115,
																			"name": "_spotMinted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 512,
																			"src": "40282:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2116,
																			"name": "currentSpotMinted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2095,
																			"src": "40297:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "40282:32:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2121,
																	"nodeType": "IfStatement",
																	"src": "40278:46:2",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2118,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "40316:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "40316:8:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2120,
																		"nodeType": "ExpressionStatement",
																		"src": "40316:8:2"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2075,
										"nodeType": "StructuredDocumentation",
										"src": "39219:455:2",
										"text": " @dev Safely mints a single token at `tokenId`.\n Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n - `tokenId` must be greater than `_sequentialUpTo()`.\n - `tokenId` must not exist.\n See {_mintSpot}.\n Emits a {Transfer} event."
									},
									"id": 2126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMintSpot",
									"nameLocation": "39688:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39719:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "39711:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39739:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "39731:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "39769:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "39756:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39701:79:2"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39798:0:2"
									},
									"scope": 2493,
									"src": "39679:676:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "40506:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2135,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "40530:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2136,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "40534:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40543:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2134,
														"name": "_safeMintSpot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2126,
															2141
														],
														"referencedDeclaration": 2126,
														"src": "40516:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40516:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2139,
												"nodeType": "ExpressionStatement",
												"src": "40516:30:2"
											}
										]
									},
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "40361:71:2",
										"text": " @dev Equivalent to `_safeMintSpot(to, tokenId, '')`."
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMintSpot",
									"nameLocation": "40446:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40468:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "40460:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40460:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40480:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "40472:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40459:29:2"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40506:0:2"
									},
									"scope": 2493,
									"src": "40437:116:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2155,
										"nodeType": "Block",
										"src": "40885:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2150,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "40904:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2151,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "40908:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40917:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2149,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2156,
															2206
														],
														"referencedDeclaration": 2206,
														"src": "40895:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40895:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2154,
												"nodeType": "ExpressionStatement",
												"src": "40895:28:2"
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "40747:69:2",
										"text": " @dev Equivalent to `_approve(to, tokenId, false)`."
									},
									"id": 2156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "40830:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40847:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "40839:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40839:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40859:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "40851:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40851:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40838:29:2"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40885:0:2"
									},
									"scope": 2493,
									"src": "40821:109:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "41447:346:2",
										"statements": [
											{
												"assignments": [
													2167
												],
												"declarations": [
													{
														"constant": false,
														"id": 2167,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "41465:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 2205,
														"src": "41457:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2166,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "41457:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2171,
												"initialValue": {
													"arguments": [
														{
															"id": 2169,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "41481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2168,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "41473:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41473:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41457:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2172,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "41504:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2173,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2474,
																"src": "41521:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41521:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2175,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "41544:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "41521:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "41504:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2191,
												"nodeType": "IfStatement",
												"src": "41500:198:2",
												"trueBody": {
													"condition": {
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "41567:45:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 2179,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "41585:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2180,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2474,
																		"src": "41592:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41592:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2178,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "41568:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41568:44:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2190,
													"nodeType": "IfStatement",
													"src": "41563:135:2",
													"trueBody": {
														"id": 2189,
														"nodeType": "Block",
														"src": "41614:84:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2185,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2499,
																				"src": "41640:33:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "41674:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "41640:42:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 2184,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2492,
																		"src": "41632:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41632:51:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2188,
																"nodeType": "ExpressionStatement",
																"src": "41632:51:2"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2192,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "41708:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$417_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 2194,
															"indexExpression": {
																"id": 2193,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2161,
																"src": "41724:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "41708:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$417_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "41733:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 416,
														"src": "41708:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2196,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "41741:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "41708:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2198,
												"nodeType": "ExpressionStatement",
												"src": "41708:35:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2200,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "41767:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2201,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "41774:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2202,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "41778:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2199,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2591,
														"src": "41758:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41758:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2204,
												"nodeType": "EmitStatement",
												"src": "41753:33:2"
											}
										]
									},
									"documentation": {
										"id": 2157,
										"nodeType": "StructuredDocumentation",
										"src": "40936:392:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "41342:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41368:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "41360:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41360:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41388:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "41380:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41380:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "41410:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "41405:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41405:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41350:79:2"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41447:0:2"
									},
									"scope": 2493,
									"src": "41333:460:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "42100:38:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2213,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "42116:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42125:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2212,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2218,
															2372
														],
														"referencedDeclaration": 2372,
														"src": "42110:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42110:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2216,
												"nodeType": "ExpressionStatement",
												"src": "42110:21:2"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "41984:62:2",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "42060:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42074:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "42066:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42066:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42065:17:2"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42100:0:2"
									},
									"scope": 2493,
									"src": "42051:87:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2371,
										"nodeType": "Block",
										"src": "42424:2973:2",
										"statements": [
											{
												"assignments": [
													2227
												],
												"declarations": [
													{
														"constant": false,
														"id": 2227,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "42442:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 2371,
														"src": "42434:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2226,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42434:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2231,
												"initialValue": {
													"arguments": [
														{
															"id": 2229,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "42483:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2228,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "42464:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42464:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42434:57:2"
											},
											{
												"assignments": [
													2233
												],
												"declarations": [
													{
														"constant": false,
														"id": 2233,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "42510:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 2371,
														"src": "42502:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2232,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42502:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2241,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2238,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2227,
																	"src": "42533:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2236,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "42525:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42525:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "42517:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2234,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42517:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42517:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42502:52:2"
											},
											{
												"assignments": [
													2243,
													2245
												],
												"declarations": [
													{
														"constant": false,
														"id": 2243,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "42574:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 2371,
														"src": "42566:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2242,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42566:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2245,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "42603:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 2371,
														"src": "42595:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2244,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42595:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2249,
												"initialValue": {
													"arguments": [
														{
															"id": 2247,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "42649:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2246,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "42622:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42622:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42565:92:2"
											},
											{
												"condition": {
													"id": 2250,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2223,
													"src": "42672:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2272,
												"nodeType": "IfStatement",
												"src": "42668:321:2",
												"trueBody": {
													"id": 2271,
													"nodeType": "Block",
													"src": "42687:302:2",
													"statements": [
														{
															"condition": {
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "42790:69:2",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2252,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2245,
																			"src": "42816:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2253,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2233,
																			"src": "42833:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2254,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2474,
																				"src": "42839:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42839:19:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2251,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1288,
																		"src": "42791:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42791:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2270,
															"nodeType": "IfStatement",
															"src": "42786:192:2",
															"trueBody": {
																"condition": {
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "42881:44:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2259,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2233,
																				"src": "42899:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2260,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2474,
																					"src": "42905:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "42905:19:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2258,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1210,
																			"src": "42882:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42882:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2269,
																"nodeType": "IfStatement",
																"src": "42877:101:2",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2265,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2517,
																					"src": "42935:33:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 2266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "42969:8:2",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "42935:42:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 2264,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2492,
																			"src": "42927:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 2267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42927:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2268,
																	"nodeType": "ExpressionStatement",
																	"src": "42927:51:2"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2274,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "43021:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43035:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43027:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2275,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43027:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43027:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2279,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "43039:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43048:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2273,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "42999:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42999:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2282,
												"nodeType": "ExpressionStatement",
												"src": "42999:51:2"
											},
											{
												"AST": {
													"nativeSrc": "43122:181:2",
													"nodeType": "YulBlock",
													"src": "43122:181:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "43155:138:2",
																"nodeType": "YulBlock",
																"src": "43155:138:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "43256:19:2",
																					"nodeType": "YulIdentifier",
																					"src": "43256:19:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "43277:1:2",
																					"nodeType": "YulLiteral",
																					"src": "43277:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "43249:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "43249:6:2"
																			},
																			"nativeSrc": "43249:30:2",
																			"nodeType": "YulFunctionCall",
																			"src": "43249:30:2"
																		},
																		"nativeSrc": "43249:30:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "43249:30:2"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "43139:15:2",
																"nodeType": "YulIdentifier",
																"src": "43139:15:2"
															},
															"nativeSrc": "43136:157:2",
															"nodeType": "YulIf",
															"src": "43136:157:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2245,
														"isOffset": false,
														"isSlot": false,
														"src": "43139:15:2",
														"valueSize": 1
													},
													{
														"declaration": 2243,
														"isOffset": false,
														"isSlot": false,
														"src": "43256:19:2",
														"valueSize": 1
													}
												],
												"id": 2283,
												"nodeType": "InlineAssembly",
												"src": "43113:190:2"
											},
											{
												"id": 2347,
												"nodeType": "UncheckedBlock",
												"src": "43570:1545:2",
												"statements": [
													{
														"expression": {
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2284,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "43882:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2286,
																"indexExpression": {
																	"id": 2285,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "43901:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "43882:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43911:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 2288,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "43916:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "43911:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2290,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "43910:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43941:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "43910:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43882:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2294,
														"nodeType": "ExpressionStatement",
														"src": "43882:60:2"
													},
													{
														"expression": {
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2295,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "44173:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2297,
																"indexExpression": {
																	"id": 2296,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2221,
																	"src": "44191:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "44173:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2299,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2233,
																		"src": "44238:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2302,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2300,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 450,
																						"src": "44261:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 2301,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 458,
																						"src": "44279:25:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "44261:43:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2303,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "44260:45:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2305,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2233,
																					"src": "44323:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2308,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "44337:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "44329:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2306,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "44329:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "44329:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2310,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2227,
																					"src": "44341:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2304,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2464,
																				"src": "44308:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "44308:53:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "44260:101:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2298,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "44202:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44202:173:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44173:202:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2315,
														"nodeType": "ExpressionStatement",
														"src": "44173:202:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2316,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2227,
																	"src": "44492:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2317,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "44514:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44492:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44543:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "44492:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2346,
														"nodeType": "IfStatement",
														"src": "44488:617:2",
														"trueBody": {
															"id": 2345,
															"nodeType": "Block",
															"src": "44546:559:2",
															"statements": [
																{
																	"assignments": [
																		2322
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2322,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "44572:11:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 2345,
																			"src": "44564:19:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2321,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "44564:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2326,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2323,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2221,
																			"src": "44586:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44596:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "44586:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "44564:33:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2327,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "44717:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2329,
																			"indexExpression": {
																				"id": 2328,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "44735:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "44717:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44751:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "44717:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2344,
																	"nodeType": "IfStatement",
																	"src": "44713:378:2",
																	"trueBody": {
																		"id": 2343,
																		"nodeType": "Block",
																		"src": "44754:337:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2334,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2332,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2322,
																						"src": "44838:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2333,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 485,
																						"src": "44853:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "44838:28:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2342,
																				"nodeType": "IfStatement",
																				"src": "44834:239:2",
																				"trueBody": {
																					"id": 2341,
																					"nodeType": "Block",
																					"src": "44868:205:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 2339,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2335,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 495,
																										"src": "44998:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2337,
																									"indexExpression": {
																										"id": 2336,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2322,
																										"src": "45016:11:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "44998:30:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2338,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2227,
																									"src": "45031:19:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "44998:52:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2340,
																							"nodeType": "ExpressionStatement",
																							"src": "44998:52:2"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2349,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "45139:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45153:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45145:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2350,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45145:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45145:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2354,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "45157:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2348,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "45130:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45130:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2356,
												"nodeType": "EmitStatement",
												"src": "45125:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2358,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "45196:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45210:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45202:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2359,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45202:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45202:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2363,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "45214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45223:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2357,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "45175:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45175:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2366,
												"nodeType": "ExpressionStatement",
												"src": "45175:50:2"
											},
											{
												"id": 2370,
												"nodeType": "UncheckedBlock",
												"src": "45342:49:2",
												"statements": [
													{
														"expression": {
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "45366:14:2",
															"subExpression": {
																"id": 2367,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "45366:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2369,
														"nodeType": "ExpressionStatement",
														"src": "45366:14:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2219,
										"nodeType": "StructuredDocumentation",
										"src": "42144:206:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "42364:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42378:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "42370:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "42392:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "42387:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42387:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42369:37:2"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42424:0:2"
									},
									"scope": 2493,
									"src": "42355:3042:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "45755:456:2",
										"statements": [
											{
												"assignments": [
													2381
												],
												"declarations": [
													{
														"constant": false,
														"id": 2381,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "45773:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 2417,
														"src": "45765:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2380,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45765:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2385,
												"initialValue": {
													"baseExpression": {
														"id": 2382,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "45782:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2384,
													"indexExpression": {
														"id": 2383,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "45800:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "45782:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45765:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2386,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "45820:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45830:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "45820:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2394,
												"nodeType": "IfStatement",
												"src": "45816:70:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 2390,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2535,
																	"src": "45841:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "45877:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "45841:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 2389,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "45833:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 2392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45833:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2393,
													"nodeType": "ExpressionStatement",
													"src": "45833:53:2"
												}
											},
											{
												"assignments": [
													2396
												],
												"declarations": [
													{
														"constant": false,
														"id": 2396,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "45904:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 2417,
														"src": "45896:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2395,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45896:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2397,
												"nodeType": "VariableDeclarationStatement",
												"src": "45896:23:2"
											},
											{
												"AST": {
													"nativeSrc": "46008:52:2",
													"nodeType": "YulBlock",
													"src": "46008:52:2",
													"statements": [
														{
															"nativeSrc": "46022:28:2",
															"nodeType": "YulAssignment",
															"src": "46022:28:2",
															"value": {
																"name": "extraData",
																"nativeSrc": "46041:9:2",
																"nodeType": "YulIdentifier",
																"src": "46041:9:2"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nativeSrc": "46022:15:2",
																	"nodeType": "YulIdentifier",
																	"src": "46022:15:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2377,
														"isOffset": false,
														"isSlot": false,
														"src": "46041:9:2",
														"valueSize": 1
													},
													{
														"declaration": 2396,
														"isOffset": false,
														"isSlot": false,
														"src": "46022:15:2",
														"valueSize": 1
													}
												],
												"id": 2398,
												"nodeType": "InlineAssembly",
												"src": "45999:61:2"
											},
											{
												"expression": {
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2399,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "46069:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2400,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2381,
																		"src": "46079:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 2401,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "46088:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46079:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2403,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "46078:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2404,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2396,
																		"src": "46123:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 2405,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "46142:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46123:37:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2407,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "46122:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "46078:83:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46069:92:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2410,
												"nodeType": "ExpressionStatement",
												"src": "46069:92:2"
											},
											{
												"expression": {
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2411,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "46171:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2413,
														"indexExpression": {
															"id": 2412,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "46189:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46171:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2414,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "46198:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46171:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2416,
												"nodeType": "ExpressionStatement",
												"src": "46171:33:2"
											}
										]
									},
									"documentation": {
										"id": 2373,
										"nodeType": "StructuredDocumentation",
										"src": "45591:84:2",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 2418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "45689:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "45713:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "45705:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "45727:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "45720:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2376,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "45720:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45704:33:2"
									},
									"returnParameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45755:0:2"
									},
									"scope": 2493,
									"src": "45680:531:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2430,
										"nodeType": "Block",
										"src": "46912:2:2",
										"statements": []
									},
									"documentation": {
										"id": 2419,
										"nodeType": "StructuredDocumentation",
										"src": "46217:549:2",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "46780:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "46808:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "46800:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46800:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46830:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "46822:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46822:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "46849:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "46842:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2424,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "46842:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46790:82:2"
									},
									"returnParameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "46904:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2427,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "46904:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46903:8:2"
									},
									"scope": 2493,
									"src": "46771:143:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "47200:164:2",
										"statements": [
											{
												"assignments": [
													2444
												],
												"declarations": [
													{
														"constant": false,
														"id": 2444,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "47217:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 2463,
														"src": "47210:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2443,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "47210:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2451,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2447,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "47236:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 2448,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "47259:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "47236:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "47229:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2445,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "47229:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47229:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47210:68:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2455,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2434,
																		"src": "47314:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2456,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2436,
																		"src": "47320:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2457,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2444,
																		"src": "47324:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2454,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2431,
																	"src": "47303:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47303:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47295:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2452,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "47295:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 2459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47295:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2460,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "47339:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47295:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2442,
												"id": 2462,
												"nodeType": "Return",
												"src": "47288:69:2"
											}
										]
									},
									"documentation": {
										"id": 2432,
										"nodeType": "StructuredDocumentation",
										"src": "46920:135:2",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "47069:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47101:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "47093:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47123:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "47115:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47115:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "47143:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "47135:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47083:85:2"
									},
									"returnParameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "47191:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47190:9:2"
									},
									"scope": 2493,
									"src": "47060:304:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2473,
										"nodeType": "Block",
										"src": "47802:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2470,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "47819:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "47823:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "47819:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2469,
												"id": 2472,
												"nodeType": "Return",
												"src": "47812:17:2"
											}
										]
									},
									"documentation": {
										"id": 2465,
										"nodeType": "StructuredDocumentation",
										"src": "47555:173:2",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 2474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "47742:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47759:2:2"
									},
									"returnParameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "47793:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47792:9:2"
									},
									"scope": 2493,
									"src": "47733:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2483,
										"nodeType": "Block",
										"src": "48017:1624:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "48036:1599:2",
													"nodeType": "YulBlock",
													"src": "48036:1599:2",
													"statements": [
														{
															"nativeSrc": "48400:31:2",
															"nodeType": "YulVariableDeclaration",
															"src": "48400:31:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "48419:4:2",
																				"nodeType": "YulLiteral",
																				"src": "48419:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "48413:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "48413:5:2"
																		},
																		"nativeSrc": "48413:11:2",
																		"nodeType": "YulFunctionCall",
																		"src": "48413:11:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "48426:4:2",
																		"nodeType": "YulLiteral",
																		"src": "48426:4:2",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "48409:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "48409:3:2"
																},
																"nativeSrc": "48409:22:2",
																"nodeType": "YulFunctionCall",
																"src": "48409:22:2"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "48404:1:2",
																	"nodeType": "YulTypedName",
																	"src": "48404:1:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "48510:4:2",
																		"nodeType": "YulLiteral",
																		"src": "48510:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "48516:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "48516:1:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "48503:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "48503:6:2"
																},
																"nativeSrc": "48503:15:2",
																"nodeType": "YulFunctionCall",
																"src": "48503:15:2"
															},
															"nativeSrc": "48503:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "48503:15:2"
														},
														{
															"nativeSrc": "48575:19:2",
															"nodeType": "YulAssignment",
															"src": "48575:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "48586:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "48586:1:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "48589:4:2",
																		"nodeType": "YulLiteral",
																		"src": "48589:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "48582:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "48582:3:2"
																},
																"nativeSrc": "48582:12:2",
																"nodeType": "YulFunctionCall",
																"src": "48582:12:2"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "48575:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "48575:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "48664:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "48664:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "48669:1:2",
																		"nodeType": "YulLiteral",
																		"src": "48669:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "48657:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "48657:6:2"
																},
																"nativeSrc": "48657:14:2",
																"nodeType": "YulFunctionCall",
																"src": "48657:14:2"
															},
															"nativeSrc": "48657:14:2",
															"nodeType": "YulExpressionStatement",
															"src": "48657:14:2"
														},
														{
															"nativeSrc": "48759:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "48759:14:2",
															"value": {
																"name": "str",
																"nativeSrc": "48770:3:2",
																"nodeType": "YulIdentifier",
																"src": "48770:3:2"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "48763:3:2",
																	"nodeType": "YulTypedName",
																	"src": "48763:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "49017:388:2",
																"nodeType": "YulBlock",
																"src": "49017:388:2",
																"statements": [
																	{
																		"nativeSrc": "49035:18:2",
																		"nodeType": "YulAssignment",
																		"src": "49035:18:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "49046:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "49046:3:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "49051:1:2",
																					"nodeType": "YulLiteral",
																					"src": "49051:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "49042:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "49042:3:2"
																			},
																			"nativeSrc": "49042:11:2",
																			"nodeType": "YulFunctionCall",
																			"src": "49042:11:2"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nativeSrc": "49035:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "49035:3:2"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "49196:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "49196:3:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "49205:2:2",
																							"nodeType": "YulLiteral",
																							"src": "49205:2:2",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nativeSrc": "49213:4:2",
																									"nodeType": "YulIdentifier",
																									"src": "49213:4:2"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "49219:2:2",
																									"nodeType": "YulLiteral",
																									"src": "49219:2:2",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nativeSrc": "49209:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "49209:3:2"
																							},
																							"nativeSrc": "49209:13:2",
																							"nodeType": "YulFunctionCall",
																							"src": "49209:13:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "49201:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "49201:3:2"
																					},
																					"nativeSrc": "49201:22:2",
																					"nodeType": "YulFunctionCall",
																					"src": "49201:22:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "49188:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "49188:7:2"
																			},
																			"nativeSrc": "49188:36:2",
																			"nodeType": "YulFunctionCall",
																			"src": "49188:36:2"
																		},
																		"nativeSrc": "49188:36:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "49188:36:2"
																	},
																	{
																		"nativeSrc": "49293:21:2",
																		"nodeType": "YulAssignment",
																		"src": "49293:21:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "49305:4:2",
																					"nodeType": "YulIdentifier",
																					"src": "49305:4:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "49311:2:2",
																					"nodeType": "YulLiteral",
																					"src": "49311:2:2",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nativeSrc": "49301:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "49301:3:2"
																			},
																			"nativeSrc": "49301:13:2",
																			"nodeType": "YulFunctionCall",
																			"src": "49301:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nativeSrc": "49293:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "49293:4:2"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "49382:9:2",
																			"nodeType": "YulBlock",
																			"src": "49382:9:2",
																			"statements": [
																				{
																					"nativeSrc": "49384:5:2",
																					"nodeType": "YulBreak",
																					"src": "49384:5:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "49376:4:2",
																					"nodeType": "YulIdentifier",
																					"src": "49376:4:2"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "49369:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "49369:6:2"
																			},
																			"nativeSrc": "49369:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "49369:12:2"
																		},
																		"nativeSrc": "49366:25:2",
																		"nodeType": "YulIf",
																		"src": "49366:25:2"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nativeSrc": "49012:1:2",
																"nodeType": "YulLiteral",
																"src": "49012:1:2",
																"type": "",
																"value": "1"
															},
															"nativeSrc": "48986:419:2",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "49014:2:2",
																"nodeType": "YulBlock",
																"src": "49014:2:2",
																"statements": []
															},
															"pre": {
																"nativeSrc": "48990:21:2",
																"nodeType": "YulBlock",
																"src": "48990:21:2",
																"statements": [
																	{
																		"nativeSrc": "48992:17:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "48992:17:2",
																		"value": {
																			"name": "value",
																			"nativeSrc": "49004:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "49004:5:2"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nativeSrc": "48996:4:2",
																				"nodeType": "YulTypedName",
																				"src": "48996:4:2",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "48986:419:2"
														},
														{
															"nativeSrc": "49419:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "49419:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "49437:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "49437:3:2"
																	},
																	{
																		"name": "str",
																		"nativeSrc": "49442:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "49442:3:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "49433:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "49433:3:2"
																},
																"nativeSrc": "49433:13:2",
																"nodeType": "YulFunctionCall",
																"src": "49433:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "49423:6:2",
																	"nodeType": "YulTypedName",
																	"src": "49423:6:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "49539:21:2",
															"nodeType": "YulAssignment",
															"src": "49539:21:2",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "49550:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "49550:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "49555:4:2",
																		"nodeType": "YulLiteral",
																		"src": "49555:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "49546:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "49546:3:2"
																},
																"nativeSrc": "49546:14:2",
																"nodeType": "YulFunctionCall",
																"src": "49546:14:2"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "49539:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "49539:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "49613:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "49613:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "49618:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "49618:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "49606:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "49606:6:2"
																},
																"nativeSrc": "49606:19:2",
																"nodeType": "YulFunctionCall",
																"src": "49606:19:2"
															},
															"nativeSrc": "49606:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "49606:19:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2480,
														"isOffset": false,
														"isSlot": false,
														"src": "48575:3:2",
														"valueSize": 1
													},
													{
														"declaration": 2480,
														"isOffset": false,
														"isSlot": false,
														"src": "48664:3:2",
														"valueSize": 1
													},
													{
														"declaration": 2480,
														"isOffset": false,
														"isSlot": false,
														"src": "48770:3:2",
														"valueSize": 1
													},
													{
														"declaration": 2480,
														"isOffset": false,
														"isSlot": false,
														"src": "49035:3:2",
														"valueSize": 1
													},
													{
														"declaration": 2480,
														"isOffset": false,
														"isSlot": false,
														"src": "49046:3:2",
														"valueSize": 1
													},
													{
														"declaration": 2480,
														"isOffset": false,
														"isSlot": false,
														"src": "49196:3:2",
														"valueSize": 1
													},
													{
														"declaration": 2480,
														"isOffset": false,
														"isSlot": false,
														"src": "49442:3:2",
														"valueSize": 1
													},
													{
														"declaration": 2480,
														"isOffset": false,
														"isSlot": false,
														"src": "49539:3:2",
														"valueSize": 1
													},
													{
														"declaration": 2480,
														"isOffset": false,
														"isSlot": false,
														"src": "49550:3:2",
														"valueSize": 1
													},
													{
														"declaration": 2480,
														"isOffset": false,
														"isSlot": false,
														"src": "49613:3:2",
														"valueSize": 1
													},
													{
														"declaration": 2477,
														"isOffset": false,
														"isSlot": false,
														"src": "49004:5:2",
														"valueSize": 1
													}
												],
												"id": 2482,
												"nodeType": "InlineAssembly",
												"src": "48027:1608:2"
											}
										]
									},
									"documentation": {
										"id": 2475,
										"nodeType": "StructuredDocumentation",
										"src": "47842:86:2",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 2484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "47942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "47960:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "47952:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47952:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47951:15:2"
									},
									"returnParameters": {
										"id": 2481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "48012:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "47998:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2479,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47998:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47997:19:2"
									},
									"scope": 2493,
									"src": "47933:1708:2",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2491,
										"nodeType": "Block",
										"src": "49756:107:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "49775:82:2",
													"nodeType": "YulBlock",
													"src": "49775:82:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "49796:4:2",
																		"nodeType": "YulLiteral",
																		"src": "49796:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nativeSrc": "49802:13:2",
																		"nodeType": "YulIdentifier",
																		"src": "49802:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "49789:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "49789:6:2"
																},
																"nativeSrc": "49789:27:2",
																"nodeType": "YulFunctionCall",
																"src": "49789:27:2"
															},
															"nativeSrc": "49789:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "49789:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "49836:4:2",
																		"nodeType": "YulLiteral",
																		"src": "49836:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "49842:4:2",
																		"nodeType": "YulLiteral",
																		"src": "49842:4:2",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "49829:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "49829:6:2"
																},
																"nativeSrc": "49829:18:2",
																"nodeType": "YulFunctionCall",
																"src": "49829:18:2"
															},
															"nativeSrc": "49829:18:2",
															"nodeType": "YulExpressionStatement",
															"src": "49829:18:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2487,
														"isOffset": false,
														"isSlot": false,
														"src": "49802:13:2",
														"valueSize": 1
													}
												],
												"id": 2490,
												"nodeType": "InlineAssembly",
												"src": "49766:91:2"
											}
										]
									},
									"documentation": {
										"id": 2485,
										"nodeType": "StructuredDocumentation",
										"src": "49647:51:2",
										"text": " @dev For more efficient reverts."
									},
									"id": 2492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "49712:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "49727:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "49720:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2486,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "49720:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49719:22:2"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49756:0:2"
									},
									"scope": 2493,
									"src": "49703:160:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2494,
							"src": "1053:48812:2",
							"usedErrors": [
								2499,
								2502,
								2505,
								2508,
								2511,
								2514,
								2517,
								2520,
								2523,
								2526,
								2529,
								2532,
								2535,
								2538,
								2541,
								2544,
								2547,
								2550
							],
							"usedEvents": [
								2582,
								2591,
								2600,
								2713
							]
						}
					],
					"src": "84:49782:2"
				},
				"id": 2
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2714
						]
					},
					"id": 2715,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2496,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:3",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2714,
							"linearizedBaseContracts": [
								2714
							],
							"name": "IERC721A",
							"nameLocation": "157:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2497,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:3",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 2499,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:3"
									},
									"src": "253:42:3"
								},
								{
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:3",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 2502,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:3"
									},
									"src": "350:41:3"
								},
								{
									"documentation": {
										"id": 2503,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:3",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 2505,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:3"
									},
									"src": "467:35:3"
								},
								{
									"documentation": {
										"id": 2506,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:3",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 2508,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:3"
									},
									"src": "564:26:3"
								},
								{
									"documentation": {
										"id": 2509,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:3",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 2511,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:3"
									},
									"src": "673:25:3"
								},
								{
									"documentation": {
										"id": 2512,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:3",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 2514,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:3"
									},
									"src": "753:38:3"
								},
								{
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:3",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 2517,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:3"
									},
									"src": "878:42:3"
								},
								{
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:3",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 2520,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:3"
									},
									"src": "984:35:3"
								},
								{
									"documentation": {
										"id": 2521,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:3",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 2523,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:3"
									},
									"src": "1146:47:3"
								},
								{
									"documentation": {
										"id": 2524,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:3",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 2526,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:3"
									},
									"src": "1259:30:3"
								},
								{
									"documentation": {
										"id": 2527,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:3",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 2529,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:3"
									},
									"src": "1344:36:3"
								},
								{
									"documentation": {
										"id": 2530,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:3",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 2532,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:3"
									},
									"src": "1470:40:3"
								},
								{
									"documentation": {
										"id": 2533,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:3",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 2535,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:3"
									},
									"src": "1604:44:3"
								},
								{
									"documentation": {
										"id": 2536,
										"nodeType": "StructuredDocumentation",
										"src": "1654:78:3",
										"text": " `_sequentialUpTo()` must be greater than `_startTokenId()`."
									},
									"errorSelector": "fed8210f",
									"id": 2538,
									"name": "SequentialUpToTooSmall",
									"nameLocation": "1743:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:3"
									},
									"src": "1737:31:3"
								},
								{
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "1774:82:3",
										"text": " The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
									},
									"errorSelector": "81647e3a",
									"id": 2541,
									"name": "SequentialMintExceedsLimit",
									"nameLocation": "1867:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1893:2:3"
									},
									"src": "1861:35:3"
								},
								{
									"documentation": {
										"id": 2542,
										"nodeType": "StructuredDocumentation",
										"src": "1902:86:3",
										"text": " Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
									},
									"errorSelector": "524a12cc",
									"id": 2544,
									"name": "SpotMintTokenIdTooSmall",
									"nameLocation": "1999:23:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:2:3"
									},
									"src": "1993:32:3"
								},
								{
									"documentation": {
										"id": 2545,
										"nodeType": "StructuredDocumentation",
										"src": "2031:64:3",
										"text": " Cannot mint over a token that already exists."
									},
									"errorSelector": "c991cbb1",
									"id": 2547,
									"name": "TokenAlreadyExists",
									"nameLocation": "2106:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2124:2:3"
									},
									"src": "2100:27:3"
								},
								{
									"documentation": {
										"id": 2548,
										"nodeType": "StructuredDocumentation",
										"src": "2133:65:3",
										"text": " The feature is not compatible with spot mints."
									},
									"errorSelector": "bdba09d7",
									"id": 2550,
									"name": "NotCompatibleWithSpotMints",
									"nameLocation": "2209:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:2:3"
									},
									"src": "2203:35:3"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2559,
									"members": [
										{
											"constant": false,
											"id": 2552,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "2502:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 2559,
											"src": "2494:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2551,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2494:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2554,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2607:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 2559,
											"src": "2600:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2553,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2600:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2556,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2682:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 2559,
											"src": "2677:11:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2555,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2677:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2558,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2793:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 2559,
											"src": "2786:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2557,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2786:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "2432:14:3",
									"nodeType": "StructDefinition",
									"scope": 2714,
									"src": "2425:384:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "3000:192:3",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 2565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3206:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3217:2:3"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "3243:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3243:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3242:9:3"
									},
									"scope": 2714,
									"src": "3197:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "3439:341:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3794:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3819:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "3812:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2567,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3812:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:20:3"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "3855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:3"
									},
									"scope": 2714,
									"src": "3785:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2574,
										"nodeType": "StructuredDocumentation",
										"src": "4048:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2582,
									"name": "Transfer",
									"nameLocation": "4147:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4172:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "4156:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4156:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2578,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4194:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "4178:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2580,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4214:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "4198:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4198:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4155:67:3"
									},
									"src": "4141:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2583,
										"nodeType": "StructuredDocumentation",
										"src": "4229:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2591,
									"name": "Approval",
									"nameLocation": "4334:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "4343:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4343:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4382:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "4366:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4408:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "4392:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4392:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:74:3"
									},
									"src": "4328:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2592,
										"nodeType": "StructuredDocumentation",
										"src": "4423:124:3",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 2600,
									"name": "ApprovalForAll",
									"nameLocation": "4558:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4589:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "4573:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2596,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4612:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "4596:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4627:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "4622:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4622:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4572:64:3"
									},
									"src": "4552:85:3"
								},
								{
									"documentation": {
										"id": 2601,
										"nodeType": "StructuredDocumentation",
										"src": "4643:74:3",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 2608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4731:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4749:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "4741:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4741:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4740:15:3"
									},
									"returnParameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4787:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "4779:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:17:3"
									},
									"scope": 2714,
									"src": "4722:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2609,
										"nodeType": "StructuredDocumentation",
										"src": "4802:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4947:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4963:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "4955:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4955:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4954:17:3"
									},
									"returnParameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5003:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "4995:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4995:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4994:15:3"
									},
									"scope": 2714,
									"src": "4938:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "5016:711:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5741:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5775:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "5767:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5797:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "5789:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5789:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5817:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "5809:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5849:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "5834:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5834:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:102:3"
									},
									"returnParameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5876:0:3"
									},
									"scope": 2714,
									"src": "5732:145:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2629,
										"nodeType": "StructuredDocumentation",
										"src": "5883:80:3",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5977:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6011:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "6003:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6003:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6033:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "6025:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6053:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "6045:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6045:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5993:73:3"
									},
									"returnParameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 2714,
									"src": "5968:116:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2639,
										"nodeType": "StructuredDocumentation",
										"src": "6090:512:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6616:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6646:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "6638:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6668:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "6660:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6688:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "6680:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6628:73:3"
									},
									"returnParameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6718:0:3"
									},
									"scope": 2714,
									"src": "6607:112:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2649,
										"nodeType": "StructuredDocumentation",
										"src": "6725:459:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7198:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7214:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "7206:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7226:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "7218:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:29:3"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7251:0:3"
									},
									"scope": 2714,
									"src": "7189:63:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2657,
										"nodeType": "StructuredDocumentation",
										"src": "7258:316:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7588:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7614:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2664,
												"src": "7606:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7606:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7629:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 2664,
												"src": "7624:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7624:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7605:34:3"
									},
									"returnParameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7648:0:3"
									},
									"scope": 2714,
									"src": "7579:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2665,
										"nodeType": "StructuredDocumentation",
										"src": "7655:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7808:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7828:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "7820:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7819:17:3"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7868:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "7860:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7859:18:3"
									},
									"scope": 2714,
									"src": "7799:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2673,
										"nodeType": "StructuredDocumentation",
										"src": "7884:139:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "8037:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8062:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "8054:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8054:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8077:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "8069:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8069:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8053:33:3"
									},
									"returnParameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "8110:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8110:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8109:6:3"
									},
									"scope": 2714,
									"src": "8028:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2683,
										"nodeType": "StructuredDocumentation",
										"src": "8307:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8379:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8383:2:3"
									},
									"returnParameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "8409:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8409:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8408:15:3"
									},
									"scope": 2714,
									"src": "8370:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2689,
										"nodeType": "StructuredDocumentation",
										"src": "8430:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8504:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8510:2:3"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2694,
												"src": "8536:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8536:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8535:15:3"
									},
									"scope": 2714,
									"src": "8495:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2695,
										"nodeType": "StructuredDocumentation",
										"src": "8557:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8661:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "8670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8669:17:3"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2702,
												"src": "8710:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2699,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8710:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8709:15:3"
									},
									"scope": 2714,
									"src": "8652:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2703,
										"nodeType": "StructuredDocumentation",
										"src": "8912:267:3",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 2713,
									"name": "ConsecutiveTransfer",
									"nameLocation": "9190:19:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "9226:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "9210:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9210:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2707,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "9247:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "9239:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9239:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9274:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "9258:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2711,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9296:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "9280:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9280:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9209:90:3"
									},
									"src": "9184:116:3"
								}
							],
							"scope": 2715,
							"src": "147:9155:3",
							"usedErrors": [
								2499,
								2502,
								2505,
								2508,
								2511,
								2514,
								2517,
								2520,
								2523,
								2526,
								2529,
								2532,
								2535,
								2538,
								2541,
								2544,
								2547,
								2550
							],
							"usedEvents": [
								2582,
								2591,
								2600,
								2713
							]
						}
					],
					"src": "84:9219:3"
				},
				"id": 3
			}
		}
	}
}