{
	"id": "5bf2fd4a09285904d53a951efb07b488",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ContractX/ERC721AExtended.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\nimport \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol\";\r\n\r\npragma solidity ^0.8.25;\r\n\r\nabstract contract ERC721AExtended is ERC721AQueryable {\r\n    function numberMinted(address _owner) external view returns (uint256) {\r\n        return _numberMinted(_owner);\r\n    }\r\n\r\n    function totalMinted() external view returns (uint256) {\r\n        return _totalMinted();\r\n    }\r\n\r\n    function totalBurned() external view returns (uint256) {\r\n        return _totalBurned();\r\n    }\r\n\r\n    function nextTokenId() external view returns (uint256) {\r\n        return _nextTokenId();\r\n    }\r\n\r\n    function getAux(address _owner) external view returns (uint64) {\r\n        return _getAux(_owner);\r\n    }\r\n\r\n    function exists(uint256 _tokenId) external view returns (bool) {\r\n        return _exists(_tokenId);\r\n    }\r\n}\r\n"
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721AQueryable.sol';\nimport '../ERC721A.sol';\n\n/**\n * @title ERC721AQueryable.\n *\n * @dev ERC721A subclass with convenience query functions.\n */\nabstract contract ERC721AQueryable is ERC721A, IERC721AQueryable {\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *\n     * - `addr = address(0)`\n     * - `startTimestamp = 0`\n     * - `burned = false`\n     * - `extraData = 0`\n     *\n     * If the `tokenId` is burned:\n     *\n     * - `addr = <Address of owner before token was burned>`\n     * - `startTimestamp = <Timestamp when token was burned>`\n     * - `burned = true`\n     * - `extraData = <Extra data when token was burned>`\n     *\n     * Otherwise:\n     *\n     * - `addr = <Address of owner>`\n     * - `startTimestamp = <Timestamp of start of ownership>`\n     * - `burned = false`\n     * - `extraData = <Extra data at start of ownership>`\n     */\n    function explicitOwnershipOf(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (TokenOwnership memory ownership)\n    {\n        unchecked {\n            if (tokenId >= _startTokenId()) {\n                if (tokenId > _sequentialUpTo()) return _ownershipAt(tokenId);\n\n                if (tokenId < _nextTokenId()) {\n                    // If the `tokenId` is within bounds,\n                    // scan backwards for the initialized ownership slot.\n                    while (!_ownershipIsInitialized(tokenId)) --tokenId;\n                    return _ownershipAt(tokenId);\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] calldata tokenIds)\n        external\n        view\n        virtual\n        override\n        returns (TokenOwnership[] memory)\n    {\n        TokenOwnership[] memory ownerships;\n        uint256 i = tokenIds.length;\n        assembly {\n            // Grab the free memory pointer.\n            ownerships := mload(0x40)\n            // Store the length.\n            mstore(ownerships, i)\n            // Allocate one word for the length,\n            // `tokenIds.length` words for the pointers.\n            i := shl(5, i) // Multiply `i` by 32.\n            mstore(0x40, add(add(ownerships, 0x20), i))\n        }\n        while (i != 0) {\n            uint256 tokenId;\n            assembly {\n                i := sub(i, 0x20)\n                tokenId := calldataload(add(tokenIds.offset, i))\n            }\n            TokenOwnership memory ownership = explicitOwnershipOf(tokenId);\n            assembly {\n                // Store the pointer of `ownership` in the `ownerships` array.\n                mstore(add(add(ownerships, 0x20), i), ownership)\n            }\n        }\n        return ownerships;\n    }\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start < stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view virtual override returns (uint256[] memory) {\n        return _tokensOfOwnerIn(owner, start, stop);\n    }\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(`totalSupply`) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view virtual override returns (uint256[] memory) {\n        // If spot mints are enabled, full-range scan is disabled.\n        if (_sequentialUpTo() != type(uint256).max) _revert(NotCompatibleWithSpotMints.selector);\n        uint256 start = _startTokenId();\n        uint256 stop = _nextTokenId();\n        uint256[] memory tokenIds;\n        if (start != stop) tokenIds = _tokensOfOwnerIn(owner, start, stop);\n        return tokenIds;\n    }\n\n    /**\n     * @dev Helper function for returning an array of token IDs owned by `owner`.\n     *\n     * Note that this function is optimized for smaller bytecode size over runtime gas,\n     * since it is meant to be called off-chain.\n     */\n    function _tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) private view returns (uint256[] memory tokenIds) {\n        unchecked {\n            if (start >= stop) _revert(InvalidQueryRange.selector);\n            // Set `start = max(start, _startTokenId())`.\n            if (start < _startTokenId()) start = _startTokenId();\n            uint256 nextTokenId = _nextTokenId();\n            // If spot mints are enabled, scan all the way until the specified `stop`.\n            uint256 stopLimit = _sequentialUpTo() != type(uint256).max ? stop : nextTokenId;\n            // Set `stop = min(stop, stopLimit)`.\n            if (stop >= stopLimit) stop = stopLimit;\n            // Number of tokens to scan.\n            uint256 tokenIdsMaxLength = balanceOf(owner);\n            // Set `tokenIdsMaxLength` to zero if the range contains no tokens.\n            if (start >= stop) tokenIdsMaxLength = 0;\n            // If there are one or more tokens to scan.\n            if (tokenIdsMaxLength != 0) {\n                // Set `tokenIdsMaxLength = min(balanceOf(owner), tokenIdsMaxLength)`.\n                if (stop - start <= tokenIdsMaxLength) tokenIdsMaxLength = stop - start;\n                uint256 m; // Start of available memory.\n                assembly {\n                    // Grab the free memory pointer.\n                    tokenIds := mload(0x40)\n                    // Allocate one word for the length, and `tokenIdsMaxLength` words\n                    // for the data. `shl(5, x)` is equivalent to `mul(32, x)`.\n                    m := add(tokenIds, shl(5, add(tokenIdsMaxLength, 1)))\n                    mstore(0x40, m)\n                }\n                // We need to call `explicitOwnershipOf(start)`,\n                // because the slot at `start` may not be initialized.\n                TokenOwnership memory ownership = explicitOwnershipOf(start);\n                address currOwnershipAddr;\n                // If the starting slot exists (i.e. not burned),\n                // initialize `currOwnershipAddr`.\n                // `ownership.address` will not be zero,\n                // as `start` is clamped to the valid token ID range.\n                if (!ownership.burned) currOwnershipAddr = ownership.addr;\n                uint256 tokenIdsIdx;\n                // Use a do-while, which is slightly more efficient for this case,\n                // as the array will at least contain one element.\n                do {\n                    if (_sequentialUpTo() != type(uint256).max) {\n                        // Skip the remaining unused sequential slots.\n                        if (start == nextTokenId) start = _sequentialUpTo() + 1;\n                        // Reset `currOwnershipAddr`, as each spot-minted token is a batch of one.\n                        if (start > _sequentialUpTo()) currOwnershipAddr = address(0);\n                    }\n                    ownership = _ownershipAt(start); // This implicitly allocates memory.\n                    assembly {\n                        switch mload(add(ownership, 0x40))\n                        // if `ownership.burned == false`.\n                        case 0 {\n                            // if `ownership.addr != address(0)`.\n                            // The `addr` already has it's upper 96 bits clearned,\n                            // since it is written to memory with regular Solidity.\n                            if mload(ownership) {\n                                currOwnershipAddr := mload(ownership)\n                            }\n                            // if `currOwnershipAddr == owner`.\n                            // The `shl(96, x)` is to make the comparison agnostic to any\n                            // dirty upper 96 bits in `owner`.\n                            if iszero(shl(96, xor(currOwnershipAddr, owner))) {\n                                tokenIdsIdx := add(tokenIdsIdx, 1)\n                                mstore(add(tokenIds, shl(5, tokenIdsIdx)), start)\n                            }\n                        }\n                        // Otherwise, reset `currOwnershipAddr`.\n                        // This handles the case of batch burned tokens\n                        // (burned bit of first slot set, remaining slots left uninitialized).\n                        default {\n                            currOwnershipAddr := 0\n                        }\n                        start := add(start, 1)\n                        // Free temporary memory implicitly allocated for ownership\n                        // to avoid quadratic memory expansion costs.\n                        mstore(0x40, m)\n                    }\n                } while (!(start == stop || tokenIdsIdx == tokenIdsMaxLength));\n                // Store the length of the array.\n                assembly {\n                    mstore(tokenIds, tokenIdsIdx)\n                }\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * The `_sequentialUpTo()` function can be overriden to enable spot mints\n * (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // The amount of tokens minted above `_sequentialUpTo()`.\n    // We call these spot mints (i.e. non-sequential mints).\n    uint256 private _spotMinted;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n\n        if (_sequentialUpTo() < _startTokenId()) _revert(SequentialUpToTooSmall.selector);\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID for sequential mints.\n     *\n     * Override this function to change the starting token ID for sequential mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the maximum token ID (inclusive) for sequential mints.\n     *\n     * Override this function to return a value less than 2**256 - 1,\n     * but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _sequentialUpTo() internal view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256 result) {\n        // Counter underflow is impossible as `_burnCounter` cannot be incremented\n        // more than `_currentIndex + _spotMinted - _startTokenId()` times.\n        unchecked {\n            // With spot minting, the intermediate `result` can be temporarily negative,\n            // and the computation must be unchecked.\n            result = _currentIndex - _burnCounter - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256 result) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            result = _currentIndex - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev Returns the total number of tokens that are spot-minted.\n     */\n    function _totalSpotMinted() internal view virtual returns (uint256) {\n        return _spotMinted;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * @dev Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n\n            if (tokenId > _sequentialUpTo()) {\n                if (_packedOwnershipExists(packed)) return packed;\n                _revert(OwnerQueryForNonexistentToken.selector);\n            }\n\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId > _sequentialUpTo()) return _packedOwnershipExists(_packedOwnerships[tokenId]);\n\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `packed` represents a token that exists.\n     */\n    function _packedOwnershipExists(uint256 packed) private pure returns (bool result) {\n        assembly {\n            // The following is equivalent to `owner != address(0) && burned == false`.\n            // Symbolically tested.\n            result := gt(and(packed, _BITMASK_ADDRESS), and(packed, _BITMASK_BURNED))\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            if (end - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            if (startTokenId + quantity - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // This prevents reentrancy to `_safeMint`.\n                // It does not prevent reentrancy to `_safeMintSpot`.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mintSpot(address to, uint256 tokenId) internal virtual {\n        if (tokenId <= _sequentialUpTo()) _revert(SpotMintTokenIdTooSmall.selector);\n        uint256 prevOwnershipPacked = _packedOwnerships[tokenId];\n        if (_packedOwnershipExists(prevOwnershipPacked)) _revert(TokenAlreadyExists.selector);\n\n        _beforeTokenTransfers(address(0), to, tokenId, 1);\n\n        // Overflows are incredibly unrealistic.\n        // The `numberMinted` for `to` is incremented by 1, and has a max limit of 2**64 - 1.\n        // `_spotMinted` is incremented by 1, and has a max limit of 2**256 - 1.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true` (as `quantity == 1`).\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(1) | _nextExtraData(address(0), to, prevOwnershipPacked)\n            );\n\n            // Updates:\n            // - `balance += 1`.\n            // - `numberMinted += 1`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += (1 << _BITPOS_NUMBER_MINTED) | 1;\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            assembly {\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    tokenId // `tokenId`.\n                )\n            }\n\n            ++_spotMinted;\n        }\n\n        _afterTokenTransfers(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Safely mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * See {_mintSpot}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMintSpot(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mintSpot(to, tokenId);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 currentSpotMinted = _spotMinted;\n                if (!_checkContractOnERC721Received(address(0), to, tokenId, _data)) {\n                    _revert(TransferToNonERC721ReceiverImplementer.selector);\n                }\n                // This prevents reentrancy to `_safeMintSpot`.\n                // It does not prevent reentrancy to `_safeMint`.\n                if (_spotMinted != currentSpotMinted) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMintSpot(to, tokenId, '')`.\n     */\n    function _safeMintSpot(address to, uint256 tokenId) internal virtual {\n        _safeMintSpot(to, tokenId, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as `_burnCounter` cannot be exceed `_currentIndex + _spotMinted` times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/IERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of ERC721AQueryable.\n */\ninterface IERC721AQueryable is IERC721A {\n    /**\n     * Invalid query range (`start` >= `stop`).\n     */\n    error InvalidQueryRange();\n\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *\n     * - `addr = address(0)`\n     * - `startTimestamp = 0`\n     * - `burned = false`\n     * - `extraData = 0`\n     *\n     * If the `tokenId` is burned:\n     *\n     * - `addr = <Address of owner before token was burned>`\n     * - `startTimestamp = <Timestamp when token was burned>`\n     * - `burned = true`\n     * - `extraData = <Extra data when token was burned>`\n     *\n     * Otherwise:\n     *\n     * - `addr = <Address of owner>`\n     * - `startTimestamp = <Timestamp of start of ownership>`\n     * - `burned = false`\n     * - `extraData = <Extra data at start of ownership>`\n     */\n    function explicitOwnershipOf(uint256 tokenId) external view returns (TokenOwnership memory);\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view returns (TokenOwnership[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start < stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(`totalSupply`) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view returns (uint256[] memory);\n}\n"
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    /**\n     * `_sequentialUpTo()` must be greater than `_startTokenId()`.\n     */\n    error SequentialUpToTooSmall();\n\n    /**\n     * The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\n     */\n    error SequentialMintExceedsLimit();\n\n    /**\n     * Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\n     */\n    error SpotMintTokenIdTooSmall();\n\n    /**\n     * Cannot mint over a token that already exists.\n     */\n    error TokenAlreadyExists();\n\n    /**\n     * The feature is not compatible with spot mints.\n     */\n    error NotCompatibleWithSpotMints();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ContractX/ERC721AExtended.sol": {
				"ERC721AExtended": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "ownership",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "getAux",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "numberMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"exists(uint256)": "4f558e79",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"getAux(address)": "bf0b175e",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"nextTokenId()": "75794a3c",
							"numberMinted(address)": "dc33e681",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalBurned()": "d89135cd",
							"totalMinted()": "a2309ff8",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getAux\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"numberMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContractX/ERC721AExtended.sol\":\"ERC721AExtended\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/ContractX/ERC721AExtended.sol\":{\"keccak256\":\"0xb2a471c45e78d992937ce3e3b7af03d2c8cad63de90ec8c120bdd6d9a79bc3f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c12282bdcc56c0db81b3253219e88d0a4062acb3cc3a83e1adf13ceca649e101\",\"dweb:/ipfs/Qmchhh9gxMcSJdB2Gqr5Cs3E8aRgxY4oe1g4YXeML9bKAY\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfa5590db00a9bf0f85d2c10f2c901d5a3d49ecb1e64e5b6afe9a771496a41698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42616f12c7956e0ccefb690bf2a503986710c54544a36898b1ecc5d226373c4d\",\"dweb:/ipfs/QmU6vn637MDzUjsGih3fnWYf5CjcMknQUDXQwYjLNPX8ig\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x56fa15ba9a351f0be2728ff2569c8ce6bc187cbf2c027fece17442a682f49079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e424f0290d7ba66e451b3d8e490f5bac0bf0105b2af467513b2ffecb7065a9\",\"dweb:/ipfs/QmbCvzT7vep5gyBNqkHrD46pxZVUHHzaCZUpgwgWkBw78Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 160,
								"contract": "contracts/ContractX/ERC721AExtended.sol:ERC721AExtended",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 162,
								"contract": "contracts/ContractX/ERC721AExtended.sol:ERC721AExtended",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 164,
								"contract": "contracts/ContractX/ERC721AExtended.sol:ERC721AExtended",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 166,
								"contract": "contracts/ContractX/ERC721AExtended.sol:ERC721AExtended",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 170,
								"contract": "contracts/ContractX/ERC721AExtended.sol:ERC721AExtended",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 174,
								"contract": "contracts/ContractX/ERC721AExtended.sol:ERC721AExtended",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 179,
								"contract": "contracts/ContractX/ERC721AExtended.sol:ERC721AExtended",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)92_storage)"
							},
							{
								"astId": 185,
								"contract": "contracts/ContractX/ERC721AExtended.sol:ERC721AExtended",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 187,
								"contract": "contracts/ContractX/ERC721AExtended.sol:ERC721AExtended",
								"label": "_spotMinted",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)92_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)92_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)92_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 91,
										"contract": "contracts/ContractX/ERC721AExtended.sol:ERC721AExtended",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. The `_sequentialUpTo()` function can be overriden to enable spot mints (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1053:49865  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5261:5507  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5327:5332  _name */\n  0x02\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5327:5340  _name = name_ */\n  tag_6\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5335:5340  name_ */\n  dup4\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5327:5332  _name */\n  dup3\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5327:5340  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5357  _symbol */\n  0x03\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5367  _symbol = symbol_ */\n  tag_8\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5360:5367  symbol_ */\n  dup3\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5357  _symbol */\n  dup3\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5350:5367  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6022:6029  uint256 */\n  0x00\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":5377:5408  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1053:49865  contract ERC721A is IERC721A {... */\n  jump(tag_27)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:862   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_30:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_32\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_34\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":709:712   */\n  dup7\n    /* \"#utility.yul\":702:706   */\n  0x20\n    /* \"#utility.yul\":697:699   */\n  dup6\n    /* \"#utility.yul\":689:695   */\n  dup9\n    /* \"#utility.yul\":685:700   */\n  add\n    /* \"#utility.yul\":681:707   */\n  add\n    /* \"#utility.yul\":678:713   */\n  gt\n    /* \"#utility.yul\":675:730   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":726:727   */\n  0x00\n    /* \"#utility.yul\":723:724   */\n  dup1\n    /* \"#utility.yul\":716:728   */\n  revert\n    /* \"#utility.yul\":675:730   */\ntag_35:\n    /* \"#utility.yul\":783:785   */\n  dup4\n    /* \"#utility.yul\":776:780   */\n  0x20\n    /* \"#utility.yul\":768:774   */\n  dup8\n    /* \"#utility.yul\":764:781   */\n  add\n    /* \"#utility.yul\":757:761   */\n  0x20\n    /* \"#utility.yul\":749:755   */\n  dup4\n    /* \"#utility.yul\":745:762   */\n  add\n    /* \"#utility.yul\":739:786   */\n  mcopy\n    /* \"#utility.yul\":830:831   */\n  0x00\n    /* \"#utility.yul\":823:827   */\n  0x20\n    /* \"#utility.yul\":818:820   */\n  dup6\n    /* \"#utility.yul\":810:816   */\n  dup4\n    /* \"#utility.yul\":806:821   */\n  add\n    /* \"#utility.yul\":802:828   */\n  add\n    /* \"#utility.yul\":795:832   */\n  mstore\n    /* \"#utility.yul\":850:856   */\n  dup1\n    /* \"#utility.yul\":841:856   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:862   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":867:1429   */\ntag_3:\n    /* \"#utility.yul\":966:972   */\n  0x00\n    /* \"#utility.yul\":974:980   */\n  dup1\n    /* \"#utility.yul\":1027:1029   */\n  0x40\n    /* \"#utility.yul\":1015:1024   */\n  dup4\n    /* \"#utility.yul\":1006:1013   */\n  dup6\n    /* \"#utility.yul\":1002:1025   */\n  sub\n    /* \"#utility.yul\":998:1030   */\n  slt\n    /* \"#utility.yul\":995:1047   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1043:1044   */\n  0x00\n    /* \"#utility.yul\":1040:1041   */\n  dup1\n    /* \"#utility.yul\":1033:1045   */\n  revert\n    /* \"#utility.yul\":995:1047   */\ntag_37:\n    /* \"#utility.yul\":1070:1086   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1135:1149   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1132:1166   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1162:1163   */\n  0x00\n    /* \"#utility.yul\":1159:1160   */\n  dup1\n    /* \"#utility.yul\":1152:1164   */\n  revert\n    /* \"#utility.yul\":1132:1166   */\ntag_38:\n    /* \"#utility.yul\":1185:1246   */\n  tag_39\n    /* \"#utility.yul\":1238:1245   */\n  dup7\n    /* \"#utility.yul\":1229:1235   */\n  dup4\n    /* \"#utility.yul\":1218:1227   */\n  dup8\n    /* \"#utility.yul\":1214:1236   */\n  add\n    /* \"#utility.yul\":1185:1246   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1175:1246   */\n  swap4\n  pop\n    /* \"#utility.yul\":1292:1294   */\n  0x20\n    /* \"#utility.yul\":1281:1290   */\n  dup6\n    /* \"#utility.yul\":1277:1295   */\n  add\n    /* \"#utility.yul\":1271:1296   */\n  mload\n    /* \"#utility.yul\":1255:1296   */\n  swap2\n  pop\n    /* \"#utility.yul\":1321:1323   */\n  dup1\n    /* \"#utility.yul\":1311:1319   */\n  dup3\n    /* \"#utility.yul\":1308:1324   */\n  gt\n    /* \"#utility.yul\":1305:1341   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1337:1338   */\n  0x00\n    /* \"#utility.yul\":1334:1335   */\n  dup1\n    /* \"#utility.yul\":1327:1339   */\n  revert\n    /* \"#utility.yul\":1305:1341   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1360:1423   */\n  tag_41\n    /* \"#utility.yul\":1415:1422   */\n  dup6\n    /* \"#utility.yul\":1404:1412   */\n  dup3\n    /* \"#utility.yul\":1393:1402   */\n  dup7\n    /* \"#utility.yul\":1389:1413   */\n  add\n    /* \"#utility.yul\":1360:1423   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1350:1423   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":867:1429   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1434:1814   */\ntag_23:\n    /* \"#utility.yul\":1513:1514   */\n  0x01\n    /* \"#utility.yul\":1509:1521   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1556:1568   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1577:1638   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1631:1635   */\n  0x7f\n    /* \"#utility.yul\":1623:1629   */\n  dup3\n    /* \"#utility.yul\":1619:1636   */\n  and\n    /* \"#utility.yul\":1609:1636   */\n  swap2\n  pop\n    /* \"#utility.yul\":1577:1638   */\ntag_43:\n    /* \"#utility.yul\":1684:1686   */\n  0x20\n    /* \"#utility.yul\":1676:1682   */\n  dup3\n    /* \"#utility.yul\":1673:1687   */\n  lt\n    /* \"#utility.yul\":1653:1671   */\n  dup2\n    /* \"#utility.yul\":1650:1688   */\n  sub\n    /* \"#utility.yul\":1647:1808   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1730:1740   */\n  0x4e487b71\n    /* \"#utility.yul\":1725:1728   */\n  0xe0\n    /* \"#utility.yul\":1721:1741   */\n  shl\n    /* \"#utility.yul\":1718:1719   */\n  0x00\n    /* \"#utility.yul\":1711:1742   */\n  mstore\n    /* \"#utility.yul\":1765:1769   */\n  0x22\n    /* \"#utility.yul\":1762:1763   */\n  0x04\n    /* \"#utility.yul\":1755:1770   */\n  mstore\n    /* \"#utility.yul\":1793:1797   */\n  0x24\n    /* \"#utility.yul\":1790:1791   */\n  0x00\n    /* \"#utility.yul\":1783:1798   */\n  revert\n    /* \"#utility.yul\":1647:1808   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1434:1814   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1945:2463   */\ntag_25:\n    /* \"#utility.yul\":2047:2049   */\n  0x1f\n    /* \"#utility.yul\":2042:2045   */\n  dup3\n    /* \"#utility.yul\":2039:2050   */\n  gt\n    /* \"#utility.yul\":2036:2457   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2083:2088   */\n  dup1\n    /* \"#utility.yul\":2080:2081   */\n  0x00\n    /* \"#utility.yul\":2073:2089   */\n  mstore\n    /* \"#utility.yul\":2127:2131   */\n  0x20\n    /* \"#utility.yul\":2124:2125   */\n  0x00\n    /* \"#utility.yul\":2114:2132   */\n  keccak256\n    /* \"#utility.yul\":2197:2199   */\n  0x1f\n    /* \"#utility.yul\":2185:2195   */\n  dup5\n    /* \"#utility.yul\":2181:2200   */\n  add\n    /* \"#utility.yul\":2178:2179   */\n  0x05\n    /* \"#utility.yul\":2174:2201   */\n  shr\n    /* \"#utility.yul\":2168:2172   */\n  dup2\n    /* \"#utility.yul\":2164:2202   */\n  add\n    /* \"#utility.yul\":2233:2237   */\n  0x20\n    /* \"#utility.yul\":2221:2231   */\n  dup6\n    /* \"#utility.yul\":2218:2238   */\n  lt\n    /* \"#utility.yul\":2215:2262   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2256:2260   */\n  dup1\n    /* \"#utility.yul\":2215:2262   */\ntag_48:\n    /* \"#utility.yul\":2311:2313   */\n  0x1f\n    /* \"#utility.yul\":2306:2309   */\n  dup5\n    /* \"#utility.yul\":2302:2314   */\n  add\n    /* \"#utility.yul\":2299:2300   */\n  0x05\n    /* \"#utility.yul\":2295:2315   */\n  shr\n    /* \"#utility.yul\":2289:2293   */\n  dup3\n    /* \"#utility.yul\":2285:2316   */\n  add\n    /* \"#utility.yul\":2275:2316   */\n  swap2\n  pop\n    /* \"#utility.yul\":2366:2447   */\ntag_49:\n    /* \"#utility.yul\":2384:2386   */\n  dup2\n    /* \"#utility.yul\":2377:2382   */\n  dup2\n    /* \"#utility.yul\":2374:2387   */\n  lt\n    /* \"#utility.yul\":2366:2447   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2443:2444   */\n  0x00\n    /* \"#utility.yul\":2429:2445   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2410:2411   */\n  0x01\n    /* \"#utility.yul\":2399:2412   */\n  add\n    /* \"#utility.yul\":2366:2447   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":2370:2373   */\n  pop\n  pop\n    /* \"#utility.yul\":2036:2457   */\ntag_47:\n    /* \"#utility.yul\":1945:2463   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2639:3984   */\ntag_7:\n    /* \"#utility.yul\":2759:2769   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2781:2811   */\n  dup2\n  gt\n    /* \"#utility.yul\":2778:2834   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2814:2832   */\n  tag_55\n  tag_21\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2843:2940   */\n  tag_56\n    /* \"#utility.yul\":2933:2939   */\n  dup2\n    /* \"#utility.yul\":2893:2931   */\n  tag_57\n    /* \"#utility.yul\":2925:2929   */\n  dup5\n    /* \"#utility.yul\":2919:2930   */\n  sload\n    /* \"#utility.yul\":2893:2931   */\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2887:2891   */\n  dup5\n    /* \"#utility.yul\":2843:2940   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2995:2999   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3052:3054   */\n  0x1f\n    /* \"#utility.yul\":3041:3055   */\n  dup4\n  gt\n    /* \"#utility.yul\":3069:3070   */\n  0x01\n    /* \"#utility.yul\":3064:3727   */\n  dup2\n  eq\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3771:3772   */\n  0x00\n    /* \"#utility.yul\":3788:3794   */\n  dup5\n    /* \"#utility.yul\":3785:3874   */\n  iszero\n  tag_60\n  jumpi\n  pop\n    /* \"#utility.yul\":3840:3859   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3834:3860   */\n  mload\n    /* \"#utility.yul\":3785:3874   */\ntag_60:\n  not(0x00)\n    /* \"#utility.yul\":2596:2597   */\n  0x03\n    /* \"#utility.yul\":2592:2603   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2588:2612   */\n  shr\n    /* \"#utility.yul\":2584:2613   */\n  not\n    /* \"#utility.yul\":2574:2614   */\n  and\n    /* \"#utility.yul\":2620:2621   */\n  0x01\n    /* \"#utility.yul\":2616:2627   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2571:2628   */\n  or\n    /* \"#utility.yul\":3887:3968   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3034:3978   */\n  jump(tag_58)\n    /* \"#utility.yul\":3064:3727   */\ntag_59:\n    /* \"#utility.yul\":1892:1893   */\n  0x00\n    /* \"#utility.yul\":1885:1899   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1929:1933   */\n  0x20\n    /* \"#utility.yul\":1916:1934   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3100:3120   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3218:3454   */\ntag_63:\n    /* \"#utility.yul\":3232:3239   */\n  dup3\n    /* \"#utility.yul\":3229:3230   */\n  dup2\n    /* \"#utility.yul\":3226:3240   */\n  lt\n    /* \"#utility.yul\":3218:3454   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3321:3340   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3315:3341   */\n  mload\n    /* \"#utility.yul\":3300:3342   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3413:3440   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3381:3382   */\n  0x01\n    /* \"#utility.yul\":3369:3383   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3248:3267   */\n  dup5\n  add\n    /* \"#utility.yul\":3218:3454   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":3222:3225   */\n  pop\n    /* \"#utility.yul\":3482:3488   */\n  dup6\n    /* \"#utility.yul\":3473:3480   */\n  dup3\n    /* \"#utility.yul\":3470:3489   */\n  lt\n    /* \"#utility.yul\":3467:3668   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3543:3562   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3537:3563   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3626:3627   */\n  0x03\n    /* \"#utility.yul\":3622:3636   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3638:3641   */\n  0xf8\n    /* \"#utility.yul\":3618:3642   */\n  and\n    /* \"#utility.yul\":3614:3651   */\n  shr\n    /* \"#utility.yul\":3610:3652   */\n  not\n    /* \"#utility.yul\":3595:3653   */\n  and\n    /* \"#utility.yul\":3580:3654   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3467:3668   */\ntag_66:\n  pop\n  pop\n    /* \"#utility.yul\":3714:3715   */\n  0x01\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3702:3703   */\n  0x01\n    /* \"#utility.yul\":3698:3712   */\n  shl\n    /* \"#utility.yul\":3694:3716   */\n  add\n    /* \"#utility.yul\":3688:3692   */\n  dup6\n    /* \"#utility.yul\":3681:3717   */\n  sstore\n    /* \"#utility.yul\":3034:3978   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2639:3984   */\n  pop\n  pop\n  jump\t// out\ntag_27:\n    /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1053:49865  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1053:49865  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":611:625   */\n      swap1\n      iszero\n        /* \"#utility.yul\":604:626   */\n      iszero\n        /* \"#utility.yul\":586:627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":574:576   */\n      0x20\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11573:11671  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1528:1583   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1510:1584   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1498:1500   */\n      0x20\n        /* \"#utility.yul\":1483:1501   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1364:1590   */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18486  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6890:7454  function totalSupply() public view virtual override returns (uint256 result) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7328:7340  _burnCounter */\n      sload(0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6951:6965  uint256 result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7312:7325  _currentIndex */\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":7312:7340  _currentIndex - _burnCounter */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6890:7454  function totalSupply() public view virtual override returns (uint256 result) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":2201:2226   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2189:2191   */\n      0x20\n        /* \"#utility.yul\":2174:2192   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":6890:7454  function totalSupply() public view virtual override returns (uint256 result) {... */\n      tag_24\n        /* \"#utility.yul\":2055:2232   */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22796:26243  function transferFrom(... */\n    tag_7:\n      tag_38\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26334:26521  function safeTransferFrom(... */\n    tag_8:\n      tag_38\n      tag_52\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12934:13084  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8570:8809  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_43\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11742:11844  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_27\n      tag_67\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19186:19417  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_38\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27102:27507  function safeTransferFrom(... */\n    tag_13:\n      tag_38\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11945:12267  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_27\n      tag_80\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19567:19729  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_20\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19664:19668  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19705  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19712  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19687:19722  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19567:19729  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10774:10778  bool */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11117  interfaceId == 0x01ffc9a7 */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup4\n      and\n      eq\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11193  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_90\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11168:11193  interfaceId == 0x80ac58cd */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup4\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11193  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11269  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11244:11269  interfaceId == 0x5b5e139f */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n      dup4\n      and\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11092:11269  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11073:11269  return... */\n      swap3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":10689:11319  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11573:11671  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11627:11640  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11659:11664  _name */\n      0x02\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11652:11664  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11573:11671  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18712:18719  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18736:18752  _exists(tokenId) */\n      tag_100\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18744:18751  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18736:18743  _exists */\n      tag_101\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18736:18752  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18731:18804  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18754:18804  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18762:18803  ApprovalQueryForNonexistentToken.selector */\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18754:18761  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18754:18804  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18846  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18837  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18846  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18822:18852  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18636:18859  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18486  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18452:18479  _approve(to, tokenId, true) */\n      tag_106\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18461:18463  to */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18465:18472  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18474:18478  true */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18452:18460  _approve */\n      tag_107\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18452:18479  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_106:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":18364:18486  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22796:26243  function transferFrom(... */\n    tag_50:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22933:22960  uint256 prevOwnershipPacked */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22963:22990  _packedOwnershipOf(tokenId) */\n      tag_115\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22982:22989  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22963:22981  _packedOwnershipOf */\n      tag_116\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22963:22990  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23115:23137  uint256(uint160(from)) */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22933:22990  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23173:23218  address(uint160(prevOwnershipPacked)) != from */\n      dup2\n      and\n      dup5\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23169:23264  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_118\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23220:23264  _revert(TransferFromIncorrectOwner.selector) */\n      tag_118\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23228:23263  TransferFromIncorrectOwner.selector */\n      0xa114810000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23220:23227  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23220:23264  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_118:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23276:23303  uint256 approvedAddressSlot */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21929:21953  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21929:21944  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21929:21953  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22153:22179  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21566:21596  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21263:21291  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21544:21564  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":21541:21597  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23459:23647  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_129\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23551:23594  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_126\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23568:23572  from */\n      dup7\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19567:19729  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23551:23594  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_126:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23546:23647  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_129\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23596:23647  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_129\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23604:23646  TransferCallerNotOwnerNorApproved.selector */\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23596:23603  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23596:23647  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_129:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23790:23805  approvedAddress */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23787:23944  if approvedAddress {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23928:23929  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23907:23926  approvedAddressSlot */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23900:23930  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":23787:23944  if approvedAddress {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24316:24340  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24316:24334  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24316:24340  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24314:24340  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24384:24406  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24382:24406  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17492:17503  timestamp() */\n      timestamp\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17467:17490  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17463:17504  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":17450:17513  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24696  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24687  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24696  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24670:24842  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24959:25006  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24959:25011  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24955:25572  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_137\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25063:25064  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25053:25064  tokenId + 1 */\n      dup5\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25031:25050  uint256 nextTokenId */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25214  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25201  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25214  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25184:25219  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25180:25558  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_139\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25320:25333  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25305:25316  nextTokenId */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25305:25333  nextTokenId != _currentIndex */\n      eq\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25301:25540  if (nextTokenId != _currentIndex) {... */\n      tag_139\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25495  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25482  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25495  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25465:25517  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25301:25540  if (nextTokenId != _currentIndex) {... */\n    tag_139:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25013:25572  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":24955:25572  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25700:25720  uint256(uint160(to)) */\n      dup6\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26071:26078  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25700:25720  uint256(uint160(to)) */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26003:26007  from */\n      dup9\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25946:25971  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25681:25697  uint256 toMasked */\n      0x00\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":25814:26106  log4(... */\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26129:26137  toMasked */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26141:26142  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26129:26142  toMasked == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26125:26183  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_141\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26144:26183  _revert(TransferToZeroAddress.selector) */\n      tag_141\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26152:26182  TransferToZeroAddress.selector */\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26144:26151  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26144:26183  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_141:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22923:26243  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":22796:26243  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26334:26521  function safeTransferFrom(... */\n    tag_53:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26514  safeTransferFrom(from, to, tokenId, '') */\n      tag_145\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26492:26496  from */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26498:26500  to */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26502:26509  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26514  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26491  safeTransferFrom */\n      tag_77\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26475:26514  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_145:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":26334:26521  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12934:13084  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13006:13013  address */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13048:13075  _packedOwnershipOf(tokenId) */\n      tag_91\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13067:13074  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13048:13066  _packedOwnershipOf */\n      tag_116\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":13048:13075  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8570:8809  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8642:8649  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8665:8684  owner == address(0) */\n      dup3\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8661:8730  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_150\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8686:8730  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_150\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8694:8729  BalanceQueryForZeroAddress.selector */\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8686:8693  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8686:8730  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_150:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8772  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8765  _packedAddressData */\n      0x05\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8772  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":1518:1531  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8747:8802  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":8570:8809  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11742:11844  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11798:11811  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11830:11837  _symbol */\n      0x03\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11823:11837  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19186:19417  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19319  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19298  _operatorApprovals */\n      0x07\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19319  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19329  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19340  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19355:19410  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":586:627   */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19280:19329  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      swap2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19355:19410  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19355:19410  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19186:19417  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27102:27507  function safeTransferFrom(... */\n    tag_77:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27271:27302  transferFrom(from, to, tokenId) */\n      tag_162\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27284:27288  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27290:27292  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27294:27301  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27271:27283  transferFrom */\n      tag_50\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27271:27302  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27316:27330  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27316:27335  to.code.length != 0 */\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27312:27501  if (to.code.length != 0)... */\n      tag_167\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27354:27410  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_164\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27385:27389  from */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27391:27393  to */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27395:27402  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27404:27409  _data */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27354:27384  _checkContractOnERC721Received */\n      tag_165\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27354:27410  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_164:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27349:27501  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_167\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27430:27486  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_167\n      shl(0xe1, 0x68d2bf6b)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27430:27437  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27430:27486  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_167:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":27102:27507  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11945:12267  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12018:12031  string memory */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12048:12064  _exists(tokenId) */\n      tag_169\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12056:12063  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12048:12055  _exists */\n      tag_101\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12048:12064  _exists(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12043:12111  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_171\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12066:12111  _revert(URIQueryForNonexistentToken.selector) */\n      tag_171\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12074:12110  URIQueryForNonexistentToken.selector */\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12066:12073  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12066:12111  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_171:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12122:12143  string memory baseURI */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12146:12156  _baseURI() */\n      tag_172\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12588:12597  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12512:12604  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12146:12156  _baseURI() */\n    tag_172:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12122:12156  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12179:12186  baseURI */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12194  bytes(baseURI).length */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12198:12199  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12199  bytes(baseURI).length != 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12260  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_174\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_175)\n    tag_174:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12226:12233  baseURI */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12235:12253  _toString(tokenId) */\n      tag_176\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12245:12252  tokenId */\n      dup5\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12235:12244  _toString */\n      tag_177\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12235:12253  _toString(tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12209:12254  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_178\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12173:12260  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_175:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":12166:12260  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":11945:12267  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19978:20443  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_101:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20043:20054  bool result */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20231:20244  _currentIndex */\n      dup1\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20221:20228  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20221:20244  tokenId < _currentIndex */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20217:20427  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20264:20278  uint256 packed */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20296:20356  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_189:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20313:20339  _packedOwnerships[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20313:20330  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20313:20339  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20303:20345  (packed = _packedOwnerships[tokenId]) == 0 */\n      dup2\n      swap1\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20296:20356  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      tag_190\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20347:20356  --tokenId */\n      tag_191\n      dup4\n      tag_192\n      jump\t// in\n    tag_191:\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20296:20356  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_189)\n    tag_190:\n      shl(0xe0, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20383:20407  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20383:20412  packed & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":20217:20427  if (tokenId < _currentIndex) {... */\n    tag_188:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19978:20443  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49703:49863  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_104:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49802:49815  errorSelector */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49796:49800  0x00 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49789:49816  mstore(0x00, errorSelector) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49842:49846  0x04 */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49836:49840  0x00 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49829:49847  revert(0x00, 0x04) */\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41333:41793  function _approve(... */\n    tag_107:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41457:41470  address owner */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41473:41489  ownerOf(tokenId) */\n      tag_195\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41481:41488  tokenId */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41473:41480  ownerOf */\n      tag_57\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41473:41489  ownerOf(tokenId) */\n      jump\t// in\n    tag_195:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41457:41489  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41504:41517  approvalCheck */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41504:41549  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_196\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41521:41549  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41504:41549  approvalCheck && _msgSenderERC721A() != owner */\n    tag_196:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41500:41698  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_202\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41568:41612  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_199\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41585:41590  owner */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":19567:19729  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41568:41612  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_199:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41563:41698  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_202\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41632:41683  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_202\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41640:41682  ApprovalCallerNotOwnerNorApproved.selector */\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41632:41639  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41632:41683  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_202:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41732  _tokenApprovals[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41723  _tokenApprovals */\n      0x06\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41732  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41743  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41758:41786  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41708:41732  _tokenApprovals[tokenId] */\n      dup7\n      swap4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41758:41786  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41447:41793  {... */\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":41333:41793  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14380:16553  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_116:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14528:14554  _packedOwnerships[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14528:14545  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14528:14554  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14847:14853  packed */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14857:14858  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14847:14858  packed == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14843:16113  if (packed == 0) {... */\n      tag_213\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14893:14906  _currentIndex */\n      sload(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14882:14889  tokenId */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14882:14906  tokenId >= _currentIndex */\n      lt\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14878:14955  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_215\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14908:14955  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_215\n      shl(0xe1, 0x6f96cda1)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14908:14915  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14908:14955  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_215:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15502:16099  for (;;) {... */\n    tag_216:\n      pop\n      not(0x00)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15596:15605  --tokenId */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15578:15606  _packedOwnerships[--tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15578:15595  _packedOwnerships */\n      0x04\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15578:15606  _packedOwnerships[--tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15650:15675  if (packed == 0) continue */\n      dup1\n      iszero\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15502:16099  for (;;) {... */\n      tag_216\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15650:15675  if (packed == 0) continue */\n      jumpi\n      shl(0xe0, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15701:15707  packed */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15701:15725  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15729:15730  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15701:15730  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15697:15745  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_220\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14380:16553  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15697:15745  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_220:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16033:16080  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_221\n      shl(0xe1, 0x6f96cda1)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16033:16040  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16033:16080  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_221:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":15502:16099  for (;;) {... */\n      jump(tag_216)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14843:16113  if (packed == 0) {... */\n    tag_213:\n      shl(0xe0, 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16435:16441  packed */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16435:16459  packed & _BITMASK_BURNED */\n      and\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16463:16464  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16435:16464  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16431:16479  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_222\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":14380:16553  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16431:16479  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_222:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16499:16546  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_188\n      shl(0xe1, 0x6f96cda1)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16499:16506  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":16499:16546  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29533:30206  function _checkContractOnERC721Received(... */\n    tag_165:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29799  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29691:29695  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29756  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29799  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_235\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47819:47829  msg.sender */\n      caller\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29778:29782  from */\n      dup10\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29784:29791  tokenId */\n      dup9\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29793:29798  _data */\n      dup9\n      swap1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29711:29799  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_236\n      jump\t// in\n    tag_235:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_237\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_238\n      swap2\n      dup2\n      add\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      0x01\n    tag_237:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29707:30200  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_240\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_245\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_244)\n    tag_245:\n      0x60\n      swap2\n      pop\n    tag_244:\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29989:29995  reason */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29989:30002  reason.length */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30006:30007  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29989:30007  reason.length == 0 */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29985:30098  if (reason.length == 0) {... */\n      tag_247\n      jumpi\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30027:30083  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_247\n      shl(0xe1, 0x68d2bf6b)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30027:30034  _revert */\n      tag_104\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30027:30083  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_247:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30168:30174  reason */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30162:30175  mload(reason) */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30153:30159  reason */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30149:30151  32 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30145:30160  add(32, reason) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":30138:30176  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29707:30200  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_240:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29867:29931  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29707:30200  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_248:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":29533:30206  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47933:49641  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_177:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47998:48015  string memory str */\n      0x60\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48426:48430  0xa0 */\n      0xa0\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48419:48423  0x40 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48413:48424  mload(0x40) */\n      mload\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48409:48431  add(mload(0x40), 0xa0) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48516:48517  m */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48510:48514  0x40 */\n      0x40\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48503:48518  mstore(0x40, m) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48589:48593  0x20 */\n      0x20\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48586:48587  m */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48582:48594  sub(m, 0x20) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48575:48594  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48669:48670  0 */\n      0x00\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48664:48667  str */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48657:48671  mstore(str, 0) */\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48770:48773  str */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49004:49009  value */\n      dup3\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48986:49405  for { let temp := value } 1 {} {... */\n    tag_251:\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49051:49052  1 */\n      0x01\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49046:49049  str */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49042:49053  sub(str, 1) */\n      sub\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49035:49053  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49219:49221  10 */\n      0x0a\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49213:49217  temp */\n      dup2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49209:49222  mod(temp, 10) */\n      mod\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49205:49207  48 */\n      0x30\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49201:49223  add(48, mod(temp, 10)) */\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49196:49199  str */\n      dup4\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49188:49224  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49311:49313  10 */\n      0x0a\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49301:49314  div(temp, 10) */\n      swap1\n      div\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49366:49391  if iszero(temp) { break } */\n      dup1\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":48986:49405  for { let temp := value } 1 {} {... */\n      tag_251\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49366:49391  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49433:49446  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49546:49560  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49606:49625  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":49546:49560  sub(str, 0x20) */\n      swap2\n        /* \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":47933:49641  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:191   */\n    tag_257:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":88:166   */\n      and\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":78:167   */\n      eq\n        /* \"#utility.yul\":68:185   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":181:182   */\n      0x00\n        /* \"#utility.yul\":178:179   */\n      dup1\n        /* \"#utility.yul\":171:183   */\n      revert\n        /* \"#utility.yul\":68:185   */\n    tag_264:\n        /* \"#utility.yul\":14:191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:441   */\n    tag_22:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_266:\n        /* \"#utility.yul\":362:371   */\n      dup2\n        /* \"#utility.yul\":349:372   */\n      calldataload\n        /* \"#utility.yul\":381:411   */\n      tag_175\n        /* \"#utility.yul\":405:410   */\n      dup2\n        /* \"#utility.yul\":381:411   */\n      tag_257\n      jump\t// in\n        /* \"#utility.yul\":638:938   */\n    tag_258:\n        /* \"#utility.yul\":691:694   */\n      0x00\n        /* \"#utility.yul\":729:734   */\n      dup2\n        /* \"#utility.yul\":723:735   */\n      mload\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":751:754   */\n      dup5\n        /* \"#utility.yul\":744:763   */\n      mstore\n        /* \"#utility.yul\":812:818   */\n      dup1\n        /* \"#utility.yul\":805:809   */\n      0x20\n        /* \"#utility.yul\":798:803   */\n      dup5\n        /* \"#utility.yul\":794:810   */\n      add\n        /* \"#utility.yul\":787:791   */\n      0x20\n        /* \"#utility.yul\":782:785   */\n      dup7\n        /* \"#utility.yul\":778:792   */\n      add\n        /* \"#utility.yul\":772:819   */\n      mcopy\n        /* \"#utility.yul\":864:865   */\n      0x00\n        /* \"#utility.yul\":857:861   */\n      0x20\n        /* \"#utility.yul\":848:854   */\n      dup3\n        /* \"#utility.yul\":843:846   */\n      dup7\n        /* \"#utility.yul\":839:855   */\n      add\n        /* \"#utility.yul\":835:862   */\n      add\n        /* \"#utility.yul\":828:866   */\n      mstore\n        /* \"#utility.yul\":927:931   */\n      0x20\n        /* \"#utility.yul\":920:922   */\n      0x1f\n        /* \"#utility.yul\":916:923   */\n      not\n        /* \"#utility.yul\":911:913   */\n      0x1f\n        /* \"#utility.yul\":903:909   */\n      dup4\n        /* \"#utility.yul\":899:914   */\n      add\n        /* \"#utility.yul\":895:924   */\n      and\n        /* \"#utility.yul\":890:893   */\n      dup6\n        /* \"#utility.yul\":886:925   */\n      add\n        /* \"#utility.yul\":882:932   */\n      add\n        /* \"#utility.yul\":875:932   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":638:938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":943:1174   */\n    tag_30:\n        /* \"#utility.yul\":1092:1094   */\n      0x20\n        /* \"#utility.yul\":1081:1090   */\n      dup2\n        /* \"#utility.yul\":1074:1095   */\n      mstore\n        /* \"#utility.yul\":1055:1059   */\n      0x00\n        /* \"#utility.yul\":1112:1168   */\n      tag_175\n        /* \"#utility.yul\":1164:1166   */\n      0x20\n        /* \"#utility.yul\":1153:1162   */\n      dup4\n        /* \"#utility.yul\":1149:1167   */\n      add\n        /* \"#utility.yul\":1141:1147   */\n      dup5\n        /* \"#utility.yul\":1112:1168   */\n      tag_258\n      jump\t// in\n        /* \"#utility.yul\":1179:1359   */\n    tag_34:\n        /* \"#utility.yul\":1238:1244   */\n      0x00\n        /* \"#utility.yul\":1291:1293   */\n      0x20\n        /* \"#utility.yul\":1279:1288   */\n      dup3\n        /* \"#utility.yul\":1270:1277   */\n      dup5\n        /* \"#utility.yul\":1266:1289   */\n      sub\n        /* \"#utility.yul\":1262:1294   */\n      slt\n        /* \"#utility.yul\":1259:1311   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1307:1308   */\n      0x00\n        /* \"#utility.yul\":1304:1305   */\n      dup1\n        /* \"#utility.yul\":1297:1309   */\n      revert\n        /* \"#utility.yul\":1259:1311   */\n    tag_273:\n      pop\n        /* \"#utility.yul\":1330:1353   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1179:1359   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1595:1791   */\n    tag_259:\n        /* \"#utility.yul\":1663:1683   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1712:1766   */\n      dup2\n      and\n        /* \"#utility.yul\":1702:1767   */\n      dup2\n      eq\n        /* \"#utility.yul\":1692:1785   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1781:1782   */\n      0x00\n        /* \"#utility.yul\":1778:1779   */\n      dup1\n        /* \"#utility.yul\":1771:1783   */\n      revert\n        /* \"#utility.yul\":1796:2050   */\n    tag_40:\n        /* \"#utility.yul\":1864:1870   */\n      0x00\n        /* \"#utility.yul\":1872:1878   */\n      dup1\n        /* \"#utility.yul\":1925:1927   */\n      0x40\n        /* \"#utility.yul\":1913:1922   */\n      dup4\n        /* \"#utility.yul\":1904:1911   */\n      dup6\n        /* \"#utility.yul\":1900:1923   */\n      sub\n        /* \"#utility.yul\":1896:1928   */\n      slt\n        /* \"#utility.yul\":1893:1945   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":1941:1942   */\n      0x00\n        /* \"#utility.yul\":1938:1939   */\n      dup1\n        /* \"#utility.yul\":1931:1943   */\n      revert\n        /* \"#utility.yul\":1893:1945   */\n    tag_278:\n        /* \"#utility.yul\":1964:1993   */\n      tag_279\n        /* \"#utility.yul\":1983:1992   */\n      dup4\n        /* \"#utility.yul\":1964:1993   */\n      tag_259\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1954:1993   */\n      swap5\n        /* \"#utility.yul\":2040:2042   */\n      0x20\n        /* \"#utility.yul\":2025:2043   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2012:2044   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1796:2050   */\n      jump\t// out\n        /* \"#utility.yul\":2237:2565   */\n    tag_49:\n        /* \"#utility.yul\":2314:2320   */\n      0x00\n        /* \"#utility.yul\":2322:2328   */\n      dup1\n        /* \"#utility.yul\":2330:2336   */\n      0x00\n        /* \"#utility.yul\":2383:2385   */\n      0x60\n        /* \"#utility.yul\":2371:2380   */\n      dup5\n        /* \"#utility.yul\":2362:2369   */\n      dup7\n        /* \"#utility.yul\":2358:2381   */\n      sub\n        /* \"#utility.yul\":2354:2386   */\n      slt\n        /* \"#utility.yul\":2351:2403   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2399:2400   */\n      0x00\n        /* \"#utility.yul\":2396:2397   */\n      dup1\n        /* \"#utility.yul\":2389:2401   */\n      revert\n        /* \"#utility.yul\":2351:2403   */\n    tag_282:\n        /* \"#utility.yul\":2422:2451   */\n      tag_283\n        /* \"#utility.yul\":2441:2450   */\n      dup5\n        /* \"#utility.yul\":2422:2451   */\n      tag_259\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2412:2451   */\n      swap3\n      pop\n        /* \"#utility.yul\":2470:2508   */\n      tag_284\n        /* \"#utility.yul\":2504:2506   */\n      0x20\n        /* \"#utility.yul\":2493:2502   */\n      dup6\n        /* \"#utility.yul\":2489:2507   */\n      add\n        /* \"#utility.yul\":2470:2508   */\n      tag_259\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2460:2508   */\n      swap2\n      pop\n        /* \"#utility.yul\":2555:2557   */\n      0x40\n        /* \"#utility.yul\":2544:2553   */\n      dup5\n        /* \"#utility.yul\":2540:2558   */\n      add\n        /* \"#utility.yul\":2527:2559   */\n      calldataload\n        /* \"#utility.yul\":2517:2559   */\n      swap1\n      pop\n        /* \"#utility.yul\":2237:2565   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2570:2756   */\n    tag_62:\n        /* \"#utility.yul\":2629:2635   */\n      0x00\n        /* \"#utility.yul\":2682:2684   */\n      0x20\n        /* \"#utility.yul\":2670:2679   */\n      dup3\n        /* \"#utility.yul\":2661:2668   */\n      dup5\n        /* \"#utility.yul\":2657:2680   */\n      sub\n        /* \"#utility.yul\":2653:2685   */\n      slt\n        /* \"#utility.yul\":2650:2702   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2698:2699   */\n      0x00\n        /* \"#utility.yul\":2695:2696   */\n      dup1\n        /* \"#utility.yul\":2688:2700   */\n      revert\n        /* \"#utility.yul\":2650:2702   */\n    tag_286:\n        /* \"#utility.yul\":2721:2750   */\n      tag_175\n        /* \"#utility.yul\":2740:2749   */\n      dup3\n        /* \"#utility.yul\":2721:2750   */\n      tag_259\n      jump\t// in\n        /* \"#utility.yul\":2761:3108   */\n    tag_72:\n        /* \"#utility.yul\":2826:2832   */\n      0x00\n        /* \"#utility.yul\":2834:2840   */\n      dup1\n        /* \"#utility.yul\":2887:2889   */\n      0x40\n        /* \"#utility.yul\":2875:2884   */\n      dup4\n        /* \"#utility.yul\":2866:2873   */\n      dup6\n        /* \"#utility.yul\":2862:2885   */\n      sub\n        /* \"#utility.yul\":2858:2890   */\n      slt\n        /* \"#utility.yul\":2855:2907   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2903:2904   */\n      0x00\n        /* \"#utility.yul\":2900:2901   */\n      dup1\n        /* \"#utility.yul\":2893:2905   */\n      revert\n        /* \"#utility.yul\":2855:2907   */\n    tag_289:\n        /* \"#utility.yul\":2926:2955   */\n      tag_290\n        /* \"#utility.yul\":2945:2954   */\n      dup4\n        /* \"#utility.yul\":2926:2955   */\n      tag_259\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2916:2955   */\n      swap2\n      pop\n        /* \"#utility.yul\":3005:3007   */\n      0x20\n        /* \"#utility.yul\":2994:3003   */\n      dup4\n        /* \"#utility.yul\":2990:3008   */\n      add\n        /* \"#utility.yul\":2977:3009   */\n      calldataload\n        /* \"#utility.yul\":3052:3057   */\n      dup1\n        /* \"#utility.yul\":3045:3058   */\n      iszero\n        /* \"#utility.yul\":3038:3059   */\n      iszero\n        /* \"#utility.yul\":3031:3036   */\n      dup2\n        /* \"#utility.yul\":3028:3060   */\n      eq\n        /* \"#utility.yul\":3018:3078   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3074:3075   */\n      0x00\n        /* \"#utility.yul\":3071:3072   */\n      dup1\n        /* \"#utility.yul\":3064:3076   */\n      revert\n        /* \"#utility.yul\":3018:3078   */\n    tag_291:\n        /* \"#utility.yul\":3097:3102   */\n      dup1\n        /* \"#utility.yul\":3087:3102   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2761:3108   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3113:3297   */\n    tag_260:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3162:3163   */\n      0x00\n        /* \"#utility.yul\":3155:3243   */\n      mstore\n        /* \"#utility.yul\":3262:3266   */\n      0x41\n        /* \"#utility.yul\":3259:3260   */\n      0x04\n        /* \"#utility.yul\":3252:3267   */\n      mstore\n        /* \"#utility.yul\":3286:3290   */\n      0x24\n        /* \"#utility.yul\":3283:3284   */\n      0x00\n        /* \"#utility.yul\":3276:3291   */\n      revert\n        /* \"#utility.yul\":3302:4440   */\n    tag_76:\n        /* \"#utility.yul\":3397:3403   */\n      0x00\n        /* \"#utility.yul\":3405:3411   */\n      dup1\n        /* \"#utility.yul\":3413:3419   */\n      0x00\n        /* \"#utility.yul\":3421:3427   */\n      dup1\n        /* \"#utility.yul\":3474:3477   */\n      0x80\n        /* \"#utility.yul\":3462:3471   */\n      dup6\n        /* \"#utility.yul\":3453:3460   */\n      dup8\n        /* \"#utility.yul\":3449:3472   */\n      sub\n        /* \"#utility.yul\":3445:3478   */\n      slt\n        /* \"#utility.yul\":3442:3495   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":3491:3492   */\n      0x00\n        /* \"#utility.yul\":3488:3489   */\n      dup1\n        /* \"#utility.yul\":3481:3493   */\n      revert\n        /* \"#utility.yul\":3442:3495   */\n    tag_294:\n        /* \"#utility.yul\":3514:3543   */\n      tag_295\n        /* \"#utility.yul\":3533:3542   */\n      dup6\n        /* \"#utility.yul\":3514:3543   */\n      tag_259\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3504:3543   */\n      swap4\n      pop\n        /* \"#utility.yul\":3562:3600   */\n      tag_296\n        /* \"#utility.yul\":3596:3598   */\n      0x20\n        /* \"#utility.yul\":3585:3594   */\n      dup7\n        /* \"#utility.yul\":3581:3599   */\n      add\n        /* \"#utility.yul\":3562:3600   */\n      tag_259\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3552:3600   */\n      swap3\n      pop\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3636:3645   */\n      dup6\n        /* \"#utility.yul\":3632:3650   */\n      add\n        /* \"#utility.yul\":3619:3651   */\n      calldataload\n        /* \"#utility.yul\":3609:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3702:3704   */\n      0x60\n        /* \"#utility.yul\":3691:3700   */\n      dup6\n        /* \"#utility.yul\":3687:3705   */\n      add\n        /* \"#utility.yul\":3674:3706   */\n      calldataload\n        /* \"#utility.yul\":3725:3743   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3766:3768   */\n      dup1\n        /* \"#utility.yul\":3758:3764   */\n      dup3\n        /* \"#utility.yul\":3755:3769   */\n      gt\n        /* \"#utility.yul\":3752:3786   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3779:3780   */\n      dup1\n        /* \"#utility.yul\":3772:3784   */\n      revert\n        /* \"#utility.yul\":3752:3786   */\n    tag_297:\n        /* \"#utility.yul\":3820:3826   */\n      dup2\n        /* \"#utility.yul\":3809:3818   */\n      dup8\n        /* \"#utility.yul\":3805:3827   */\n      add\n        /* \"#utility.yul\":3795:3827   */\n      swap2\n      pop\n        /* \"#utility.yul\":3865:3872   */\n      dup8\n        /* \"#utility.yul\":3858:3862   */\n      0x1f\n        /* \"#utility.yul\":3854:3856   */\n      dup4\n        /* \"#utility.yul\":3850:3863   */\n      add\n        /* \"#utility.yul\":3846:3873   */\n      slt\n        /* \"#utility.yul\":3836:3891   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3887:3888   */\n      0x00\n        /* \"#utility.yul\":3884:3885   */\n      dup1\n        /* \"#utility.yul\":3877:3889   */\n      revert\n        /* \"#utility.yul\":3836:3891   */\n    tag_298:\n        /* \"#utility.yul\":3923:3925   */\n      dup2\n        /* \"#utility.yul\":3910:3926   */\n      calldataload\n        /* \"#utility.yul\":3945:3947   */\n      dup2\n        /* \"#utility.yul\":3941:3943   */\n      dup2\n        /* \"#utility.yul\":3938:3948   */\n      gt\n        /* \"#utility.yul\":3935:3971   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":3951:3969   */\n      tag_300\n      tag_260\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4026:4028   */\n      0x40\n        /* \"#utility.yul\":4020:4029   */\n      mload\n        /* \"#utility.yul\":3994:3996   */\n      0x1f\n        /* \"#utility.yul\":4080:4093   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4076:4098   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4100:4102   */\n      0x3f\n        /* \"#utility.yul\":4072:4103   */\n      add\n        /* \"#utility.yul\":4068:4108   */\n      and\n        /* \"#utility.yul\":4056:4109   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4124:4142   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4144:4166   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4121:4167   */\n      or\n        /* \"#utility.yul\":4118:4190   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4170:4188   */\n      tag_302\n      tag_260\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4210:4220   */\n      dup2\n        /* \"#utility.yul\":4206:4208   */\n      0x40\n        /* \"#utility.yul\":4199:4221   */\n      mstore\n        /* \"#utility.yul\":4245:4247   */\n      dup3\n        /* \"#utility.yul\":4237:4243   */\n      dup2\n        /* \"#utility.yul\":4230:4248   */\n      mstore\n        /* \"#utility.yul\":4285:4292   */\n      dup11\n        /* \"#utility.yul\":4280:4282   */\n      0x20\n        /* \"#utility.yul\":4275:4277   */\n      dup5\n        /* \"#utility.yul\":4271:4273   */\n      dup8\n        /* \"#utility.yul\":4267:4278   */\n      add\n        /* \"#utility.yul\":4263:4283   */\n      add\n        /* \"#utility.yul\":4260:4293   */\n      gt\n        /* \"#utility.yul\":4257:4310   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":4306:4307   */\n      0x00\n        /* \"#utility.yul\":4303:4304   */\n      dup1\n        /* \"#utility.yul\":4296:4308   */\n      revert\n        /* \"#utility.yul\":4257:4310   */\n    tag_303:\n        /* \"#utility.yul\":4362:4364   */\n      dup3\n        /* \"#utility.yul\":4357:4359   */\n      0x20\n        /* \"#utility.yul\":4353:4355   */\n      dup7\n        /* \"#utility.yul\":4349:4360   */\n      add\n        /* \"#utility.yul\":4344:4346   */\n      0x20\n        /* \"#utility.yul\":4336:4342   */\n      dup4\n        /* \"#utility.yul\":4332:4347   */\n      add\n        /* \"#utility.yul\":4319:4365   */\n      calldatacopy\n        /* \"#utility.yul\":4407:4408   */\n      0x00\n        /* \"#utility.yul\":4402:4404   */\n      0x20\n        /* \"#utility.yul\":4397:4399   */\n      dup5\n        /* \"#utility.yul\":4389:4395   */\n      dup4\n        /* \"#utility.yul\":4385:4400   */\n      add\n        /* \"#utility.yul\":4381:4405   */\n      add\n        /* \"#utility.yul\":4374:4409   */\n      mstore\n        /* \"#utility.yul\":4428:4434   */\n      dup1\n        /* \"#utility.yul\":4418:4434   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3302:4440   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4445:4705   */\n    tag_86:\n        /* \"#utility.yul\":4513:4519   */\n      0x00\n        /* \"#utility.yul\":4521:4527   */\n      dup1\n        /* \"#utility.yul\":4574:4576   */\n      0x40\n        /* \"#utility.yul\":4562:4571   */\n      dup4\n        /* \"#utility.yul\":4553:4560   */\n      dup6\n        /* \"#utility.yul\":4549:4572   */\n      sub\n        /* \"#utility.yul\":4545:4577   */\n      slt\n        /* \"#utility.yul\":4542:4594   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4542:4594   */\n    tag_305:\n        /* \"#utility.yul\":4613:4642   */\n      tag_306\n        /* \"#utility.yul\":4632:4641   */\n      dup4\n        /* \"#utility.yul\":4613:4642   */\n      tag_259\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4603:4642   */\n      swap2\n      pop\n        /* \"#utility.yul\":4661:4699   */\n      tag_307\n        /* \"#utility.yul\":4695:4697   */\n      0x20\n        /* \"#utility.yul\":4684:4693   */\n      dup5\n        /* \"#utility.yul\":4680:4698   */\n      add\n        /* \"#utility.yul\":4661:4699   */\n      tag_259\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4651:4699   */\n      swap1\n      pop\n        /* \"#utility.yul\":4445:4705   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4710:5147   */\n    tag_94:\n        /* \"#utility.yul\":4789:4790   */\n      0x01\n        /* \"#utility.yul\":4785:4797   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4832:4844   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4853:4914   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":4907:4911   */\n      0x7f\n        /* \"#utility.yul\":4899:4905   */\n      dup3\n        /* \"#utility.yul\":4895:4912   */\n      and\n        /* \"#utility.yul\":4885:4912   */\n      swap2\n      pop\n        /* \"#utility.yul\":4853:4914   */\n    tag_309:\n        /* \"#utility.yul\":4960:4962   */\n      0x20\n        /* \"#utility.yul\":4952:4958   */\n      dup3\n        /* \"#utility.yul\":4949:4963   */\n      lt\n        /* \"#utility.yul\":4929:4947   */\n      dup2\n        /* \"#utility.yul\":4926:4964   */\n      sub\n        /* \"#utility.yul\":4923:5141   */\n      tag_310\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4994:4995   */\n      0x00\n        /* \"#utility.yul\":4987:5075   */\n      mstore\n        /* \"#utility.yul\":5098:5102   */\n      0x22\n        /* \"#utility.yul\":5095:5096   */\n      0x04\n        /* \"#utility.yul\":5088:5103   */\n      mstore\n        /* \"#utility.yul\":5126:5130   */\n      0x24\n        /* \"#utility.yul\":5123:5124   */\n      0x00\n        /* \"#utility.yul\":5116:5131   */\n      revert\n        /* \"#utility.yul\":4923:5141   */\n    tag_310:\n      pop\n        /* \"#utility.yul\":4710:5147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5152:5364   */\n    tag_261:\n        /* \"#utility.yul\":5194:5197   */\n      0x00\n        /* \"#utility.yul\":5232:5237   */\n      dup2\n        /* \"#utility.yul\":5226:5238   */\n      mload\n        /* \"#utility.yul\":5276:5282   */\n      dup1\n        /* \"#utility.yul\":5269:5273   */\n      0x20\n        /* \"#utility.yul\":5262:5267   */\n      dup5\n        /* \"#utility.yul\":5258:5274   */\n      add\n        /* \"#utility.yul\":5253:5256   */\n      dup6\n        /* \"#utility.yul\":5247:5283   */\n      mcopy\n        /* \"#utility.yul\":5338:5339   */\n      0x00\n        /* \"#utility.yul\":5302:5318   */\n      swap4\n      add\n        /* \"#utility.yul\":5327:5340   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":5302:5318   */\n      swap1\n      swap2\n        /* \"#utility.yul\":5152:5364   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5369:5636   */\n    tag_179:\n        /* \"#utility.yul\":5548:5551   */\n      0x00\n        /* \"#utility.yul\":5573:5630   */\n      tag_248\n        /* \"#utility.yul\":5599:5629   */\n      tag_314\n        /* \"#utility.yul\":5625:5628   */\n      dup4\n        /* \"#utility.yul\":5617:5623   */\n      dup7\n        /* \"#utility.yul\":5599:5629   */\n      tag_261\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5591:5597   */\n      dup5\n        /* \"#utility.yul\":5573:5630   */\n      tag_261\n      jump\t// in\n        /* \"#utility.yul\":5641:5931   */\n    tag_192:\n        /* \"#utility.yul\":5680:5683   */\n      0x00\n        /* \"#utility.yul\":5708:5713   */\n      dup2\n        /* \"#utility.yul\":5698:5891   */\n      tag_316\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5744:5745   */\n      0x00\n        /* \"#utility.yul\":5737:5825   */\n      mstore\n        /* \"#utility.yul\":5848:5852   */\n      0x11\n        /* \"#utility.yul\":5845:5846   */\n      0x04\n        /* \"#utility.yul\":5838:5853   */\n      mstore\n        /* \"#utility.yul\":5876:5880   */\n      0x24\n        /* \"#utility.yul\":5873:5874   */\n      0x00\n        /* \"#utility.yul\":5866:5881   */\n      revert\n        /* \"#utility.yul\":5698:5891   */\n    tag_316:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":5907:5925   */\n      add\n      swap1\n        /* \"#utility.yul\":5641:5931   */\n      jump\t// out\n        /* \"#utility.yul\":5936:6459   */\n    tag_236:\n        /* \"#utility.yul\":6130:6134   */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6240:6242   */\n      dup1\n        /* \"#utility.yul\":6232:6238   */\n      dup8\n        /* \"#utility.yul\":6228:6243   */\n      and\n        /* \"#utility.yul\":6217:6226   */\n      dup4\n        /* \"#utility.yul\":6210:6244   */\n      mstore\n        /* \"#utility.yul\":6292:6294   */\n      dup1\n        /* \"#utility.yul\":6284:6290   */\n      dup7\n        /* \"#utility.yul\":6280:6295   */\n      and\n        /* \"#utility.yul\":6275:6277   */\n      0x20\n        /* \"#utility.yul\":6264:6273   */\n      dup5\n        /* \"#utility.yul\":6260:6278   */\n      add\n        /* \"#utility.yul\":6253:6296   */\n      mstore\n      pop\n        /* \"#utility.yul\":6332:6338   */\n      dup4\n        /* \"#utility.yul\":6327:6329   */\n      0x40\n        /* \"#utility.yul\":6316:6325   */\n      dup4\n        /* \"#utility.yul\":6312:6330   */\n      add\n        /* \"#utility.yul\":6305:6339   */\n      mstore\n        /* \"#utility.yul\":6375:6378   */\n      0x80\n        /* \"#utility.yul\":6370:6372   */\n      0x60\n        /* \"#utility.yul\":6359:6368   */\n      dup4\n        /* \"#utility.yul\":6355:6373   */\n      add\n        /* \"#utility.yul\":6348:6379   */\n      mstore\n        /* \"#utility.yul\":6396:6453   */\n      tag_318\n        /* \"#utility.yul\":6448:6451   */\n      0x80\n        /* \"#utility.yul\":6437:6446   */\n      dup4\n        /* \"#utility.yul\":6433:6452   */\n      add\n        /* \"#utility.yul\":6425:6431   */\n      dup5\n        /* \"#utility.yul\":6396:6453   */\n      tag_258\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6388:6453   */\n      swap7\n        /* \"#utility.yul\":5936:6459   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6464:6713   */\n    tag_239:\n        /* \"#utility.yul\":6533:6539   */\n      0x00\n        /* \"#utility.yul\":6586:6588   */\n      0x20\n        /* \"#utility.yul\":6574:6583   */\n      dup3\n        /* \"#utility.yul\":6565:6572   */\n      dup5\n        /* \"#utility.yul\":6561:6584   */\n      sub\n        /* \"#utility.yul\":6557:6589   */\n      slt\n        /* \"#utility.yul\":6554:6606   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6602:6603   */\n      0x00\n        /* \"#utility.yul\":6599:6600   */\n      dup1\n        /* \"#utility.yul\":6592:6604   */\n      revert\n        /* \"#utility.yul\":6554:6606   */\n    tag_320:\n        /* \"#utility.yul\":6634:6643   */\n      dup2\n        /* \"#utility.yul\":6628:6644   */\n      mload\n        /* \"#utility.yul\":6653:6683   */\n      tag_175\n        /* \"#utility.yul\":6677:6682   */\n      dup2\n        /* \"#utility.yul\":6653:6683   */\n      tag_257\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220e17496b2867d8dfcbbf6daeffc9875bcd72a2888c438625453fa68e86c1048d264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_219": {
									"entryPoint": null,
									"id": 219,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_2167": {
									"entryPoint": null,
									"id": 2167,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_sequentialUpTo_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_228": {
									"entryPoint": null,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 82,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3986:5",
										"nodeType": "YulBlock",
										"src": "0:3986:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:652:5",
													"nodeType": "YulBlock",
													"src": "210:652:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:5"
																},
																"nativeSrc": "294:13:5",
																"nodeType": "YulFunctionCall",
																"src": "294:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:5",
																	"nodeType": "YulTypedName",
																	"src": "288:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:5",
																				"nodeType": "YulLiteral",
																				"src": "334:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:5",
																				"nodeType": "YulLiteral",
																				"src": "338:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:5"
																		},
																		"nativeSrc": "330:10:5",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:5",
																		"nodeType": "YulLiteral",
																		"src": "342:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:5"
																},
																"nativeSrc": "326:18:5",
																"nodeType": "YulFunctionCall",
																"src": "326:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:5",
																	"nodeType": "YulTypedName",
																	"src": "320:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:5",
																"nodeType": "YulBlock",
																"src": "367:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:5"
																			},
																			"nativeSrc": "369:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:5"
																		},
																		"nativeSrc": "369:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:5"
																},
																"nativeSrc": "356:10:5",
																"nodeType": "YulFunctionCall",
																"src": "356:10:5"
															},
															"nativeSrc": "353:36:5",
															"nodeType": "YulIf",
															"src": "353:36:5"
														},
														{
															"nativeSrc": "398:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:5",
																		"nodeType": "YulLiteral",
																		"src": "412:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:5"
																},
																"nativeSrc": "408:7:5",
																"nodeType": "YulFunctionCall",
																"src": "408:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:5",
																	"nodeType": "YulTypedName",
																	"src": "402:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:5",
																		"nodeType": "YulLiteral",
																		"src": "444:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:5"
																},
																"nativeSrc": "438:9:5",
																"nodeType": "YulFunctionCall",
																"src": "438:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:5",
																	"nodeType": "YulTypedName",
																	"src": "428:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:5",
																										"nodeType": "YulLiteral",
																										"src": "506:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:5"
																								},
																								"nativeSrc": "498:13:5",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:5"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:5"
																						},
																						"nativeSrc": "494:22:5",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:5",
																						"nodeType": "YulLiteral",
																						"src": "518:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:5"
																				},
																				"nativeSrc": "490:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:5"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:5"
																		},
																		"nativeSrc": "486:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:5"
																},
																"nativeSrc": "474:53:5",
																"nodeType": "YulFunctionCall",
																"src": "474:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:5",
																	"nodeType": "YulTypedName",
																	"src": "460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:5",
																"nodeType": "YulBlock",
																"src": "586:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:5"
																			},
																			"nativeSrc": "588:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:5"
																		},
																		"nativeSrc": "588:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:5"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:5"
																		},
																		"nativeSrc": "542:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:5"
																		},
																		"nativeSrc": "562:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:5"
																},
																"nativeSrc": "539:46:5",
																"nodeType": "YulFunctionCall",
																"src": "539:46:5"
															},
															"nativeSrc": "536:72:5",
															"nodeType": "YulIf",
															"src": "536:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:5",
																		"nodeType": "YulLiteral",
																		"src": "624:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:5"
																},
																"nativeSrc": "617:22:5",
																"nodeType": "YulFunctionCall",
																"src": "617:22:5"
															},
															"nativeSrc": "617:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:5"
																},
																"nativeSrc": "648:18:5",
																"nodeType": "YulFunctionCall",
																"src": "648:18:5"
															},
															"nativeSrc": "648:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:5"
														},
														{
															"body": {
																"nativeSrc": "714:16:5",
																"nodeType": "YulBlock",
																"src": "714:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "723:1:5",
																					"nodeType": "YulLiteral",
																					"src": "723:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "726:1:5",
																					"nodeType": "YulLiteral",
																					"src": "726:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "716:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "716:6:5"
																			},
																			"nativeSrc": "716:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "716:12:5"
																		},
																		"nativeSrc": "716:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "716:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "689:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "689:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "697:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "697:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "685:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "685:3:5"
																				},
																				"nativeSrc": "685:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "685:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "702:4:5",
																				"nodeType": "YulLiteral",
																				"src": "702:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "681:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:5"
																		},
																		"nativeSrc": "681:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "681:26:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "709:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "678:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "678:2:5"
																},
																"nativeSrc": "678:35:5",
																"nodeType": "YulFunctionCall",
																"src": "678:35:5"
															},
															"nativeSrc": "675:55:5",
															"nodeType": "YulIf",
															"src": "675:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "749:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "749:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "757:4:5",
																				"nodeType": "YulLiteral",
																				"src": "757:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "745:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "745:3:5"
																		},
																		"nativeSrc": "745:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "745:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "768:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "776:4:5",
																				"nodeType": "YulLiteral",
																				"src": "776:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "764:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "764:3:5"
																		},
																		"nativeSrc": "764:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "764:17:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "783:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "783:2:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "739:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "739:5:5"
																},
																"nativeSrc": "739:47:5",
																"nodeType": "YulFunctionCall",
																"src": "739:47:5"
															},
															"nativeSrc": "739:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "739:47:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "810:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "818:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "818:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "806:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "806:3:5"
																				},
																				"nativeSrc": "806:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "806:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "823:4:5",
																				"nodeType": "YulLiteral",
																				"src": "823:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "802:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:5"
																		},
																		"nativeSrc": "802:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "802:26:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:5",
																		"nodeType": "YulLiteral",
																		"src": "830:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:5"
																},
																"nativeSrc": "795:37:5",
																"nodeType": "YulFunctionCall",
																"src": "795:37:5"
															},
															"nativeSrc": "795:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "795:37:5"
														},
														{
															"nativeSrc": "841:15:5",
															"nodeType": "YulAssignment",
															"src": "841:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "850:6:5",
																"nodeType": "YulIdentifier",
																"src": "850:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "841:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "841:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:716:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:716:5"
											},
											{
												"body": {
													"nativeSrc": "985:444:5",
													"nodeType": "YulBlock",
													"src": "985:444:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1031:16:5",
																"nodeType": "YulBlock",
																"src": "1031:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1043:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1043:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1033:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1033:6:5"
																			},
																			"nativeSrc": "1033:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1033:12:5"
																		},
																		"nativeSrc": "1033:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1033:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1006:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1006:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1015:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1015:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1002:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:5"
																		},
																		"nativeSrc": "1002:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1002:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1027:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1027:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "998:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "998:3:5"
																},
																"nativeSrc": "998:32:5",
																"nodeType": "YulFunctionCall",
																"src": "998:32:5"
															},
															"nativeSrc": "995:52:5",
															"nodeType": "YulIf",
															"src": "995:52:5"
														},
														{
															"nativeSrc": "1056:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1056:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1076:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1076:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1070:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1070:5:5"
																},
																"nativeSrc": "1070:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1070:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1060:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1060:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1095:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1095:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1113:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1113:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1117:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1117:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1109:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:5"
																		},
																		"nativeSrc": "1109:10:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1109:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1105:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1105:3:5"
																},
																"nativeSrc": "1105:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1105:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1099:2:5",
																	"nodeType": "YulTypedName",
																	"src": "1099:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1150:16:5",
																"nodeType": "YulBlock",
																"src": "1150:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1159:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1159:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1162:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1152:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1152:6:5"
																			},
																			"nativeSrc": "1152:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1152:12:5"
																		},
																		"nativeSrc": "1152:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1152:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1138:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1138:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1146:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "1146:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1135:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1135:2:5"
																},
																"nativeSrc": "1135:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1135:14:5"
															},
															"nativeSrc": "1132:34:5",
															"nodeType": "YulIf",
															"src": "1132:34:5"
														},
														{
															"nativeSrc": "1175:71:5",
															"nodeType": "YulAssignment",
															"src": "1175:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1218:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1218:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1229:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1214:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1214:3:5"
																		},
																		"nativeSrc": "1214:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1214:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1238:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1238:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1185:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1185:28:5"
																},
																"nativeSrc": "1185:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1185:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1175:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1175:6:5"
																}
															]
														},
														{
															"nativeSrc": "1255:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1281:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1281:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1292:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1292:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1277:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1277:3:5"
																		},
																		"nativeSrc": "1277:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1277:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1271:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1271:5:5"
																},
																"nativeSrc": "1271:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1271:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1259:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1259:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1325:16:5",
																"nodeType": "YulBlock",
																"src": "1325:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1334:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1334:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1337:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1337:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1327:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1327:6:5"
																			},
																			"nativeSrc": "1327:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1327:12:5"
																		},
																		"nativeSrc": "1327:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1327:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1311:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1311:8:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1321:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "1321:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1308:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1308:2:5"
																},
																"nativeSrc": "1308:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1308:16:5"
															},
															"nativeSrc": "1305:36:5",
															"nodeType": "YulIf",
															"src": "1305:36:5"
														},
														{
															"nativeSrc": "1350:73:5",
															"nodeType": "YulAssignment",
															"src": "1350:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1393:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1404:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1404:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1389:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:5"
																		},
																		"nativeSrc": "1389:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1415:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1415:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1360:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1360:28:5"
																},
																"nativeSrc": "1360:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1360:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1350:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "867:562:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "943:9:5",
														"nodeType": "YulTypedName",
														"src": "943:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "954:7:5",
														"nodeType": "YulTypedName",
														"src": "954:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "966:6:5",
														"nodeType": "YulTypedName",
														"src": "966:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "974:6:5",
														"nodeType": "YulTypedName",
														"src": "974:6:5",
														"type": ""
													}
												],
												"src": "867:562:5"
											},
											{
												"body": {
													"nativeSrc": "1489:325:5",
													"nodeType": "YulBlock",
													"src": "1489:325:5",
													"statements": [
														{
															"nativeSrc": "1499:22:5",
															"nodeType": "YulAssignment",
															"src": "1499:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1513:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1513:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1516:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1516:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1509:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:5"
																},
																"nativeSrc": "1509:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1509:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1499:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:5"
																}
															]
														},
														{
															"nativeSrc": "1530:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1530:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1560:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1560:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1566:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1566:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1556:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1556:3:5"
																},
																"nativeSrc": "1556:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1556:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1534:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1534:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:31:5",
																"nodeType": "YulBlock",
																"src": "1607:31:5",
																"statements": [
																	{
																		"nativeSrc": "1609:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1609:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1623:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1623:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1631:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1631:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1619:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1619:3:5"
																			},
																			"nativeSrc": "1619:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1619:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1609:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1609:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1587:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1587:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1580:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:5"
																},
																"nativeSrc": "1580:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1580:26:5"
															},
															"nativeSrc": "1577:61:5",
															"nodeType": "YulIf",
															"src": "1577:61:5"
														},
														{
															"body": {
																"nativeSrc": "1697:111:5",
																"nodeType": "YulBlock",
																"src": "1697:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1718:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1718:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1725:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1725:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1730:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1730:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1721:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1721:3:5"
																					},
																					"nativeSrc": "1721:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1721:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1711:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:5"
																			},
																			"nativeSrc": "1711:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1711:31:5"
																		},
																		"nativeSrc": "1711:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1711:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1762:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1762:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1765:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1765:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1755:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1755:6:5"
																			},
																			"nativeSrc": "1755:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1755:15:5"
																		},
																		"nativeSrc": "1755:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1755:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1790:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1790:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1793:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1793:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1783:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1783:6:5"
																			},
																			"nativeSrc": "1783:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1783:15:5"
																		},
																		"nativeSrc": "1783:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1783:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1653:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1653:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1676:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1684:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1684:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1673:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1673:2:5"
																		},
																		"nativeSrc": "1673:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1650:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1650:2:5"
																},
																"nativeSrc": "1650:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1650:38:5"
															},
															"nativeSrc": "1647:161:5",
															"nodeType": "YulIf",
															"src": "1647:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1434:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1469:4:5",
														"nodeType": "YulTypedName",
														"src": "1469:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1478:6:5",
														"nodeType": "YulTypedName",
														"src": "1478:6:5",
														"type": ""
													}
												],
												"src": "1434:380:5"
											},
											{
												"body": {
													"nativeSrc": "1875:65:5",
													"nodeType": "YulBlock",
													"src": "1875:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1892:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1892:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1895:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1895:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1885:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1885:6:5"
																},
																"nativeSrc": "1885:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1885:14:5"
															},
															"nativeSrc": "1885:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "1885:14:5"
														},
														{
															"nativeSrc": "1908:26:5",
															"nodeType": "YulAssignment",
															"src": "1908:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1926:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1926:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1929:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1929:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1916:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1916:9:5"
																},
																"nativeSrc": "1916:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1916:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1908:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1908:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1819:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1858:3:5",
														"nodeType": "YulTypedName",
														"src": "1858:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1866:4:5",
														"nodeType": "YulTypedName",
														"src": "1866:4:5",
														"type": ""
													}
												],
												"src": "1819:121:5"
											},
											{
												"body": {
													"nativeSrc": "2026:437:5",
													"nodeType": "YulBlock",
													"src": "2026:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2059:398:5",
																"nodeType": "YulBlock",
																"src": "2059:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2080:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2080:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2083:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2083:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2073:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2073:6:5"
																			},
																			"nativeSrc": "2073:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2073:16:5"
																		},
																		"nativeSrc": "2073:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2073:16:5"
																	},
																	{
																		"nativeSrc": "2102:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2102:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2124:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2124:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2127:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2127:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2114:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2114:9:5"
																			},
																			"nativeSrc": "2114:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2114:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2106:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2106:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2145:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2145:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2168:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2168:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2178:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2178:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2185:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2185:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2197:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2197:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2181:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2181:3:5"
																							},
																							"nativeSrc": "2181:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2181:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2174:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2174:3:5"
																					},
																					"nativeSrc": "2174:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2174:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2164:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2164:3:5"
																			},
																			"nativeSrc": "2164:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2164:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2149:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2149:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2239:23:5",
																			"nodeType": "YulBlock",
																			"src": "2239:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2241:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2241:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2256:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2256:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2241:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2241:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2221:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2221:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2233:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2233:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2218:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2218:2:5"
																			},
																			"nativeSrc": "2218:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2218:20:5"
																		},
																		"nativeSrc": "2215:47:5",
																		"nodeType": "YulIf",
																		"src": "2215:47:5"
																	},
																	{
																		"nativeSrc": "2275:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2275:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2289:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2289:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2299:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2299:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2306:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2306:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2311:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2311:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2302:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2302:3:5"
																							},
																							"nativeSrc": "2302:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2302:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2295:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2295:3:5"
																					},
																					"nativeSrc": "2295:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2295:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2285:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2285:3:5"
																			},
																			"nativeSrc": "2285:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2285:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2279:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2279:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2329:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2329:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2342:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2342:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2333:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2333:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2427:20:5",
																			"nodeType": "YulBlock",
																			"src": "2427:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2436:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2436:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2443:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2443:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2429:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2429:6:5"
																						},
																						"nativeSrc": "2429:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2429:16:5"
																					},
																					"nativeSrc": "2429:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2429:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2377:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2377:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2384:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2384:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2374:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2374:2:5"
																			},
																			"nativeSrc": "2374:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2374:13:5"
																		},
																		"nativeSrc": "2366:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2388:26:5",
																			"nodeType": "YulBlock",
																			"src": "2388:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2390:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2390:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2403:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2403:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2410:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2410:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2399:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2399:3:5"
																						},
																						"nativeSrc": "2399:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2399:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2390:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2390:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2370:3:5",
																			"nodeType": "YulBlock",
																			"src": "2370:3:5",
																			"statements": []
																		},
																		"src": "2366:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2042:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2042:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2047:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2047:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2039:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2039:2:5"
																},
																"nativeSrc": "2039:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2039:11:5"
															},
															"nativeSrc": "2036:421:5",
															"nodeType": "YulIf",
															"src": "2036:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1945:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1998:5:5",
														"nodeType": "YulTypedName",
														"src": "1998:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2005:3:5",
														"nodeType": "YulTypedName",
														"src": "2005:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2010:10:5",
														"nodeType": "YulTypedName",
														"src": "2010:10:5",
														"type": ""
													}
												],
												"src": "1945:518:5"
											},
											{
												"body": {
													"nativeSrc": "2553:81:5",
													"nodeType": "YulBlock",
													"src": "2553:81:5",
													"statements": [
														{
															"nativeSrc": "2563:65:5",
															"nodeType": "YulAssignment",
															"src": "2563:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2578:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2578:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2596:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2596:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2599:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2599:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2592:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2592:3:5"
																								},
																								"nativeSrc": "2592:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2592:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2609:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2609:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2605:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2605:3:5"
																								},
																								"nativeSrc": "2605:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2605:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2588:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2588:3:5"
																						},
																						"nativeSrc": "2588:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2588:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2584:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2584:3:5"
																				},
																				"nativeSrc": "2584:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2574:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:5"
																		},
																		"nativeSrc": "2574:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2623:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2623:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2616:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2616:3:5"
																		},
																		"nativeSrc": "2616:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2616:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2571:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2571:2:5"
																},
																"nativeSrc": "2571:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2571:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2563:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2563:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2468:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2530:4:5",
														"nodeType": "YulTypedName",
														"src": "2530:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2536:3:5",
														"nodeType": "YulTypedName",
														"src": "2536:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2544:4:5",
														"nodeType": "YulTypedName",
														"src": "2544:4:5",
														"type": ""
													}
												],
												"src": "2468:166:5"
											},
											{
												"body": {
													"nativeSrc": "2735:1249:5",
													"nodeType": "YulBlock",
													"src": "2735:1249:5",
													"statements": [
														{
															"nativeSrc": "2745:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2745:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2765:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2765:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2759:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2759:5:5"
																},
																"nativeSrc": "2759:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2759:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2749:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2749:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2812:22:5",
																"nodeType": "YulBlock",
																"src": "2812:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2814:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2814:16:5"
																			},
																			"nativeSrc": "2814:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2814:18:5"
																		},
																		"nativeSrc": "2814:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2814:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2800:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2800:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2804:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2804:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2796:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2796:3:5"
																				},
																				"nativeSrc": "2796:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2796:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2808:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2808:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2792:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:5"
																		},
																		"nativeSrc": "2792:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2781:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2781:2:5"
																},
																"nativeSrc": "2781:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2781:30:5"
															},
															"nativeSrc": "2778:56:5",
															"nodeType": "YulIf",
															"src": "2778:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2887:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2887:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2925:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2925:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2919:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2919:5:5"
																				},
																				"nativeSrc": "2919:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2893:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "2893:25:5"
																		},
																		"nativeSrc": "2893:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2893:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2933:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2843:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2843:43:5"
																},
																"nativeSrc": "2843:97:5",
																"nodeType": "YulFunctionCall",
																"src": "2843:97:5"
															},
															"nativeSrc": "2843:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "2843:97:5"
														},
														{
															"nativeSrc": "2949:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2949:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2966:1:5",
																"nodeType": "YulLiteral",
																"src": "2966:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2953:9:5",
																	"nodeType": "YulTypedName",
																	"src": "2953:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2976:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2976:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2995:4:5",
																"nodeType": "YulLiteral",
																"src": "2995:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2980:11:5",
																	"nodeType": "YulTypedName",
																	"src": "2980:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3008:17:5",
															"nodeType": "YulAssignment",
															"src": "3008:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3021:4:5",
																"nodeType": "YulLiteral",
																"src": "3021:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3008:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3008:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3071:656:5",
																		"nodeType": "YulBlock",
																		"src": "3071:656:5",
																		"statements": [
																			{
																				"nativeSrc": "3085:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3085:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3104:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3104:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3116:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3116:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3112:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3112:3:5"
																							},
																							"nativeSrc": "3112:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3112:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3100:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3100:3:5"
																					},
																					"nativeSrc": "3100:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3100:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3089:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3089:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3133:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3133:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3177:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3177:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3147:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3147:29:5"
																					},
																					"nativeSrc": "3147:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3147:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3137:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3137:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3195:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3195:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3204:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3204:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3199:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3199:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3282:172:5",
																					"nodeType": "YulBlock",
																					"src": "3282:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3307:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3307:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3325:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3325:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3330:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3330:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3321:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3321:3:5"
																												},
																												"nativeSrc": "3321:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3321:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3315:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3315:5:5"
																										},
																										"nativeSrc": "3315:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3315:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3300:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3300:6:5"
																								},
																								"nativeSrc": "3300:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3300:42:5"
																							},
																							"nativeSrc": "3300:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3300:42:5"
																						},
																						{
																							"nativeSrc": "3359:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3359:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3373:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3373:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3381:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3381:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3369:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3369:3:5"
																								},
																								"nativeSrc": "3369:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3369:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3359:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3359:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3400:40:5",
																							"nodeType": "YulAssignment",
																							"src": "3400:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3417:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3417:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3428:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "3428:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3413:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3413:3:5"
																								},
																								"nativeSrc": "3413:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3413:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3400:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3400:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3229:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3229:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3232:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3232:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3226:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3226:2:5"
																					},
																					"nativeSrc": "3226:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3226:14:5"
																				},
																				"nativeSrc": "3218:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3241:28:5",
																					"nodeType": "YulBlock",
																					"src": "3241:28:5",
																					"statements": [
																						{
																							"nativeSrc": "3243:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3243:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3252:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3252:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3255:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "3255:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3248:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3248:3:5"
																								},
																								"nativeSrc": "3248:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3248:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3243:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3243:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3222:3:5",
																					"nodeType": "YulBlock",
																					"src": "3222:3:5",
																					"statements": []
																				},
																				"src": "3218:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3502:166:5",
																					"nodeType": "YulBlock",
																					"src": "3502:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3520:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3520:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3547:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3547:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3552:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3552:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3543:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3543:3:5"
																										},
																										"nativeSrc": "3543:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3543:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3537:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3537:5:5"
																								},
																								"nativeSrc": "3537:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3537:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3524:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3524:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3587:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3587:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3599:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3599:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3626:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3626:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3629:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3629:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3622:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3622:3:5"
																																		},
																																		"nativeSrc": "3622:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3622:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3638:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3638:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3618:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3618:3:5"
																																},
																																"nativeSrc": "3618:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3618:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3648:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3648:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3644:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3644:3:5"
																																},
																																"nativeSrc": "3644:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3644:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3614:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3614:3:5"
																														},
																														"nativeSrc": "3614:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3614:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3610:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3610:3:5"
																												},
																												"nativeSrc": "3610:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3610:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3595:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3595:3:5"
																										},
																										"nativeSrc": "3595:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3595:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3580:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3580:6:5"
																								},
																								"nativeSrc": "3580:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3580:74:5"
																							},
																							"nativeSrc": "3580:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3580:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3473:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3473:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3482:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3482:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3470:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3470:2:5"
																					},
																					"nativeSrc": "3470:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3470:19:5"
																				},
																				"nativeSrc": "3467:201:5",
																				"nodeType": "YulIf",
																				"src": "3467:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3688:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3688:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3702:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3702:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3705:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "3705:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3698:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3698:3:5"
																									},
																									"nativeSrc": "3698:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3698:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3714:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3714:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3694:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3694:3:5"
																							},
																							"nativeSrc": "3694:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3694:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3681:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3681:6:5"
																					},
																					"nativeSrc": "3681:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3681:36:5"
																				},
																				"nativeSrc": "3681:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3681:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3064:663:5",
																	"nodeType": "YulCase",
																	"src": "3064:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3069:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3069:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3744:234:5",
																		"nodeType": "YulBlock",
																		"src": "3744:234:5",
																		"statements": [
																			{
																				"nativeSrc": "3758:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3758:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3771:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3771:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3762:5:5",
																						"nodeType": "YulTypedName",
																						"src": "3762:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3807:67:5",
																					"nodeType": "YulBlock",
																					"src": "3807:67:5",
																					"statements": [
																						{
																							"nativeSrc": "3825:35:5",
																							"nodeType": "YulAssignment",
																							"src": "3825:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3844:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3844:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3849:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3849:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3840:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3840:3:5"
																										},
																										"nativeSrc": "3840:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3840:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3834:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3834:5:5"
																								},
																								"nativeSrc": "3834:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3834:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3825:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3825:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3788:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3788:6:5"
																				},
																				"nativeSrc": "3785:89:5",
																				"nodeType": "YulIf",
																				"src": "3785:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3894:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3894:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3960:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3960:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3900:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "3900:52:5"
																							},
																							"nativeSrc": "3900:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3900:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3887:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3887:6:5"
																					},
																					"nativeSrc": "3887:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3887:81:5"
																				},
																				"nativeSrc": "3887:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3887:81:5"
																			}
																		]
																	},
																	"nativeSrc": "3736:242:5",
																	"nodeType": "YulCase",
																	"src": "3736:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3044:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3044:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3052:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3041:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3041:2:5"
																},
																"nativeSrc": "3041:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3041:14:5"
															},
															"nativeSrc": "3034:944:5",
															"nodeType": "YulSwitch",
															"src": "3034:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2639:1345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2720:4:5",
														"nodeType": "YulTypedName",
														"src": "2720:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2726:3:5",
														"nodeType": "YulTypedName",
														"src": "2726:3:5",
														"type": ""
													}
												],
												"src": "2639:1345:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10A8 CODESIZE SUB DUP1 PUSH2 0x10A8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x2 PUSH2 0x3A DUP4 DUP3 PUSH2 0x1D1 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x47 DUP3 DUP3 PUSH2 0x1D1 JUMP JUMPDEST POP POP PUSH0 DUP1 SSTORE POP PUSH2 0x290 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x75 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x8F JUMPI PUSH2 0x8F PUSH2 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB7 JUMPI PUSH2 0xB7 PUSH2 0x52 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x121 DUP7 DUP4 DUP8 ADD PUSH2 0x66 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 DUP6 DUP3 DUP7 ADD PUSH2 0x66 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x161 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1CC JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1AA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1EA JUMPI PUSH2 0x1EA PUSH2 0x52 JUMP JUMPDEST PUSH2 0x1FE DUP2 PUSH2 0x1F8 DUP5 SLOAD PUSH2 0x14D JUMP JUMPDEST DUP5 PUSH2 0x185 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x231 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x21A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x288 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x240 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x27C JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE0B DUP1 PUSH2 0x29D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x132 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x669 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x311 JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x345 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x35A SWAP1 PUSH2 0xCFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x386 SWAP1 PUSH2 0xCFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3E5 DUP3 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x412 JUMPI PUSH2 0x412 PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x439 DUP3 DUP3 PUSH1 0x1 PUSH2 0x80B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x447 DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x487 JUMPI PUSH2 0x487 PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x4E3 JUMPI PUSH2 0x4B6 DUP7 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x4E3 JUMPI PUSH2 0x4E3 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x579 JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x577 JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0x577 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP1 PUSH0 SUB PUSH2 0x5DA JUMPI PUSH2 0x5DA PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5FD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x345 DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x644 JUMPI PUSH2 0x644 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x35A SWAP1 PUSH2 0xCFB JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6EE DUP5 DUP5 DUP5 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x71E JUMPI PUSH2 0x70A DUP5 DUP5 DUP5 DUP5 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x71E JUMPI PUSH2 0x71E PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x72F DUP3 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x75C JUMPI PUSH2 0x75C PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 PUSH2 0x771 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7BA JUMP JUMPDEST DUP1 PUSH2 0x799 DUP5 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7AA SWAP3 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x7FE JUMPI PUSH0 JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x7F4 JUMPI PUSH2 0x7ED DUP4 PUSH2 0xD5E JUMP JUMPDEST SWAP3 POP PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x815 DUP4 PUSH2 0x602 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x82D JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x869 JUMPI PUSH2 0x83C DUP2 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x869 JUMPI PUSH2 0x869 PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH0 SUB PUSH2 0x94A JUMPI PUSH0 SLOAD DUP3 LT PUSH2 0x90A JUMPI PUSH2 0x90A PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST JUMPDEST POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x90B JUMPI PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x935 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x945 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x95C JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FE PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x9A0 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9DA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9D7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA2D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xA25 JUMPI PUSH2 0xA25 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xA64 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7BA DUP2 PUSH2 0xA8E JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x7BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB48 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB71 DUP5 PUSH2 0xB18 JUMP JUMPDEST SWAP3 POP PUSH2 0xB7F PUSH1 0x20 DUP6 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP3 PUSH2 0xB18 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBC2 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC08 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC11 DUP6 PUSH2 0xB18 JUMP JUMPDEST SWAP4 POP PUSH2 0xC1F PUSH1 0x20 DUP7 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC55 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC67 JUMPI PUSH2 0xC67 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC8F JUMPI PUSH2 0xC8F PUSH2 0xBE1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xCA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCE4 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF2 PUSH1 0x20 DUP5 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD0F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA43 PUSH2 0xD58 DUP4 DUP7 PUSH2 0xD33 JUMP JUMPDEST DUP5 PUSH2 0xD33 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xD78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xDB0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7BA DUP2 PUSH2 0xA8E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH21 0x96B2867D8DFCBBF6DAEFFC9875BCD72A2888C43862 SLOAD MSTORE8 STATICCALL PUSH9 0xE86C1048D264736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "1053:48812:1:-:0;;;5261:246;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5327:5;:13;5335:5;5327;:13;:::i;:::-;-1:-1:-1;5350:7:1;:17;5360:7;5350;:17;:::i;:::-;-1:-1:-1;;6022:7:1;5377:31;;-1:-1:-1;1053:48812:1;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:716;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;709:3;702:4;697:2;689:6;685:15;681:26;678:35;675:55;;;726:1;723;716:12;675:55;783:2;776:4;768:6;764:17;757:4;749:6;745:17;739:47;830:1;823:4;818:2;810:6;806:15;802:26;795:37;850:6;841:15;;;;;;146:716;;;;:::o;867:562::-;966:6;974;1027:2;1015:9;1006:7;1002:23;998:32;995:52;;;1043:1;1040;1033:12;995:52;1070:16;;-1:-1:-1;;;;;1135:14:5;;;1132:34;;;1162:1;1159;1152:12;1132:34;1185:61;1238:7;1229:6;1218:9;1214:22;1185:61;:::i;:::-;1175:71;;1292:2;1281:9;1277:18;1271:25;1255:41;;1321:2;1311:8;1308:16;1305:36;;;1337:1;1334;1327:12;1305:36;;1360:63;1415:7;1404:8;1393:9;1389:24;1360:63;:::i;:::-;1350:73;;;867:562;;;;;:::o;1434:380::-;1513:1;1509:12;;;;1556;;;1577:61;;1631:4;1623:6;1619:17;1609:27;;1577:61;1684:2;1676:6;1673:14;1653:18;1650:38;1647:161;;1730:10;1725:3;1721:20;1718:1;1711:31;1765:4;1762:1;1755:15;1793:4;1790:1;1783:15;1647:161;;1434:380;;;:::o;1945:518::-;2047:2;2042:3;2039:11;2036:421;;;2083:5;2080:1;2073:16;2127:4;2124:1;2114:18;2197:2;2185:10;2181:19;2178:1;2174:27;2168:4;2164:38;2233:4;2221:10;2218:20;2215:47;;;-1:-1:-1;2256:4:5;2215:47;2311:2;2306:3;2302:12;2299:1;2295:20;2289:4;2285:31;2275:41;;2366:81;2384:2;2377:5;2374:13;2366:81;;;2443:1;2429:16;;2410:1;2399:13;2366:81;;;2370:3;;2036:421;1945:518;;;:::o;2639:1345::-;2759:10;;-1:-1:-1;;;;;2781:30:5;;2778:56;;;2814:18;;:::i;:::-;2843:97;2933:6;2893:38;2925:4;2919:11;2893:38;:::i;:::-;2887:4;2843:97;:::i;:::-;2995:4;;3052:2;3041:14;;3069:1;3064:663;;;;3771:1;3788:6;3785:89;;;-1:-1:-1;3840:19:5;;;3834:26;3785:89;-1:-1:-1;;2596:1:5;2592:11;;;2588:24;2584:29;2574:40;2620:1;2616:11;;;2571:57;3887:81;;3034:944;;3064:663;1892:1;1885:14;;;1929:4;1916:18;;-1:-1:-1;;3100:20:5;;;3218:236;3232:7;3229:1;3226:14;3218:236;;;3321:19;;;3315:26;3300:42;;3413:27;;;;3381:1;3369:14;;;;3248:19;;3218:236;;;3222:3;3482:6;3473:7;3470:19;3467:201;;;3543:19;;;3537:26;-1:-1:-1;;3626:1:5;3622:14;;;3638:3;3618:24;3614:37;3610:42;3595:58;3580:74;;3467:201;;;3714:1;3705:6;3702:1;3698:14;3694:22;3688:4;3681:36;3034:944;;;;;2639:1345;;:::o;:::-;1053:48812:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1240": {
									"entryPoint": null,
									"id": 1240,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1881": {
									"entryPoint": 2059,
									"id": 1881,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_542": {
									"entryPoint": null,
									"id": 542,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1227": {
									"entryPoint": null,
									"id": 1227,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1296": {
									"entryPoint": 2412,
									"id": 1296,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_939": {
									"entryPoint": 1985,
									"id": 939,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2106": {
									"entryPoint": null,
									"id": 2106,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_982": {
									"entryPoint": null,
									"id": 982,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_963": {
									"entryPoint": null,
									"id": 963,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_2149": {
									"entryPoint": null,
									"id": 2149,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2139": {
									"entryPoint": null,
									"id": 2139,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_790": {
									"entryPoint": null,
									"id": 790,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipExists_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_724": {
									"entryPoint": 2269,
									"id": 724,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_2167": {
									"entryPoint": 2051,
									"id": 2167,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_sequentialUpTo_241": {
									"entryPoint": null,
									"id": 241,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_228": {
									"entryPoint": null,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2159": {
									"entryPoint": 2635,
									"id": 2159,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_816": {
									"entryPoint": 1069,
									"id": 816,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_355": {
									"entryPoint": 1548,
									"id": 355,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_841": {
									"entryPoint": 987,
									"id": 841,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_885": {
									"entryPoint": null,
									"id": 885,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_478": {
									"entryPoint": 843,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_562": {
									"entryPoint": 1538,
									"id": 562,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1174": {
									"entryPoint": 1507,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1214": {
									"entryPoint": 1763,
									"id": 1214,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_867": {
									"entryPoint": 1656,
									"id": 867,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_468": {
									"entryPoint": 687,
									"id": 468,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_488": {
									"entryPoint": 1641,
									"id": 488,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_533": {
									"entryPoint": 1828,
									"id": 533,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_281": {
									"entryPoint": null,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1155": {
									"entryPoint": 1085,
									"id": 1155,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 2753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6715:5",
										"nodeType": "YulBlock",
										"src": "0:6715:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:133:5",
													"nodeType": "YulBlock",
													"src": "58:133:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "169:16:5",
																"nodeType": "YulBlock",
																"src": "169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:5",
																					"nodeType": "YulLiteral",
																					"src": "178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:5",
																					"nodeType": "YulLiteral",
																					"src": "181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:5"
																			},
																			"nativeSrc": "171:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:5"
																		},
																		"nativeSrc": "171:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "99:66:5",
																						"nodeType": "YulLiteral",
																						"src": "99:66:5",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:5"
																				},
																				"nativeSrc": "88:78:5",
																				"nodeType": "YulFunctionCall",
																				"src": "88:78:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:5"
																		},
																		"nativeSrc": "78:89:5",
																		"nodeType": "YulFunctionCall",
																		"src": "78:89:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:5"
																},
																"nativeSrc": "71:97:5",
																"nodeType": "YulFunctionCall",
																"src": "71:97:5"
															},
															"nativeSrc": "68:117:5",
															"nodeType": "YulIf",
															"src": "68:117:5"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:5",
														"nodeType": "YulTypedName",
														"src": "47:5:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nativeSrc": "265:176:5",
													"nodeType": "YulBlock",
													"src": "265:176:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "311:16:5",
																"nodeType": "YulBlock",
																"src": "311:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:5",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "323:1:5",
																					"nodeType": "YulLiteral",
																					"src": "323:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "313:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:5"
																			},
																			"nativeSrc": "313:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:5"
																		},
																		"nativeSrc": "313:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "286:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "295:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "282:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:5"
																		},
																		"nativeSrc": "282:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "307:2:5",
																		"nodeType": "YulLiteral",
																		"src": "307:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "278:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:5"
																},
																"nativeSrc": "278:32:5",
																"nodeType": "YulFunctionCall",
																"src": "278:32:5"
															},
															"nativeSrc": "275:52:5",
															"nodeType": "YulIf",
															"src": "275:52:5"
														},
														{
															"nativeSrc": "336:36:5",
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "349:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:5"
																},
																"nativeSrc": "349:23:5",
																"nodeType": "YulFunctionCall",
																"src": "349:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "340:5:5",
																	"nodeType": "YulTypedName",
																	"src": "340:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "405:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "405:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "381:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "381:23:5"
																},
																"nativeSrc": "381:30:5",
																"nodeType": "YulFunctionCall",
																"src": "381:30:5"
															},
															"nativeSrc": "381:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "381:30:5"
														},
														{
															"nativeSrc": "420:15:5",
															"nodeType": "YulAssignment",
															"src": "420:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "430:5:5",
																"nodeType": "YulIdentifier",
																"src": "430:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "420:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "196:245:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "231:9:5",
														"nodeType": "YulTypedName",
														"src": "231:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "242:7:5",
														"nodeType": "YulTypedName",
														"src": "242:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "254:6:5",
														"nodeType": "YulTypedName",
														"src": "254:6:5",
														"type": ""
													}
												],
												"src": "196:245:5"
											},
											{
												"body": {
													"nativeSrc": "541:92:5",
													"nodeType": "YulBlock",
													"src": "541:92:5",
													"statements": [
														{
															"nativeSrc": "551:26:5",
															"nodeType": "YulAssignment",
															"src": "551:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "563:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "574:2:5",
																		"nodeType": "YulLiteral",
																		"src": "574:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "559:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:5"
																},
																"nativeSrc": "559:18:5",
																"nodeType": "YulFunctionCall",
																"src": "559:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "551:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "593:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "618:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "618:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "611:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "611:6:5"
																				},
																				"nativeSrc": "611:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "611:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "604:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "604:6:5"
																		},
																		"nativeSrc": "604:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "604:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "586:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:5"
																},
																"nativeSrc": "586:41:5",
																"nodeType": "YulFunctionCall",
																"src": "586:41:5"
															},
															"nativeSrc": "586:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "586:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "446:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "510:9:5",
														"nodeType": "YulTypedName",
														"src": "510:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "521:6:5",
														"nodeType": "YulTypedName",
														"src": "521:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "532:4:5",
														"nodeType": "YulTypedName",
														"src": "532:4:5",
														"type": ""
													}
												],
												"src": "446:187:5"
											},
											{
												"body": {
													"nativeSrc": "699:239:5",
													"nodeType": "YulBlock",
													"src": "699:239:5",
													"statements": [
														{
															"nativeSrc": "709:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "709:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "729:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "729:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "723:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "723:5:5"
																},
																"nativeSrc": "723:12:5",
																"nodeType": "YulFunctionCall",
																"src": "723:12:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "713:6:5",
																	"nodeType": "YulTypedName",
																	"src": "713:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "751:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "751:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "756:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "756:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "744:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:5"
																},
																"nativeSrc": "744:19:5",
																"nodeType": "YulFunctionCall",
																"src": "744:19:5"
															},
															"nativeSrc": "744:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "744:19:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "782:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "782:3:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "787:4:5",
																				"nodeType": "YulLiteral",
																				"src": "787:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "778:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "778:3:5"
																		},
																		"nativeSrc": "778:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "778:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "798:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "798:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "805:4:5",
																				"nodeType": "YulLiteral",
																				"src": "805:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:5"
																		},
																		"nativeSrc": "794:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "794:16:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "812:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "772:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "772:5:5"
																},
																"nativeSrc": "772:47:5",
																"nodeType": "YulFunctionCall",
																"src": "772:47:5"
															},
															"nativeSrc": "772:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "772:47:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "843:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "843:3:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "848:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "848:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "839:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "839:3:5"
																				},
																				"nativeSrc": "839:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "839:16:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "857:4:5",
																				"nodeType": "YulLiteral",
																				"src": "857:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "835:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "835:3:5"
																		},
																		"nativeSrc": "835:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "835:27:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:5",
																		"nodeType": "YulLiteral",
																		"src": "864:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "828:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "828:6:5"
																},
																"nativeSrc": "828:38:5",
																"nodeType": "YulFunctionCall",
																"src": "828:38:5"
															},
															"nativeSrc": "828:38:5",
															"nodeType": "YulExpressionStatement",
															"src": "828:38:5"
														},
														{
															"nativeSrc": "875:57:5",
															"nodeType": "YulAssignment",
															"src": "875:57:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "890:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "890:3:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "903:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "903:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "911:2:5",
																								"nodeType": "YulLiteral",
																								"src": "911:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "899:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "899:3:5"
																						},
																						"nativeSrc": "899:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "899:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "920:2:5",
																								"nodeType": "YulLiteral",
																								"src": "920:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "916:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "916:3:5"
																						},
																						"nativeSrc": "916:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "916:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "895:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "895:3:5"
																				},
																				"nativeSrc": "895:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "895:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "886:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "886:3:5"
																		},
																		"nativeSrc": "886:39:5",
																		"nodeType": "YulFunctionCall",
																		"src": "886:39:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "927:4:5",
																		"nodeType": "YulLiteral",
																		"src": "927:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "882:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "882:3:5"
																},
																"nativeSrc": "882:50:5",
																"nodeType": "YulFunctionCall",
																"src": "882:50:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "875:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "638:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "676:5:5",
														"nodeType": "YulTypedName",
														"src": "676:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "683:3:5",
														"nodeType": "YulTypedName",
														"src": "683:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "691:3:5",
														"nodeType": "YulTypedName",
														"src": "691:3:5",
														"type": ""
													}
												],
												"src": "638:300:5"
											},
											{
												"body": {
													"nativeSrc": "1064:110:5",
													"nodeType": "YulBlock",
													"src": "1064:110:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1081:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1092:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1092:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1074:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:5"
																},
																"nativeSrc": "1074:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1074:21:5"
															},
															"nativeSrc": "1074:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "1074:21:5"
														},
														{
															"nativeSrc": "1104:64:5",
															"nodeType": "YulAssignment",
															"src": "1104:64:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1141:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1141:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1153:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1153:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1164:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1164:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1149:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1149:3:5"
																		},
																		"nativeSrc": "1149:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1112:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1112:28:5"
																},
																"nativeSrc": "1112:56:5",
																"nodeType": "YulFunctionCall",
																"src": "1112:56:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1104:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1104:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "943:231:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1033:9:5",
														"nodeType": "YulTypedName",
														"src": "1033:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1044:6:5",
														"nodeType": "YulTypedName",
														"src": "1044:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1055:4:5",
														"nodeType": "YulTypedName",
														"src": "1055:4:5",
														"type": ""
													}
												],
												"src": "943:231:5"
											},
											{
												"body": {
													"nativeSrc": "1249:110:5",
													"nodeType": "YulBlock",
													"src": "1249:110:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1295:16:5",
																"nodeType": "YulBlock",
																"src": "1295:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1304:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1304:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1307:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1297:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1297:6:5"
																			},
																			"nativeSrc": "1297:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1297:12:5"
																		},
																		"nativeSrc": "1297:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1297:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1270:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1270:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1279:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1279:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1266:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:5"
																		},
																		"nativeSrc": "1266:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1266:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1291:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1291:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1262:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:5"
																},
																"nativeSrc": "1262:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1262:32:5"
															},
															"nativeSrc": "1259:52:5",
															"nodeType": "YulIf",
															"src": "1259:52:5"
														},
														{
															"nativeSrc": "1320:33:5",
															"nodeType": "YulAssignment",
															"src": "1320:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1343:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1343:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1330:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1330:12:5"
																},
																"nativeSrc": "1330:23:5",
																"nodeType": "YulFunctionCall",
																"src": "1330:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1320:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1179:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1215:9:5",
														"nodeType": "YulTypedName",
														"src": "1215:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1226:7:5",
														"nodeType": "YulTypedName",
														"src": "1226:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1238:6:5",
														"nodeType": "YulTypedName",
														"src": "1238:6:5",
														"type": ""
													}
												],
												"src": "1179:180:5"
											},
											{
												"body": {
													"nativeSrc": "1465:125:5",
													"nodeType": "YulBlock",
													"src": "1465:125:5",
													"statements": [
														{
															"nativeSrc": "1475:26:5",
															"nodeType": "YulAssignment",
															"src": "1475:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1487:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1487:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1498:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1483:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:5"
																},
																"nativeSrc": "1483:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1483:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1475:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1475:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1517:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1532:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1540:42:5",
																				"nodeType": "YulLiteral",
																				"src": "1540:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1528:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1528:3:5"
																		},
																		"nativeSrc": "1528:55:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1528:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1510:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:5"
																},
																"nativeSrc": "1510:74:5",
																"nodeType": "YulFunctionCall",
																"src": "1510:74:5"
															},
															"nativeSrc": "1510:74:5",
															"nodeType": "YulExpressionStatement",
															"src": "1510:74:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1364:226:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1434:9:5",
														"nodeType": "YulTypedName",
														"src": "1434:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1445:6:5",
														"nodeType": "YulTypedName",
														"src": "1445:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1456:4:5",
														"nodeType": "YulTypedName",
														"src": "1456:4:5",
														"type": ""
													}
												],
												"src": "1364:226:5"
											},
											{
												"body": {
													"nativeSrc": "1644:147:5",
													"nodeType": "YulBlock",
													"src": "1644:147:5",
													"statements": [
														{
															"nativeSrc": "1654:29:5",
															"nodeType": "YulAssignment",
															"src": "1654:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1676:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1676:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1663:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1663:12:5"
																},
																"nativeSrc": "1663:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1663:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1654:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1654:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1769:16:5",
																"nodeType": "YulBlock",
																"src": "1769:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1778:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1778:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1781:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1781:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1771:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1771:6:5"
																			},
																			"nativeSrc": "1771:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1771:12:5"
																		},
																		"nativeSrc": "1771:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1771:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1705:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1705:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1716:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1716:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1723:42:5",
																						"nodeType": "YulLiteral",
																						"src": "1723:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1712:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1712:3:5"
																				},
																				"nativeSrc": "1712:54:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1712:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1702:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1702:2:5"
																		},
																		"nativeSrc": "1702:65:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1702:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1695:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:5"
																},
																"nativeSrc": "1695:73:5",
																"nodeType": "YulFunctionCall",
																"src": "1695:73:5"
															},
															"nativeSrc": "1692:93:5",
															"nodeType": "YulIf",
															"src": "1692:93:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1595:196:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1623:6:5",
														"nodeType": "YulTypedName",
														"src": "1623:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1634:5:5",
														"nodeType": "YulTypedName",
														"src": "1634:5:5",
														"type": ""
													}
												],
												"src": "1595:196:5"
											},
											{
												"body": {
													"nativeSrc": "1883:167:5",
													"nodeType": "YulBlock",
													"src": "1883:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1929:16:5",
																"nodeType": "YulBlock",
																"src": "1929:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1938:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1938:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1941:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1941:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1931:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1931:6:5"
																			},
																			"nativeSrc": "1931:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1931:12:5"
																		},
																		"nativeSrc": "1931:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1931:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1904:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1904:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1913:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1913:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1900:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1900:3:5"
																		},
																		"nativeSrc": "1900:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1925:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1925:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1896:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1896:3:5"
																},
																"nativeSrc": "1896:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1896:32:5"
															},
															"nativeSrc": "1893:52:5",
															"nodeType": "YulIf",
															"src": "1893:52:5"
														},
														{
															"nativeSrc": "1954:39:5",
															"nodeType": "YulAssignment",
															"src": "1954:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1964:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1964:18:5"
																},
																"nativeSrc": "1964:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1964:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1954:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1954:6:5"
																}
															]
														},
														{
															"nativeSrc": "2002:42:5",
															"nodeType": "YulAssignment",
															"src": "2002:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2029:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2029:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2040:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2040:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2025:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2025:3:5"
																		},
																		"nativeSrc": "2025:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2025:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2012:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2012:12:5"
																},
																"nativeSrc": "2012:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2012:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2002:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1796:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1841:9:5",
														"nodeType": "YulTypedName",
														"src": "1841:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1852:7:5",
														"nodeType": "YulTypedName",
														"src": "1852:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1864:6:5",
														"nodeType": "YulTypedName",
														"src": "1864:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1872:6:5",
														"nodeType": "YulTypedName",
														"src": "1872:6:5",
														"type": ""
													}
												],
												"src": "1796:254:5"
											},
											{
												"body": {
													"nativeSrc": "2156:76:5",
													"nodeType": "YulBlock",
													"src": "2156:76:5",
													"statements": [
														{
															"nativeSrc": "2166:26:5",
															"nodeType": "YulAssignment",
															"src": "2166:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2178:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2178:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2189:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2189:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2174:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:5"
																},
																"nativeSrc": "2174:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2174:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2166:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2166:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2208:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2208:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2219:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2219:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2201:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:5"
																},
																"nativeSrc": "2201:25:5",
																"nodeType": "YulFunctionCall",
																"src": "2201:25:5"
															},
															"nativeSrc": "2201:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "2201:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2055:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2125:9:5",
														"nodeType": "YulTypedName",
														"src": "2125:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2136:6:5",
														"nodeType": "YulTypedName",
														"src": "2136:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2147:4:5",
														"nodeType": "YulTypedName",
														"src": "2147:4:5",
														"type": ""
													}
												],
												"src": "2055:177:5"
											},
											{
												"body": {
													"nativeSrc": "2341:224:5",
													"nodeType": "YulBlock",
													"src": "2341:224:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2387:16:5",
																"nodeType": "YulBlock",
																"src": "2387:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2396:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2396:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2399:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2399:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2389:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2389:6:5"
																			},
																			"nativeSrc": "2389:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2389:12:5"
																		},
																		"nativeSrc": "2389:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2389:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2362:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2362:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2371:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2371:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2358:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2358:3:5"
																		},
																		"nativeSrc": "2358:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2358:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2383:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2383:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2354:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2354:3:5"
																},
																"nativeSrc": "2354:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2354:32:5"
															},
															"nativeSrc": "2351:52:5",
															"nodeType": "YulIf",
															"src": "2351:52:5"
														},
														{
															"nativeSrc": "2412:39:5",
															"nodeType": "YulAssignment",
															"src": "2412:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2441:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2441:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2422:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2422:18:5"
																},
																"nativeSrc": "2422:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2422:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2412:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2412:6:5"
																}
															]
														},
														{
															"nativeSrc": "2460:48:5",
															"nodeType": "YulAssignment",
															"src": "2460:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2493:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2493:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2504:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2504:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2489:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2489:3:5"
																		},
																		"nativeSrc": "2489:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2489:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2470:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2470:18:5"
																},
																"nativeSrc": "2470:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2470:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2460:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2460:6:5"
																}
															]
														},
														{
															"nativeSrc": "2517:42:5",
															"nodeType": "YulAssignment",
															"src": "2517:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2544:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2555:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2555:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2540:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:5"
																		},
																		"nativeSrc": "2540:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2540:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2527:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2527:12:5"
																},
																"nativeSrc": "2527:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2527:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2517:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2237:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2291:9:5",
														"nodeType": "YulTypedName",
														"src": "2291:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2302:7:5",
														"nodeType": "YulTypedName",
														"src": "2302:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2314:6:5",
														"nodeType": "YulTypedName",
														"src": "2314:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2322:6:5",
														"nodeType": "YulTypedName",
														"src": "2322:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2330:6:5",
														"nodeType": "YulTypedName",
														"src": "2330:6:5",
														"type": ""
													}
												],
												"src": "2237:328:5"
											},
											{
												"body": {
													"nativeSrc": "2640:116:5",
													"nodeType": "YulBlock",
													"src": "2640:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2686:16:5",
																"nodeType": "YulBlock",
																"src": "2686:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2695:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2695:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2698:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2698:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2688:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2688:6:5"
																			},
																			"nativeSrc": "2688:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2688:12:5"
																		},
																		"nativeSrc": "2688:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2688:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2661:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2661:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2670:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2670:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2657:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2657:3:5"
																		},
																		"nativeSrc": "2657:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2682:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2653:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2653:3:5"
																},
																"nativeSrc": "2653:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2653:32:5"
															},
															"nativeSrc": "2650:52:5",
															"nodeType": "YulIf",
															"src": "2650:52:5"
														},
														{
															"nativeSrc": "2711:39:5",
															"nodeType": "YulAssignment",
															"src": "2711:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2740:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2740:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2721:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2721:18:5"
																},
																"nativeSrc": "2721:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2721:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2711:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2570:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2606:9:5",
														"nodeType": "YulTypedName",
														"src": "2606:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2617:7:5",
														"nodeType": "YulTypedName",
														"src": "2617:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2629:6:5",
														"nodeType": "YulTypedName",
														"src": "2629:6:5",
														"type": ""
													}
												],
												"src": "2570:186:5"
											},
											{
												"body": {
													"nativeSrc": "2845:263:5",
													"nodeType": "YulBlock",
													"src": "2845:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2891:16:5",
																"nodeType": "YulBlock",
																"src": "2891:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2900:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2900:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2903:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2903:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2893:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2893:6:5"
																			},
																			"nativeSrc": "2893:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2893:12:5"
																		},
																		"nativeSrc": "2893:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2893:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2866:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2866:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2875:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2875:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2862:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2862:3:5"
																		},
																		"nativeSrc": "2862:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2862:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2887:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2858:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:5"
																},
																"nativeSrc": "2858:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2858:32:5"
															},
															"nativeSrc": "2855:52:5",
															"nodeType": "YulIf",
															"src": "2855:52:5"
														},
														{
															"nativeSrc": "2916:39:5",
															"nodeType": "YulAssignment",
															"src": "2916:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2945:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2945:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2926:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2926:18:5"
																},
																"nativeSrc": "2926:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2926:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2916:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:5"
																}
															]
														},
														{
															"nativeSrc": "2964:45:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2964:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2994:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3005:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3005:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2990:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:5"
																		},
																		"nativeSrc": "2990:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2990:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2977:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2977:12:5"
																},
																"nativeSrc": "2977:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2977:32:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2968:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2968:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3062:16:5",
																"nodeType": "YulBlock",
																"src": "3062:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3071:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3071:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3074:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3074:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3064:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3064:6:5"
																			},
																			"nativeSrc": "3064:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3064:12:5"
																		},
																		"nativeSrc": "3064:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3064:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3031:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3031:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3052:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3052:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3045:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3045:6:5"
																						},
																						"nativeSrc": "3045:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3045:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3038:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3038:6:5"
																				},
																				"nativeSrc": "3038:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3038:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3028:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3028:2:5"
																		},
																		"nativeSrc": "3028:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3028:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3021:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3021:6:5"
																},
																"nativeSrc": "3021:40:5",
																"nodeType": "YulFunctionCall",
																"src": "3021:40:5"
															},
															"nativeSrc": "3018:60:5",
															"nodeType": "YulIf",
															"src": "3018:60:5"
														},
														{
															"nativeSrc": "3087:15:5",
															"nodeType": "YulAssignment",
															"src": "3087:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "3097:5:5",
																"nodeType": "YulIdentifier",
																"src": "3097:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3087:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2761:347:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2803:9:5",
														"nodeType": "YulTypedName",
														"src": "2803:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2814:7:5",
														"nodeType": "YulTypedName",
														"src": "2814:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2826:6:5",
														"nodeType": "YulTypedName",
														"src": "2826:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2834:6:5",
														"nodeType": "YulTypedName",
														"src": "2834:6:5",
														"type": ""
													}
												],
												"src": "2761:347:5"
											},
											{
												"body": {
													"nativeSrc": "3145:152:5",
													"nodeType": "YulBlock",
													"src": "3145:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3162:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3162:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3165:77:5",
																		"nodeType": "YulLiteral",
																		"src": "3165:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3155:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3155:6:5"
																},
																"nativeSrc": "3155:88:5",
																"nodeType": "YulFunctionCall",
																"src": "3155:88:5"
															},
															"nativeSrc": "3155:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "3155:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3259:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3259:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3262:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3262:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3252:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3252:6:5"
																},
																"nativeSrc": "3252:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3252:15:5"
															},
															"nativeSrc": "3252:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3252:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3283:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3283:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3286:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3286:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3276:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:5"
																},
																"nativeSrc": "3276:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3276:15:5"
															},
															"nativeSrc": "3276:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3276:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3113:184:5",
												"nodeType": "YulFunctionDefinition",
												"src": "3113:184:5"
											},
											{
												"body": {
													"nativeSrc": "3432:1008:5",
													"nodeType": "YulBlock",
													"src": "3432:1008:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3479:16:5",
																"nodeType": "YulBlock",
																"src": "3479:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3488:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3488:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3491:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3491:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3481:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3481:6:5"
																			},
																			"nativeSrc": "3481:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3481:12:5"
																		},
																		"nativeSrc": "3481:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3481:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3453:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3453:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3462:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3462:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3449:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3449:3:5"
																		},
																		"nativeSrc": "3449:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3449:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3474:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3474:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3445:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3445:3:5"
																},
																"nativeSrc": "3445:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3445:33:5"
															},
															"nativeSrc": "3442:53:5",
															"nodeType": "YulIf",
															"src": "3442:53:5"
														},
														{
															"nativeSrc": "3504:39:5",
															"nodeType": "YulAssignment",
															"src": "3504:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3533:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3533:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3514:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3514:18:5"
																},
																"nativeSrc": "3514:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3514:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3504:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:5"
																}
															]
														},
														{
															"nativeSrc": "3552:48:5",
															"nodeType": "YulAssignment",
															"src": "3552:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3585:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3585:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3596:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3596:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3581:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3581:3:5"
																		},
																		"nativeSrc": "3581:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3581:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3562:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3562:18:5"
																},
																"nativeSrc": "3562:38:5",
																"nodeType": "YulFunctionCall",
																"src": "3562:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3552:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3552:6:5"
																}
															]
														},
														{
															"nativeSrc": "3609:42:5",
															"nodeType": "YulAssignment",
															"src": "3609:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3636:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3636:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3647:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3647:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3632:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3632:3:5"
																		},
																		"nativeSrc": "3632:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3632:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3619:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3619:12:5"
																},
																"nativeSrc": "3619:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3619:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3609:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:5"
																}
															]
														},
														{
															"nativeSrc": "3660:46:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3660:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3691:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3691:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3702:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3702:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3687:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:5"
																		},
																		"nativeSrc": "3687:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3687:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3674:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3674:12:5"
																},
																"nativeSrc": "3674:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3674:32:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3664:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3664:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3715:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3715:28:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3725:18:5",
																"nodeType": "YulLiteral",
																"src": "3725:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3719:2:5",
																	"nodeType": "YulTypedName",
																	"src": "3719:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3770:16:5",
																"nodeType": "YulBlock",
																"src": "3770:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3779:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3779:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3782:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3782:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3772:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3772:6:5"
																			},
																			"nativeSrc": "3772:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3772:12:5"
																		},
																		"nativeSrc": "3772:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3772:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3758:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3766:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3766:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3755:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3755:2:5"
																},
																"nativeSrc": "3755:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3755:14:5"
															},
															"nativeSrc": "3752:34:5",
															"nodeType": "YulIf",
															"src": "3752:34:5"
														},
														{
															"nativeSrc": "3795:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3795:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3809:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3809:9:5"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3820:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3820:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3805:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3805:3:5"
																},
																"nativeSrc": "3805:22:5",
																"nodeType": "YulFunctionCall",
																"src": "3805:22:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3799:2:5",
																	"nodeType": "YulTypedName",
																	"src": "3799:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3875:16:5",
																"nodeType": "YulBlock",
																"src": "3875:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3884:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3884:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3887:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3887:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3877:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3877:6:5"
																			},
																			"nativeSrc": "3877:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3877:12:5"
																		},
																		"nativeSrc": "3877:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3877:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3854:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3854:2:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3858:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3858:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3850:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3850:3:5"
																				},
																				"nativeSrc": "3850:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3850:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3865:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3865:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3846:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3846:3:5"
																		},
																		"nativeSrc": "3846:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3839:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3839:6:5"
																},
																"nativeSrc": "3839:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3839:35:5"
															},
															"nativeSrc": "3836:55:5",
															"nodeType": "YulIf",
															"src": "3836:55:5"
														},
														{
															"nativeSrc": "3900:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3900:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3923:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3923:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3910:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3910:12:5"
																},
																"nativeSrc": "3910:16:5",
																"nodeType": "YulFunctionCall",
																"src": "3910:16:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3904:2:5",
																	"nodeType": "YulTypedName",
																	"src": "3904:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3949:22:5",
																"nodeType": "YulBlock",
																"src": "3949:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3951:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "3951:16:5"
																			},
																			"nativeSrc": "3951:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3951:18:5"
																		},
																		"nativeSrc": "3951:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3951:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "3941:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3941:2:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3945:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3945:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3938:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3938:2:5"
																},
																"nativeSrc": "3938:10:5",
																"nodeType": "YulFunctionCall",
																"src": "3938:10:5"
															},
															"nativeSrc": "3935:36:5",
															"nodeType": "YulIf",
															"src": "3935:36:5"
														},
														{
															"nativeSrc": "3980:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3980:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3994:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3990:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3990:3:5"
																},
																"nativeSrc": "3990:7:5",
																"nodeType": "YulFunctionCall",
																"src": "3990:7:5"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "3984:2:5",
																	"nodeType": "YulTypedName",
																	"src": "3984:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4006:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4006:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4026:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4026:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4020:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4020:5:5"
																},
																"nativeSrc": "4020:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4020:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4010:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4010:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4038:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4038:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4060:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4060:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4084:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "4084:2:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4088:4:5",
																										"nodeType": "YulLiteral",
																										"src": "4088:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4080:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "4080:3:5"
																								},
																								"nativeSrc": "4080:13:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4080:13:5"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4095:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "4095:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4076:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4076:3:5"
																						},
																						"nativeSrc": "4076:22:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4076:22:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4100:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4100:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4072:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4072:3:5"
																				},
																				"nativeSrc": "4072:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4072:31:5"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4105:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4105:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4068:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:5"
																		},
																		"nativeSrc": "4068:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4068:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4056:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:5"
																},
																"nativeSrc": "4056:53:5",
																"nodeType": "YulFunctionCall",
																"src": "4056:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4042:10:5",
																	"nodeType": "YulTypedName",
																	"src": "4042:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4168:22:5",
																"nodeType": "YulBlock",
																"src": "4168:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4170:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4170:16:5"
																			},
																			"nativeSrc": "4170:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4170:18:5"
																		},
																		"nativeSrc": "4170:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4170:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4127:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "4127:10:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4139:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4139:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4124:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4124:2:5"
																		},
																		"nativeSrc": "4124:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4124:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4147:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "4147:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4159:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4159:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4144:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4144:2:5"
																		},
																		"nativeSrc": "4144:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4121:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4121:2:5"
																},
																"nativeSrc": "4121:46:5",
																"nodeType": "YulFunctionCall",
																"src": "4121:46:5"
															},
															"nativeSrc": "4118:72:5",
															"nodeType": "YulIf",
															"src": "4118:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4206:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4206:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4210:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "4210:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4199:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:5"
																},
																"nativeSrc": "4199:22:5",
																"nodeType": "YulFunctionCall",
																"src": "4199:22:5"
															},
															"nativeSrc": "4199:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "4199:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4237:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4237:6:5"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4245:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4245:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4230:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:5"
																},
																"nativeSrc": "4230:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4230:18:5"
															},
															"nativeSrc": "4230:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "4230:18:5"
														},
														{
															"body": {
																"nativeSrc": "4294:16:5",
																"nodeType": "YulBlock",
																"src": "4294:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4303:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4303:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4306:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4306:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4296:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4296:6:5"
																			},
																			"nativeSrc": "4296:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4296:12:5"
																		},
																		"nativeSrc": "4296:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4296:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4271:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4271:2:5"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4275:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4275:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4267:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4267:3:5"
																				},
																				"nativeSrc": "4267:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4267:11:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4280:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4280:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4263:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:5"
																		},
																		"nativeSrc": "4263:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4263:20:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4285:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "4285:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4260:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4260:2:5"
																},
																"nativeSrc": "4260:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4260:33:5"
															},
															"nativeSrc": "4257:53:5",
															"nodeType": "YulIf",
															"src": "4257:53:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4336:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4336:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4344:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4344:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4332:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:5"
																		},
																		"nativeSrc": "4332:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4332:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4353:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "4353:2:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4357:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4357:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:5"
																		},
																		"nativeSrc": "4349:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:11:5"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4362:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4362:2:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4319:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4319:12:5"
																},
																"nativeSrc": "4319:46:5",
																"nodeType": "YulFunctionCall",
																"src": "4319:46:5"
															},
															"nativeSrc": "4319:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "4319:46:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4389:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4389:6:5"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4397:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4397:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4385:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4385:3:5"
																				},
																				"nativeSrc": "4385:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4385:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4402:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4402:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4381:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4381:3:5"
																		},
																		"nativeSrc": "4381:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4381:24:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4407:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4407:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4374:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:5"
																},
																"nativeSrc": "4374:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4374:35:5"
															},
															"nativeSrc": "4374:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "4374:35:5"
														},
														{
															"nativeSrc": "4418:16:5",
															"nodeType": "YulAssignment",
															"src": "4418:16:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4428:6:5",
																"nodeType": "YulIdentifier",
																"src": "4428:6:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4418:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3302:1138:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3374:9:5",
														"nodeType": "YulTypedName",
														"src": "3374:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3385:7:5",
														"nodeType": "YulTypedName",
														"src": "3385:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3397:6:5",
														"nodeType": "YulTypedName",
														"src": "3397:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3405:6:5",
														"nodeType": "YulTypedName",
														"src": "3405:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3413:6:5",
														"nodeType": "YulTypedName",
														"src": "3413:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3421:6:5",
														"nodeType": "YulTypedName",
														"src": "3421:6:5",
														"type": ""
													}
												],
												"src": "3302:1138:5"
											},
											{
												"body": {
													"nativeSrc": "4532:173:5",
													"nodeType": "YulBlock",
													"src": "4532:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4578:16:5",
																"nodeType": "YulBlock",
																"src": "4578:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4587:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4590:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4580:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:5"
																			},
																			"nativeSrc": "4580:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:5"
																		},
																		"nativeSrc": "4580:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4553:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4553:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4562:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4562:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4549:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:5"
																		},
																		"nativeSrc": "4549:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4549:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4574:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4574:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4545:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4545:3:5"
																},
																"nativeSrc": "4545:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4545:32:5"
															},
															"nativeSrc": "4542:52:5",
															"nodeType": "YulIf",
															"src": "4542:52:5"
														},
														{
															"nativeSrc": "4603:39:5",
															"nodeType": "YulAssignment",
															"src": "4603:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4632:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4632:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4613:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4613:18:5"
																},
																"nativeSrc": "4613:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4613:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4603:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:5"
																}
															]
														},
														{
															"nativeSrc": "4651:48:5",
															"nodeType": "YulAssignment",
															"src": "4651:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4684:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4684:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4695:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4695:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4680:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4680:3:5"
																		},
																		"nativeSrc": "4680:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4680:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4661:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4661:18:5"
																},
																"nativeSrc": "4661:38:5",
																"nodeType": "YulFunctionCall",
																"src": "4661:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4651:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4651:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4445:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4490:9:5",
														"nodeType": "YulTypedName",
														"src": "4490:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4501:7:5",
														"nodeType": "YulTypedName",
														"src": "4501:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4513:6:5",
														"nodeType": "YulTypedName",
														"src": "4513:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4521:6:5",
														"nodeType": "YulTypedName",
														"src": "4521:6:5",
														"type": ""
													}
												],
												"src": "4445:260:5"
											},
											{
												"body": {
													"nativeSrc": "4765:382:5",
													"nodeType": "YulBlock",
													"src": "4765:382:5",
													"statements": [
														{
															"nativeSrc": "4775:22:5",
															"nodeType": "YulAssignment",
															"src": "4775:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4789:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4789:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4792:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4792:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4785:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4785:3:5"
																},
																"nativeSrc": "4785:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4785:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4775:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4775:6:5"
																}
															]
														},
														{
															"nativeSrc": "4806:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4806:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4836:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4836:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4842:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4832:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4832:3:5"
																},
																"nativeSrc": "4832:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4832:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4810:18:5",
																	"nodeType": "YulTypedName",
																	"src": "4810:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4883:31:5",
																"nodeType": "YulBlock",
																"src": "4883:31:5",
																"statements": [
																	{
																		"nativeSrc": "4885:27:5",
																		"nodeType": "YulAssignment",
																		"src": "4885:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4899:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4899:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4907:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4907:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4895:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4895:3:5"
																			},
																			"nativeSrc": "4895:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4895:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4885:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4885:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4863:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "4863:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4856:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4856:6:5"
																},
																"nativeSrc": "4856:26:5",
																"nodeType": "YulFunctionCall",
																"src": "4856:26:5"
															},
															"nativeSrc": "4853:61:5",
															"nodeType": "YulIf",
															"src": "4853:61:5"
														},
														{
															"body": {
																"nativeSrc": "4973:168:5",
																"nodeType": "YulBlock",
																"src": "4973:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4994:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4994:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4997:77:5",
																					"nodeType": "YulLiteral",
																					"src": "4997:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4987:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4987:6:5"
																			},
																			"nativeSrc": "4987:88:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4987:88:5"
																		},
																		"nativeSrc": "4987:88:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4987:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5095:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5095:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5098:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5098:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5088:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5088:6:5"
																			},
																			"nativeSrc": "5088:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5088:15:5"
																		},
																		"nativeSrc": "5088:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5088:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5123:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5123:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5126:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5126:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5116:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5116:6:5"
																			},
																			"nativeSrc": "5116:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5116:15:5"
																		},
																		"nativeSrc": "5116:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5116:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4929:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4952:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4952:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4960:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4960:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4949:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4949:2:5"
																		},
																		"nativeSrc": "4949:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4949:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4926:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4926:2:5"
																},
																"nativeSrc": "4926:38:5",
																"nodeType": "YulFunctionCall",
																"src": "4926:38:5"
															},
															"nativeSrc": "4923:218:5",
															"nodeType": "YulIf",
															"src": "4923:218:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4710:437:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4745:4:5",
														"nodeType": "YulTypedName",
														"src": "4745:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4754:6:5",
														"nodeType": "YulTypedName",
														"src": "4754:6:5",
														"type": ""
													}
												],
												"src": "4710:437:5"
											},
											{
												"body": {
													"nativeSrc": "5202:162:5",
													"nodeType": "YulBlock",
													"src": "5202:162:5",
													"statements": [
														{
															"nativeSrc": "5212:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5212:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5232:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5232:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5226:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5226:5:5"
																},
																"nativeSrc": "5226:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5226:12:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5216:6:5",
																	"nodeType": "YulTypedName",
																	"src": "5216:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5253:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5253:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5262:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5262:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5269:4:5",
																				"nodeType": "YulLiteral",
																				"src": "5269:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5258:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:5"
																		},
																		"nativeSrc": "5258:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5258:16:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5276:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5276:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5247:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5247:5:5"
																},
																"nativeSrc": "5247:36:5",
																"nodeType": "YulFunctionCall",
																"src": "5247:36:5"
															},
															"nativeSrc": "5247:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "5247:36:5"
														},
														{
															"nativeSrc": "5292:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5292:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5306:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5306:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5311:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5311:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5302:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5302:3:5"
																},
																"nativeSrc": "5302:16:5",
																"nodeType": "YulFunctionCall",
																"src": "5302:16:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5296:2:5",
																	"nodeType": "YulTypedName",
																	"src": "5296:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "5334:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "5334:2:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5338:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5338:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5327:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5327:6:5"
																},
																"nativeSrc": "5327:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5327:13:5"
															},
															"nativeSrc": "5327:13:5",
															"nodeType": "YulExpressionStatement",
															"src": "5327:13:5"
														},
														{
															"nativeSrc": "5349:9:5",
															"nodeType": "YulAssignment",
															"src": "5349:9:5",
															"value": {
																"name": "_1",
																"nativeSrc": "5356:2:5",
																"nodeType": "YulIdentifier",
																"src": "5356:2:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5349:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5349:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "5152:212:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5179:5:5",
														"nodeType": "YulTypedName",
														"src": "5179:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5186:3:5",
														"nodeType": "YulTypedName",
														"src": "5186:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5194:3:5",
														"nodeType": "YulTypedName",
														"src": "5194:3:5",
														"type": ""
													}
												],
												"src": "5152:212:5"
											},
											{
												"body": {
													"nativeSrc": "5556:80:5",
													"nodeType": "YulBlock",
													"src": "5556:80:5",
													"statements": [
														{
															"nativeSrc": "5566:64:5",
															"nodeType": "YulAssignment",
															"src": "5566:64:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5591:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5617:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5617:6:5"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "5625:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5625:3:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "5599:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5599:17:5"
																		},
																		"nativeSrc": "5599:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5599:30:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "5573:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5573:17:5"
																},
																"nativeSrc": "5573:57:5",
																"nodeType": "YulFunctionCall",
																"src": "5573:57:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5566:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5566:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5369:267:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5524:3:5",
														"nodeType": "YulTypedName",
														"src": "5524:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5529:6:5",
														"nodeType": "YulTypedName",
														"src": "5529:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5537:6:5",
														"nodeType": "YulTypedName",
														"src": "5537:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5548:3:5",
														"nodeType": "YulTypedName",
														"src": "5548:3:5",
														"type": ""
													}
												],
												"src": "5369:267:5"
											},
											{
												"body": {
													"nativeSrc": "5688:243:5",
													"nodeType": "YulBlock",
													"src": "5688:243:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5723:168:5",
																"nodeType": "YulBlock",
																"src": "5723:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5744:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5744:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5747:77:5",
																					"nodeType": "YulLiteral",
																					"src": "5747:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5737:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5737:6:5"
																			},
																			"nativeSrc": "5737:88:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5737:88:5"
																		},
																		"nativeSrc": "5737:88:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5737:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5845:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5845:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5848:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5848:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5838:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5838:6:5"
																			},
																			"nativeSrc": "5838:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5838:15:5"
																		},
																		"nativeSrc": "5838:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5838:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5873:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5873:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5876:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5876:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5866:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5866:6:5"
																			},
																			"nativeSrc": "5866:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5866:15:5"
																		},
																		"nativeSrc": "5866:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5866:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5708:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5708:5:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5701:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5701:6:5"
																},
																"nativeSrc": "5701:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5701:13:5"
															},
															"nativeSrc": "5698:193:5",
															"nodeType": "YulIf",
															"src": "5698:193:5"
														},
														{
															"nativeSrc": "5900:25:5",
															"nodeType": "YulAssignment",
															"src": "5900:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5911:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5911:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5922:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5922:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5918:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5918:3:5"
																		},
																		"nativeSrc": "5918:6:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5918:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5907:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5907:3:5"
																},
																"nativeSrc": "5907:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5907:18:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5900:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5900:3:5"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "5641:290:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5670:5:5",
														"nodeType": "YulTypedName",
														"src": "5670:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5680:3:5",
														"nodeType": "YulTypedName",
														"src": "5680:3:5",
														"type": ""
													}
												],
												"src": "5641:290:5"
											},
											{
												"body": {
													"nativeSrc": "6139:320:5",
													"nodeType": "YulBlock",
													"src": "6139:320:5",
													"statements": [
														{
															"nativeSrc": "6149:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6149:52:5",
															"value": {
																"kind": "number",
																"nativeSrc": "6159:42:5",
																"nodeType": "YulLiteral",
																"src": "6159:42:5",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6153:2:5",
																	"nodeType": "YulTypedName",
																	"src": "6153:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6217:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6217:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6232:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6232:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6240:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "6240:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6228:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:5"
																		},
																		"nativeSrc": "6228:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6228:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6210:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6210:6:5"
																},
																"nativeSrc": "6210:34:5",
																"nodeType": "YulFunctionCall",
																"src": "6210:34:5"
															},
															"nativeSrc": "6210:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "6210:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6264:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6264:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6275:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6275:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6260:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6260:3:5"
																		},
																		"nativeSrc": "6260:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6260:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6284:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6284:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6292:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "6292:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6280:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6280:3:5"
																		},
																		"nativeSrc": "6280:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6280:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6253:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6253:6:5"
																},
																"nativeSrc": "6253:43:5",
																"nodeType": "YulFunctionCall",
																"src": "6253:43:5"
															},
															"nativeSrc": "6253:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "6253:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6316:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6316:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6327:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6327:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6312:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6312:3:5"
																		},
																		"nativeSrc": "6312:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6312:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6332:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6332:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6305:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6305:6:5"
																},
																"nativeSrc": "6305:34:5",
																"nodeType": "YulFunctionCall",
																"src": "6305:34:5"
															},
															"nativeSrc": "6305:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "6305:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6359:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6359:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6370:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6370:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6355:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6355:3:5"
																		},
																		"nativeSrc": "6355:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6375:3:5",
																		"nodeType": "YulLiteral",
																		"src": "6375:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6348:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:5"
																},
																"nativeSrc": "6348:31:5",
																"nodeType": "YulFunctionCall",
																"src": "6348:31:5"
															},
															"nativeSrc": "6348:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "6348:31:5"
														},
														{
															"nativeSrc": "6388:65:5",
															"nodeType": "YulAssignment",
															"src": "6388:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6425:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6425:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6437:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6437:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6448:3:5",
																				"nodeType": "YulLiteral",
																				"src": "6448:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6433:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6433:3:5"
																		},
																		"nativeSrc": "6433:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6433:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "6396:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "6396:28:5"
																},
																"nativeSrc": "6396:57:5",
																"nodeType": "YulFunctionCall",
																"src": "6396:57:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6388:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6388:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "5936:523:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6084:9:5",
														"nodeType": "YulTypedName",
														"src": "6084:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6095:6:5",
														"nodeType": "YulTypedName",
														"src": "6095:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6103:6:5",
														"nodeType": "YulTypedName",
														"src": "6103:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6111:6:5",
														"nodeType": "YulTypedName",
														"src": "6111:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6119:6:5",
														"nodeType": "YulTypedName",
														"src": "6119:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6130:4:5",
														"nodeType": "YulTypedName",
														"src": "6130:4:5",
														"type": ""
													}
												],
												"src": "5936:523:5"
											},
											{
												"body": {
													"nativeSrc": "6544:169:5",
													"nodeType": "YulBlock",
													"src": "6544:169:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6590:16:5",
																"nodeType": "YulBlock",
																"src": "6590:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6599:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6599:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6602:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6602:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6592:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6592:6:5"
																			},
																			"nativeSrc": "6592:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6592:12:5"
																		},
																		"nativeSrc": "6592:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6592:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6574:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6574:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6561:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6561:3:5"
																		},
																		"nativeSrc": "6561:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6561:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6586:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6586:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6557:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6557:3:5"
																},
																"nativeSrc": "6557:32:5",
																"nodeType": "YulFunctionCall",
																"src": "6557:32:5"
															},
															"nativeSrc": "6554:52:5",
															"nodeType": "YulIf",
															"src": "6554:52:5"
														},
														{
															"nativeSrc": "6615:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6615:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6634:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6634:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6628:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6628:5:5"
																},
																"nativeSrc": "6628:16:5",
																"nodeType": "YulFunctionCall",
																"src": "6628:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6619:5:5",
																	"nodeType": "YulTypedName",
																	"src": "6619:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6677:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6677:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "6653:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "6653:23:5"
																},
																"nativeSrc": "6653:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6653:30:5"
															},
															"nativeSrc": "6653:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "6653:30:5"
														},
														{
															"nativeSrc": "6692:15:5",
															"nodeType": "YulAssignment",
															"src": "6692:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "6702:5:5",
																"nodeType": "YulIdentifier",
																"src": "6702:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6692:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6692:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "6464:249:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6510:9:5",
														"nodeType": "YulTypedName",
														"src": "6510:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6521:7:5",
														"nodeType": "YulTypedName",
														"src": "6521:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6533:6:5",
														"nodeType": "YulTypedName",
														"src": "6533:6:5",
														"type": ""
													}
												],
												"src": "6464:249:5"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100d9575f3560e01c80636352211e1161007c578063a22cb46511610057578063a22cb46514610217578063b88d4fde14610236578063c87b56dd14610249578063e985e9c514610268575f80fd5b80636352211e146101c557806370a08231146101e457806395d89b4114610203575f80fd5b8063095ea7b3116100b7578063095ea7b31461016957806318160ddd1461017e57806323b872dd1461019f57806342842e0e146101b2575f80fd5b806301ffc9a7146100dd57806306fdde0314610111578063081812fc14610132575b5f80fd5b3480156100e8575f80fd5b506100fc6100f7366004610aa6565b6102af565b60405190151581526020015b60405180910390f35b34801561011c575f80fd5b5061012561034b565b6040516101089190610aef565b34801561013d575f80fd5b5061015161014c366004610b01565b6103db565b6040516001600160a01b039091168152602001610108565b61017c610177366004610b2e565b61042d565b005b348015610189575f80fd5b506001545f54035b604051908152602001610108565b61017c6101ad366004610b56565b61043d565b61017c6101c0366004610b56565b6105e3565b3480156101d0575f80fd5b506101516101df366004610b01565b610602565b3480156101ef575f80fd5b506101916101fe366004610b8f565b61060c565b34801561020e575f80fd5b50610125610669565b348015610222575f80fd5b5061017c610231366004610ba8565b610678565b61017c610244366004610bf5565b6106e3565b348015610254575f80fd5b50610125610263366004610b01565b610724565b348015610273575f80fd5b506100fc610282366004610cca565b6001600160a01b039182165f90815260076020908152604080832093909416825291909152205460ff1690565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061031157507f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b8061034557507f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606002805461035a90610cfb565b80601f016020809104026020016040519081016040528092919081815260200182805461038690610cfb565b80156103d15780601f106103a8576101008083540402835291602001916103d1565b820191905f5260205f20905b8154815290600101906020018083116103b457829003601f168201915b5050505050905090565b5f6103e5826107c1565b610412576104127fcf4700e400000000000000000000000000000000000000000000000000000000610803565b505f908152600660205260409020546001600160a01b031690565b6104398282600161080b565b5050565b5f610447826108dd565b6001600160a01b039485169490915081168414610487576104877fa114810000000000000000000000000000000000000000000000000000000000610803565b5f8281526006602052604090208054338082146001600160a01b038816909114176104e3576104b68633610282565b6104e3576104e37f59c896be00000000000000000000000000000000000000000000000000000000610803565b80156104ed575f82555b6001600160a01b038681165f9081526005602052604080822080545f19019055918716808252919020805460010190554260a01b17600160e11b175f85815260046020526040812091909155600160e11b8416900361057957600184015f818152600460205260408120549003610577575f548114610577575f8181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4805f036105da576105da7fea553b3400000000000000000000000000000000000000000000000000000000610803565b50505050505050565b6105fd83838360405180602001604052805f8152506106e3565b505050565b5f610345826108dd565b5f6001600160a01b038216610644576106447f8f4eb60400000000000000000000000000000000000000000000000000000000610803565b506001600160a01b03165f9081526005602052604090205467ffffffffffffffff1690565b60606003805461035a90610cfb565b335f8181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106ee84848461043d565b6001600160a01b0383163b1561071e5761070a8484848461096c565b61071e5761071e6368d2bf6b60e11b610803565b50505050565b606061072f826107c1565b61075c5761075c7fa14c4b5000000000000000000000000000000000000000000000000000000000610803565b5f61077160408051602081019091525f815290565b905080515f0361078f5760405180602001604052805f8152506107ba565b8061079984610a4b565b6040516020016107aa929190610d4a565b6040516020818303038152906040525b9392505050565b5f80548210156107fe575f5b505f82815260046020526040812054908190036107f4576107ed83610d5e565b92506107cd565b600160e01b161590505b919050565b805f5260045ffd5b5f61081583610602565b905081801561082d5750336001600160a01b03821614155b156108695761083c8133610282565b610869576108697fcfb3b94200000000000000000000000000000000000000000000000000000000610803565b5f8381526006602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b5f81815260046020526040902054805f0361094a575f54821061090a5761090a636f96cda160e11b610803565b5b505f19015f81815260046020526040902054801561090b57600160e01b81165f0361093557919050565b610945636f96cda160e11b610803565b61090b565b600160e01b81165f0361095c57919050565b6107fe636f96cda160e11b610803565b604051630a85bd0160e11b81525f906001600160a01b0385169063150b7a02906109a0903390899088908890600401610d7f565b6020604051808303815f875af19250505080156109da575060408051601f3d908101601f191682019092526109d791810190610dba565b60015b610a2d573d808015610a07576040519150601f19603f3d011682016040523d82523d5f602084013e610a0c565b606091505b5080515f03610a2557610a256368d2bf6b60e11b610803565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b606060a06040510180604052602081039150505f815280825b600183039250600a81066030018353600a900480610a645750819003601f19909101908152919050565b6001600160e01b031981168114610aa3575f80fd5b50565b5f60208284031215610ab6575f80fd5b81356107ba81610a8e565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6107ba6020830184610ac1565b5f60208284031215610b11575f80fd5b5035919050565b80356001600160a01b03811681146107fe575f80fd5b5f8060408385031215610b3f575f80fd5b610b4883610b18565b946020939093013593505050565b5f805f60608486031215610b68575f80fd5b610b7184610b18565b9250610b7f60208501610b18565b9150604084013590509250925092565b5f60208284031215610b9f575f80fd5b6107ba82610b18565b5f8060408385031215610bb9575f80fd5b610bc283610b18565b915060208301358015158114610bd6575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215610c08575f80fd5b610c1185610b18565b9350610c1f60208601610b18565b925060408501359150606085013567ffffffffffffffff80821115610c42575f80fd5b818701915087601f830112610c55575f80fd5b813581811115610c6757610c67610be1565b604051601f8201601f19908116603f01168101908382118183101715610c8f57610c8f610be1565b816040528281528a6020848701011115610ca7575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f8060408385031215610cdb575f80fd5b610ce483610b18565b9150610cf260208401610b18565b90509250929050565b600181811c90821680610d0f57607f821691505b602082108103610d2d57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f81518060208401855e5f93019283525090919050565b5f610a43610d588386610d33565b84610d33565b5f81610d7857634e487b7160e01b5f52601160045260245ffd5b505f190190565b5f6001600160a01b03808716835280861660208401525083604083015260806060830152610db06080830184610ac1565b9695505050505050565b5f60208284031215610dca575f80fd5b81516107ba81610a8e56fea2646970667358221220e17496b2867d8dfcbbf6daeffc9875bcd72a2888c438625453fa68e86c1048d264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x132 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA6 JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x669 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA8 JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x311 JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x345 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x35A SWAP1 PUSH2 0xCFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x386 SWAP1 PUSH2 0xCFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3E5 DUP3 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x412 JUMPI PUSH2 0x412 PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x439 DUP3 DUP3 PUSH1 0x1 PUSH2 0x80B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x447 DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x487 JUMPI PUSH2 0x487 PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x4E3 JUMPI PUSH2 0x4B6 DUP7 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x4E3 JUMPI PUSH2 0x4E3 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x579 JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x577 JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0x577 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP1 PUSH0 SUB PUSH2 0x5DA JUMPI PUSH2 0x5DA PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5FD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x345 DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x644 JUMPI PUSH2 0x644 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x35A SWAP1 PUSH2 0xCFB JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6EE DUP5 DUP5 DUP5 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x71E JUMPI PUSH2 0x70A DUP5 DUP5 DUP5 DUP5 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x71E JUMPI PUSH2 0x71E PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x72F DUP3 PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x75C JUMPI PUSH2 0x75C PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 PUSH2 0x771 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 SUB PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x7BA JUMP JUMPDEST DUP1 PUSH2 0x799 DUP5 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7AA SWAP3 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x7FE JUMPI PUSH0 JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x7F4 JUMPI PUSH2 0x7ED DUP4 PUSH2 0xD5E JUMP JUMPDEST SWAP3 POP PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x815 DUP4 PUSH2 0x602 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x82D JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x869 JUMPI PUSH2 0x83C DUP2 CALLER PUSH2 0x282 JUMP JUMPDEST PUSH2 0x869 JUMPI PUSH2 0x869 PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0x803 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH0 SUB PUSH2 0x94A JUMPI PUSH0 SLOAD DUP3 LT PUSH2 0x90A JUMPI PUSH2 0x90A PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST JUMPDEST POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x90B JUMPI PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x935 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x945 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x95C JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FE PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x9A0 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9DA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9D7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA2D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xA25 JUMPI PUSH2 0xA25 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x803 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xA64 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xAA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7BA DUP2 PUSH2 0xA8E JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x7BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB3F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB48 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB71 DUP5 PUSH2 0xB18 JUMP JUMPDEST SWAP3 POP PUSH2 0xB7F PUSH1 0x20 DUP6 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP3 PUSH2 0xB18 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBC2 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC08 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC11 DUP6 PUSH2 0xB18 JUMP JUMPDEST SWAP4 POP PUSH2 0xC1F PUSH1 0x20 DUP7 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC55 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC67 JUMPI PUSH2 0xC67 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC8F JUMPI PUSH2 0xC8F PUSH2 0xBE1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xCA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCE4 DUP4 PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP PUSH2 0xCF2 PUSH1 0x20 DUP5 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD0F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA43 PUSH2 0xD58 DUP4 DUP7 PUSH2 0xD33 JUMP JUMPDEST DUP5 PUSH2 0xD33 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xD78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xDB0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xAC1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7BA DUP2 PUSH2 0xA8E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH21 0x96B2867D8DFCBBF6DAEFFC9875BCD72A2888C43862 SLOAD MSTORE8 STATICCALL PUSH9 0xE86C1048D264736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "1053:48812:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10689:630;;;;;;;;;;-1:-1:-1;10689:630:1;;;;;:::i;:::-;;:::i;:::-;;;611:14:5;;604:22;586:41;;574:2;559:18;10689:630:1;;;;;;;;11573:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;18636:223::-;;;;;;;;;;-1:-1:-1;18636:223:1;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1528:55:5;;;1510:74;;1498:2;1483:18;18636:223:1;1364:226:5;18364:122:1;;;;;;:::i;:::-;;:::i;:::-;;6890:564;;;;;;;;;;-1:-1:-1;7328:12:1;;6951:14;7312:13;:28;6890:564;;;2201:25:5;;;2189:2;2174:18;6890:564:1;2055:177:5;22796:3447:1;;;;;;:::i;:::-;;:::i;26334:187::-;;;;;;:::i;:::-;;:::i;12934:150::-;;;;;;;;;;-1:-1:-1;12934:150:1;;;;;:::i;:::-;;:::i;8570:239::-;;;;;;;;;;-1:-1:-1;8570:239:1;;;;;:::i;:::-;;:::i;11742:102::-;;;;;;;;;;;;;:::i;19186:231::-;;;;;;;;;;-1:-1:-1;19186:231:1;;;;;:::i;:::-;;:::i;27102:405::-;;;;;;:::i;:::-;;:::i;11945:322::-;;;;;;;;;;-1:-1:-1;11945:322:1;;;;;:::i;:::-;;:::i;19567:162::-;;;;;;;;;;-1:-1:-1;19567:162:1;;;;;:::i;:::-;-1:-1:-1;;;;;19687:25:1;;;19664:4;19687:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;19567:162;10689:630;10774:4;11092:25;-1:-1:-1;;;;;;11092:25:1;;;;:101;;-1:-1:-1;11168:25:1;-1:-1:-1;;;;;;11168:25:1;;;11092:101;:177;;;-1:-1:-1;11244:25:1;-1:-1:-1;;;;;;11244:25:1;;;11092:177;11073:196;10689:630;-1:-1:-1;;10689:630:1:o;11573:98::-;11627:13;11659:5;11652:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11573:98;:::o;18636:223::-;18712:7;18736:16;18744:7;18736;:16::i;:::-;18731:73;;18754:50;18762:41;18754:7;:50::i;:::-;-1:-1:-1;18822:24:1;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;18822:30:1;;18636:223::o;18364:122::-;18452:27;18461:2;18465:7;18474:4;18452:8;:27::i;:::-;18364:122;;:::o;22796:3447::-;22933:27;22963;22982:7;22963:18;:27::i;:::-;-1:-1:-1;;;;;23115:22:1;;;;22933:57;;-1:-1:-1;23173:45:1;;;;23169:95;;23220:44;23228:35;23220:7;:44::i;:::-;23276:27;21929:24;;;:15;:24;;;;;22153:26;;47819:10;21566:30;;;-1:-1:-1;;;;;21263:28:1;;21544:20;;;21541:56;23459:188;;23551:43;23568:4;47819:10;19567:162;:::i;23551:43::-;23546:101;;23596:51;23604:42;23596:7;:51::i;:::-;23790:15;23787:157;;;23928:1;23907:19;23900:30;23787:157;-1:-1:-1;;;;;24316:24:1;;;;;;;:18;:24;;;;;;24314:26;;-1:-1:-1;;24314:26:1;;;24384:22;;;;;;;;;24382:24;;-1:-1:-1;24382:24:1;;;17492:11;17467:23;17463:41;17450:63;-1:-1:-1;;;17450:63:1;24670:26;;;;:17;:26;;;;;:172;;;;-1:-1:-1;;;24959:47:1;;:52;;24955:617;;25063:1;25053:11;;25031:19;25184:30;;;:17;:30;;;;;;:35;;25180:378;;25320:13;;25305:11;:28;25301:239;;25465:30;;;;:17;:30;;;;;:52;;;25301:239;25013:559;24955:617;-1:-1:-1;;;;;25700:20:1;;26071:7;25700:20;26003:4;25946:25;25681:16;;25814:292;26129:8;26141:1;26129:13;26125:58;;26144:39;26152:30;26144:7;:39::i;:::-;22923:3320;;;;22796:3447;;;:::o;26334:187::-;26475:39;26492:4;26498:2;26502:7;26475:39;;;;;;;;;;;;:16;:39::i;:::-;26334:187;;;:::o;12934:150::-;13006:7;13048:27;13067:7;13048:18;:27::i;8570:239::-;8642:7;-1:-1:-1;;;;;8665:19:1;;8661:69;;8686:44;8694:35;8686:7;:44::i;:::-;-1:-1:-1;;;;;;8747:25:1;;;;;:18;:25;;;;;;1518:13;8747:55;;8570:239::o;11742:102::-;11798:13;11830:7;11823:14;;;;;:::i;19186:231::-;47819:10;19280:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;19280:49:1;;;;;;;;;;;;:60;;-1:-1:-1;;19280:60:1;;;;;;;;;;19355:55;;586:41:5;;;19280:49:1;;47819:10;19355:55;;559:18:5;19355:55:1;;;;;;;19186:231;;:::o;27102:405::-;27271:31;27284:4;27290:2;27294:7;27271:12;:31::i;:::-;-1:-1:-1;;;;;27316:14:1;;;:19;27312:189;;27354:56;27385:4;27391:2;27395:7;27404:5;27354:30;:56::i;:::-;27349:152;;27430:56;-1:-1:-1;;;27430:7:1;:56::i;:::-;27102:405;;;;:::o;11945:322::-;12018:13;12048:16;12056:7;12048;:16::i;:::-;12043:68;;12066:45;12074:36;12066:7;:45::i;:::-;12122:21;12146:10;12588:9;;;;;;;;;-1:-1:-1;12588:9:1;;;12512:92;12146:10;12122:34;;12179:7;12173:21;12198:1;12173:26;:87;;;;;;;;;;;;;;;;;12226:7;12235:18;12245:7;12235:9;:18::i;:::-;12209:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12173:87;12166:94;11945:322;-1:-1:-1;;;11945:322:1:o;19978:465::-;20043:11;20231:13;;20221:7;:23;20217:210;;;20264:14;20296:60;-1:-1:-1;20313:26:1;;;;:17;:26;;;;;;;20303:42;;;20296:60;;20347:9;;;:::i;:::-;;;20296:60;;;-1:-1:-1;;;20383:24:1;:29;;-1:-1:-1;20217:210:1;19978:465;;;:::o;49703:160::-;49802:13;49796:4;49789:27;49842:4;49836;49829:18;41333:460;41457:13;41473:16;41481:7;41473;:16::i;:::-;41457:32;;41504:13;:45;;;;-1:-1:-1;47819:10:1;-1:-1:-1;;;;;41521:28:1;;;;41504:45;41500:198;;;41568:44;41585:5;47819:10;19567:162;:::i;41568:44::-;41563:135;;41632:51;41640:42;41632:7;:51::i;:::-;41708:24;;;;:15;:24;;;;;;:35;;;;-1:-1:-1;;;;;41708:35:1;;;;;;;;;41758:28;;41708:24;;41758:28;;;;;;;41447:346;41333:460;;;:::o;14380:2173::-;14528:26;;;;:17;:26;;;;;;14847:6;14857:1;14847:11;14843:1270;;14893:13;;14882:7;:24;14878:77;;14908:47;-1:-1:-1;;;14908:7:1;:47::i;:::-;15502:597;-1:-1:-1;;;15596:9:1;15578:28;;;;:17;:28;;;;;;15650:25;;15502:597;15650:25;-1:-1:-1;;;15701:6:1;:24;15729:1;15701:29;15697:48;;14380:2173;;;:::o;15697:48::-;16033:47;-1:-1:-1;;;16033:7:1;:47::i;:::-;15502:597;;14843:1270;-1:-1:-1;;;16435:6:1;:24;16463:1;16435:29;16431:48;;14380:2173;;;:::o;16431:48::-;16499:47;-1:-1:-1;;;16499:7:1;:47::i;29533:673::-;29711:88;;-1:-1:-1;;;29711:88:1;;29691:4;;-1:-1:-1;;;;;29711:45:1;;;;;:88;;47819:10;;29778:4;;29784:7;;29793:5;;29711:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29711:88:1;;;;;;;;-1:-1:-1;;29711:88:1;;;;;;;;;;;;:::i;:::-;;;29707:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29989:6;:13;30006:1;29989:18;29985:113;;30027:56;-1:-1:-1;;;30027:7:1;:56::i;:::-;30168:6;30162:13;30153:6;30149:2;30145:15;30138:38;29707:493;-1:-1:-1;;;;;;29867:64:1;-1:-1:-1;;;29867:64:1;;-1:-1:-1;29707:493:1;29533:673;;;;;;:::o;47933:1708::-;47998:17;48426:4;48419;48413:11;48409:22;48516:1;48510:4;48503:15;48589:4;48586:1;48582:12;48575:19;;;48669:1;48664:3;48657:14;48770:3;49004:5;48986:419;49051:1;49046:3;49042:11;49035:18;;49219:2;49213:4;49209:13;49205:2;49201:22;49196:3;49188:36;49311:2;49301:13;;49366:25;48986:419;49366:25;-1:-1:-1;49433:13:1;;;-1:-1:-1;;49546:14:1;;;49606:19;;;49546:14;47933:1708;-1:-1:-1;47933:1708:1:o;14:177:5:-;-1:-1:-1;;;;;;92:5:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;68:117;14:177;:::o;196:245::-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:300::-;691:3;729:5;723:12;756:6;751:3;744:19;812:6;805:4;798:5;794:16;787:4;782:3;778:14;772:47;864:1;857:4;848:6;843:3;839:16;835:27;828:38;927:4;920:2;916:7;911:2;903:6;899:15;895:29;890:3;886:39;882:50;875:57;;;638:300;;;;:::o;943:231::-;1092:2;1081:9;1074:21;1055:4;1112:56;1164:2;1153:9;1149:18;1141:6;1112:56;:::i;1179:180::-;1238:6;1291:2;1279:9;1270:7;1266:23;1262:32;1259:52;;;1307:1;1304;1297:12;1259:52;-1:-1:-1;1330:23:5;;1179:180;-1:-1:-1;1179:180:5:o;1595:196::-;1663:20;;-1:-1:-1;;;;;1712:54:5;;1702:65;;1692:93;;1781:1;1778;1771:12;1796:254;1864:6;1872;1925:2;1913:9;1904:7;1900:23;1896:32;1893:52;;;1941:1;1938;1931:12;1893:52;1964:29;1983:9;1964:29;:::i;:::-;1954:39;2040:2;2025:18;;;;2012:32;;-1:-1:-1;;;1796:254:5:o;2237:328::-;2314:6;2322;2330;2383:2;2371:9;2362:7;2358:23;2354:32;2351:52;;;2399:1;2396;2389:12;2351:52;2422:29;2441:9;2422:29;:::i;:::-;2412:39;;2470:38;2504:2;2493:9;2489:18;2470:38;:::i;:::-;2460:48;;2555:2;2544:9;2540:18;2527:32;2517:42;;2237:328;;;;;:::o;2570:186::-;2629:6;2682:2;2670:9;2661:7;2657:23;2653:32;2650:52;;;2698:1;2695;2688:12;2650:52;2721:29;2740:9;2721:29;:::i;2761:347::-;2826:6;2834;2887:2;2875:9;2866:7;2862:23;2858:32;2855:52;;;2903:1;2900;2893:12;2855:52;2926:29;2945:9;2926:29;:::i;:::-;2916:39;;3005:2;2994:9;2990:18;2977:32;3052:5;3045:13;3038:21;3031:5;3028:32;3018:60;;3074:1;3071;3064:12;3018:60;3097:5;3087:15;;;2761:347;;;;;:::o;3113:184::-;-1:-1:-1;;;3162:1:5;3155:88;3262:4;3259:1;3252:15;3286:4;3283:1;3276:15;3302:1138;3397:6;3405;3413;3421;3474:3;3462:9;3453:7;3449:23;3445:33;3442:53;;;3491:1;3488;3481:12;3442:53;3514:29;3533:9;3514:29;:::i;:::-;3504:39;;3562:38;3596:2;3585:9;3581:18;3562:38;:::i;:::-;3552:48;;3647:2;3636:9;3632:18;3619:32;3609:42;;3702:2;3691:9;3687:18;3674:32;3725:18;3766:2;3758:6;3755:14;3752:34;;;3782:1;3779;3772:12;3752:34;3820:6;3809:9;3805:22;3795:32;;3865:7;3858:4;3854:2;3850:13;3846:27;3836:55;;3887:1;3884;3877:12;3836:55;3923:2;3910:16;3945:2;3941;3938:10;3935:36;;;3951:18;;:::i;:::-;4026:2;4020:9;3994:2;4080:13;;-1:-1:-1;;4076:22:5;;;4100:2;4072:31;4068:40;4056:53;;;4124:18;;;4144:22;;;4121:46;4118:72;;;4170:18;;:::i;:::-;4210:10;4206:2;4199:22;4245:2;4237:6;4230:18;4285:7;4280:2;4275;4271;4267:11;4263:20;4260:33;4257:53;;;4306:1;4303;4296:12;4257:53;4362:2;4357;4353;4349:11;4344:2;4336:6;4332:15;4319:46;4407:1;4402:2;4397;4389:6;4385:15;4381:24;4374:35;4428:6;4418:16;;;;;;;3302:1138;;;;;;;:::o;4445:260::-;4513:6;4521;4574:2;4562:9;4553:7;4549:23;4545:32;4542:52;;;4590:1;4587;4580:12;4542:52;4613:29;4632:9;4613:29;:::i;:::-;4603:39;;4661:38;4695:2;4684:9;4680:18;4661:38;:::i;:::-;4651:48;;4445:260;;;;;:::o;4710:437::-;4789:1;4785:12;;;;4832;;;4853:61;;4907:4;4899:6;4895:17;4885:27;;4853:61;4960:2;4952:6;4949:14;4929:18;4926:38;4923:218;;-1:-1:-1;;;4994:1:5;4987:88;5098:4;5095:1;5088:15;5126:4;5123:1;5116:15;4923:218;;4710:437;;;:::o;5152:212::-;5194:3;5232:5;5226:12;5276:6;5269:4;5262:5;5258:16;5253:3;5247:36;5338:1;5302:16;;5327:13;;;-1:-1:-1;5302:16:5;;5152:212;-1:-1:-1;5152:212:5:o;5369:267::-;5548:3;5573:57;5599:30;5625:3;5617:6;5599:30;:::i;:::-;5591:6;5573:57;:::i;5641:290::-;5680:3;5708:5;5698:193;;-1:-1:-1;;;5744:1:5;5737:88;5848:4;5845:1;5838:15;5876:4;5873:1;5866:15;5698:193;-1:-1:-1;;;5907:18:5;;5641:290::o;5936:523::-;6130:4;-1:-1:-1;;;;;6240:2:5;6232:6;6228:15;6217:9;6210:34;6292:2;6284:6;6280:15;6275:2;6264:9;6260:18;6253:43;;6332:6;6327:2;6316:9;6312:18;6305:34;6375:3;6370:2;6359:9;6355:18;6348:31;6396:57;6448:3;6437:9;6433:19;6425:6;6396:57;:::i;:::-;6388:65;5936:523;-1:-1:-1;;;;;;5936:523:5:o;6464:249::-;6533:6;6586:2;6574:9;6565:7;6561:23;6557:32;6554:52;;;6602:1;6599;6592:12;6554:52;6634:9;6628:16;6653:30;6677:5;6653:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "719000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2636",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26604",
								"supportsInterface(bytes4)": "513",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4430",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_mintSpot(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipIsInitialized(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipExists(uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "17",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeMintSpot(address,uint256)": "infinite",
								"_safeMintSpot(address,uint256,bytes memory)": "infinite",
								"_sequentialUpTo()": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_totalSpotMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 5261,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5261,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5327,
									"end": 5332,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 5335,
									"end": 5340,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5327,
									"end": 5332,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 5327,
									"end": 5340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 5327,
									"end": 5340,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5350,
									"end": 5357,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5360,
									"end": 5367,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5350,
									"end": 5357,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 5350,
									"end": 5367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5350,
									"end": 5367,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6022,
									"end": 6029,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5377,
									"end": 5408,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5377,
									"end": 5408,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 862,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 862,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 709,
									"end": 712,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 702,
									"end": 706,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 697,
									"end": 699,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 685,
									"end": 700,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 681,
									"end": 707,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 678,
									"end": 713,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 675,
									"end": 730,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 675,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 726,
									"end": 727,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 724,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 716,
									"end": 728,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 675,
									"end": 730,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 675,
									"end": 730,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 783,
									"end": 785,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 776,
									"end": 780,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 768,
									"end": 774,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 764,
									"end": 781,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 757,
									"end": 761,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 749,
									"end": 755,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 745,
									"end": 762,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 739,
									"end": 786,
									"name": "MCOPY",
									"source": 5
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 827,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 810,
									"end": 816,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 806,
									"end": 821,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 802,
									"end": 828,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 795,
									"end": 832,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 850,
									"end": 856,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 841,
									"end": 856,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 862,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 862,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 966,
									"end": 972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 980,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1027,
									"end": 1029,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1015,
									"end": 1024,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1006,
									"end": 1013,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1002,
									"end": 1025,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 998,
									"end": 1030,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1044,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1033,
									"end": 1045,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 995,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1070,
									"end": 1086,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1070,
									"end": 1086,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1135,
									"end": 1149,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1163,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1152,
									"end": 1164,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1238,
									"end": 1245,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1229,
									"end": 1235,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1218,
									"end": 1227,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1214,
									"end": 1236,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1185,
									"end": 1246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1185,
									"end": 1246,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1175,
									"end": 1246,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1294,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1281,
									"end": 1290,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1295,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1296,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 1296,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1323,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1319,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1324,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1338,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 1335,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1327,
									"end": 1339,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1305,
									"end": 1341,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1415,
									"end": 1422,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1404,
									"end": 1412,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1393,
									"end": 1402,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1389,
									"end": 1413,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1360,
									"end": 1423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1360,
									"end": 1423,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1350,
									"end": 1423,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 867,
									"end": 1429,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 867,
									"end": 1429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1509,
									"end": 1521,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1556,
									"end": 1568,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1631,
									"end": 1635,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1623,
									"end": 1629,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1636,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1609,
									"end": 1636,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1609,
									"end": 1636,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1577,
									"end": 1638,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1676,
									"end": 1682,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1673,
									"end": 1687,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1653,
									"end": 1671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1650,
									"end": 1688,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1725,
									"end": 1728,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1721,
									"end": 1741,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1718,
									"end": 1719,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1711,
									"end": 1742,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1765,
									"end": 1769,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1762,
									"end": 1763,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1755,
									"end": 1770,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1793,
									"end": 1797,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1790,
									"end": 1791,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1783,
									"end": 1798,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1647,
									"end": 1808,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1814,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2047,
									"end": 2049,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2042,
									"end": 2045,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2039,
									"end": 2050,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2083,
									"end": 2088,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2080,
									"end": 2081,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2073,
									"end": 2089,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2127,
									"end": 2131,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2124,
									"end": 2125,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2197,
									"end": 2199,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2185,
									"end": 2195,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2181,
									"end": 2200,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2178,
									"end": 2179,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2174,
									"end": 2201,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2168,
									"end": 2172,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2164,
									"end": 2202,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2233,
									"end": 2237,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2221,
									"end": 2231,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2218,
									"end": 2238,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2256,
									"end": 2260,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2215,
									"end": 2262,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2313,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2306,
									"end": 2309,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2302,
									"end": 2314,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2299,
									"end": 2300,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2295,
									"end": 2315,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2289,
									"end": 2293,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2285,
									"end": 2316,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2275,
									"end": 2316,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2275,
									"end": 2316,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2384,
									"end": 2386,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2377,
									"end": 2382,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2374,
									"end": 2387,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2444,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2445,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2429,
									"end": 2445,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2399,
									"end": 2412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2366,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2036,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1945,
									"end": 2463,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1945,
									"end": 2463,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2759,
									"end": 2769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2759,
									"end": 2769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2781,
									"end": 2811,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2781,
									"end": 2811,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2778,
									"end": 2834,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 2814,
									"end": 2832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2933,
									"end": 2939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 2925,
									"end": 2929,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2919,
									"end": 2930,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 2893,
									"end": 2931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2887,
									"end": 2891,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 2843,
									"end": 2940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2843,
									"end": 2940,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 2999,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2995,
									"end": 2999,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3054,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3041,
									"end": 3055,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3041,
									"end": 3055,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3069,
									"end": 3070,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3771,
									"end": 3772,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3788,
									"end": 3794,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3840,
									"end": 3859,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3834,
									"end": 3860,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 3785,
									"end": 3874,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2596,
									"end": 2597,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2592,
									"end": 2603,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2588,
									"end": 2612,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2584,
									"end": 2613,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2574,
									"end": 2614,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2620,
									"end": 2621,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2616,
									"end": 2627,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2571,
									"end": 2628,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3887,
									"end": 3968,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3887,
									"end": 3968,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3064,
									"end": 3727,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1892,
									"end": 1893,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1885,
									"end": 1899,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1929,
									"end": 1933,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1916,
									"end": 1934,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1916,
									"end": 1934,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3100,
									"end": 3120,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3232,
									"end": 3239,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3229,
									"end": 3230,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3226,
									"end": 3240,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3321,
									"end": 3340,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3315,
									"end": 3341,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3300,
									"end": 3342,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3300,
									"end": 3342,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3413,
									"end": 3440,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3381,
									"end": 3382,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3369,
									"end": 3383,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3248,
									"end": 3267,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3248,
									"end": 3267,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3218,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3222,
									"end": 3225,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3482,
									"end": 3488,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3473,
									"end": 3480,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3470,
									"end": 3489,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3543,
									"end": 3562,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3537,
									"end": 3563,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3626,
									"end": 3627,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3622,
									"end": 3636,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3638,
									"end": 3641,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3618,
									"end": 3642,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3614,
									"end": 3651,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3652,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3653,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3580,
									"end": 3654,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3580,
									"end": 3654,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3467,
									"end": 3668,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3714,
									"end": 3715,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3702,
									"end": 3703,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3698,
									"end": 3712,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3694,
									"end": 3716,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3688,
									"end": 3692,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3681,
									"end": 3717,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3034,
									"end": 3978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2639,
									"end": 3984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 2639,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 49865,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e17496b2867d8dfcbbf6daeffc9875bcd72a2888c438625453fa68e86c1048d264736f6c63430008190033",
									".code": [
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 49865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10689,
											"end": 11319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 10689,
											"end": 11319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 604,
											"end": 626,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11573,
											"end": 11671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 11573,
											"end": 11671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 18636,
											"end": 18859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 18636,
											"end": 18859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1583,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1364,
											"end": 1590,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18364,
											"end": 18486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 18364,
											"end": 18486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7328,
											"end": 7340,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6951,
											"end": 6965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7325,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2226,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6890,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2055,
											"end": 2232,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 22796,
											"end": 26243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 22796,
											"end": 26243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 26334,
											"end": 26521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 26334,
											"end": 26521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 12934,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 12934,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 8570,
											"end": 8809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 8570,
											"end": 8809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 11742,
											"end": 11844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 19186,
											"end": 19417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 19186,
											"end": 19417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 27102,
											"end": 27507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 27102,
											"end": 27507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11945,
											"end": 12267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 11945,
											"end": 12267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 19567,
											"end": 19729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19664,
											"end": 19668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19705,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19712,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19687,
											"end": 19722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10774,
											"end": 10778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11092,
											"end": 11193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11269,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 11092,
											"end": 11269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11269,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 11319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10689,
											"end": 11319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11640,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11659,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11652,
											"end": 11664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11652,
											"end": 11664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11652,
											"end": 11664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 18636,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18712,
											"end": 18719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18736,
											"end": 18752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18744,
											"end": 18751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18736,
											"end": 18743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 18736,
											"end": 18752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18736,
											"end": 18752,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18736,
											"end": 18752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18731,
											"end": 18804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 18731,
											"end": 18804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18754,
											"end": 18804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 18762,
											"end": 18803,
											"name": "PUSH",
											"source": 1,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18754,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 18754,
											"end": 18804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18754,
											"end": 18804,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 18754,
											"end": 18804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18822,
											"end": 18837,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18822,
											"end": 18846,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18822,
											"end": 18852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18822,
											"end": 18852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18822,
											"end": 18852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18452,
											"end": 18479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 18461,
											"end": 18463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18465,
											"end": 18472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18474,
											"end": 18478,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18452,
											"end": 18460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 18452,
											"end": 18479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18452,
											"end": 18479,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 18452,
											"end": 18479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22933,
											"end": 22960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22963,
											"end": 22990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22982,
											"end": 22989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22963,
											"end": 22981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 22963,
											"end": 22990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22963,
											"end": 22990,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 22963,
											"end": 22990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23115,
											"end": 23137,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 22933,
											"end": 22990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22933,
											"end": 22990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23173,
											"end": 23218,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 23169,
											"end": 23264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 23169,
											"end": 23264,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23220,
											"end": 23264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 23228,
											"end": 23263,
											"name": "PUSH",
											"source": 1,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23220,
											"end": 23227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 23220,
											"end": 23264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23220,
											"end": 23264,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 23220,
											"end": 23264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23276,
											"end": 23303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21929,
											"end": 21944,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21929,
											"end": 21953,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22153,
											"end": 22179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22153,
											"end": 22179,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 21566,
											"end": 21596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21566,
											"end": 21596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21566,
											"end": 21596,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21263,
											"end": 21291,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 21263,
											"end": 21291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21544,
											"end": 21564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21544,
											"end": 21564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21544,
											"end": 21564,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21541,
											"end": 21597,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 23459,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 23459,
											"end": 23647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23551,
											"end": 23594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 23568,
											"end": 23572,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 19567,
											"end": 19729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23551,
											"end": 23594,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 23551,
											"end": 23594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23546,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 23546,
											"end": 23647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23596,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 23604,
											"end": 23646,
											"name": "PUSH",
											"source": 1,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23596,
											"end": 23603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 23596,
											"end": 23647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23596,
											"end": 23647,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 23596,
											"end": 23647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23790,
											"end": 23805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23928,
											"end": 23929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23907,
											"end": 23926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23900,
											"end": 23930,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 23787,
											"end": 23944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24316,
											"end": 24334,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24316,
											"end": 24340,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24314,
											"end": 24340,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24384,
											"end": 24406,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24382,
											"end": 24406,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17492,
											"end": 17503,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17490,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17463,
											"end": 17504,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17450,
											"end": 17513,
											"name": "OR",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17450,
											"end": 17513,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24687,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24696,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24670,
											"end": 24842,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24959,
											"end": 25006,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24959,
											"end": 25006,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24959,
											"end": 25011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24959,
											"end": 25011,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25063,
											"end": 25064,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 25053,
											"end": 25064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25053,
											"end": 25064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25031,
											"end": 25050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25201,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25184,
											"end": 25219,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25180,
											"end": 25558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 25180,
											"end": 25558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25320,
											"end": 25333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25333,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 25305,
											"end": 25316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25305,
											"end": 25333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25465,
											"end": 25482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25465,
											"end": 25495,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 25465,
											"end": 25517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25465,
											"end": 25517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25465,
											"end": 25517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 25301,
											"end": 25540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25013,
											"end": 25572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 24955,
											"end": 25572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25700,
											"end": 25720,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25700,
											"end": 25720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 26071,
											"end": 26078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25700,
											"end": 25720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26003,
											"end": 26007,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 25946,
											"end": 25971,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 25681,
											"end": 25697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25681,
											"end": 25697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25814,
											"end": 26106,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 26129,
											"end": 26137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26141,
											"end": 26142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26129,
											"end": 26142,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26125,
											"end": 26183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 26125,
											"end": 26183,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26144,
											"end": 26183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 26152,
											"end": 26182,
											"name": "PUSH",
											"source": 1,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26144,
											"end": 26151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 26144,
											"end": 26183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26144,
											"end": 26183,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 26144,
											"end": 26183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22923,
											"end": 26243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22796,
											"end": 26243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22796,
											"end": 26243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 26492,
											"end": 26496,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26498,
											"end": 26500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26502,
											"end": 26509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 26475,
											"end": 26514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 26475,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26334,
											"end": 26521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 12934,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13006,
											"end": 13013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13048,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 13067,
											"end": 13074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 13048,
											"end": 13075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 8570,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8665,
											"end": 8684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8661,
											"end": 8730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8694,
											"end": 8729,
											"name": "PUSH",
											"source": 1,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8686,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8686,
											"end": 8730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8730,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8686,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8772,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8747,
											"end": 8802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 11742,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11798,
											"end": 11811,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11830,
											"end": 11837,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11823,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 11823,
											"end": 11837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19298,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19319,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19340,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19280,
											"end": 19329,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19355,
											"end": 19410,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19186,
											"end": 19417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27271,
											"end": 27302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 27284,
											"end": 27288,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27290,
											"end": 27292,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27294,
											"end": 27301,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27271,
											"end": 27283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 27271,
											"end": 27302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27271,
											"end": 27302,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 27271,
											"end": 27302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27316,
											"end": 27330,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27316,
											"end": 27330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27316,
											"end": 27330,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 27316,
											"end": 27335,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27312,
											"end": 27501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 27312,
											"end": 27501,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27354,
											"end": 27410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 27385,
											"end": 27389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27391,
											"end": 27393,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27395,
											"end": 27402,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27404,
											"end": 27409,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27354,
											"end": 27384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 27354,
											"end": 27410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27354,
											"end": 27410,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 27354,
											"end": 27410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27349,
											"end": 27501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 27349,
											"end": 27501,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27430,
											"end": 27486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27430,
											"end": 27437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 27430,
											"end": 27486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27430,
											"end": 27486,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 27430,
											"end": 27486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12018,
											"end": 12031,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12048,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 12056,
											"end": 12063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12048,
											"end": 12055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12048,
											"end": 12064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12048,
											"end": 12064,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 12048,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12043,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 12043,
											"end": 12111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12066,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 12074,
											"end": 12110,
											"name": "PUSH",
											"source": 1,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12066,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 12066,
											"end": 12111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12066,
											"end": 12111,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 12066,
											"end": 12111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12122,
											"end": 12143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12146,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12512,
											"end": 12604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12146,
											"end": 12156,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 12146,
											"end": 12156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12122,
											"end": 12156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12122,
											"end": 12156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12179,
											"end": 12186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12194,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12198,
											"end": 12199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12199,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 12245,
											"end": 12252,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 12235,
											"end": 12253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12253,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 12235,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 12209,
											"end": 12254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12209,
											"end": 12254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 12173,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12166,
											"end": 12260,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11945,
											"end": 12267,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11945,
											"end": 12267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20043,
											"end": 20054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20231,
											"end": 20244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20231,
											"end": 20244,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20221,
											"end": 20228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20221,
											"end": 20244,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20264,
											"end": 20278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20313,
											"end": 20330,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 20313,
											"end": 20339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20303,
											"end": 20345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20303,
											"end": 20345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20303,
											"end": 20345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 20347,
											"end": 20356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20347,
											"end": 20356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 20296,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20383,
											"end": 20407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20383,
											"end": 20412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20383,
											"end": 20412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 20217,
											"end": 20427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19978,
											"end": 20443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19978,
											"end": 20443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49703,
											"end": 49863,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 49703,
											"end": 49863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 49802,
											"end": 49815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 49796,
											"end": 49800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 49789,
											"end": 49816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 49842,
											"end": 49846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 49836,
											"end": 49840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 49829,
											"end": 49847,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41457,
											"end": 41470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 41473,
											"end": 41489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 41481,
											"end": 41488,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 41473,
											"end": 41480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 41473,
											"end": 41489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41473,
											"end": 41489,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 41473,
											"end": 41489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41457,
											"end": 41489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 41457,
											"end": 41489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41504,
											"end": 41517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 41521,
											"end": 41549,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 41504,
											"end": 41549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41500,
											"end": 41698,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 41500,
											"end": 41698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 41500,
											"end": 41698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 41568,
											"end": 41612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 41585,
											"end": 41590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19567,
											"end": 19729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 19567,
											"end": 19729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41568,
											"end": 41612,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 41568,
											"end": 41612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41563,
											"end": 41698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 41563,
											"end": 41698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 41632,
											"end": 41683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 41640,
											"end": 41682,
											"name": "PUSH",
											"source": 1,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41632,
											"end": 41639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 41632,
											"end": 41683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41632,
											"end": 41683,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 41632,
											"end": 41683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41723,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 41708,
											"end": 41732,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 41758,
											"end": 41786,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 41447,
											"end": 41793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41333,
											"end": 41793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 41333,
											"end": 41793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14528,
											"end": 14545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14528,
											"end": 14554,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14847,
											"end": 14858,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14906,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14882,
											"end": 14889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14882,
											"end": 14906,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14878,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 14878,
											"end": 14955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14908,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14908,
											"end": 14915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 14908,
											"end": 14955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14908,
											"end": 14955,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 14908,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15596,
											"end": 15605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15595,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15578,
											"end": 15606,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15650,
											"end": 15675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15650,
											"end": 15675,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 15650,
											"end": 15675,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15701,
											"end": 15707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15701,
											"end": 15725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15729,
											"end": 15730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15701,
											"end": 15730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 16553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 15697,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16033,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16033,
											"end": 16040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 16033,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16033,
											"end": 16080,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 16033,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 15502,
											"end": 16099,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 14843,
											"end": 16113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16435,
											"end": 16441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16435,
											"end": 16459,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16463,
											"end": 16464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16435,
											"end": 16464,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 16553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 16553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 16431,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16499,
											"end": 16546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16499,
											"end": 16506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 16499,
											"end": 16546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29691,
											"end": 29695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29691,
											"end": 29695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 29711,
											"end": 29756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 47819,
											"end": 47829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29778,
											"end": 29782,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 29778,
											"end": 29782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29784,
											"end": 29791,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 29784,
											"end": 29791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29793,
											"end": 29798,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 29793,
											"end": 29798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 29711,
											"end": 29799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 29711,
											"end": 29799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 29711,
											"end": 29799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29989,
											"end": 29995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 29989,
											"end": 30002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30006,
											"end": 30007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29989,
											"end": 30007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29985,
											"end": 30098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 29985,
											"end": 30098,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30027,
											"end": 30083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30027,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 30027,
											"end": 30083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30027,
											"end": 30083,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 30027,
											"end": 30083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30168,
											"end": 30174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30162,
											"end": 30175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30153,
											"end": 30159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30149,
											"end": 30151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30145,
											"end": 30160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30138,
											"end": 30176,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 29867,
											"end": 29931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29867,
											"end": 29931,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 29867,
											"end": 29931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 29707,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29533,
											"end": 30206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29533,
											"end": 30206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47933,
											"end": 49641,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 47933,
											"end": 49641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 47998,
											"end": 48015,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 48426,
											"end": 48430,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 48419,
											"end": 48423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 48413,
											"end": 48424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 48409,
											"end": 48431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 48516,
											"end": 48517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 48510,
											"end": 48514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 48503,
											"end": 48518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 48589,
											"end": 48593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 48586,
											"end": 48587,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 48582,
											"end": 48594,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 48575,
											"end": 48594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 48575,
											"end": 48594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 48575,
											"end": 48594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 48669,
											"end": 48670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 48664,
											"end": 48667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 48657,
											"end": 48671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 48770,
											"end": 48773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 49004,
											"end": 49009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 48986,
											"end": 49405,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 48986,
											"end": 49405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 49051,
											"end": 49052,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 49046,
											"end": 49049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 49042,
											"end": 49053,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 49035,
											"end": 49053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 49035,
											"end": 49053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 49219,
											"end": 49221,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 49213,
											"end": 49217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 49209,
											"end": 49222,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 49205,
											"end": 49207,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 49201,
											"end": 49223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49196,
											"end": 49199,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 49188,
											"end": 49224,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 49311,
											"end": 49313,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 49301,
											"end": 49314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 49301,
											"end": 49314,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 49366,
											"end": 49391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 48986,
											"end": 49405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 49366,
											"end": 49391,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49433,
											"end": 49446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 49433,
											"end": 49446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 49433,
											"end": 49446,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49606,
											"end": 49625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 49606,
											"end": 49625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 49606,
											"end": 49625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 49546,
											"end": 49560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 47933,
											"end": 49641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47933,
											"end": 49641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 88,
											"end": 166,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 167,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 68,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 183,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 68,
											"end": 185,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 196,
											"end": 441,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 196,
											"end": 441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 381,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 638,
											"end": 938,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 638,
											"end": 938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 691,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 723,
											"end": 735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 754,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 744,
											"end": 763,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 805,
											"end": 809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 794,
											"end": 810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 778,
											"end": 792,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 819,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 864,
											"end": 865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 848,
											"end": 854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 843,
											"end": 846,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 839,
											"end": 855,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 828,
											"end": 866,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 922,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 916,
											"end": 923,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 911,
											"end": 913,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 899,
											"end": 914,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 895,
											"end": 924,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 890,
											"end": 893,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 886,
											"end": 925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 875,
											"end": 932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 875,
											"end": 932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 875,
											"end": 932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 638,
											"end": 938,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 638,
											"end": 938,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 638,
											"end": 938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 638,
											"end": 938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 638,
											"end": 938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1174,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 943,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1055,
											"end": 1059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1164,
											"end": 1166,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1167,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1147,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 1112,
											"end": 1168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1293,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1288,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1270,
											"end": 1277,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1289,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1294,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 1595,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1683,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1766,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1766,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1767,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1767,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1692,
											"end": 1785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1771,
											"end": 1783,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 2050,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 1922,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1923,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1896,
											"end": 1928,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 1942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1893,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1983,
											"end": 1992,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 1964,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1964,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2044,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2044,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2336,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2369,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2381,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2399,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2397,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2401,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 2351,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 2441,
											"end": 2450,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2422,
											"end": 2451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 2422,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2451,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2504,
											"end": 2506,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2470,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2470,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2559,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2756,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2570,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2670,
											"end": 2679,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2657,
											"end": 2680,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2653,
											"end": 2685,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2650,
											"end": 2702,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2650,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2650,
											"end": 2702,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2696,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2650,
											"end": 2702,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 2650,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2721,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2884,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2873,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2862,
											"end": 2885,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2890,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2905,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 2855,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2926,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2926,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2994,
											"end": 3003,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3009,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3038,
											"end": 3059,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3036,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3060,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3076,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 3018,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 3108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3113,
											"end": 3297,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 3113,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3163,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3243,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3259,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3267,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3290,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3291,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3397,
											"end": 3403,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3477,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3462,
											"end": 3471,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3472,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3445,
											"end": 3478,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3493,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 3442,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3514,
											"end": 3543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3504,
											"end": 3543,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3504,
											"end": 3543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 3596,
											"end": 3598,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3585,
											"end": 3594,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3562,
											"end": 3600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 3562,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3636,
											"end": 3645,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3651,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3704,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3691,
											"end": 3700,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3687,
											"end": 3705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3674,
											"end": 3706,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3725,
											"end": 3743,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3766,
											"end": 3768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3784,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3820,
											"end": 3826,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3818,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3827,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3873,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3887,
											"end": 3888,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 3836,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3910,
											"end": 3926,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3948,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3935,
											"end": 3971,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3935,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 3935,
											"end": 3971,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 3951,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 3951,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4020,
											"end": 4029,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4100,
											"end": 4102,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 4072,
											"end": 4103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4056,
											"end": 4109,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4056,
											"end": 4109,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4056,
											"end": 4109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4167,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4170,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 4170,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4206,
											"end": 4208,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4221,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4247,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4230,
											"end": 4248,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4282,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4293,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 4257,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4364,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4355,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4349,
											"end": 4360,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4342,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4365,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4389,
											"end": 4395,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4381,
											"end": 4405,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 4440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 4440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4553,
											"end": 4560,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4572,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 4577,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 4542,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 4632,
											"end": 4641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4613,
											"end": 4642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 4613,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 4695,
											"end": 4697,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4684,
											"end": 4693,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4661,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 4661,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4651,
											"end": 4699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4651,
											"end": 4699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4790,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 4797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4907,
											"end": 4911,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 4899,
											"end": 4905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4912,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 4853,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 4962,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4952,
											"end": 4958,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 4947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4964,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 4995,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5095,
											"end": 5096,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5131,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 5141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 5147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4710,
											"end": 5147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5364,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5152,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5197,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5238,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5276,
											"end": 5282,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5269,
											"end": 5273,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5262,
											"end": 5267,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5258,
											"end": 5274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 5256,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5247,
											"end": 5283,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 5338,
											"end": 5339,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5318,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5327,
											"end": 5340,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5327,
											"end": 5340,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5327,
											"end": 5340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5302,
											"end": 5318,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5318,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5636,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5369,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5551,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5599,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 5625,
											"end": 5628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5599,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5599,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5599,
											"end": 5629,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 5599,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5573,
											"end": 5630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5931,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5641,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 5698,
											"end": 5891,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5744,
											"end": 5745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5848,
											"end": 5852,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5838,
											"end": 5853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5880,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5873,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5881,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5891,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 5698,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 6459,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5936,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6240,
											"end": 6242,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6228,
											"end": 6243,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6217,
											"end": 6226,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6292,
											"end": 6294,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6284,
											"end": 6290,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6280,
											"end": 6295,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6275,
											"end": 6277,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6273,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6260,
											"end": 6278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6296,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6332,
											"end": 6338,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6312,
											"end": 6330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6375,
											"end": 6378,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6370,
											"end": 6372,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6359,
											"end": 6368,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6348,
											"end": 6379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6437,
											"end": 6446,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6433,
											"end": 6452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6425,
											"end": 6431,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 6396,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6396,
											"end": 6453,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 6396,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6388,
											"end": 6453,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5936,
											"end": 6459,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 6459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6464,
											"end": 6713,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6464,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6539,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6584,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6557,
											"end": 6589,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 6643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6677,
											"end": 6682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 6653,
											"end": 6683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractX/ERC721AExtended.sol",
								"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
								"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
								"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol",
								"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/IERC721AQueryable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. The `_sequentialUpTo()` function can be overriden to enable spot mints (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 160,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 162,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 164,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 166,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 170,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 174,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 179,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)92_storage)"
							},
							{
								"astId": 185,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 187,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
								"label": "_spotMinted",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)92_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)92_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)92_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 91,
										"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol": {
				"ERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "ownership",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A subclass with convenience query functions.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721AQueryable.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A subclass with convenience query functions.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721AQueryable.\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol\":\"ERC721AQueryable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfa5590db00a9bf0f85d2c10f2c901d5a3d49ecb1e64e5b6afe9a771496a41698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42616f12c7956e0ccefb690bf2a503986710c54544a36898b1ecc5d226373c4d\",\"dweb:/ipfs/QmU6vn637MDzUjsGih3fnWYf5CjcMknQUDXQwYjLNPX8ig\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x56fa15ba9a351f0be2728ff2569c8ce6bc187cbf2c027fece17442a682f49079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e424f0290d7ba66e451b3d8e490f5bac0bf0105b2af467513b2ffecb7065a9\",\"dweb:/ipfs/QmbCvzT7vep5gyBNqkHrD46pxZVUHHzaCZUpgwgWkBw78Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 160,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 162,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 164,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 166,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 170,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 174,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 179,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)92_storage)"
							},
							{
								"astId": 185,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 187,
								"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
								"label": "_spotMinted",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)92_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)92_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)92_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 91,
										"contract": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol:ERC721AQueryable",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/IERC721AQueryable.sol": {
				"IERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721AQueryable.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"explicitOwnershipOf(uint256)": "c23dc68f",
							"explicitOwnershipsOf(uint256[])": "5bbb2177",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"tokensOfOwnerIn(address,uint256,uint256)": "99a2557a",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721AQueryable.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/IERC721AQueryable.sol\":\"IERC721AQueryable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x56fa15ba9a351f0be2728ff2569c8ce6bc187cbf2c027fece17442a682f49079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e424f0290d7ba66e451b3d8e490f5bac0bf0105b2af467513b2ffecb7065a9\",\"dweb:/ipfs/QmbCvzT7vep5gyBNqkHrD46pxZVUHHzaCZUpgwgWkBw78Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ContractX/ERC721AExtended.sol": {
				"ast": {
					"absolutePath": "contracts/ContractX/ERC721AExtended.sol",
					"exportedSymbols": {
						"ERC721A": [
							2168
						],
						"ERC721AExtended": [
							68
						],
						"ERC721AQueryable": [
							2734
						],
						"ERC721A__IERC721Receiver": [
							86
						],
						"IERC721A": [
							2389
						],
						"IERC721AQueryable": [
							2786
						]
					},
					"id": 69,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol",
							"file": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol",
							"id": 1,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 69,
							"sourceUnit": 2735,
							"src": "35:99:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 2,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "138:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721AQueryable",
										"nameLocations": [
											"203:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2734,
										"src": "203:16:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "203:16:0"
								}
							],
							"canonicalName": "ERC721AExtended",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 68,
							"linearizedBaseContracts": [
								68,
								2734,
								2786,
								2168,
								2389
							],
							"name": "ERC721AExtended",
							"nameLocation": "184:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "297:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 12,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "329:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 11,
														"name": "_numberMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "315:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "315:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 14,
												"nodeType": "Return",
												"src": "308:28:0"
											}
										]
									},
									"functionSelector": "dc33e681",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numberMinted",
									"nameLocation": "236:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "257:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "249:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "248:16:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "288:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:9:0"
									},
									"scope": 68,
									"src": "227:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "407:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_totalMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "425:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "425:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 23,
												"nodeType": "Return",
												"src": "418:21:0"
											}
										]
									},
									"functionSelector": "a2309ff8",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalMinted",
									"nameLocation": "361:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:9:0"
									},
									"scope": 68,
									"src": "352:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "510:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "528:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "528:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 32,
												"nodeType": "Return",
												"src": "521:21:0"
											}
										]
									},
									"functionSelector": "d89135cd",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalBurned",
									"nameLocation": "464:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "475:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "501:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:9:0"
									},
									"scope": 68,
									"src": "455:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "613:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 39,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "631:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "631:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 38,
												"id": 41,
												"nodeType": "Return",
												"src": "624:21:0"
											}
										]
									},
									"functionSelector": "75794a3c",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextTokenId",
									"nameLocation": "567:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "604:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:9:0"
									},
									"scope": 68,
									"src": "558:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "724:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 51,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "750:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 50,
														"name": "_getAux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "742:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint64_$",
															"typeString": "function (address) view returns (uint64)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "742:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 49,
												"id": 53,
												"nodeType": "Return",
												"src": "735:22:0"
											}
										]
									},
									"functionSelector": "bf0b175e",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAux",
									"nameLocation": "670:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "685:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "677:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:16:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "716:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 47,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "716:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:8:0"
									},
									"scope": 68,
									"src": "661:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "836:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 63,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "862:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 62,
														"name": "_exists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) view returns (bool)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 65,
												"nodeType": "Return",
												"src": "847:24:0"
											}
										]
									},
									"functionSelector": "4f558e79",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "782:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "797:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "789:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:18:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:6:0"
									},
									"scope": 68,
									"src": "773:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 69,
							"src": "166:716:0",
							"usedErrors": [
								2174,
								2177,
								2180,
								2183,
								2186,
								2189,
								2192,
								2195,
								2198,
								2201,
								2204,
								2207,
								2210,
								2213,
								2216,
								2219,
								2222,
								2225,
								2743
							],
							"usedEvents": [
								2257,
								2266,
								2275,
								2388
							]
						}
					],
					"src": "35:849:0"
				},
				"id": 0
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							2168
						],
						"ERC721A__IERC721Receiver": [
							86
						],
						"IERC721A": [
							2389
						]
					},
					"id": 2169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 70,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:1"
						},
						{
							"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 71,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2169,
							"sourceUnit": 2390,
							"src": "109:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 72,
								"nodeType": "StructuredDocumentation",
								"src": "135:51:1",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "197:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "237:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "271:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "263:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "319:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "311:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "351:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "336:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:108:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "380:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 82,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:1"
									},
									"scope": 86,
									"src": "228:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2169,
							"src": "187:203:1",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 88,
										"name": "IERC721A",
										"nameLocations": [
											"1073:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2389,
										"src": "1073:8:1"
									},
									"id": 89,
									"nodeType": "InheritanceSpecifier",
									"src": "1073:8:1"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 87,
								"nodeType": "StructuredDocumentation",
								"src": "392:660:1",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n The `_sequentialUpTo()` function can be overriden to enable spot mints\n (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2168,
							"linearizedBaseContracts": [
								2168,
								2389
							],
							"name": "ERC721A",
							"nameLocation": "1062:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 92,
									"members": [
										{
											"constant": false,
											"id": 91,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1215:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 92,
											"src": "1207:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 90,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1207:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1180:16:1",
									"nodeType": "StructDefinition",
									"scope": 2168,
									"src": "1173:54:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 100,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1488:27:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "1463:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1463:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 99,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1519:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1524:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 97,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1518:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 98,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1530:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1518:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 103,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1629:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "1604:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 101,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1604:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 102,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1653:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 106,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1753:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "1728:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 104,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1728:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1777:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 109,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1869:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "1844:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1844:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 108,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1883:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 117,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1999:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "1974:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1974:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2026:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2031:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "2026:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 114,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2025:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 115,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2038:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2025:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 120,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "2136:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2111:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 118,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2111:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 119,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2162:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 125,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2258:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2233:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 121,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2233:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 122,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2276:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 123,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2281:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2276:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 128,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2390:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2365:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2365:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 127,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2417:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 133,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2522:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2497:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 129,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2497:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 132,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 130,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2550:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 131,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2555:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2550:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 136,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2650:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2625:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 134,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2625:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 135,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2671:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 144,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2792:30:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2767:72:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2826:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2831:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 141,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2825:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 142,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2838:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2825:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 152,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2924:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "2899:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2899:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2944:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2949:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2944:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 149,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2943:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 150,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2956:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2943:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 155,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3265:32:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3240:64:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3240:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 154,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3300:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 158,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3451:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3426:127:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 156,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3426:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 157,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3487:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 160,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3796:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3780:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3780:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 162,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3868:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3852:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3852:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3920:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3905:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 163,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3905:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 166,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3967:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "3952:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 165,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3952:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 170,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4394:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "4358:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 169,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 167,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4366:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4358:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 168,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4377:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 174,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4653:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "4617:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 173,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 171,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4625:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4617:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4636:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4773:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "4728:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$92_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 178,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 175,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4736:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4728:36:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$92_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 176,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"4747:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "4747:16:1"
											},
											"referencedDeclaration": 92,
											"src": "4747:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$92_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 185,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4896:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "4843:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 184,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 180,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4851:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4843:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 183,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 181,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4870:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4862:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 182,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4881:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 187,
									"mutability": "mutable",
									"name": "_spotMinted",
									"nameLocation": "5060:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 2168,
									"src": "5044:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 186,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5044:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "5317:190:1",
										"statements": [
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 194,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "5327:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 195,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "5335:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5327:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "5327:13:1"
											},
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 198,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "5350:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 199,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "5360:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5350:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "5350:17:1"
											},
											{
												"expression": {
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 202,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "5377:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 203,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "5393:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5393:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5377:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "5377:31:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 207,
															"name": "_sequentialUpTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "5423:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5423:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 209,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "5443:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5423:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 217,
												"nodeType": "IfStatement",
												"src": "5419:81:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 213,
																	"name": "SequentialUpToTooSmall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "5468:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5491:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "5468:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 212,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "5460:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5460:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 216,
													"nodeType": "ExpressionStatement",
													"src": "5460:40:1"
												}
											}
										]
									},
									"id": 219,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "5273:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5308:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "5294:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 190,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5294:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5272:44:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5317:0:1"
									},
									"scope": 2168,
									"src": "5261:246:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "6031:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6048:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 224,
												"id": 226,
												"nodeType": "Return",
												"src": "6041:8:1"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "5703:258:1",
										"text": " @dev Returns the starting token ID for sequential mints.\n Override this function to change the starting token ID for sequential mints.\n Note: The value returned must never change after any tokens have been minted."
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5975:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:2:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6022:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6022:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6021:9:1"
									},
									"scope": 2168,
									"src": "5966:90:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "6471:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6493:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 235,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6493:7:1",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 234,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "6488:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6488:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "6502:3:1",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "6488:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 233,
												"id": 239,
												"nodeType": "Return",
												"src": "6481:24:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6062:337:1",
										"text": " @dev Returns the maximum token ID (inclusive) for sequential mints.\n Override this function to return a value less than 2**256 - 1,\n but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n Note: The value returned must never change after any tokens have been minted."
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sequentialUpTo",
									"nameLocation": "6413:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6428:2:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6462:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6462:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6461:9:1"
									},
									"scope": 2168,
									"src": "6404:108:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "6650:37:1",
										"statements": [
											{
												"expression": {
													"id": 247,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 160,
													"src": "6667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 248,
												"nodeType": "Return",
												"src": "6660:20:1"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "6518:63:1",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "6595:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6607:2:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6641:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6640:9:1"
									},
									"scope": 2168,
									"src": "6586:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2240
									],
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "6967:487:1",
										"statements": [
											{
												"id": 279,
												"nodeType": "UncheckedBlock",
												"src": "7136:312:1",
												"statements": [
													{
														"expression": {
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 257,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "7303:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 258,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "7312:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 259,
																		"name": "_burnCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "7328:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7312:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 261,
																		"name": "_startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "7343:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7343:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7312:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7303:55:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 265,
														"nodeType": "ExpressionStatement",
														"src": "7303:55:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 266,
																	"name": "_sequentialUpTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "7376:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7376:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7402:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 269,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7402:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 268,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "7397:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7397:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7411:3:1",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "7397:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7376:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 278,
														"nodeType": "IfStatement",
														"src": "7372:65:1",
														"trueBody": {
															"expression": {
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 274,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "7416:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 275,
																	"name": "_spotMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "7426:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7416:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 277,
															"nodeType": "ExpressionStatement",
															"src": "7416:21:1"
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "6693:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6899:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 253,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6933:8:1"
									},
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6910:2:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6959:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "6951:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6951:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6950:16:1"
									},
									"scope": 2168,
									"src": "6890:564:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "7618:307:1",
										"statements": [
											{
												"id": 307,
												"nodeType": "UncheckedBlock",
												"src": "7765:154:1",
												"statements": [
													{
														"expression": {
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 287,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "7789:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 288,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "7798:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 289,
																		"name": "_startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "7814:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7814:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7798:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7789:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 293,
														"nodeType": "ExpressionStatement",
														"src": "7789:40:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 294,
																	"name": "_sequentialUpTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "7847:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7847:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7873:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 297,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7873:7:1",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 296,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "7868:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7868:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7882:3:1",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "7868:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7847:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 306,
														"nodeType": "IfStatement",
														"src": "7843:65:1",
														"trueBody": {
															"expression": {
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 302,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 285,
																	"src": "7887:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 303,
																	"name": "_spotMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "7897:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7887:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 305,
															"nodeType": "ExpressionStatement",
															"src": "7887:21:1"
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "7460:82:1",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "7556:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7568:2:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7610:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "7602:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7601:16:1"
									},
									"scope": 2168,
									"src": "7547:378:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "8066:36:1",
										"statements": [
											{
												"expression": {
													"id": 315,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 162,
													"src": "8083:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 314,
												"id": 316,
												"nodeType": "Return",
												"src": "8076:19:1"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "7931:66:1",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "8011:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8023:2:1"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "8057:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8057:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8056:9:1"
									},
									"scope": 2168,
									"src": "8002:100:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "8261:35:1",
										"statements": [
											{
												"expression": {
													"id": 324,
													"name": "_spotMinted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 187,
													"src": "8278:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 323,
												"id": 325,
												"nodeType": "Return",
												"src": "8271:18:1"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "8108:80:1",
										"text": " @dev Returns the total number of tokens that are spot-minted."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalSpotMinted",
									"nameLocation": "8202:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8218:2:1"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "8252:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8252:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8251:9:1"
									},
									"scope": 2168,
									"src": "8193:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2283
									],
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "8651:158:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 336,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "8665:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8682:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8674:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 337,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8674:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8674:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8665:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 347,
												"nodeType": "IfStatement",
												"src": "8661:69:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 343,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2180,
																	"src": "8694:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8721:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "8694:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 342,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "8686:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8686:44:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 346,
													"nodeType": "ExpressionStatement",
													"src": "8686:44:1"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 348,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "8747:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 350,
														"indexExpression": {
															"id": 349,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "8766:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8747:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 351,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "8775:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8747:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 335,
												"id": 353,
												"nodeType": "Return",
												"src": "8740:62:1"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "8491:74:1",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8579:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 332,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8624:8:1"
									},
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8597:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "8589:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8589:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8588:15:1"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "8642:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8642:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8641:9:1"
									},
									"scope": 2168,
									"src": "8570:239:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "8956:106:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 363,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "8974:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 365,
																	"indexExpression": {
																		"id": 364,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "8993:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8974:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 366,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "9003:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8974:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 368,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8973:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 369,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "9028:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8973:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 362,
												"id": 371,
												"nodeType": "Return",
												"src": "8966:89:1"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "8815:66:1",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "8895:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8917:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "8909:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8909:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8908:15:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "8947:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8947:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8946:9:1"
									},
									"scope": 2168,
									"src": "8886:176:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "9225:106:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 381,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "9243:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 383,
																	"indexExpression": {
																		"id": 382,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "9262:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9243:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 384,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "9272:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9243:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 386,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9242:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 387,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "9297:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9242:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 380,
												"id": 389,
												"nodeType": "Return",
												"src": "9235:89:1"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "9068:82:1",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "9164:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9186:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "9178:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9177:15:1"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "9216:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9215:9:1"
									},
									"scope": 2168,
									"src": "9155:176:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "9507:72:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 401,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "9531:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 403,
																"indexExpression": {
																	"id": 402,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "9550:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9531:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 404,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "9560:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9531:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9524:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 399,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "9524:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9524:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 398,
												"id": 407,
												"nodeType": "Return",
												"src": "9517:55:1"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "9337:102:1",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "9453:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9469:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "9461:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9460:15:1"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "9499:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 396,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9499:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9498:8:1"
									},
									"scope": 2168,
									"src": "9444:135:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "9822:334:1",
										"statements": [
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "9840:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "9832:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 417,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9832:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"baseExpression": {
														"id": 419,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "9849:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 421,
													"indexExpression": {
														"id": 420,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "9868:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9849:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9832:42:1"
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "9892:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "9884:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9884:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"nodeType": "VariableDeclarationStatement",
												"src": "9884:17:1"
											},
											{
												"AST": {
													"nativeSrc": "9984:40:1",
													"nodeType": "YulBlock",
													"src": "9984:40:1",
													"statements": [
														{
															"nativeSrc": "9998:16:1",
															"nodeType": "YulAssignment",
															"src": "9998:16:1",
															"value": {
																"name": "aux",
																"nativeSrc": "10011:3:1",
																"nodeType": "YulIdentifier",
																"src": "10011:3:1"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nativeSrc": "9998:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "9998:9:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 414,
														"isOffset": false,
														"isSlot": false,
														"src": "10011:3:1",
														"valueSize": 1
													},
													{
														"declaration": 424,
														"isOffset": false,
														"isSlot": false,
														"src": "9998:9:1",
														"valueSize": 1
													}
												],
												"id": 426,
												"nodeType": "InlineAssembly",
												"src": "9975:49:1"
											},
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 427,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "10033:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 428,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "10043:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 429,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "10052:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10043:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10042:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 432,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "10080:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 433,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "10093:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10080:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 435,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10079:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10042:63:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10033:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "10033:72:1"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 439,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "10115:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 441,
														"indexExpression": {
															"id": 440,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "10134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10115:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 442,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "10143:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10115:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "10115:34:1"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "9585:171:1",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "9770:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9786:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "9778:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9778:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "9800:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "9793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 413,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9793:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9777:27:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9822:0:1"
									},
									"scope": 2168,
									"src": "9761:395:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2248
									],
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "10780:539:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 455,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "11092:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11107:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "11092:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 458,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "11168:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11183:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "11168:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "11092:101:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 462,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "11244:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11259:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "11244:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11092:177:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 454,
												"id": 466,
												"nodeType": "Return",
												"src": "11073:196:1"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "10343:341:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "10698:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 451,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10756:8:1"
									},
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "10723:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "10716:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 448,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "10716:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10715:20:1"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "10774:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10774:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10773:6:1"
									},
									"scope": 2168,
									"src": "10689:630:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2363
									],
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "11642:29:1",
										"statements": [
											{
												"expression": {
													"id": 475,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 164,
													"src": "11659:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 474,
												"id": 476,
												"nodeType": "Return",
												"src": "11652:12:1"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "11510:58:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11582:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 471,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11609:8:1"
									},
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11586:2:1"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "11627:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11627:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11626:15:1"
									},
									"scope": 2168,
									"src": "11573:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2369
									],
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "11813:31:1",
										"statements": [
											{
												"expression": {
													"id": 485,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "11830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 484,
												"id": 486,
												"nodeType": "Return",
												"src": "11823:14:1"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "11677:60:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11751:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 481,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11780:8:1"
									},
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11757:2:1"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "11798:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11798:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11797:15:1"
									},
									"scope": 2168,
									"src": "11742:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2377
									],
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "12033:234:1",
										"statements": [
											{
												"condition": {
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12047:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 498,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "12056:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 497,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "12048:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12048:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "12043:68:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 502,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "12074:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12102:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "12074:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 501,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "12066:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12066:45:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 505,
													"nodeType": "ExpressionStatement",
													"src": "12066:45:1"
												}
											},
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "12136:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "12122:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 507,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "12122:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 509,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "12146:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12146:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12122:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 514,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "12179:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12173:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 512,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "12173:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12173:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12188:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "12173:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12198:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12173:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12258:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12173:87:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 523,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "12226:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 525,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "12245:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 524,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2159,
																			"src": "12235:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12235:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 521,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "12209:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "12213:12:1",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "12209:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12209:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12202:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 519,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "12202:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12202:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 496,
												"id": 531,
												"nodeType": "Return",
												"src": "12166:94:1"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "11850:90:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "11954:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 493,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12000:8:1"
									},
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11971:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "11963:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11963:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11962:17:1"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "12018:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12018:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12017:15:1"
									},
									"scope": 2168,
									"src": "11945:322:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "12578:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12595:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 538,
												"id": 540,
												"nodeType": "Return",
												"src": "12588:9:1"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "12273:234:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12521:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12529:2:1"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "12563:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 536,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12563:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12562:15:1"
									},
									"scope": 2168,
									"src": "12512:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2291
									],
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "13015:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 556,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "13067:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 555,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "13048:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13048:27:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13040:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 553,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "13040:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13040:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13032:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 551,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13032:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13032:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 550,
												"id": 560,
												"nodeType": "Return",
												"src": "13025:52:1"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "12798:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "12943:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 547,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12988:8:1"
									},
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12959:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "12951:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12951:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12950:17:1"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "13006:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13005:9:1"
									},
									"scope": 2168,
									"src": "12934:150:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "13360:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 573,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "13415:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 572,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "13396:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13396:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "13377:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2234_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13377:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 570,
												"id": 576,
												"nodeType": "Return",
												"src": "13370:54:1"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "13090:172:1",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "13276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13297:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13289:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13288:17:1"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13337:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 568,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 567,
														"name": "TokenOwnership",
														"nameLocations": [
															"13337:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2234,
														"src": "13337:14:1"
													},
													"referencedDeclaration": 2234,
													"src": "13337:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2234_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13336:23:1"
									},
									"scope": 2168,
									"src": "13267:164:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "13613:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 588,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "13649:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 590,
															"indexExpression": {
																"id": 589,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "13667:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13649:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "13630:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2234_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13630:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 586,
												"id": 592,
												"nodeType": "Return",
												"src": "13623:51:1"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "13437:80:1",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "13531:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13552:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "13544:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13544:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13543:15:1"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "13590:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "TokenOwnership",
														"nameLocations": [
															"13590:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2234,
														"src": "13590:14:1"
													},
													"referencedDeclaration": 2234,
													"src": "13590:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2234_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13589:23:1"
									},
									"scope": 2168,
									"src": "13522:159:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "13945:53:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 602,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "13962:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 604,
														"indexExpression": {
															"id": 603,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "13980:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13962:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13990:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13962:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 601,
												"id": 607,
												"nodeType": "Return",
												"src": "13955:36:1"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "13687:168:1",
										"text": " @dev Returns whether the ownership slot at `index` is initialized.\n An uninitialized slot does not necessarily mean that the slot has no owner."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipIsInitialized",
									"nameLocation": "13869:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13901:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "13893:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13892:15:1"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "13939:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13939:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13938:6:1"
									},
									"scope": 2168,
									"src": "13860:138:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "14170:128:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 615,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "14184:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 617,
														"indexExpression": {
															"id": 616,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "14202:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14184:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14212:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14184:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "14180:112:1",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "14215:77:1",
													"statements": [
														{
															"expression": {
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 620,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "14229:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 622,
																	"indexExpression": {
																		"id": 621,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "14247:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14229:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 624,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "14275:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 623,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "14256:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14256:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14229:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 627,
															"nodeType": "ExpressionStatement",
															"src": "14229:52:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "14004:97:1",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "14115:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "14146:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "14138:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14138:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14137:15:1"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14170:0:1"
									},
									"scope": 2168,
									"src": "14106:192:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "14463:2090:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 639,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "14477:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14477:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 641,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "14496:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14477:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 717,
												"nodeType": "IfStatement",
												"src": "14473:2017:1",
												"trueBody": {
													"id": 716,
													"nodeType": "Block",
													"src": "14505:1985:1",
													"statements": [
														{
															"expression": {
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 643,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "14519:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 644,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "14528:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 646,
																	"indexExpression": {
																		"id": 645,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "14546:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14528:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14519:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 648,
															"nodeType": "ExpressionStatement",
															"src": "14519:35:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 649,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "14573:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 650,
																		"name": "_sequentialUpTo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "14583:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14583:17:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14573:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 665,
															"nodeType": "IfStatement",
															"src": "14569:180:1",
															"trueBody": {
																"id": 664,
																"nodeType": "Block",
																"src": "14602:147:1",
																"statements": [
																	{
																		"condition": {
																			"arguments": [
																				{
																					"id": 654,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 637,
																					"src": "14647:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 653,
																				"name": "_packedOwnershipExists",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 949,
																				"src": "14624:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (uint256) pure returns (bool)"
																				}
																			},
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14624:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 658,
																		"nodeType": "IfStatement",
																		"src": "14620:49:1",
																		"trueBody": {
																			"expression": {
																				"id": 656,
																				"name": "packed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "14663:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"functionReturnParameters": 638,
																			"id": 657,
																			"nodeType": "Return",
																			"src": "14656:13:1"
																		}
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 660,
																						"name": "OwnerQueryForNonexistentToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2189,
																						"src": "14695:29:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "14725:8:1",
																					"memberName": "selector",
																					"nodeType": "MemberAccess",
																					"src": "14695:38:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 659,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2167,
																				"src": "14687:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14687:47:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 663,
																		"nodeType": "ExpressionStatement",
																		"src": "14687:47:1"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 666,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "14847:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14857:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14847:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 707,
															"nodeType": "IfStatement",
															"src": "14843:1270:1",
															"trueBody": {
																"id": 706,
																"nodeType": "Block",
																"src": "14860:1253:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 669,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 634,
																				"src": "14882:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 670,
																				"name": "_currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "14893:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14882:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 677,
																		"nodeType": "IfStatement",
																		"src": "14878:77:1",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 673,
																							"name": "OwnerQueryForNonexistentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2189,
																							"src": "14916:29:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 674,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14946:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14916:38:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 672,
																					"name": "_revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2167,
																					"src": "14908:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																						"typeString": "function (bytes4) pure"
																					}
																				},
																				"id": 675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14908:47:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 676,
																			"nodeType": "ExpressionStatement",
																			"src": "14908:47:1"
																		}
																	},
																	{
																		"body": {
																			"id": 704,
																			"nodeType": "Block",
																			"src": "15511:588:1",
																			"statements": [
																				{
																					"id": 685,
																					"nodeType": "UncheckedBlock",
																					"src": "15533:96:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 683,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 678,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 637,
																									"src": "15569:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 679,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 170,
																										"src": "15578:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 682,
																									"indexExpression": {
																										"id": 681,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": true,
																										"src": "15596:9:1",
																										"subExpression": {
																											"id": 680,
																											"name": "tokenId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 634,
																											"src": "15598:7:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "15578:28:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "15569:37:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 684,
																							"nodeType": "ExpressionStatement",
																							"src": "15569:37:1"
																						}
																					]
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 686,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 637,
																							"src": "15654:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 687,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15664:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "15654:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 690,
																					"nodeType": "IfStatement",
																					"src": "15650:25:1",
																					"trueBody": {
																						"id": 689,
																						"nodeType": "Continue",
																						"src": "15667:8:1"
																					}
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 695,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 693,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 691,
																								"name": "packed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 637,
																								"src": "15701:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"id": 692,
																								"name": "_BITMASK_BURNED",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 125,
																								"src": "15710:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "15701:24:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 694,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15729:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "15701:29:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 698,
																					"nodeType": "IfStatement",
																					"src": "15697:48:1",
																					"trueBody": {
																						"expression": {
																							"id": 696,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 637,
																							"src": "15739:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 638,
																						"id": 697,
																						"nodeType": "Return",
																						"src": "15732:13:1"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 700,
																									"name": "OwnerQueryForNonexistentToken",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2189,
																									"src": "16041:29:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 701,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "16071:8:1",
																								"memberName": "selector",
																								"nodeType": "MemberAccess",
																								"src": "16041:38:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							],
																							"id": 699,
																							"name": "_revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2167,
																							"src": "16033:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																								"typeString": "function (bytes4) pure"
																							}
																						},
																						"id": 702,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16033:47:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 703,
																					"nodeType": "ExpressionStatement",
																					"src": "16033:47:1"
																				}
																			]
																		},
																		"id": 705,
																		"isSimpleCounterLoop": false,
																		"nodeType": "ForStatement",
																		"src": "15502:597:1"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 708,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "16435:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 709,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "16444:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16435:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16463:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16435:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 715,
															"nodeType": "IfStatement",
															"src": "16431:48:1",
															"trueBody": {
																"expression": {
																	"id": 713,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "16473:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 638,
																"id": 714,
																"nodeType": "Return",
																"src": "16466:13:1"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 719,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2189,
																"src": "16507:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16537:8:1",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "16507:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 718,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "16499:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16499:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "16499:47:1"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "14304:71:1",
										"text": " @dev Returns the packed ownership data of `tokenId`."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "14389:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14416:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "14408:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14407:17:1"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14455:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "14447:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14446:16:1"
									},
									"scope": 2168,
									"src": "14380:2173:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "16746:262:1",
										"statements": [
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 733,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "16756:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16766:4:1",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2227,
														"src": "16756:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 740,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "16789:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16781:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 738,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "16781:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16781:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16773:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 736,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16773:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16773:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16756:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "16756:41:1"
											},
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 745,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "16807:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16817:14:1",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2229,
														"src": "16807:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 750,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "16841:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 751,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "16851:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16841:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16834:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 748,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "16834:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16834:41:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "16807:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "16807:68:1"
											},
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 756,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "16885:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16895:6:1",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2231,
														"src": "16885:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "16904:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 760,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "16913:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16904:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16932:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16904:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16885:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "16885:48:1"
											},
											{
												"expression": {
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 766,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "16943:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16953:9:1",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2233,
														"src": "16943:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 771,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "16972:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 772,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "16982:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16972:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16965:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 769,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "16965:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16965:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "16943:58:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "16943:58:1"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "16559:83:1",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "16656:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "16683:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "16675:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16675:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16674:16:1"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "16735:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "16713:31:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 729,
														"name": "TokenOwnership",
														"nameLocations": [
															"16713:14:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2234,
														"src": "16713:14:1"
													},
													"referencedDeclaration": 2234,
													"src": "16713:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2234_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16712:33:1"
									},
									"scope": 2168,
									"src": "16647:361:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "17182:347:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "17201:322:1",
													"nodeType": "YulBlock",
													"src": "17201:322:1",
													"statements": [
														{
															"nativeSrc": "17311:37:1",
															"nodeType": "YulAssignment",
															"src": "17311:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "17324:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "17324:5:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "17331:16:1",
																		"nodeType": "YulIdentifier",
																		"src": "17331:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17320:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17320:3:1"
																},
																"nativeSrc": "17320:28:1",
																"nodeType": "YulFunctionCall",
																"src": "17320:28:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "17311:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "17311:5:1"
																}
															]
														},
														{
															"nativeSrc": "17440:73:1",
															"nodeType": "YulAssignment",
															"src": "17440:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "17453:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "17453:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nativeSrc": "17467:23:1",
																						"nodeType": "YulIdentifier",
																						"src": "17467:23:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nativeSrc": "17492:9:1",
																							"nodeType": "YulIdentifier",
																							"src": "17492:9:1"
																						},
																						"nativeSrc": "17492:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "17492:11:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "17463:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17463:3:1"
																				},
																				"nativeSrc": "17463:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17463:41:1"
																			},
																			{
																				"name": "flags",
																				"nativeSrc": "17506:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "17506:5:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17460:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "17460:2:1"
																		},
																		"nativeSrc": "17460:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17460:52:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17450:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "17450:2:1"
																},
																"nativeSrc": "17450:63:1",
																"nodeType": "YulFunctionCall",
																"src": "17450:63:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17440:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17440:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 152,
														"isOffset": false,
														"isSlot": false,
														"src": "17331:16:1",
														"valueSize": 1
													},
													{
														"declaration": 120,
														"isOffset": false,
														"isSlot": false,
														"src": "17467:23:1",
														"valueSize": 1
													},
													{
														"declaration": 783,
														"isOffset": false,
														"isSlot": false,
														"src": "17506:5:1",
														"valueSize": 1
													},
													{
														"declaration": 781,
														"isOffset": false,
														"isSlot": false,
														"src": "17311:5:1",
														"valueSize": 1
													},
													{
														"declaration": 781,
														"isOffset": false,
														"isSlot": false,
														"src": "17324:5:1",
														"valueSize": 1
													},
													{
														"declaration": 781,
														"isOffset": false,
														"isSlot": false,
														"src": "17453:5:1",
														"valueSize": 1
													},
													{
														"declaration": 786,
														"isOffset": false,
														"isSlot": false,
														"src": "17440:6:1",
														"valueSize": 1
													}
												],
												"id": 788,
												"nodeType": "InlineAssembly",
												"src": "17192:331:1"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "17014:67:1",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "17095:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17122:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "17114:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "17137:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "17129:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17113:30:1"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17174:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "17166:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17166:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17165:16:1"
									},
									"scope": 2168,
									"src": "17086:443:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "17712:232:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "17796:142:1",
													"nodeType": "YulBlock",
													"src": "17796:142:1",
													"statements": [
														{
															"nativeSrc": "17872:56:1",
															"nodeType": "YulAssignment",
															"src": "17872:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nativeSrc": "17886:24:1",
																		"nodeType": "YulIdentifier",
																		"src": "17886:24:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nativeSrc": "17915:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "17915:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17925:1:1",
																				"nodeType": "YulLiteral",
																				"src": "17925:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17912:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "17912:2:1"
																		},
																		"nativeSrc": "17912:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17912:15:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "17882:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17882:3:1"
																},
																"nativeSrc": "17882:46:1",
																"nodeType": "YulFunctionCall",
																"src": "17882:46:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17872:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17872:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 128,
														"isOffset": false,
														"isSlot": false,
														"src": "17886:24:1",
														"valueSize": 1
													},
													{
														"declaration": 793,
														"isOffset": false,
														"isSlot": false,
														"src": "17915:8:1",
														"valueSize": 1
													},
													{
														"declaration": 796,
														"isOffset": false,
														"isSlot": false,
														"src": "17872:6:1",
														"valueSize": 1
													}
												],
												"id": 798,
												"nodeType": "InlineAssembly",
												"src": "17787:151:1"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "17535:86:1",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "17635:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "17664:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "17656:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17655:18:1"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17704:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "17696:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17695:16:1"
									},
									"scope": 2168,
									"src": "17626:318:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2331
									],
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "18442:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 810,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "18461:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "18465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18474:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 809,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1831,
															1881
														],
														"referencedDeclaration": 1881,
														"src": "18452:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18452:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "18452:27:1"
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "18137:222:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."
									},
									"functionSelector": "095ea7b3",
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "18373:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 807,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18433:8:1"
									},
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18389:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "18381:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18381:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18401:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "18393:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18393:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18380:29:1"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18442:0:1"
									},
									"scope": 2168,
									"src": "18364:122:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2347
									],
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "18721:138:1",
										"statements": [
											{
												"condition": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18735:17:1",
													"subExpression": {
														"arguments": [
															{
																"id": 826,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "18744:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 825,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "18736:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18736:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "18731:73:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 830,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "18762:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18795:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "18762:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 829,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "18754:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18754:50:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 833,
													"nodeType": "ExpressionStatement",
													"src": "18754:50:1"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 835,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "18822:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$92_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "18838:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18822:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$92_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18847:5:1",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 91,
													"src": "18822:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 824,
												"id": 839,
												"nodeType": "Return",
												"src": "18815:37:1"
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "18492:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "18645:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 821,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18694:8:1"
									},
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18665:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "18657:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18656:17:1"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "18712:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18711:9:1"
									},
									"scope": 2168,
									"src": "18636:223:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2339
									],
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "19270:147:1",
										"statements": [
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 850,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "19280:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 854,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 851,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2149,
																	"src": "19299:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19299:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19280:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 855,
														"indexExpression": {
															"id": 853,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "19320:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19280:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 856,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "19332:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19280:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "19280:60:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 860,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "19370:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19370:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "19391:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "19401:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 859,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2275,
														"src": "19355:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19355:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "EmitStatement",
												"src": "19350:60:1"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "18865:316:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "19195:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 848,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19261:8:1"
									},
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19221:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "19213:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "19236:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "19231:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 845,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19231:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19212:33:1"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19270:0:1"
									},
									"scope": 2168,
									"src": "19186:231:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2357
									],
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "19670:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 878,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "19687:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 880,
														"indexExpression": {
															"id": 879,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "19706:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19687:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 882,
													"indexExpression": {
														"id": 881,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "19713:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19687:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 877,
												"id": 883,
												"nodeType": "Return",
												"src": "19680:42:1"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "19423:139:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "19576:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 874,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19646:8:1"
									},
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19601:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "19593:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19593:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19616:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "19608:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19608:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19592:33:1"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "19664:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19664:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19663:6:1"
									},
									"scope": 2168,
									"src": "19567:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "20056:387:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 893,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "20070:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20070:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 895,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "20089:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20070:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "20066:371:1",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "20098:339:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 897,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "20116:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 898,
																		"name": "_sequentialUpTo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "20126:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20126:17:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20116:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 907,
															"nodeType": "IfStatement",
															"src": "20112:90:1",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 902,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "20175:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 904,
																			"indexExpression": {
																				"id": 903,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "20193:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20175:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 901,
																		"name": "_packedOwnershipExists",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "20152:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (uint256) pure returns (bool)"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20152:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"functionReturnParameters": 892,
																"id": 906,
																"nodeType": "Return",
																"src": "20145:57:1"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 908,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "20221:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 909,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "20231:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20221:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 935,
															"nodeType": "IfStatement",
															"src": "20217:210:1",
															"trueBody": {
																"id": 934,
																"nodeType": "Block",
																"src": "20246:181:1",
																"statements": [
																	{
																		"assignments": [
																			912
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 912,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "20272:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 934,
																				"src": "20264:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 911,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "20264:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 913,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "20264:14:1"
																	},
																	{
																		"body": {
																			"expression": {
																				"id": 923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "20347:9:1",
																				"subExpression": {
																					"id": 922,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 888,
																					"src": "20349:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 924,
																			"nodeType": "ExpressionStatement",
																			"src": "20347:9:1"
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"id": 918,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 914,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 912,
																							"src": "20304:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 915,
																								"name": "_packedOwnerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 170,
																								"src": "20313:17:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																									"typeString": "mapping(uint256 => uint256)"
																								}
																							},
																							"id": 917,
																							"indexExpression": {
																								"id": 916,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 888,
																								"src": "20331:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "20313:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "20304:35:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 919,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "20303:37:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20344:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "20303:42:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 925,
																		"nodeType": "WhileStatement",
																		"src": "20296:60:1"
																	},
																	{
																		"expression": {
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 926,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 891,
																				"src": "20374:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 929,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 927,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 912,
																						"src": "20383:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"id": 928,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 125,
																						"src": "20392:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "20383:24:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 930,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20411:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "20383:29:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "20374:38:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 933,
																		"nodeType": "ExpressionStatement",
																		"src": "20374:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "19735:238:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "19987:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20003:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "19995:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19995:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19994:17:1"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "20048:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "20043:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20043:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20042:13:1"
									},
									"scope": 2168,
									"src": "19978:465:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "20617:246:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "20636:221:1",
													"nodeType": "YulBlock",
													"src": "20636:221:1",
													"statements": [
														{
															"nativeSrc": "20774:73:1",
															"nodeType": "YulAssignment",
															"src": "20774:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "packed",
																				"nativeSrc": "20791:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "20791:6:1"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nativeSrc": "20799:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "20799:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20787:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20787:3:1"
																		},
																		"nativeSrc": "20787:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20787:29:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "packed",
																				"nativeSrc": "20822:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "20822:6:1"
																			},
																			{
																				"name": "_BITMASK_BURNED",
																				"nativeSrc": "20830:15:1",
																				"nodeType": "YulIdentifier",
																				"src": "20830:15:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20818:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20818:3:1"
																		},
																		"nativeSrc": "20818:28:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20818:28:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20784:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "20784:2:1"
																},
																"nativeSrc": "20784:63:1",
																"nodeType": "YulFunctionCall",
																"src": "20784:63:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20774:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20774:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 152,
														"isOffset": false,
														"isSlot": false,
														"src": "20799:16:1",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "20830:15:1",
														"valueSize": 1
													},
													{
														"declaration": 942,
														"isOffset": false,
														"isSlot": false,
														"src": "20791:6:1",
														"valueSize": 1
													},
													{
														"declaration": 942,
														"isOffset": false,
														"isSlot": false,
														"src": "20822:6:1",
														"valueSize": 1
													},
													{
														"declaration": 945,
														"isOffset": false,
														"isSlot": false,
														"src": "20774:6:1",
														"valueSize": 1
													}
												],
												"id": 947,
												"nodeType": "InlineAssembly",
												"src": "20627:230:1"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "20449:80:1",
										"text": " @dev Returns whether `packed` represents a token that exists."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipExists",
									"nameLocation": "20543:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "20574:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "20566:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20566:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20565:16:1"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "20609:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "20604:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20604:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20603:13:1"
									},
									"scope": 2168,
									"src": "20534:329:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "21125:488:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "21144:463:1",
													"nodeType": "YulBlock",
													"src": "21144:463:1",
													"statements": [
														{
															"nativeSrc": "21254:37:1",
															"nodeType": "YulAssignment",
															"src": "21254:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "21267:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "21267:5:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "21274:16:1",
																		"nodeType": "YulIdentifier",
																		"src": "21274:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21263:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21263:3:1"
																},
																"nativeSrc": "21263:28:1",
																"nodeType": "YulFunctionCall",
																"src": "21263:28:1"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "21254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "21254:5:1"
																}
															]
														},
														{
															"nativeSrc": "21404:45:1",
															"nodeType": "YulAssignment",
															"src": "21404:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nativeSrc": "21421:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "21421:9:1"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "21432:16:1",
																		"nodeType": "YulIdentifier",
																		"src": "21432:16:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21417:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21417:3:1"
																},
																"nativeSrc": "21417:32:1",
																"nodeType": "YulFunctionCall",
																"src": "21417:32:1"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nativeSrc": "21404:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "21404:9:1"
																}
															]
														},
														{
															"nativeSrc": "21531:66:1",
															"nodeType": "YulAssignment",
															"src": "21531:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "21547:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21547:9:1"
																			},
																			{
																				"name": "owner",
																				"nativeSrc": "21558:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "21558:5:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "21544:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "21544:2:1"
																		},
																		"nativeSrc": "21544:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21544:20:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "21569:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21569:9:1"
																			},
																			{
																				"name": "approvedAddress",
																				"nativeSrc": "21580:15:1",
																				"nodeType": "YulIdentifier",
																				"src": "21580:15:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "21566:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "21566:2:1"
																		},
																		"nativeSrc": "21566:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21566:30:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21541:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "21541:2:1"
																},
																"nativeSrc": "21541:56:1",
																"nodeType": "YulFunctionCall",
																"src": "21541:56:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "21531:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 152,
														"isOffset": false,
														"isSlot": false,
														"src": "21274:16:1",
														"valueSize": 1
													},
													{
														"declaration": 152,
														"isOffset": false,
														"isSlot": false,
														"src": "21432:16:1",
														"valueSize": 1
													},
													{
														"declaration": 952,
														"isOffset": false,
														"isSlot": false,
														"src": "21580:15:1",
														"valueSize": 1
													},
													{
														"declaration": 956,
														"isOffset": false,
														"isSlot": false,
														"src": "21404:9:1",
														"valueSize": 1
													},
													{
														"declaration": 956,
														"isOffset": false,
														"isSlot": false,
														"src": "21421:9:1",
														"valueSize": 1
													},
													{
														"declaration": 956,
														"isOffset": false,
														"isSlot": false,
														"src": "21547:9:1",
														"valueSize": 1
													},
													{
														"declaration": 956,
														"isOffset": false,
														"isSlot": false,
														"src": "21569:9:1",
														"valueSize": 1
													},
													{
														"declaration": 954,
														"isOffset": false,
														"isSlot": false,
														"src": "21254:5:1",
														"valueSize": 1
													},
													{
														"declaration": 954,
														"isOffset": false,
														"isSlot": false,
														"src": "21267:5:1",
														"valueSize": 1
													},
													{
														"declaration": 954,
														"isOffset": false,
														"isSlot": false,
														"src": "21558:5:1",
														"valueSize": 1
													},
													{
														"declaration": 959,
														"isOffset": false,
														"isSlot": false,
														"src": "21531:6:1",
														"valueSize": 1
													}
												],
												"id": 961,
												"nodeType": "InlineAssembly",
												"src": "21135:472:1"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "20869:93:1",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "20976:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21018:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "21010:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21051:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "21043:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21043:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "21074:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "21066:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21066:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21000:89:1"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "21117:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "21112:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21112:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21111:13:1"
									},
									"scope": 2168,
									"src": "20967:646:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "21878:317:1",
										"statements": [
											{
												"assignments": [
													975
												],
												"declarations": [
													{
														"constant": false,
														"id": 975,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "21913:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "21888:38:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$92_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 974,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 973,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"21888:16:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 92,
																"src": "21888:16:1"
															},
															"referencedDeclaration": 92,
															"src": "21888:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$92_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"baseExpression": {
														"id": 976,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "21929:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$92_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 978,
													"indexExpression": {
														"id": 977,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "21945:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21929:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$92_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21888:65:1"
											},
											{
												"AST": {
													"nativeSrc": "22066:123:1",
													"nodeType": "YulBlock",
													"src": "22066:123:1",
													"statements": [
														{
															"nativeSrc": "22080:41:1",
															"nodeType": "YulAssignment",
															"src": "22080:41:1",
															"value": {
																"name": "tokenApproval.slot",
																"nativeSrc": "22103:18:1",
																"nodeType": "YulIdentifier",
																"src": "22103:18:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nativeSrc": "22080:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "22080:19:1"
																}
															]
														},
														{
															"nativeSrc": "22134:45:1",
															"nodeType": "YulAssignment",
															"src": "22134:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nativeSrc": "22159:19:1",
																		"nodeType": "YulIdentifier",
																		"src": "22159:19:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "22153:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "22153:5:1"
																},
																"nativeSrc": "22153:26:1",
																"nodeType": "YulFunctionCall",
																"src": "22153:26:1"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nativeSrc": "22134:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "22134:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 971,
														"isOffset": false,
														"isSlot": false,
														"src": "22134:15:1",
														"valueSize": 1
													},
													{
														"declaration": 969,
														"isOffset": false,
														"isSlot": false,
														"src": "22080:19:1",
														"valueSize": 1
													},
													{
														"declaration": 969,
														"isOffset": false,
														"isSlot": false,
														"src": "22159:19:1",
														"valueSize": 1
													},
													{
														"declaration": 975,
														"isOffset": false,
														"isSlot": true,
														"src": "22103:18:1",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 980,
												"nodeType": "InlineAssembly",
												"src": "22057:132:1"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "21619:97:1",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "21730:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21765:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "21757:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21756:17:1"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "21828:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "21820:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "21857:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "21849:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21819:54:1"
									},
									"scope": 2168,
									"src": "21721:474:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2323
									],
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "22923:3320:1",
										"statements": [
											{
												"assignments": [
													994
												],
												"declarations": [
													{
														"constant": false,
														"id": 994,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "22941:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1154,
														"src": "22933:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 993,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22933:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 998,
												"initialValue": {
													"arguments": [
														{
															"id": 996,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "22982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 995,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "22963:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22963:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22933:57:1"
											},
											{
												"expression": {
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 999,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "23092:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1008,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 985,
																							"src": "23131:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1007,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "23123:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 1006,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "23123:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "23123:13:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 1005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "23115:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1004,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "23115:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23115:22:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 1011,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 152,
																			"src": "23140:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23115:41:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23107:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1002,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "23107:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23107:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23099:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1000,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23099:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23099:59:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23092:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "23092:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1021,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "23189:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23181:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1019,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "23181:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23181:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23173:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23173:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23173:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1024,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "23214:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23173:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1031,
												"nodeType": "IfStatement",
												"src": "23169:95:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1027,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "23228:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "23255:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "23228:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1026,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "23220:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23220:44:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1030,
													"nodeType": "ExpressionStatement",
													"src": "23220:44:1"
												}
											},
											{
												"assignments": [
													1033,
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1033,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "23284:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1154,
														"src": "23276:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1032,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23276:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "23313:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 1154,
														"src": "23305:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1034,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23305:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "23359:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "23332:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23332:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23275:92:1"
											},
											{
												"condition": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "23463:69:1",
													"subExpression": {
														"arguments": [
															{
																"id": 1041,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "23489:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1042,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "23506:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1043,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2149,
																	"src": "23512:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23512:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1040,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "23464:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23464:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "23459:188:1",
												"trueBody": {
													"condition": {
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "23550:44:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1048,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "23568:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1049,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "23574:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23574:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1047,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "23551:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23551:43:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1058,
													"nodeType": "IfStatement",
													"src": "23546:101:1",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1054,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2192,
																		"src": "23604:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23638:8:1",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "23604:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 1053,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "23596:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23596:51:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1057,
														"nodeType": "ExpressionStatement",
														"src": "23596:51:1"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1061,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "23680:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "23686:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "23690:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23699:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1060,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "23658:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23658:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "23658:43:1"
											},
											{
												"AST": {
													"nativeSrc": "23773:181:1",
													"nodeType": "YulBlock",
													"src": "23773:181:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "23806:138:1",
																"nodeType": "YulBlock",
																"src": "23806:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "23907:19:1",
																					"nodeType": "YulIdentifier",
																					"src": "23907:19:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23928:1:1",
																					"nodeType": "YulLiteral",
																					"src": "23928:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "23900:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "23900:6:1"
																			},
																			"nativeSrc": "23900:30:1",
																			"nodeType": "YulFunctionCall",
																			"src": "23900:30:1"
																		},
																		"nativeSrc": "23900:30:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "23900:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "23790:15:1",
																"nodeType": "YulIdentifier",
																"src": "23790:15:1"
															},
															"nativeSrc": "23787:157:1",
															"nodeType": "YulIf",
															"src": "23787:157:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1035,
														"isOffset": false,
														"isSlot": false,
														"src": "23790:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1033,
														"isOffset": false,
														"isSlot": false,
														"src": "23907:19:1",
														"valueSize": 1
													}
												],
												"id": 1067,
												"nodeType": "InlineAssembly",
												"src": "23764:190:1"
											},
											{
												"id": 1124,
												"nodeType": "UncheckedBlock",
												"src": "24221:1361:1",
												"statements": [
													{
														"expression": {
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "24314:26:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1068,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "24316:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1070,
																"indexExpression": {
																	"id": 1069,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "24335:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "24316:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1072,
														"nodeType": "ExpressionStatement",
														"src": "24314:26:1"
													},
													{
														"expression": {
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "24382:24:1",
															"subExpression": {
																"baseExpression": {
																	"id": 1073,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "24384:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1075,
																"indexExpression": {
																	"id": 1074,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "24403:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "24384:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1077,
														"nodeType": "ExpressionStatement",
														"src": "24382:24:1"
													},
													{
														"expression": {
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1078,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "24670:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1080,
																"indexExpression": {
																	"id": 1079,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "24688:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "24670:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1082,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "24735:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1083,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 133,
																			"src": "24755:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1085,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 985,
																					"src": "24798:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1086,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 987,
																					"src": "24804:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1087,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 994,
																					"src": "24808:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1084,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2139,
																				"src": "24783:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24783:45:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24755:73:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1081,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "24699:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24699:143:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24670:172:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1092,
														"nodeType": "ExpressionStatement",
														"src": "24670:172:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1093,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "24959:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1094,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "24981:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24959:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25010:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24959:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1123,
														"nodeType": "IfStatement",
														"src": "24955:617:1",
														"trueBody": {
															"id": 1122,
															"nodeType": "Block",
															"src": "25013:559:1",
															"statements": [
																{
																	"assignments": [
																		1099
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1099,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "25039:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1122,
																			"src": "25031:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1098,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "25031:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1103,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1100,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "25053:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25063:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "25053:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "25031:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1104,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "25184:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1106,
																			"indexExpression": {
																				"id": 1105,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1099,
																				"src": "25202:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "25184:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25218:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25184:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1121,
																	"nodeType": "IfStatement",
																	"src": "25180:378:1",
																	"trueBody": {
																		"id": 1120,
																		"nodeType": "Block",
																		"src": "25221:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1111,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1109,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1099,
																						"src": "25305:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1110,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 160,
																						"src": "25320:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25305:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1119,
																				"nodeType": "IfStatement",
																				"src": "25301:239:1",
																				"trueBody": {
																					"id": 1118,
																					"nodeType": "Block",
																					"src": "25335:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 1116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1112,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 170,
																										"src": "25465:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1114,
																									"indexExpression": {
																										"id": 1113,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1099,
																										"src": "25483:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "25465:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1115,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 994,
																									"src": "25498:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "25465:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1117,
																							"nodeType": "ExpressionStatement",
																							"src": "25465:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													1126
												],
												"declarations": [
													{
														"constant": false,
														"id": 1126,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "25689:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1154,
														"src": "25681:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25681:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1136,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1131,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "25716:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25708:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1129,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "25708:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25708:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25700:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1127,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25700:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25700:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1134,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "25723:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25700:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25681:58:1"
											},
											{
												"AST": {
													"nativeSrc": "25758:358:1",
													"nodeType": "YulBlock",
													"src": "25758:358:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25836:1:1",
																		"nodeType": "YulLiteral",
																		"src": "25836:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25892:1:1",
																		"nodeType": "YulLiteral",
																		"src": "25892:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "25946:25:1",
																		"nodeType": "YulIdentifier",
																		"src": "25946:25:1"
																	},
																	{
																		"name": "from",
																		"nativeSrc": "26003:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "26003:4:1"
																	},
																	{
																		"name": "toMasked",
																		"nativeSrc": "26036:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "26036:8:1"
																	},
																	{
																		"name": "tokenId",
																		"nativeSrc": "26071:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "26071:7:1"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nativeSrc": "25814:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "25814:4:1"
																},
																"nativeSrc": "25814:292:1",
																"nodeType": "YulFunctionCall",
																"src": "25814:292:1"
															},
															"nativeSrc": "25814:292:1",
															"nodeType": "YulExpressionStatement",
															"src": "25814:292:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "25946:25:1",
														"valueSize": 1
													},
													{
														"declaration": 985,
														"isOffset": false,
														"isSlot": false,
														"src": "26003:4:1",
														"valueSize": 1
													},
													{
														"declaration": 1126,
														"isOffset": false,
														"isSlot": false,
														"src": "26036:8:1",
														"valueSize": 1
													},
													{
														"declaration": 989,
														"isOffset": false,
														"isSlot": false,
														"src": "26071:7:1",
														"valueSize": 1
													}
												],
												"id": 1137,
												"nodeType": "InlineAssembly",
												"src": "25749:367:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1138,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "26129:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26141:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26129:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1146,
												"nodeType": "IfStatement",
												"src": "26125:58:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1142,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "26152:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26174:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "26152:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1141,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "26144:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26144:39:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1145,
													"nodeType": "ExpressionStatement",
													"src": "26144:39:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1148,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "26215:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "26221:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "26225:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26234:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1147,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "26194:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26194:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "26194:42:1"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "22388:403:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "22805:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 991,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22914:8:1"
									},
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22835:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "22827:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22857:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "22849:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22877:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "22869:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22869:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22817:73:1"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22923:0:1"
									},
									"scope": 2168,
									"src": "22796:3447:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2313
									],
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "26465:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1167,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "26492:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1168,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "26498:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "26502:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26511:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1166,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1174,
															1214
														],
														"referencedDeclaration": 1214,
														"src": "26475:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26475:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "26475:39:1"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "26249:80:1",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "26343:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1164,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26456:8:1"
									},
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26377:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26369:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26369:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26399:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26391:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26391:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26419:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "26411:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26359:73:1"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26465:0:1"
									},
									"scope": 2168,
									"src": "26334:187:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2303
									],
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "27261:246:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1188,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "27284:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "27290:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "27294:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1187,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "27271:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27271:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "27271:31:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1193,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "27316:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27319:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "27316:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27324:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27316:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27334:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27316:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1212,
												"nodeType": "IfStatement",
												"src": "27312:189:1",
												"trueBody": {
													"condition": {
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "27353:57:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1199,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "27385:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1200,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "27391:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1201,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "27395:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1202,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "27404:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1198,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "27354:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27354:56:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1211,
													"nodeType": "IfStatement",
													"src": "27349:152:1",
													"trueBody": {
														"id": 1210,
														"nodeType": "Block",
														"src": "27412:89:1",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1206,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2198,
																				"src": "27438:38:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27477:8:1",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "27438:47:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1205,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "27430:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27430:56:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1209,
																"nodeType": "ExpressionStatement",
																"src": "27430:56:1"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "26527:570:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "27111:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27252:8:1"
									},
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27145:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "27137:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27137:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27167:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "27159:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27159:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27187:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "27179:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27179:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "27217:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "27204:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27204:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27127:101:1"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27261:0:1"
									},
									"scope": 2168,
									"src": "27102:405:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "28303:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "27513:633:1",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "28160:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28199:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "28191:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28191:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28221:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "28213:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "28241:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "28233:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "28271:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "28263:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28181:104:1"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28303:0:1"
									},
									"scope": 2168,
									"src": "28151:154:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "29103:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "28311:636:1",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "28961:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28999:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "28991:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28991:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29021:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "29013:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29013:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "29041:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "29033:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29033:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "29071:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "29063:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28981:104:1"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29103:0:1"
									},
									"scope": 2168,
									"src": "28952:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "29697:509:1",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1275,
															"nodeType": "Block",
															"src": "29846:96:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1267,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "29867:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1269,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1245,
																							"src": "29902:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1268,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 86,
																						"src": "29877:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$86_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1270,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29877:28:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$86",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "29906:16:1",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 85,
																				"src": "29877:45:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "29923:8:1",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "29877:54:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "29867:64:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1253,
																	"id": 1274,
																	"nodeType": "Return",
																	"src": "29860:71:1"
																}
															]
														},
														"errorName": "",
														"id": 1276,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1266,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1265,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "29829:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1276,
																	"src": "29822:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1264,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "29822:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29808:37:1"
														},
														"src": "29800:142:1"
													},
													{
														"block": {
															"id": 1292,
															"nodeType": "Block",
															"src": "29971:229:1",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1280,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1278,
																				"src": "29989:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "29996:6:1",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "29989:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30006:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29989:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1290,
																	"nodeType": "IfStatement",
																	"src": "29985:113:1",
																	"trueBody": {
																		"id": 1289,
																		"nodeType": "Block",
																		"src": "30009:89:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1285,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2198,
																								"src": "30035:38:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 1286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "30074:8:1",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "30035:47:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1284,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2167,
																						"src": "30027:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1287,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30027:56:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1288,
																				"nodeType": "ExpressionStatement",
																				"src": "30027:56:1"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nativeSrc": "30120:70:1",
																		"nodeType": "YulBlock",
																		"src": "30120:70:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "30149:2:1",
																									"nodeType": "YulLiteral",
																									"src": "30149:2:1",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nativeSrc": "30153:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "30153:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "30145:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "30145:3:1"
																							},
																							"nativeSrc": "30145:15:1",
																							"nodeType": "YulFunctionCall",
																							"src": "30145:15:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nativeSrc": "30168:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "30168:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "30162:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "30162:5:1"
																							},
																							"nativeSrc": "30162:13:1",
																							"nodeType": "YulFunctionCall",
																							"src": "30162:13:1"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "30138:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "30138:6:1"
																					},
																					"nativeSrc": "30138:38:1",
																					"nodeType": "YulFunctionCall",
																					"src": "30138:38:1"
																				},
																				"nativeSrc": "30138:38:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "30138:38:1"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1278,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "30153:6:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1278,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "30168:6:1",
																			"valueSize": 1
																		}
																	],
																	"id": 1291,
																	"nodeType": "InlineAssembly",
																	"src": "30111:79:1"
																}
															]
														},
														"errorName": "",
														"id": 1293,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1279,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1278,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29963:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1293,
																	"src": "29950:19:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1277,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29950:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "29949:21:1"
														},
														"src": "29943:257:1"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1258,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "29757:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29757:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1260,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "29778:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1261,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "29784:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1262,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "29793:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1255,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "29736:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1254,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "29711:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$86_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29711:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$86",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29740:16:1",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 85,
														"src": "29711:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29711:88:1",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1294,
												"nodeType": "TryStatement",
												"src": "29707:493:1"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "29111:417:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "29542:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29590:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "29582:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29612:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "29604:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29604:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29632:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "29624:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29624:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "29662:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "29649:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29649:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29572:101:1"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "29691:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29691:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29690:6:1"
									},
									"scope": 2168,
									"src": "29533:673:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "30714:2281:1",
										"statements": [
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "30732:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1426,
														"src": "30724:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1304,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30724:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1307,
												"initialValue": {
													"id": 1306,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 160,
													"src": "30747:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30724:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1308,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "30774:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30786:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30774:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "30770:53:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1312,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2186,
																	"src": "30797:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30814:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "30797:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1311,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "30789:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30789:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1315,
													"nodeType": "ExpressionStatement",
													"src": "30789:34:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30864:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30856:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1318,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30856:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30856:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1322,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "30868:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1323,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "30872:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1324,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "30886:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1317,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "30834:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30834:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "30834:61:1"
											},
											{
												"id": 1415,
												"nodeType": "UncheckedBlock",
												"src": "31078:1841:1",
												"statements": [
													{
														"expression": {
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1327,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "31323:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1329,
																"indexExpression": {
																	"id": 1328,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "31341:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31323:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1331,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "31393:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1333,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1301,
																					"src": "31434:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1332,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "31413:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31413:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1338,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31469:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1337,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "31461:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1336,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "31461:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1339,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "31461:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1340,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1299,
																					"src": "31473:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1341,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31477:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1335,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2139,
																				"src": "31446:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31446:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "31413:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1330,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "31357:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31357:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31323:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1346,
														"nodeType": "ExpressionStatement",
														"src": "31323:170:1"
													},
													{
														"expression": {
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1347,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "31704:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1349,
																"indexExpression": {
																	"id": 1348,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "31723:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31704:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1350,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "31730:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1353,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1351,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31743:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1352,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 103,
																							"src": "31748:21:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "31743:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1354,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "31742:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31773:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "31742:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1357,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31741:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31730:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31704:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1360,
														"nodeType": "ExpressionStatement",
														"src": "31704:71:1"
													},
													{
														"assignments": [
															1362
														],
														"declarations": [
															{
																"constant": false,
																"id": 1362,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "31891:8:1",
																"nodeType": "VariableDeclaration",
																"scope": 1415,
																"src": "31883:16:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1361,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31883:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1372,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1367,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1299,
																				"src": "31918:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31910:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1365,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "31910:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31910:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31902:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1363,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31902:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31902:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1370,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "31925:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31902:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31883:58:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1373,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "31960:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31972:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31960:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1381,
														"nodeType": "IfStatement",
														"src": "31956:54:1",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1377,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2183,
																			"src": "31983:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32001:8:1",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "31983:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1376,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "31975:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31975:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1380,
															"nodeType": "ExpressionStatement",
															"src": "31975:35:1"
														}
													},
													{
														"assignments": [
															1383
														],
														"declarations": [
															{
																"constant": false,
																"id": 1383,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "32033:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 1415,
																"src": "32025:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "32025:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1387,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1384,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "32039:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1385,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "32054:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32039:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "32025:37:1"
													},
													{
														"assignments": [
															1389
														],
														"declarations": [
															{
																"constant": false,
																"id": 1389,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "32084:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 1415,
																"src": "32076:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1388,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "32076:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1391,
														"initialValue": {
															"id": 1390,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "32094:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "32076:30:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1392,
																	"name": "end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "32125:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32131:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32125:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1395,
																	"name": "_sequentialUpTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "32135:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32135:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32125:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1403,
														"nodeType": "IfStatement",
														"src": "32121:77:1",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1399,
																			"name": "SequentialMintExceedsLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "32162:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32189:8:1",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "32162:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1398,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "32154:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32154:44:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1402,
															"nodeType": "ExpressionStatement",
															"src": "32154:44:1"
														}
													},
													{
														"body": {
															"id": 1405,
															"nodeType": "Block",
															"src": "32216:633:1",
															"statements": [
																{
																	"AST": {
																		"nativeSrc": "32243:441:1",
																		"nodeType": "YulBlock",
																		"src": "32243:441:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "32345:1:1",
																							"nodeType": "YulLiteral",
																							"src": "32345:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "32409:1:1",
																							"nodeType": "YulLiteral",
																							"src": "32409:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nativeSrc": "32471:25:1",
																							"nodeType": "YulIdentifier",
																							"src": "32471:25:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "32536:1:1",
																							"nodeType": "YulLiteral",
																							"src": "32536:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nativeSrc": "32580:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "32580:8:1"
																						},
																						{
																							"name": "tokenId",
																							"nativeSrc": "32623:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "32623:7:1"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nativeSrc": "32315:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "32315:4:1"
																					},
																					"nativeSrc": "32315:351:1",
																					"nodeType": "YulFunctionCall",
																					"src": "32315:351:1"
																				},
																				"nativeSrc": "32315:351:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "32315:351:1"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 158,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "32471:25:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1362,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "32580:8:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1389,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "32623:7:1",
																			"valueSize": 1
																		}
																	],
																	"id": 1404,
																	"nodeType": "InlineAssembly",
																	"src": "32234:450:1"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "32857:9:1",
																"subExpression": {
																	"id": 1406,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "32859:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1408,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "32870:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32857:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1410,
														"nodeType": "DoWhileStatement",
														"src": "32213:662:1"
													},
													{
														"expression": {
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1411,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "32889:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1412,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "32905:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32889:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1414,
														"nodeType": "ExpressionStatement",
														"src": "32889:19:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32957:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32949:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1417,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32949:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32949:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "32961:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "32965:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1423,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "32979:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1416,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "32928:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32928:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "32928:60:1"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "30397:250:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "30661:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "30667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "30687:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "30679:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30666:30:1"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30714:0:1"
									},
									"scope": 2168,
									"src": "30652:2343:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "33904:1513:1",
										"statements": [
											{
												"assignments": [
													1436
												],
												"declarations": [
													{
														"constant": false,
														"id": 1436,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "33922:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "33914:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33914:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1438,
												"initialValue": {
													"id": 1437,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 160,
													"src": "33937:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33914:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1439,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "33964:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33978:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33970:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1440,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33970:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33970:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33964:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1450,
												"nodeType": "IfStatement",
												"src": "33960:57:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1446,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2183,
																	"src": "33990:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34008:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "33990:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1445,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "33982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33982:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1449,
													"nodeType": "ExpressionStatement",
													"src": "33982:35:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1451,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "34031:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34043:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34031:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1459,
												"nodeType": "IfStatement",
												"src": "34027:53:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1455,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2186,
																	"src": "34054:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34071:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "34054:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1454,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "34046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34046:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1458,
													"nodeType": "ExpressionStatement",
													"src": "34046:34:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1460,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1432,
														"src": "34094:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1461,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "34105:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34094:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1468,
												"nodeType": "IfStatement",
												"src": "34090:98:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1464,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2207,
																	"src": "34147:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34179:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "34147:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1463,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "34139:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34139:49:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1467,
													"nodeType": "ExpressionStatement",
													"src": "34139:49:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34229:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34221:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34221:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34221:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "34233:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1475,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "34237:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1476,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "34251:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1469,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "34199:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34199:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "34199:61:1"
											},
											{
												"id": 1547,
												"nodeType": "UncheckedBlock",
												"src": "34369:972:1",
												"statements": [
													{
														"expression": {
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1479,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "34589:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1481,
																"indexExpression": {
																	"id": 1480,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "34608:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "34589:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1482,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "34615:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1485,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1483,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "34628:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1484,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 103,
																							"src": "34633:21:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "34628:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1486,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "34627:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34658:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "34627:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1489,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "34626:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34615:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34589:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1492,
														"nodeType": "ExpressionStatement",
														"src": "34589:71:1"
													},
													{
														"expression": {
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1493,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "34896:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1495,
																"indexExpression": {
																	"id": 1494,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "34914:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "34896:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1497,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1430,
																		"src": "34966:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1499,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1432,
																					"src": "35007:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1498,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "34986:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34986:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1504,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35042:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1503,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "35034:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1502,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "35034:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35034:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1506,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1430,
																					"src": "35046:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1507,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "35050:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1501,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2139,
																				"src": "35019:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35019:33:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34986:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1496,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "34930:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34930:136:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34896:170:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1512,
														"nodeType": "ExpressionStatement",
														"src": "34896:170:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1513,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "35085:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1514,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "35100:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "35085:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35111:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "35085:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1518,
																	"name": "_sequentialUpTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "35115:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35115:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35085:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1526,
														"nodeType": "IfStatement",
														"src": "35081:97:1",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1522,
																			"name": "SequentialMintExceedsLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "35142:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35169:8:1",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "35142:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1521,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "35134:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35134:44:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1525,
															"nodeType": "ExpressionStatement",
															"src": "35134:44:1"
														}
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1528,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "35218:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1529,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "35232:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1530,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "35247:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35232:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35258:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "35232:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35269:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "35261:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1534,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "35261:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35261:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1538,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "35273:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1527,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2388,
																"src": "35198:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35198:78:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1540,
														"nodeType": "EmitStatement",
														"src": "35193:83:1"
													},
													{
														"expression": {
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1541,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "35291:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1542,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "35307:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1543,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "35322:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35307:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35291:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1546,
														"nodeType": "ExpressionStatement",
														"src": "35291:39:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35379:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35371:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1549,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35371:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35371:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1553,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "35383:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1554,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "35387:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1555,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "35401:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1548,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "35350:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35350:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "35350:60:1"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "33001:829:1",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "33844:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33865:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "33857:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33857:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33877:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "33869:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33869:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33856:30:1"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33904:0:1"
									},
									"scope": 2168,
									"src": "33835:1582:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "35932:650:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "35948:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "35952:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1569,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "35942:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35942:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "35942:19:1"
											},
											{
												"id": 1621,
												"nodeType": "UncheckedBlock",
												"src": "35972:604:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1574,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1562,
																		"src": "36000:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "36003:4:1",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "36000:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "36008:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "36000:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36018:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "36000:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1620,
														"nodeType": "IfStatement",
														"src": "35996:570:1",
														"trueBody": {
															"id": 1619,
															"nodeType": "Block",
															"src": "36021:545:1",
															"statements": [
																{
																	"assignments": [
																		1580
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1580,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "36047:3:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1619,
																			"src": "36039:11:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1579,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "36039:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1582,
																	"initialValue": {
																		"id": 1581,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "36053:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "36039:27:1"
																},
																{
																	"assignments": [
																		1584
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1584,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "36092:5:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1619,
																			"src": "36084:13:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1583,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "36084:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1588,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1585,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1580,
																			"src": "36100:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1586,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "36106:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36100:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "36084:30:1"
																},
																{
																	"body": {
																		"id": 1607,
																		"nodeType": "Block",
																		"src": "36135:214:1",
																		"statements": [
																			{
																				"condition": {
																					"id": 1599,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "36161:63:1",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1592,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "36201:1:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1591,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "36193:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1590,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "36193:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1593,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "36193:10:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1594,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1562,
																								"src": "36205:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1596,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "36209:7:1",
																								"subExpression": {
																									"id": 1595,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1584,
																									"src": "36209:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1597,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1566,
																								"src": "36218:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1589,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1296,
																							"src": "36162:30:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1598,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "36162:62:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1606,
																				"nodeType": "IfStatement",
																				"src": "36157:174:1",
																				"trueBody": {
																					"id": 1605,
																					"nodeType": "Block",
																					"src": "36226:105:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1601,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2198,
																											"src": "36260:38:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 1602,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "36299:8:1",
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "36260:47:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1600,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2167,
																									"src": "36252:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1603,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "36252:56:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1604,
																							"nodeType": "ExpressionStatement",
																							"src": "36252:56:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1608,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "36357:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1609,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1580,
																			"src": "36365:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36357:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1611,
																	"nodeType": "DoWhileStatement",
																	"src": "36132:238:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1612,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "36521:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1613,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1580,
																			"src": "36538:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36521:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1618,
																	"nodeType": "IfStatement",
																	"src": "36517:34:1",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1615,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "36543:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36543:8:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1617,
																		"nodeType": "ExpressionStatement",
																		"src": "36543:8:1"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "35423:388:1",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "35825:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35852:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "35844:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "35872:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "35864:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35864:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "35903:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "35890:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35890:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35834:80:1"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35932:0:1"
									},
									"scope": 2168,
									"src": "35816:766:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "36727:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "36747:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "36751:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36761:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1631,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1623,
															1638
														],
														"referencedDeclaration": 1623,
														"src": "36737:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36737:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "36737:27:1"
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "36588:68:1",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "36670:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36688:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "36680:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36680:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "36700:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "36692:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36692:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36679:30:1"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36727:0:1"
									},
									"scope": 2168,
									"src": "36661:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "37221:1992:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1646,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "37235:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1647,
															"name": "_sequentialUpTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "37246:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37246:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37235:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1655,
												"nodeType": "IfStatement",
												"src": "37231:75:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1651,
																	"name": "SpotMintTokenIdTooSmall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2219,
																	"src": "37273:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "37297:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "37273:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1650,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "37265:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37265:41:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1654,
													"nodeType": "ExpressionStatement",
													"src": "37265:41:1"
												}
											},
											{
												"assignments": [
													1657
												],
												"declarations": [
													{
														"constant": false,
														"id": 1657,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "37324:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "37316:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37316:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1661,
												"initialValue": {
													"baseExpression": {
														"id": 1658,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "37346:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1660,
													"indexExpression": {
														"id": 1659,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "37364:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37346:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37316:56:1"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 1663,
															"name": "prevOwnershipPacked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "37409:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1662,
														"name": "_packedOwnershipExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "37386:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) pure returns (bool)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37386:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1670,
												"nodeType": "IfStatement",
												"src": "37382:85:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1666,
																	"name": "TokenAlreadyExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2222,
																	"src": "37439:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "37458:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "37439:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1665,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "37431:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37431:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1669,
													"nodeType": "ExpressionStatement",
													"src": "37431:36:1"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37508:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37500:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37500:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37500:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "37512:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1677,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "37516:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37525:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1671,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "37478:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37478:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "37478:49:1"
											},
											{
												"id": 1737,
												"nodeType": "UncheckedBlock",
												"src": "37762:1386:1",
												"statements": [
													{
														"expression": {
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1681,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "38019:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1683,
																"indexExpression": {
																	"id": 1682,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "38037:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "38019:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1685,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "38084:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"hexValue": "31",
																					"id": 1687,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "38125:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					}
																				],
																				"id": 1686,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "38104:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38104:23:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1692,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "38153:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1691,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "38145:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1690,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "38145:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38145:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1694,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1641,
																					"src": "38157:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1695,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1657,
																					"src": "38161:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1689,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2139,
																				"src": "38130:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38130:51:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "38104:77:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1684,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "38048:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38048:147:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38019:176:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1700,
														"nodeType": "ExpressionStatement",
														"src": "38019:176:1"
													},
													{
														"expression": {
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1701,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "38392:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1703,
																"indexExpression": {
																	"id": 1702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "38411:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "38392:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "38419:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1705,
																				"name": "_BITPOS_NUMBER_MINTED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 103,
																				"src": "38424:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "38419:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1707,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "38418:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "|",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38449:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "38418:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38392:58:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1711,
														"nodeType": "ExpressionStatement",
														"src": "38392:58:1"
													},
													{
														"assignments": [
															1713
														],
														"declarations": [
															{
																"constant": false,
																"id": 1713,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "38566:8:1",
																"nodeType": "VariableDeclaration",
																"scope": 1737,
																"src": "38558:16:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1712,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "38558:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1723,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1718,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1641,
																				"src": "38593:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "38585:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1716,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "38585:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "38585:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38577:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1714,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "38577:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38577:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1721,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "38600:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38577:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "38558:58:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1724,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "38635:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38635:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1732,
														"nodeType": "IfStatement",
														"src": "38631:54:1",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1728,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2183,
																			"src": "38658:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "38676:8:1",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "38658:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1727,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "38650:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38650:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1731,
															"nodeType": "ExpressionStatement",
															"src": "38650:35:1"
														}
													},
													{
														"AST": {
															"nativeSrc": "38709:401:1",
															"nodeType": "YulBlock",
															"src": "38709:401:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "38799:1:1",
																				"nodeType": "YulLiteral",
																				"src": "38799:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "38859:1:1",
																				"nodeType": "YulLiteral",
																				"src": "38859:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nativeSrc": "38917:25:1",
																				"nodeType": "YulIdentifier",
																				"src": "38917:25:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "38978:1:1",
																				"nodeType": "YulLiteral",
																				"src": "38978:1:1",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nativeSrc": "39018:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "39018:8:1"
																			},
																			{
																				"name": "tokenId",
																				"nativeSrc": "39057:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "39057:7:1"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nativeSrc": "38773:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "38773:4:1"
																		},
																		"nativeSrc": "38773:323:1",
																		"nodeType": "YulFunctionCall",
																		"src": "38773:323:1"
																	},
																	"nativeSrc": "38773:323:1",
																	"nodeType": "YulExpressionStatement",
																	"src": "38773:323:1"
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 158,
																"isOffset": false,
																"isSlot": false,
																"src": "38917:25:1",
																"valueSize": 1
															},
															{
																"declaration": 1713,
																"isOffset": false,
																"isSlot": false,
																"src": "39018:8:1",
																"valueSize": 1
															},
															{
																"declaration": 1643,
																"isOffset": false,
																"isSlot": false,
																"src": "39057:7:1",
																"valueSize": 1
															}
														],
														"id": 1733,
														"nodeType": "InlineAssembly",
														"src": "38700:410:1"
													},
													{
														"expression": {
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "39124:13:1",
															"subExpression": {
																"id": 1734,
																"name": "_spotMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "39126:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1736,
														"nodeType": "ExpressionStatement",
														"src": "39124:13:1"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39187:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39179:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1739,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "39179:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39179:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1743,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "39191:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "39195:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39204:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1738,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "39158:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39158:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "ExpressionStatement",
												"src": "39158:48:1"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "36777:374:1",
										"text": " @dev Mints a single token at `tokenId`.\n Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` must be greater than `_sequentialUpTo()`.\n - `tokenId` must not exist.\n Emits a {Transfer} event for each mint."
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintSpot",
									"nameLocation": "37165:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37183:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "37175:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "37187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37174:29:1"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37221:0:1"
									},
									"scope": 2168,
									"src": "37156:2057:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "39798:557:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "39818:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1761,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "39822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1759,
														"name": "_mintSpot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "39808:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39808:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1763,
												"nodeType": "ExpressionStatement",
												"src": "39808:22:1"
											},
											{
												"id": 1799,
												"nodeType": "UncheckedBlock",
												"src": "39841:508:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1764,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1752,
																		"src": "39869:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "39872:4:1",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "39869:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "39877:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "39869:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39887:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "39869:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1798,
														"nodeType": "IfStatement",
														"src": "39865:474:1",
														"trueBody": {
															"id": 1797,
															"nodeType": "Block",
															"src": "39890:449:1",
															"statements": [
																{
																	"assignments": [
																		1770
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1770,
																			"mutability": "mutable",
																			"name": "currentSpotMinted",
																			"nameLocation": "39916:17:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 1797,
																			"src": "39908:25:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1769,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "39908:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1772,
																	"initialValue": {
																		"id": 1771,
																		"name": "_spotMinted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "39936:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "39908:39:1"
																},
																{
																	"condition": {
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "39969:63:1",
																		"subExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1776,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "40009:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1775,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "40001:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1774,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "40001:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1777,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "40001:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1778,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1752,
																					"src": "40013:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1779,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1754,
																					"src": "40017:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1780,
																					"name": "_data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1756,
																					"src": "40026:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 1773,
																				"name": "_checkContractOnERC721Received",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1296,
																				"src": "39970:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																				}
																			},
																			"id": 1781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "39970:62:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1789,
																	"nodeType": "IfStatement",
																	"src": "39965:166:1",
																	"trueBody": {
																		"id": 1788,
																		"nodeType": "Block",
																		"src": "40034:97:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1784,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2198,
																								"src": "40064:38:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 1785,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "40103:8:1",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "40064:47:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1783,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2167,
																						"src": "40056:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1786,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "40056:56:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1787,
																				"nodeType": "ExpressionStatement",
																				"src": "40056:56:1"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1790,
																			"name": "_spotMinted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 187,
																			"src": "40282:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1791,
																			"name": "currentSpotMinted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1770,
																			"src": "40297:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "40282:32:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1796,
																	"nodeType": "IfStatement",
																	"src": "40278:46:1",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1793,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "40316:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "40316:8:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1795,
																		"nodeType": "ExpressionStatement",
																		"src": "40316:8:1"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "39219:455:1",
										"text": " @dev Safely mints a single token at `tokenId`.\n Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n - `tokenId` must be greater than `_sequentialUpTo()`.\n - `tokenId` must not exist.\n See {_mintSpot}.\n Emits a {Transfer} event."
									},
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMintSpot",
									"nameLocation": "39688:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39719:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "39711:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39739:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "39731:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39731:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "39769:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "39756:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39701:79:1"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39798:0:1"
									},
									"scope": 2168,
									"src": "39679:676:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "40506:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1810,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "40530:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "40534:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40543:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1809,
														"name": "_safeMintSpot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1801,
															1816
														],
														"referencedDeclaration": 1801,
														"src": "40516:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40516:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "40516:30:1"
											}
										]
									},
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "40361:71:1",
										"text": " @dev Equivalent to `_safeMintSpot(to, tokenId, '')`."
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMintSpot",
									"nameLocation": "40446:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40468:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "40460:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40480:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "40472:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40459:29:1"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40506:0:1"
									},
									"scope": 2168,
									"src": "40437:116:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "40885:45:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1825,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "40904:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1826,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "40908:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40917:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1824,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1831,
															1881
														],
														"referencedDeclaration": 1881,
														"src": "40895:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40895:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "40895:28:1"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "40747:69:1",
										"text": " @dev Equivalent to `_approve(to, tokenId, false)`."
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "40830:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40847:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "40839:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40839:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40859:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "40851:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40851:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40838:29:1"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40885:0:1"
									},
									"scope": 2168,
									"src": "40821:109:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "41447:346:1",
										"statements": [
											{
												"assignments": [
													1842
												],
												"declarations": [
													{
														"constant": false,
														"id": 1842,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "41465:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1880,
														"src": "41457:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1841,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "41457:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"initialValue": {
													"arguments": [
														{
															"id": 1844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "41481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1843,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "41473:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41473:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41457:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1847,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "41504:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1848,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "41521:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41521:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1850,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "41544:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "41521:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "41504:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1866,
												"nodeType": "IfStatement",
												"src": "41500:198:1",
												"trueBody": {
													"condition": {
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "41567:45:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 1854,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1842,
																	"src": "41585:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1855,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "41592:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41592:19:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1853,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "41568:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41568:44:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1865,
													"nodeType": "IfStatement",
													"src": "41563:135:1",
													"trueBody": {
														"id": 1864,
														"nodeType": "Block",
														"src": "41614:84:1",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1860,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2174,
																				"src": "41640:33:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "41674:8:1",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "41640:42:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1859,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "41632:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41632:51:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1863,
																"nodeType": "ExpressionStatement",
																"src": "41632:51:1"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1867,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "41708:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$92_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1869,
															"indexExpression": {
																"id": 1868,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1836,
																"src": "41724:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "41708:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$92_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "41733:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 91,
														"src": "41708:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1871,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "41741:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "41708:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "41708:35:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1875,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "41767:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "41774:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "41778:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1874,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "41758:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41758:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "EmitStatement",
												"src": "41753:33:1"
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "40936:392:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"id": 1881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "41342:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41368:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "41360:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41360:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41388:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "41380:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41380:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "41410:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "41405:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41405:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41350:79:1"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41447:0:1"
									},
									"scope": 2168,
									"src": "41333:460:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "42100:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1888,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "42116:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42125:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1887,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1893,
															2047
														],
														"referencedDeclaration": 2047,
														"src": "42110:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42110:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "42110:21:1"
											}
										]
									},
									"documentation": {
										"id": 1882,
										"nodeType": "StructuredDocumentation",
										"src": "41984:62:1",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "42060:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42074:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "42066:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42066:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42065:17:1"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42100:0:1"
									},
									"scope": 2168,
									"src": "42051:87:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2046,
										"nodeType": "Block",
										"src": "42424:2973:1",
										"statements": [
											{
												"assignments": [
													1902
												],
												"declarations": [
													{
														"constant": false,
														"id": 1902,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "42442:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 2046,
														"src": "42434:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42434:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1906,
												"initialValue": {
													"arguments": [
														{
															"id": 1904,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "42483:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1903,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "42464:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42464:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42434:57:1"
											},
											{
												"assignments": [
													1908
												],
												"declarations": [
													{
														"constant": false,
														"id": 1908,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "42510:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 2046,
														"src": "42502:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1907,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42502:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1916,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1913,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "42533:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42525:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1911,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "42525:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42525:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "42517:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1909,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42517:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42517:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42502:52:1"
											},
											{
												"assignments": [
													1918,
													1920
												],
												"declarations": [
													{
														"constant": false,
														"id": 1918,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "42574:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 2046,
														"src": "42566:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42566:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1920,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "42603:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 2046,
														"src": "42595:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1919,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42595:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1924,
												"initialValue": {
													"arguments": [
														{
															"id": 1922,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "42649:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1921,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "42622:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42622:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42565:92:1"
											},
											{
												"condition": {
													"id": 1925,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1898,
													"src": "42672:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1947,
												"nodeType": "IfStatement",
												"src": "42668:321:1",
												"trueBody": {
													"id": 1946,
													"nodeType": "Block",
													"src": "42687:302:1",
													"statements": [
														{
															"condition": {
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "42790:69:1",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1927,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1920,
																			"src": "42816:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1928,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "42833:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1929,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2149,
																				"src": "42839:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42839:19:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1926,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "42791:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42791:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1945,
															"nodeType": "IfStatement",
															"src": "42786:192:1",
															"trueBody": {
																"condition": {
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "42881:44:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1934,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1908,
																				"src": "42899:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1935,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2149,
																					"src": "42905:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1936,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "42905:19:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1933,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 885,
																			"src": "42882:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42882:43:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1944,
																"nodeType": "IfStatement",
																"src": "42877:101:1",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1940,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2192,
																					"src": "42935:33:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "42969:8:1",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "42935:42:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 1939,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "42927:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 1942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42927:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1943,
																	"nodeType": "ExpressionStatement",
																	"src": "42927:51:1"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1949,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "43021:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43035:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43027:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43027:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43027:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "43039:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43048:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1948,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "42999:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42999:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "42999:51:1"
											},
											{
												"AST": {
													"nativeSrc": "43122:181:1",
													"nodeType": "YulBlock",
													"src": "43122:181:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "43155:138:1",
																"nodeType": "YulBlock",
																"src": "43155:138:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "43256:19:1",
																					"nodeType": "YulIdentifier",
																					"src": "43256:19:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "43277:1:1",
																					"nodeType": "YulLiteral",
																					"src": "43277:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "43249:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "43249:6:1"
																			},
																			"nativeSrc": "43249:30:1",
																			"nodeType": "YulFunctionCall",
																			"src": "43249:30:1"
																		},
																		"nativeSrc": "43249:30:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "43249:30:1"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "43139:15:1",
																"nodeType": "YulIdentifier",
																"src": "43139:15:1"
															},
															"nativeSrc": "43136:157:1",
															"nodeType": "YulIf",
															"src": "43136:157:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1920,
														"isOffset": false,
														"isSlot": false,
														"src": "43139:15:1",
														"valueSize": 1
													},
													{
														"declaration": 1918,
														"isOffset": false,
														"isSlot": false,
														"src": "43256:19:1",
														"valueSize": 1
													}
												],
												"id": 1958,
												"nodeType": "InlineAssembly",
												"src": "43113:190:1"
											},
											{
												"id": 2022,
												"nodeType": "UncheckedBlock",
												"src": "43570:1545:1",
												"statements": [
													{
														"expression": {
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1959,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "43882:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1961,
																"indexExpression": {
																	"id": 1960,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1908,
																	"src": "43901:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "43882:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43911:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1963,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 106,
																				"src": "43916:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "43911:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1965,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "43910:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43941:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "43910:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43882:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1969,
														"nodeType": "ExpressionStatement",
														"src": "43882:60:1"
													},
													{
														"expression": {
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1970,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "44173:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1972,
																"indexExpression": {
																	"id": 1971,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "44191:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "44173:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1974,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1908,
																		"src": "44238:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1975,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 125,
																						"src": "44261:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1976,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 133,
																						"src": "44279:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "44261:43:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1978,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "44260:45:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1980,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1908,
																					"src": "44323:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1983,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "44337:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1982,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "44329:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1981,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "44329:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1984,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "44329:10:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1985,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1902,
																					"src": "44341:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1979,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2139,
																				"src": "44308:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "44308:53:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "44260:101:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1973,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "44202:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44202:173:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44173:202:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1990,
														"nodeType": "ExpressionStatement",
														"src": "44173:202:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1991,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "44492:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1992,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "44514:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44492:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44543:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "44492:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2021,
														"nodeType": "IfStatement",
														"src": "44488:617:1",
														"trueBody": {
															"id": 2020,
															"nodeType": "Block",
															"src": "44546:559:1",
															"statements": [
																{
																	"assignments": [
																		1997
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1997,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "44572:11:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 2020,
																			"src": "44564:19:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1996,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "44564:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2001,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1998,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1896,
																			"src": "44586:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44596:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "44586:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "44564:33:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2002,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "44717:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2004,
																			"indexExpression": {
																				"id": 2003,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1997,
																				"src": "44735:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "44717:30:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44751:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "44717:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2019,
																	"nodeType": "IfStatement",
																	"src": "44713:378:1",
																	"trueBody": {
																		"id": 2018,
																		"nodeType": "Block",
																		"src": "44754:337:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2007,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1997,
																						"src": "44838:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2008,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 160,
																						"src": "44853:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "44838:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2017,
																				"nodeType": "IfStatement",
																				"src": "44834:239:1",
																				"trueBody": {
																					"id": 2016,
																					"nodeType": "Block",
																					"src": "44868:205:1",
																					"statements": [
																						{
																							"expression": {
																								"id": 2014,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2010,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 170,
																										"src": "44998:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2012,
																									"indexExpression": {
																										"id": 2011,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1997,
																										"src": "45016:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "44998:30:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2013,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1902,
																									"src": "45031:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "44998:52:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2015,
																							"nodeType": "ExpressionStatement",
																							"src": "44998:52:1"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2024,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "45139:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45153:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45145:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2025,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45145:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45145:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2029,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "45157:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2023,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "45130:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45130:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2031,
												"nodeType": "EmitStatement",
												"src": "45125:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2033,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "45196:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45210:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45202:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45202:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45202:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2038,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "45214:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45223:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2032,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "45175:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45175:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "45175:50:1"
											},
											{
												"id": 2045,
												"nodeType": "UncheckedBlock",
												"src": "45342:49:1",
												"statements": [
													{
														"expression": {
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "45366:14:1",
															"subExpression": {
																"id": 2042,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "45366:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2044,
														"nodeType": "ExpressionStatement",
														"src": "45366:14:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "42144:206:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "42364:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42378:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "42370:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "42392:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "42387:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42387:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42369:37:1"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42424:0:1"
									},
									"scope": 2168,
									"src": "42355:3042:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "45755:456:1",
										"statements": [
											{
												"assignments": [
													2056
												],
												"declarations": [
													{
														"constant": false,
														"id": 2056,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "45773:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "45765:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2055,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2060,
												"initialValue": {
													"baseExpression": {
														"id": 2057,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "45782:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2059,
													"indexExpression": {
														"id": 2058,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "45800:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "45782:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45765:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2061,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "45820:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45830:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "45820:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2069,
												"nodeType": "IfStatement",
												"src": "45816:70:1",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 2065,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "45841:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "45877:8:1",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "45841:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 2064,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "45833:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45833:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2068,
													"nodeType": "ExpressionStatement",
													"src": "45833:53:1"
												}
											},
											{
												"assignments": [
													2071
												],
												"declarations": [
													{
														"constant": false,
														"id": 2071,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "45904:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 2092,
														"src": "45896:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2070,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2072,
												"nodeType": "VariableDeclarationStatement",
												"src": "45896:23:1"
											},
											{
												"AST": {
													"nativeSrc": "46008:52:1",
													"nodeType": "YulBlock",
													"src": "46008:52:1",
													"statements": [
														{
															"nativeSrc": "46022:28:1",
															"nodeType": "YulAssignment",
															"src": "46022:28:1",
															"value": {
																"name": "extraData",
																"nativeSrc": "46041:9:1",
																"nodeType": "YulIdentifier",
																"src": "46041:9:1"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nativeSrc": "46022:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "46022:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2052,
														"isOffset": false,
														"isSlot": false,
														"src": "46041:9:1",
														"valueSize": 1
													},
													{
														"declaration": 2071,
														"isOffset": false,
														"isSlot": false,
														"src": "46022:15:1",
														"valueSize": 1
													}
												],
												"id": 2073,
												"nodeType": "InlineAssembly",
												"src": "45999:61:1"
											},
											{
												"expression": {
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2074,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "46069:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2075,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "46079:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 2076,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "46088:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46079:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2078,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "46078:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2079,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2071,
																		"src": "46123:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 2080,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "46142:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46123:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2082,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "46122:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "46078:83:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46069:92:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2085,
												"nodeType": "ExpressionStatement",
												"src": "46069:92:1"
											},
											{
												"expression": {
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2086,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "46171:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2088,
														"indexExpression": {
															"id": 2087,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "46189:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46171:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2089,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "46198:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46171:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2091,
												"nodeType": "ExpressionStatement",
												"src": "46171:33:1"
											}
										]
									},
									"documentation": {
										"id": 2048,
										"nodeType": "StructuredDocumentation",
										"src": "45591:84:1",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "45689:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "45713:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "45705:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "45727:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "45720:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2051,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "45720:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45704:33:1"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45755:0:1"
									},
									"scope": 2168,
									"src": "45680:531:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2105,
										"nodeType": "Block",
										"src": "46912:2:1",
										"statements": []
									},
									"documentation": {
										"id": 2094,
										"nodeType": "StructuredDocumentation",
										"src": "46217:549:1",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "46780:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "46808:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "46800:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46800:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46830:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "46822:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46822:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "46849:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "46842:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2099,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "46842:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46790:82:1"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "46904:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2102,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "46904:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46903:8:1"
									},
									"scope": 2168,
									"src": "46771:143:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "47200:164:1",
										"statements": [
											{
												"assignments": [
													2119
												],
												"declarations": [
													{
														"constant": false,
														"id": 2119,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "47217:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 2138,
														"src": "47210:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2118,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "47210:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2126,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2122,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2113,
																"src": "47236:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 2123,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "47259:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "47236:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "47229:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2120,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "47229:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47229:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47210:68:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2130,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "47314:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2131,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2111,
																		"src": "47320:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2132,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2119,
																		"src": "47324:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2129,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "47303:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47303:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47295:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2127,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "47295:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47295:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2135,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "47339:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47295:62:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2137,
												"nodeType": "Return",
												"src": "47288:69:1"
											}
										]
									},
									"documentation": {
										"id": 2107,
										"nodeType": "StructuredDocumentation",
										"src": "46920:135:1",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "47069:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47101:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "47093:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47093:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47123:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "47115:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47115:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "47143:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "47135:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47083:85:1"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "47191:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47190:9:1"
									},
									"scope": 2168,
									"src": "47060:304:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2148,
										"nodeType": "Block",
										"src": "47802:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2145,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "47819:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "47823:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "47819:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2144,
												"id": 2147,
												"nodeType": "Return",
												"src": "47812:17:1"
											}
										]
									},
									"documentation": {
										"id": 2140,
										"nodeType": "StructuredDocumentation",
										"src": "47555:173:1",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 2149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "47742:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47759:2:1"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "47793:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47792:9:1"
									},
									"scope": 2168,
									"src": "47733:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "48017:1624:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "48036:1599:1",
													"nodeType": "YulBlock",
													"src": "48036:1599:1",
													"statements": [
														{
															"nativeSrc": "48400:31:1",
															"nodeType": "YulVariableDeclaration",
															"src": "48400:31:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "48419:4:1",
																				"nodeType": "YulLiteral",
																				"src": "48419:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "48413:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "48413:5:1"
																		},
																		"nativeSrc": "48413:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "48413:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "48426:4:1",
																		"nodeType": "YulLiteral",
																		"src": "48426:4:1",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "48409:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "48409:3:1"
																},
																"nativeSrc": "48409:22:1",
																"nodeType": "YulFunctionCall",
																"src": "48409:22:1"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "48404:1:1",
																	"nodeType": "YulTypedName",
																	"src": "48404:1:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "48510:4:1",
																		"nodeType": "YulLiteral",
																		"src": "48510:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "48516:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "48516:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "48503:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "48503:6:1"
																},
																"nativeSrc": "48503:15:1",
																"nodeType": "YulFunctionCall",
																"src": "48503:15:1"
															},
															"nativeSrc": "48503:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "48503:15:1"
														},
														{
															"nativeSrc": "48575:19:1",
															"nodeType": "YulAssignment",
															"src": "48575:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "48586:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "48586:1:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "48589:4:1",
																		"nodeType": "YulLiteral",
																		"src": "48589:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "48582:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "48582:3:1"
																},
																"nativeSrc": "48582:12:1",
																"nodeType": "YulFunctionCall",
																"src": "48582:12:1"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "48575:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "48575:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "48664:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "48664:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "48669:1:1",
																		"nodeType": "YulLiteral",
																		"src": "48669:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "48657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "48657:6:1"
																},
																"nativeSrc": "48657:14:1",
																"nodeType": "YulFunctionCall",
																"src": "48657:14:1"
															},
															"nativeSrc": "48657:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "48657:14:1"
														},
														{
															"nativeSrc": "48759:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "48759:14:1",
															"value": {
																"name": "str",
																"nativeSrc": "48770:3:1",
																"nodeType": "YulIdentifier",
																"src": "48770:3:1"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "48763:3:1",
																	"nodeType": "YulTypedName",
																	"src": "48763:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "49017:388:1",
																"nodeType": "YulBlock",
																"src": "49017:388:1",
																"statements": [
																	{
																		"nativeSrc": "49035:18:1",
																		"nodeType": "YulAssignment",
																		"src": "49035:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "49046:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "49046:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "49051:1:1",
																					"nodeType": "YulLiteral",
																					"src": "49051:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "49042:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "49042:3:1"
																			},
																			"nativeSrc": "49042:11:1",
																			"nodeType": "YulFunctionCall",
																			"src": "49042:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nativeSrc": "49035:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "49035:3:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "49196:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "49196:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "49205:2:1",
																							"nodeType": "YulLiteral",
																							"src": "49205:2:1",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nativeSrc": "49213:4:1",
																									"nodeType": "YulIdentifier",
																									"src": "49213:4:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "49219:2:1",
																									"nodeType": "YulLiteral",
																									"src": "49219:2:1",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nativeSrc": "49209:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "49209:3:1"
																							},
																							"nativeSrc": "49209:13:1",
																							"nodeType": "YulFunctionCall",
																							"src": "49209:13:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "49201:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "49201:3:1"
																					},
																					"nativeSrc": "49201:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "49201:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "49188:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "49188:7:1"
																			},
																			"nativeSrc": "49188:36:1",
																			"nodeType": "YulFunctionCall",
																			"src": "49188:36:1"
																		},
																		"nativeSrc": "49188:36:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "49188:36:1"
																	},
																	{
																		"nativeSrc": "49293:21:1",
																		"nodeType": "YulAssignment",
																		"src": "49293:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "49305:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "49305:4:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "49311:2:1",
																					"nodeType": "YulLiteral",
																					"src": "49311:2:1",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nativeSrc": "49301:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "49301:3:1"
																			},
																			"nativeSrc": "49301:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "49301:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nativeSrc": "49293:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "49293:4:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "49382:9:1",
																			"nodeType": "YulBlock",
																			"src": "49382:9:1",
																			"statements": [
																				{
																					"nativeSrc": "49384:5:1",
																					"nodeType": "YulBreak",
																					"src": "49384:5:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "49376:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "49376:4:1"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "49369:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "49369:6:1"
																			},
																			"nativeSrc": "49369:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "49369:12:1"
																		},
																		"nativeSrc": "49366:25:1",
																		"nodeType": "YulIf",
																		"src": "49366:25:1"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nativeSrc": "49012:1:1",
																"nodeType": "YulLiteral",
																"src": "49012:1:1",
																"type": "",
																"value": "1"
															},
															"nativeSrc": "48986:419:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "49014:2:1",
																"nodeType": "YulBlock",
																"src": "49014:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "48990:21:1",
																"nodeType": "YulBlock",
																"src": "48990:21:1",
																"statements": [
																	{
																		"nativeSrc": "48992:17:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "48992:17:1",
																		"value": {
																			"name": "value",
																			"nativeSrc": "49004:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "49004:5:1"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nativeSrc": "48996:4:1",
																				"nodeType": "YulTypedName",
																				"src": "48996:4:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "48986:419:1"
														},
														{
															"nativeSrc": "49419:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "49419:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "49437:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "49437:3:1"
																	},
																	{
																		"name": "str",
																		"nativeSrc": "49442:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "49442:3:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "49433:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "49433:3:1"
																},
																"nativeSrc": "49433:13:1",
																"nodeType": "YulFunctionCall",
																"src": "49433:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "49423:6:1",
																	"nodeType": "YulTypedName",
																	"src": "49423:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "49539:21:1",
															"nodeType": "YulAssignment",
															"src": "49539:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "49550:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "49550:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "49555:4:1",
																		"nodeType": "YulLiteral",
																		"src": "49555:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "49546:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "49546:3:1"
																},
																"nativeSrc": "49546:14:1",
																"nodeType": "YulFunctionCall",
																"src": "49546:14:1"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "49539:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "49539:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "49613:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "49613:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "49618:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "49618:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "49606:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "49606:6:1"
																},
																"nativeSrc": "49606:19:1",
																"nodeType": "YulFunctionCall",
																"src": "49606:19:1"
															},
															"nativeSrc": "49606:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "49606:19:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2155,
														"isOffset": false,
														"isSlot": false,
														"src": "48575:3:1",
														"valueSize": 1
													},
													{
														"declaration": 2155,
														"isOffset": false,
														"isSlot": false,
														"src": "48664:3:1",
														"valueSize": 1
													},
													{
														"declaration": 2155,
														"isOffset": false,
														"isSlot": false,
														"src": "48770:3:1",
														"valueSize": 1
													},
													{
														"declaration": 2155,
														"isOffset": false,
														"isSlot": false,
														"src": "49035:3:1",
														"valueSize": 1
													},
													{
														"declaration": 2155,
														"isOffset": false,
														"isSlot": false,
														"src": "49046:3:1",
														"valueSize": 1
													},
													{
														"declaration": 2155,
														"isOffset": false,
														"isSlot": false,
														"src": "49196:3:1",
														"valueSize": 1
													},
													{
														"declaration": 2155,
														"isOffset": false,
														"isSlot": false,
														"src": "49442:3:1",
														"valueSize": 1
													},
													{
														"declaration": 2155,
														"isOffset": false,
														"isSlot": false,
														"src": "49539:3:1",
														"valueSize": 1
													},
													{
														"declaration": 2155,
														"isOffset": false,
														"isSlot": false,
														"src": "49550:3:1",
														"valueSize": 1
													},
													{
														"declaration": 2155,
														"isOffset": false,
														"isSlot": false,
														"src": "49613:3:1",
														"valueSize": 1
													},
													{
														"declaration": 2152,
														"isOffset": false,
														"isSlot": false,
														"src": "49004:5:1",
														"valueSize": 1
													}
												],
												"id": 2157,
												"nodeType": "InlineAssembly",
												"src": "48027:1608:1"
											}
										]
									},
									"documentation": {
										"id": 2150,
										"nodeType": "StructuredDocumentation",
										"src": "47842:86:1",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "47942:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "47960:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "47952:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47952:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47951:15:1"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "48012:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "47998:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "47998:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47997:19:1"
									},
									"scope": 2168,
									"src": "47933:1708:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "49756:107:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "49775:82:1",
													"nodeType": "YulBlock",
													"src": "49775:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "49796:4:1",
																		"nodeType": "YulLiteral",
																		"src": "49796:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nativeSrc": "49802:13:1",
																		"nodeType": "YulIdentifier",
																		"src": "49802:13:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "49789:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "49789:6:1"
																},
																"nativeSrc": "49789:27:1",
																"nodeType": "YulFunctionCall",
																"src": "49789:27:1"
															},
															"nativeSrc": "49789:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "49789:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "49836:4:1",
																		"nodeType": "YulLiteral",
																		"src": "49836:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "49842:4:1",
																		"nodeType": "YulLiteral",
																		"src": "49842:4:1",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "49829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "49829:6:1"
																},
																"nativeSrc": "49829:18:1",
																"nodeType": "YulFunctionCall",
																"src": "49829:18:1"
															},
															"nativeSrc": "49829:18:1",
															"nodeType": "YulExpressionStatement",
															"src": "49829:18:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2162,
														"isOffset": false,
														"isSlot": false,
														"src": "49802:13:1",
														"valueSize": 1
													}
												],
												"id": 2165,
												"nodeType": "InlineAssembly",
												"src": "49766:91:1"
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "49647:51:1",
										"text": " @dev For more efficient reverts."
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "49712:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "49727:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "49720:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2161,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "49720:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49719:22:1"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49756:0:1"
									},
									"scope": 2168,
									"src": "49703:160:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2169,
							"src": "1053:48812:1",
							"usedErrors": [
								2174,
								2177,
								2180,
								2183,
								2186,
								2189,
								2192,
								2195,
								2198,
								2201,
								2204,
								2207,
								2210,
								2213,
								2216,
								2219,
								2222,
								2225
							],
							"usedEvents": [
								2257,
								2266,
								2275,
								2388
							]
						}
					],
					"src": "84:49782:1"
				},
				"id": 1
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2389
						]
					},
					"id": 2390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2171,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:2",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2389,
							"linearizedBaseContracts": [
								2389
							],
							"name": "IERC721A",
							"nameLocation": "157:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2172,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:2",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 2174,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:2"
									},
									"src": "253:42:2"
								},
								{
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 2177,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:2"
									},
									"src": "350:41:2"
								},
								{
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:2",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 2180,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:2"
									},
									"src": "467:35:2"
								},
								{
									"documentation": {
										"id": 2181,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:2",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 2183,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:2"
									},
									"src": "564:26:2"
								},
								{
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:2",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 2186,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:2"
									},
									"src": "673:25:2"
								},
								{
									"documentation": {
										"id": 2187,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 2189,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:2"
									},
									"src": "753:38:2"
								},
								{
									"documentation": {
										"id": 2190,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:2",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 2192,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:2"
									},
									"src": "878:42:2"
								},
								{
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:2",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 2195,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:2"
									},
									"src": "984:35:2"
								},
								{
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:2",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 2198,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:2"
									},
									"src": "1146:47:2"
								},
								{
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:2",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 2201,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:2"
									},
									"src": "1259:30:2"
								},
								{
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:2",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 2204,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:2"
									},
									"src": "1344:36:2"
								},
								{
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:2",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 2207,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:2"
									},
									"src": "1470:40:2"
								},
								{
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:2",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 2210,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:2"
									},
									"src": "1604:44:2"
								},
								{
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "1654:78:2",
										"text": " `_sequentialUpTo()` must be greater than `_startTokenId()`."
									},
									"errorSelector": "fed8210f",
									"id": 2213,
									"name": "SequentialUpToTooSmall",
									"nameLocation": "1743:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:2"
									},
									"src": "1737:31:2"
								},
								{
									"documentation": {
										"id": 2214,
										"nodeType": "StructuredDocumentation",
										"src": "1774:82:2",
										"text": " The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
									},
									"errorSelector": "81647e3a",
									"id": 2216,
									"name": "SequentialMintExceedsLimit",
									"nameLocation": "1867:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1893:2:2"
									},
									"src": "1861:35:2"
								},
								{
									"documentation": {
										"id": 2217,
										"nodeType": "StructuredDocumentation",
										"src": "1902:86:2",
										"text": " Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
									},
									"errorSelector": "524a12cc",
									"id": 2219,
									"name": "SpotMintTokenIdTooSmall",
									"nameLocation": "1999:23:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:2:2"
									},
									"src": "1993:32:2"
								},
								{
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "2031:64:2",
										"text": " Cannot mint over a token that already exists."
									},
									"errorSelector": "c991cbb1",
									"id": 2222,
									"name": "TokenAlreadyExists",
									"nameLocation": "2106:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2124:2:2"
									},
									"src": "2100:27:2"
								},
								{
									"documentation": {
										"id": 2223,
										"nodeType": "StructuredDocumentation",
										"src": "2133:65:2",
										"text": " The feature is not compatible with spot mints."
									},
									"errorSelector": "bdba09d7",
									"id": 2225,
									"name": "NotCompatibleWithSpotMints",
									"nameLocation": "2209:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:2:2"
									},
									"src": "2203:35:2"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2234,
									"members": [
										{
											"constant": false,
											"id": 2227,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "2502:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 2234,
											"src": "2494:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2226,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2494:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2229,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2607:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 2234,
											"src": "2600:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2228,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2600:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2231,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2682:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 2234,
											"src": "2677:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2230,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2677:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2233,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2793:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 2234,
											"src": "2786:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2232,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2786:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "2432:14:2",
									"nodeType": "StructDefinition",
									"scope": 2389,
									"src": "2425:384:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "3000:192:2",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 2240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3206:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3217:2:2"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "3243:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3243:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3242:9:2"
									},
									"scope": 2389,
									"src": "3197:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "3439:341:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3794:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3819:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "3812:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2242,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3812:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:20:2"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 2389,
									"src": "3785:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "4048:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2257,
									"name": "Transfer",
									"nameLocation": "4147:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4172:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "4156:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4156:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4194:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "4178:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2255,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4214:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "4198:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4198:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4155:67:2"
									},
									"src": "4141:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2258,
										"nodeType": "StructuredDocumentation",
										"src": "4229:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2266,
									"name": "Approval",
									"nameLocation": "4334:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "4343:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4343:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4382:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "4366:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4408:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "4392:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4392:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:74:2"
									},
									"src": "4328:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "4423:124:2",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 2275,
									"name": "ApprovalForAll",
									"nameLocation": "4558:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4589:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "4573:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4612:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "4596:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4627:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "4622:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4622:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4572:64:2"
									},
									"src": "4552:85:2"
								},
								{
									"documentation": {
										"id": 2276,
										"nodeType": "StructuredDocumentation",
										"src": "4643:74:2",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 2283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4731:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4749:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4741:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4741:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4740:15:2"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4787:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4779:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:17:2"
									},
									"scope": 2389,
									"src": "4722:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2284,
										"nodeType": "StructuredDocumentation",
										"src": "4802:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4947:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4963:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "4955:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4954:17:2"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5003:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "4995:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4995:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4994:15:2"
									},
									"scope": 2389,
									"src": "4938:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2292,
										"nodeType": "StructuredDocumentation",
										"src": "5016:711:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5741:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5775:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "5767:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5767:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5797:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "5789:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5789:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5817:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "5809:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5849:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "5834:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5834:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:102:2"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5876:0:2"
									},
									"scope": 2389,
									"src": "5732:145:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2304,
										"nodeType": "StructuredDocumentation",
										"src": "5883:80:2",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5977:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6011:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "6003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "6025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "6045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5993:73:2"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 2389,
									"src": "5968:116:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "6090:512:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6616:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6646:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "6638:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6668:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "6660:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6688:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "6680:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6628:73:2"
									},
									"returnParameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6718:0:2"
									},
									"scope": 2389,
									"src": "6607:112:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2324,
										"nodeType": "StructuredDocumentation",
										"src": "6725:459:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7198:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7214:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "7206:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7226:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "7218:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:29:2"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7251:0:2"
									},
									"scope": 2389,
									"src": "7189:63:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "7258:316:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7588:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7614:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "7606:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7606:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7629:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "7624:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7624:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7605:34:2"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7648:0:2"
									},
									"scope": 2389,
									"src": "7579:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "7655:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7808:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7828:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "7820:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7819:17:2"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7868:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "7860:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7859:18:2"
									},
									"scope": 2389,
									"src": "7799:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2348,
										"nodeType": "StructuredDocumentation",
										"src": "7884:139:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "8037:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8062:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "8054:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8077:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "8069:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8069:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8053:33:2"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "8110:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8110:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8109:6:2"
									},
									"scope": 2389,
									"src": "8028:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2358,
										"nodeType": "StructuredDocumentation",
										"src": "8307:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8379:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8383:2:2"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "8409:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8409:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8408:15:2"
									},
									"scope": 2389,
									"src": "8370:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2364,
										"nodeType": "StructuredDocumentation",
										"src": "8430:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8504:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8510:2:2"
									},
									"returnParameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "8536:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8536:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8535:15:2"
									},
									"scope": 2389,
									"src": "8495:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2370,
										"nodeType": "StructuredDocumentation",
										"src": "8557:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8661:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "8670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8669:17:2"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "8710:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8710:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8709:15:2"
									},
									"scope": 2389,
									"src": "8652:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2378,
										"nodeType": "StructuredDocumentation",
										"src": "8912:267:2",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 2388,
									"name": "ConsecutiveTransfer",
									"nameLocation": "9190:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "9226:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "9210:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9210:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "9247:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "9239:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9239:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9274:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "9258:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9296:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "9280:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9280:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9209:90:2"
									},
									"src": "9184:116:2"
								}
							],
							"scope": 2390,
							"src": "147:9155:2",
							"usedErrors": [
								2174,
								2177,
								2180,
								2183,
								2186,
								2189,
								2192,
								2195,
								2198,
								2201,
								2204,
								2207,
								2210,
								2213,
								2216,
								2219,
								2222,
								2225
							],
							"usedEvents": [
								2257,
								2266,
								2275,
								2388
							]
						}
					],
					"src": "84:9219:2"
				},
				"id": 2
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol": {
				"ast": {
					"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/ERC721AQueryable.sol",
					"exportedSymbols": {
						"ERC721A": [
							2168
						],
						"ERC721AQueryable": [
							2734
						],
						"ERC721A__IERC721Receiver": [
							86
						],
						"IERC721A": [
							2389
						],
						"IERC721AQueryable": [
							2786
						]
					},
					"id": 2735,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:3"
						},
						{
							"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/IERC721AQueryable.sol",
							"file": "./IERC721AQueryable.sol",
							"id": 2392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2735,
							"sourceUnit": 2787,
							"src": "109:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/ERC721A.sol",
							"file": "../ERC721A.sol",
							"id": 2393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2735,
							"sourceUnit": 2169,
							"src": "143:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2395,
										"name": "ERC721A",
										"nameLocations": [
											"305:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2168,
										"src": "305:7:3"
									},
									"id": 2396,
									"nodeType": "InheritanceSpecifier",
									"src": "305:7:3"
								},
								{
									"baseName": {
										"id": 2397,
										"name": "IERC721AQueryable",
										"nameLocations": [
											"314:17:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2786,
										"src": "314:17:3"
									},
									"id": 2398,
									"nodeType": "InheritanceSpecifier",
									"src": "314:17:3"
								}
							],
							"canonicalName": "ERC721AQueryable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2394,
								"nodeType": "StructuredDocumentation",
								"src": "169:97:3",
								"text": " @title ERC721AQueryable.\n @dev ERC721A subclass with convenience query functions."
							},
							"fullyImplemented": true,
							"id": 2734,
							"linearizedBaseContracts": [
								2734,
								2786,
								2168,
								2389
							],
							"name": "ERC721AQueryable",
							"nameLocation": "285:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2752
									],
									"body": {
										"id": 2442,
										"nodeType": "Block",
										"src": "1231:498:3",
										"statements": [
											{
												"id": 2441,
												"nodeType": "UncheckedBlock",
												"src": "1241:482:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2408,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2401,
																"src": "1269:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2409,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "1280:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1280:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1269:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2440,
														"nodeType": "IfStatement",
														"src": "1265:448:3",
														"trueBody": {
															"id": 2439,
															"nodeType": "Block",
															"src": "1297:416:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2412,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2401,
																			"src": "1319:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2413,
																				"name": "_sequentialUpTo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "1329:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 2414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1329:17:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1319:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2420,
																	"nodeType": "IfStatement",
																	"src": "1315:61:3",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 2417,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2401,
																					"src": "1368:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2416,
																				"name": "_ownershipAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 594,
																				"src": "1355:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2234_memory_ptr_$",
																					"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																				}
																			},
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1355:21:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership memory"
																			}
																		},
																		"functionReturnParameters": 2407,
																		"id": 2419,
																		"nodeType": "Return",
																		"src": "1348:28:3"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2421,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2401,
																			"src": "1399:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2422,
																				"name": "_nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 250,
																				"src": "1409:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 2423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1409:14:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1399:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2438,
																	"nodeType": "IfStatement",
																	"src": "1395:304:3",
																	"trueBody": {
																		"id": 2437,
																		"nodeType": "Block",
																		"src": "1425:274:3",
																		"statements": [
																			{
																				"body": {
																					"expression": {
																						"id": 2430,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "--",
																						"prefix": true,
																						"src": "1621:9:3",
																						"subExpression": {
																							"id": 2429,
																							"name": "tokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2401,
																							"src": "1623:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2431,
																					"nodeType": "ExpressionStatement",
																					"src": "1621:9:3"
																				},
																				"condition": {
																					"id": 2428,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "1586:33:3",
																					"subExpression": {
																						"arguments": [
																							{
																								"id": 2426,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2401,
																								"src": "1611:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2425,
																							"name": "_ownershipIsInitialized",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 609,
																							"src": "1587:23:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (uint256) view returns (bool)"
																							}
																						},
																						"id": 2427,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1587:32:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2432,
																				"nodeType": "WhileStatement",
																				"src": "1579:51:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 2434,
																							"name": "tokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2401,
																							"src": "1672:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2433,
																						"name": "_ownershipAt",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 594,
																						"src": "1659:12:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2234_memory_ptr_$",
																							"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																						}
																					},
																					"id": 2435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1659:21:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																						"typeString": "struct IERC721A.TokenOwnership memory"
																					}
																				},
																				"functionReturnParameters": 2407,
																				"id": 2436,
																				"nodeType": "Return",
																				"src": "1652:28:3"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2399,
										"nodeType": "StructuredDocumentation",
										"src": "338:727:3",
										"text": " @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n If the `tokenId` is out of bounds:\n - `addr = address(0)`\n - `startTimestamp = 0`\n - `burned = false`\n - `extraData = 0`\n If the `tokenId` is burned:\n - `addr = <Address of owner before token was burned>`\n - `startTimestamp = <Timestamp when token was burned>`\n - `burned = true`\n - `extraData = <Extra data when token was burned>`\n Otherwise:\n - `addr = <Address of owner>`\n - `startTimestamp = <Timestamp of start of ownership>`\n - `burned = false`\n - `extraData = <Extra data at start of ownership>`"
									},
									"functionSelector": "c23dc68f",
									"id": 2443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipOf",
									"nameLocation": "1079:19:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2403,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1168:8:3"
									},
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1107:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "1099:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:17:3"
									},
									"returnParameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "1216:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "1194:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 2405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2404,
														"name": "TokenOwnership",
														"nameLocations": [
															"1194:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2234,
														"src": "1194:14:3"
													},
													"referencedDeclaration": 2234,
													"src": "1194:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2234_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:33:3"
									},
									"scope": 2734,
									"src": "1070:659:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2763
									],
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "2050:963:3",
										"statements": [
											{
												"assignments": [
													2459
												],
												"declarations": [
													{
														"constant": false,
														"id": 2459,
														"mutability": "mutable",
														"name": "ownerships",
														"nameLocation": "2084:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 2486,
														"src": "2060:34:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2234_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership[]"
														},
														"typeName": {
															"baseType": {
																"id": 2457,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2456,
																	"name": "TokenOwnership",
																	"nameLocations": [
																		"2060:14:3"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2234,
																	"src": "2060:14:3"
																},
																"referencedDeclaration": 2234,
																"src": "2060:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2234_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																}
															},
															"id": 2458,
															"nodeType": "ArrayTypeName",
															"src": "2060:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2234_storage_$dyn_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2460,
												"nodeType": "VariableDeclarationStatement",
												"src": "2060:34:3"
											},
											{
												"assignments": [
													2462
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "2112:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 2486,
														"src": "2104:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2465,
												"initialValue": {
													"expression": {
														"id": 2463,
														"name": "tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2447,
														"src": "2116:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2125:6:3",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2116:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2104:27:3"
											},
											{
												"AST": {
													"nativeSrc": "2150:373:3",
													"nodeType": "YulBlock",
													"src": "2150:373:3",
													"statements": [
														{
															"nativeSrc": "2209:25:3",
															"nodeType": "YulAssignment",
															"src": "2209:25:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2229:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2229:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2223:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2223:5:3"
																},
																"nativeSrc": "2223:11:3",
																"nodeType": "YulFunctionCall",
																"src": "2223:11:3"
															},
															"variableNames": [
																{
																	"name": "ownerships",
																	"nativeSrc": "2209:10:3",
																	"nodeType": "YulIdentifier",
																	"src": "2209:10:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ownerships",
																		"nativeSrc": "2287:10:3",
																		"nodeType": "YulIdentifier",
																		"src": "2287:10:3"
																	},
																	{
																		"name": "i",
																		"nativeSrc": "2299:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2299:1:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2280:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2280:6:3"
																},
																"nativeSrc": "2280:21:3",
																"nodeType": "YulFunctionCall",
																"src": "2280:21:3"
															},
															"nativeSrc": "2280:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "2280:21:3"
														},
														{
															"nativeSrc": "2420:14:3",
															"nodeType": "YulAssignment",
															"src": "2420:14:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2429:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2429:1:3",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "i",
																		"nativeSrc": "2432:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2432:1:3"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2425:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2425:3:3"
																},
																"nativeSrc": "2425:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2425:9:3"
															},
															"variableNames": [
																{
																	"name": "i",
																	"nativeSrc": "2420:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2420:1:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2477:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2477:4:3",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ownerships",
																						"nativeSrc": "2491:10:3",
																						"nodeType": "YulIdentifier",
																						"src": "2491:10:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2503:4:3",
																						"nodeType": "YulLiteral",
																						"src": "2503:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2487:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2487:3:3"
																				},
																				"nativeSrc": "2487:21:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2487:21:3"
																			},
																			{
																				"name": "i",
																				"nativeSrc": "2510:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "2510:1:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2483:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2483:3:3"
																		},
																		"nativeSrc": "2483:29:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2483:29:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2470:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:3"
																},
																"nativeSrc": "2470:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2470:43:3"
															},
															"nativeSrc": "2470:43:3",
															"nodeType": "YulExpressionStatement",
															"src": "2470:43:3"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2462,
														"isOffset": false,
														"isSlot": false,
														"src": "2299:1:3",
														"valueSize": 1
													},
													{
														"declaration": 2462,
														"isOffset": false,
														"isSlot": false,
														"src": "2420:1:3",
														"valueSize": 1
													},
													{
														"declaration": 2462,
														"isOffset": false,
														"isSlot": false,
														"src": "2432:1:3",
														"valueSize": 1
													},
													{
														"declaration": 2462,
														"isOffset": false,
														"isSlot": false,
														"src": "2510:1:3",
														"valueSize": 1
													},
													{
														"declaration": 2459,
														"isOffset": false,
														"isSlot": false,
														"src": "2209:10:3",
														"valueSize": 1
													},
													{
														"declaration": 2459,
														"isOffset": false,
														"isSlot": false,
														"src": "2287:10:3",
														"valueSize": 1
													},
													{
														"declaration": 2459,
														"isOffset": false,
														"isSlot": false,
														"src": "2491:10:3",
														"valueSize": 1
													}
												],
												"id": 2466,
												"nodeType": "InlineAssembly",
												"src": "2141:382:3"
											},
											{
												"body": {
													"id": 2482,
													"nodeType": "Block",
													"src": "2547:433:3",
													"statements": [
														{
															"assignments": [
																2471
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2471,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "2569:7:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2482,
																	"src": "2561:15:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2470,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2561:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2472,
															"nodeType": "VariableDeclarationStatement",
															"src": "2561:15:3"
														},
														{
															"AST": {
																"nativeSrc": "2599:114:3",
																"nodeType": "YulBlock",
																"src": "2599:114:3",
																"statements": [
																	{
																		"nativeSrc": "2617:17:3",
																		"nodeType": "YulAssignment",
																		"src": "2617:17:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2626:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "2626:1:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2629:4:3",
																					"nodeType": "YulLiteral",
																					"src": "2629:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "2622:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2622:3:3"
																			},
																			"nativeSrc": "2622:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2622:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2617:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "2617:1:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2651:48:3",
																		"nodeType": "YulAssignment",
																		"src": "2651:48:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tokenIds.offset",
																							"nativeSrc": "2679:15:3",
																							"nodeType": "YulIdentifier",
																							"src": "2679:15:3"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2696:1:3",
																							"nodeType": "YulIdentifier",
																							"src": "2696:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2675:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2675:3:3"
																					},
																					"nativeSrc": "2675:23:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2675:23:3"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "2662:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "2662:12:3"
																			},
																			"nativeSrc": "2662:37:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2662:37:3"
																		},
																		"variableNames": [
																			{
																				"name": "tokenId",
																				"nativeSrc": "2651:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2651:7:3"
																			}
																		]
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2462,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2617:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 2462,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2626:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 2462,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2696:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 2471,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2651:7:3",
																	"valueSize": 1
																},
																{
																	"declaration": 2447,
																	"isOffset": true,
																	"isSlot": false,
																	"src": "2679:15:3",
																	"suffix": "offset",
																	"valueSize": 1
																}
															],
															"id": 2473,
															"nodeType": "InlineAssembly",
															"src": "2590:123:3"
														},
														{
															"assignments": [
																2476
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2476,
																	"mutability": "mutable",
																	"name": "ownership",
																	"nameLocation": "2748:9:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2482,
																	"src": "2726:31:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	},
																	"typeName": {
																		"id": 2475,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2474,
																			"name": "TokenOwnership",
																			"nameLocations": [
																				"2726:14:3"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2234,
																			"src": "2726:14:3"
																		},
																		"referencedDeclaration": 2234,
																		"src": "2726:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$2234_storage_ptr",
																			"typeString": "struct IERC721A.TokenOwnership"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2480,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2478,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2471,
																		"src": "2780:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2477,
																	"name": "explicitOwnershipOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2443,
																	"src": "2760:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2234_memory_ptr_$",
																		"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																	}
																},
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2760:28:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																	"typeString": "struct IERC721A.TokenOwnership memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2726:62:3"
														},
														{
															"AST": {
																"nativeSrc": "2811:159:3",
																"nodeType": "YulBlock",
																"src": "2811:159:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "ownerships",
																									"nativeSrc": "2923:10:3",
																									"nodeType": "YulIdentifier",
																									"src": "2923:10:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2935:4:3",
																									"nodeType": "YulLiteral",
																									"src": "2935:4:3",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2919:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "2919:3:3"
																							},
																							"nativeSrc": "2919:21:3",
																							"nodeType": "YulFunctionCall",
																							"src": "2919:21:3"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2942:1:3",
																							"nodeType": "YulIdentifier",
																							"src": "2942:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2915:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2915:3:3"
																					},
																					"nativeSrc": "2915:29:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2915:29:3"
																				},
																				{
																					"name": "ownership",
																					"nativeSrc": "2946:9:3",
																					"nodeType": "YulIdentifier",
																					"src": "2946:9:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2908:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2908:6:3"
																			},
																			"nativeSrc": "2908:48:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2908:48:3"
																		},
																		"nativeSrc": "2908:48:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2908:48:3"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2462,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2942:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 2476,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2946:9:3",
																	"valueSize": 1
																},
																{
																	"declaration": 2459,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2923:10:3",
																	"valueSize": 1
																}
															],
															"id": 2481,
															"nodeType": "InlineAssembly",
															"src": "2802:168:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2467,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2462,
														"src": "2539:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2544:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2483,
												"nodeType": "WhileStatement",
												"src": "2532:448:3"
											},
											{
												"expression": {
													"id": 2484,
													"name": "ownerships",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2459,
													"src": "2996:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2234_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory[] memory"
													}
												},
												"functionReturnParameters": 2454,
												"id": 2485,
												"nodeType": "Return",
												"src": "2989:17:3"
											}
										]
									},
									"documentation": {
										"id": 2444,
										"nodeType": "StructuredDocumentation",
										"src": "1735:142:3",
										"text": " @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n See {ERC721AQueryable-explicitOwnershipOf}"
									},
									"functionSelector": "5bbb2177",
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipsOf",
									"nameLocation": "1891:20:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2449,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1995:8:3"
									},
									"parameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1931:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "1912:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2445,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1912:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2446,
													"nodeType": "ArrayTypeName",
													"src": "1912:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:29:3"
									},
									"returnParameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "2021:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2234_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership[]"
												},
												"typeName": {
													"baseType": {
														"id": 2451,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2450,
															"name": "TokenOwnership",
															"nameLocations": [
																"2021:14:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2234,
															"src": "2021:14:3"
														},
														"referencedDeclaration": 2234,
														"src": "2021:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2234_storage_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														}
													},
													"id": 2452,
													"nodeType": "ArrayTypeName",
													"src": "2021:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2234_storage_$dyn_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:25:3"
									},
									"scope": 2734,
									"src": "1882:1131:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2776
									],
									"body": {
										"id": 2507,
										"nodeType": "Block",
										"src": "3544:60:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2502,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "3578:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2503,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "3585:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2504,
															"name": "stop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2494,
															"src": "3592:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2501,
														"name": "_tokensOfOwnerIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "3561:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address,uint256,uint256) view returns (uint256[] memory)"
														}
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3561:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2500,
												"id": 2506,
												"nodeType": "Return",
												"src": "3554:43:3"
											}
										]
									},
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "3019:363:3",
										"text": " @dev Returns an array of token IDs owned by `owner`,\n in the range [`start`, `stop`)\n (i.e. `start <= tokenId < stop`).\n This function allows for tokens to be queried if the collection\n grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n Requirements:\n - `start < stop`"
									},
									"functionSelector": "99a2557a",
									"id": 2508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwnerIn",
									"nameLocation": "3396:15:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2496,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3508:8:3"
									},
									"parameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "3421:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "3452:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "3444:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "stop",
												"nameLocation": "3475:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "3467:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:74:3"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "3526:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2497,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3526:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2498,
													"nodeType": "ArrayTypeName",
													"src": "3526:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:18:3"
									},
									"scope": 2734,
									"src": "3387:217:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2785
									],
									"body": {
										"id": 2562,
										"nodeType": "Block",
										"src": "4135:388:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2518,
															"name": "_sequentialUpTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4216:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4216:17:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4242:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2521,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4242:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 2520,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4237:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4237:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 2524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4251:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4237:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4216:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2531,
												"nodeType": "IfStatement",
												"src": "4212:88:3",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 2527,
																	"name": "NotCompatibleWithSpotMints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "4264:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4291:8:3",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "4264:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 2526,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "4256:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4256:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2530,
													"nodeType": "ExpressionStatement",
													"src": "4256:44:3"
												}
											},
											{
												"assignments": [
													2533
												],
												"declarations": [
													{
														"constant": false,
														"id": 2533,
														"mutability": "mutable",
														"name": "start",
														"nameLocation": "4318:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 2562,
														"src": "4310:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2532,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4310:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2536,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2534,
														"name": "_startTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "4326:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4326:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4310:31:3"
											},
											{
												"assignments": [
													2538
												],
												"declarations": [
													{
														"constant": false,
														"id": 2538,
														"mutability": "mutable",
														"name": "stop",
														"nameLocation": "4359:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 2562,
														"src": "4351:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4351:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2541,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2539,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "4366:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4366:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4351:29:3"
											},
											{
												"assignments": [
													2546
												],
												"declarations": [
													{
														"constant": false,
														"id": 2546,
														"mutability": "mutable",
														"name": "tokenIds",
														"nameLocation": "4407:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 2562,
														"src": "4390:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2544,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4390:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2545,
															"nodeType": "ArrayTypeName",
															"src": "4390:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2547,
												"nodeType": "VariableDeclarationStatement",
												"src": "4390:25:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2548,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2533,
														"src": "4429:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2549,
														"name": "stop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2538,
														"src": "4438:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4429:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2559,
												"nodeType": "IfStatement",
												"src": "4425:66:3",
												"trueBody": {
													"expression": {
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2551,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "4444:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 2553,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2511,
																	"src": "4472:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2554,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "4479:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2555,
																	"name": "stop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2538,
																	"src": "4486:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2552,
																"name": "_tokensOfOwnerIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2733,
																"src": "4455:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (address,uint256,uint256) view returns (uint256[] memory)"
																}
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4455:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"src": "4444:47:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2558,
													"nodeType": "ExpressionStatement",
													"src": "4444:47:3"
												}
											},
											{
												"expression": {
													"id": 2560,
													"name": "tokenIds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2546,
													"src": "4508:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2517,
												"id": 2561,
												"nodeType": "Return",
												"src": "4501:15:3"
											}
										]
									},
									"documentation": {
										"id": 2509,
										"nodeType": "StructuredDocumentation",
										"src": "3610:424:3",
										"text": " @dev Returns an array of token IDs owned by `owner`.\n This function scans the ownership mapping and is O(`totalSupply`) in complexity.\n It is meant to be called off-chain.\n See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n multiple smaller scans if the collection is large enough to cause\n an out-of-gas error (10K collections should be fine)."
									},
									"functionSelector": "8462151c",
									"id": 2563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "4048:13:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2513,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4099:8:3"
									},
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4070:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "4062:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4062:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4061:15:3"
									},
									"returnParameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "4117:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2514,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4117:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2515,
													"nodeType": "ArrayTypeName",
													"src": "4117:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:18:3"
									},
									"scope": 2734,
									"src": "4039:484:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2732,
										"nodeType": "Block",
										"src": "4920:4757:3",
										"statements": [
											{
												"id": 2731,
												"nodeType": "UncheckedBlock",
												"src": "4930:4741:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2576,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "4958:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2577,
																"name": "stop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "4967:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4958:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2584,
														"nodeType": "IfStatement",
														"src": "4954:54:3",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2580,
																			"name": "InvalidQueryRange",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "4981:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4999:8:3",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "4981:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 2579,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "4973:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4973:35:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2583,
															"nodeType": "ExpressionStatement",
															"src": "4973:35:3"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2585,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "5084:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2586,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "5092:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5092:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5084:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2594,
														"nodeType": "IfStatement",
														"src": "5080:52:3",
														"trueBody": {
															"expression": {
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2589,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "5109:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2590,
																		"name": "_startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "5117:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5117:15:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5109:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2593,
															"nodeType": "ExpressionStatement",
															"src": "5109:23:3"
														}
													},
													{
														"assignments": [
															2596
														],
														"declarations": [
															{
																"constant": false,
																"id": 2596,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "5154:11:3",
																"nodeType": "VariableDeclaration",
																"scope": 2731,
																"src": "5146:19:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2595,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5146:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2599,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2597,
																"name": "_nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "5168:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5168:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5146:36:3"
													},
													{
														"assignments": [
															2601
														],
														"declarations": [
															{
																"constant": false,
																"id": 2601,
																"mutability": "mutable",
																"name": "stopLimit",
																"nameLocation": "5291:9:3",
																"nodeType": "VariableDeclaration",
																"scope": 2731,
																"src": "5283:17:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2600,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5283:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2613,
														"initialValue": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2602,
																		"name": "_sequentialUpTo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "5303:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5303:17:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5329:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2605,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5329:7:3",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 2604,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5324:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5324:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5338:3:3",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5324:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5303:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 2611,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "5351:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "5303:59:3",
															"trueExpression": {
																"id": 2610,
																"name": "stop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "5344:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5283:79:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2614,
																"name": "stop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "5430:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2615,
																"name": "stopLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2601,
																"src": "5438:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5430:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2621,
														"nodeType": "IfStatement",
														"src": "5426:39:3",
														"trueBody": {
															"expression": {
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2617,
																	"name": "stop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2570,
																	"src": "5449:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2618,
																	"name": "stopLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "5456:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5449:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2620,
															"nodeType": "ExpressionStatement",
															"src": "5449:16:3"
														}
													},
													{
														"assignments": [
															2623
														],
														"declarations": [
															{
																"constant": false,
																"id": 2623,
																"mutability": "mutable",
																"name": "tokenIdsMaxLength",
																"nameLocation": "5528:17:3",
																"nodeType": "VariableDeclaration",
																"scope": 2731,
																"src": "5520:25:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2622,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5520:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2627,
														"initialValue": {
															"arguments": [
																{
																	"id": 2625,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2566,
																	"src": "5558:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2624,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5548:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5548:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5520:44:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2628,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "5662:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2629,
																"name": "stop",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "5671:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5662:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2635,
														"nodeType": "IfStatement",
														"src": "5658:40:3",
														"trueBody": {
															"expression": {
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2631,
																	"name": "tokenIdsMaxLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2623,
																	"src": "5677:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5697:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5677:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2634,
															"nodeType": "ExpressionStatement",
															"src": "5677:21:3"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2636,
																"name": "tokenIdsMaxLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "5772:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5793:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5772:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2730,
														"nodeType": "IfStatement",
														"src": "5768:3893:3",
														"trueBody": {
															"id": 2729,
															"nodeType": "Block",
															"src": "5796:3865:3",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2639,
																				"name": "stop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2570,
																				"src": "5905:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2640,
																				"name": "start",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2568,
																				"src": "5912:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5905:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2642,
																			"name": "tokenIdsMaxLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "5921:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5905:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2650,
																	"nodeType": "IfStatement",
																	"src": "5901:71:3",
																	"trueBody": {
																		"expression": {
																			"id": 2648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2644,
																				"name": "tokenIdsMaxLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2623,
																				"src": "5940:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2645,
																					"name": "stop",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2570,
																					"src": "5960:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2646,
																					"name": "start",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2568,
																					"src": "5967:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5960:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5940:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2649,
																		"nodeType": "ExpressionStatement",
																		"src": "5940:32:3"
																	}
																},
																{
																	"assignments": [
																		2652
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2652,
																			"mutability": "mutable",
																			"name": "m",
																			"nameLocation": "5998:1:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 2729,
																			"src": "5990:9:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2651,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5990:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2653,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5990:9:3"
																},
																{
																	"AST": {
																		"nativeSrc": "6056:393:3",
																		"nodeType": "YulBlock",
																		"src": "6056:393:3",
																		"statements": [
																			{
																				"nativeSrc": "6131:23:3",
																				"nodeType": "YulAssignment",
																				"src": "6131:23:3",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6149:4:3",
																							"nodeType": "YulLiteral",
																							"src": "6149:4:3",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6143:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6143:5:3"
																					},
																					"nativeSrc": "6143:11:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6143:11:3"
																				},
																				"variableNames": [
																					{
																						"name": "tokenIds",
																						"nativeSrc": "6131:8:3",
																						"nodeType": "YulIdentifier",
																						"src": "6131:8:3"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6342:53:3",
																				"nodeType": "YulAssignment",
																				"src": "6342:53:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenIds",
																							"nativeSrc": "6351:8:3",
																							"nodeType": "YulIdentifier",
																							"src": "6351:8:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6365:1:3",
																									"nodeType": "YulLiteral",
																									"src": "6365:1:3",
																									"type": "",
																									"value": "5"
																								},
																								{
																									"arguments": [
																										{
																											"name": "tokenIdsMaxLength",
																											"nativeSrc": "6372:17:3",
																											"nodeType": "YulIdentifier",
																											"src": "6372:17:3"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6391:1:3",
																											"nodeType": "YulLiteral",
																											"src": "6391:1:3",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "6368:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "6368:3:3"
																									},
																									"nativeSrc": "6368:25:3",
																									"nodeType": "YulFunctionCall",
																									"src": "6368:25:3"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nativeSrc": "6361:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "6361:3:3"
																							},
																							"nativeSrc": "6361:33:3",
																							"nodeType": "YulFunctionCall",
																							"src": "6361:33:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6347:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6347:3:3"
																					},
																					"nativeSrc": "6347:48:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6347:48:3"
																				},
																				"variableNames": [
																					{
																						"name": "m",
																						"nativeSrc": "6342:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "6342:1:3"
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6423:4:3",
																							"nodeType": "YulLiteral",
																							"src": "6423:4:3",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"name": "m",
																							"nativeSrc": "6429:1:3",
																							"nodeType": "YulIdentifier",
																							"src": "6429:1:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "6416:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "6416:6:3"
																					},
																					"nativeSrc": "6416:15:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6416:15:3"
																				},
																				"nativeSrc": "6416:15:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "6416:15:3"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 2652,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6342:1:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2652,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6429:1:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2574,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6131:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2574,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6351:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2623,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6372:17:3",
																			"valueSize": 1
																		}
																	],
																	"id": 2654,
																	"nodeType": "InlineAssembly",
																	"src": "6047:402:3"
																},
																{
																	"assignments": [
																		2657
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2657,
																			"mutability": "mutable",
																			"name": "ownership",
																			"nameLocation": "6624:9:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 2729,
																			"src": "6602:31:3",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																				"typeString": "struct IERC721A.TokenOwnership"
																			},
																			"typeName": {
																				"id": 2656,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 2655,
																					"name": "TokenOwnership",
																					"nameLocations": [
																						"6602:14:3"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 2234,
																					"src": "6602:14:3"
																				},
																				"referencedDeclaration": 2234,
																				"src": "6602:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$2234_storage_ptr",
																					"typeString": "struct IERC721A.TokenOwnership"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2661,
																	"initialValue": {
																		"arguments": [
																			{
																				"id": 2659,
																				"name": "start",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2568,
																				"src": "6656:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2658,
																			"name": "explicitOwnershipOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2443,
																			"src": "6636:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2234_memory_ptr_$",
																				"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																			}
																		},
																		"id": 2660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6636:26:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																			"typeString": "struct IERC721A.TokenOwnership memory"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "6602:60:3"
																},
																{
																	"assignments": [
																		2663
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2663,
																			"mutability": "mutable",
																			"name": "currOwnershipAddr",
																			"nameLocation": "6688:17:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 2729,
																			"src": "6680:25:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"typeName": {
																				"id": 2662,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6680:7:3",
																				"stateMutability": "nonpayable",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2664,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "6680:25:3"
																},
																{
																	"condition": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "6971:17:3",
																		"subExpression": {
																			"expression": {
																				"id": 2665,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2657,
																				"src": "6972:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6982:6:3",
																			"memberName": "burned",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2231,
																			"src": "6972:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2673,
																	"nodeType": "IfStatement",
																	"src": "6967:57:3",
																	"trueBody": {
																		"expression": {
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2668,
																				"name": "currOwnershipAddr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2663,
																				"src": "6990:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2669,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2657,
																					"src": "7010:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																						"typeString": "struct IERC721A.TokenOwnership memory"
																					}
																				},
																				"id": 2670,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7020:4:3",
																				"memberName": "addr",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2227,
																				"src": "7010:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6990:34:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2672,
																		"nodeType": "ExpressionStatement",
																		"src": "6990:34:3"
																	}
																},
																{
																	"assignments": [
																		2675
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2675,
																			"mutability": "mutable",
																			"name": "tokenIdsIdx",
																			"nameLocation": "7050:11:3",
																			"nodeType": "VariableDeclaration",
																			"scope": 2729,
																			"src": "7042:19:3",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2674,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7042:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2676,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "7042:19:3"
																},
																{
																	"body": {
																		"id": 2717,
																		"nodeType": "Block",
																		"src": "7232:2208:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2684,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2677,
																							"name": "_sequentialUpTo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 241,
																							"src": "7258:15:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																								"typeString": "function () view returns (uint256)"
																							}
																						},
																						"id": 2678,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7258:17:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"arguments": [
																								{
																									"id": 2681,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "7284:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 2680,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "7284:7:3",
																										"typeDescriptions": {}
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									}
																								],
																								"id": 2679,
																								"name": "type",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967269,
																								"src": "7279:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 2682,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7279:13:3",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_meta_type_t_uint256",
																								"typeString": "type(uint256)"
																							}
																						},
																						"id": 2683,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "7293:3:3",
																						"memberName": "max",
																						"nodeType": "MemberAccess",
																						"src": "7279:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7258:38:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2709,
																				"nodeType": "IfStatement",
																				"src": "7254:405:3",
																				"trueBody": {
																					"id": 2708,
																					"nodeType": "Block",
																					"src": "7298:361:3",
																					"statements": [
																						{
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2687,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2685,
																									"name": "start",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2568,
																									"src": "7399:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"id": 2686,
																									"name": "nextTokenId",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2596,
																									"src": "7408:11:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "7399:20:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"id": 2695,
																							"nodeType": "IfStatement",
																							"src": "7395:55:3",
																							"trueBody": {
																								"expression": {
																									"id": 2693,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2688,
																										"name": "start",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2568,
																										"src": "7421:5:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 2692,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"arguments": [],
																											"expression": {
																												"argumentTypes": [],
																												"id": 2689,
																												"name": "_sequentialUpTo",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 241,
																												"src": "7429:15:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																													"typeString": "function () view returns (uint256)"
																												}
																											},
																											"id": 2690,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "7429:17:3",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "+",
																										"rightExpression": {
																											"hexValue": "31",
																											"id": 2691,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "7449:1:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "7429:21:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "7421:29:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2694,
																								"nodeType": "ExpressionStatement",
																								"src": "7421:29:3"
																							}
																						},
																						{
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2699,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2696,
																									"name": "start",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2568,
																									"src": "7579:5:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">",
																								"rightExpression": {
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"id": 2697,
																										"name": "_sequentialUpTo",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 241,
																										"src": "7587:15:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																											"typeString": "function () view returns (uint256)"
																										}
																									},
																									"id": 2698,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "7587:17:3",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "7579:25:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"id": 2707,
																							"nodeType": "IfStatement",
																							"src": "7575:61:3",
																							"trueBody": {
																								"expression": {
																									"id": 2705,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2700,
																										"name": "currOwnershipAddr",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2663,
																										"src": "7606:17:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "30",
																												"id": 2703,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "7634:1:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												}
																											],
																											"id": 2702,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "7626:7:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_address_$",
																												"typeString": "type(address)"
																											},
																											"typeName": {
																												"id": 2701,
																												"name": "address",
																												"nodeType": "ElementaryTypeName",
																												"src": "7626:7:3",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 2704,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "7626:10:3",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "7606:30:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"id": 2706,
																								"nodeType": "ExpressionStatement",
																								"src": "7606:30:3"
																							}
																						}
																					]
																				}
																			},
																			{
																				"expression": {
																					"id": 2714,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2710,
																						"name": "ownership",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "7680:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																							"typeString": "struct IERC721A.TokenOwnership memory"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 2712,
																								"name": "start",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2568,
																								"src": "7705:5:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2711,
																							"name": "_ownershipAt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 594,
																							"src": "7692:12:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$2234_memory_ptr_$",
																								"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
																							}
																						},
																						"id": 2713,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7692:19:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																							"typeString": "struct IERC721A.TokenOwnership memory"
																						}
																					},
																					"src": "7680:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
																						"typeString": "struct IERC721A.TokenOwnership memory"
																					}
																				},
																				"id": 2715,
																				"nodeType": "ExpressionStatement",
																				"src": "7680:31:3"
																			},
																			{
																				"AST": {
																					"nativeSrc": "7779:1643:3",
																					"nodeType": "YulBlock",
																					"src": "7779:1643:3",
																					"statements": [
																						{
																							"cases": [
																								{
																									"body": {
																										"nativeSrc": "7930:886:3",
																										"nodeType": "YulBlock",
																										"src": "7930:886:3",
																										"statements": [
																											{
																												"body": {
																													"nativeSrc": "8213:101:3",
																													"nodeType": "YulBlock",
																													"src": "8213:101:3",
																													"statements": [
																														{
																															"nativeSrc": "8247:37:3",
																															"nodeType": "YulAssignment",
																															"src": "8247:37:3",
																															"value": {
																																"arguments": [
																																	{
																																		"name": "ownership",
																																		"nativeSrc": "8274:9:3",
																																		"nodeType": "YulIdentifier",
																																		"src": "8274:9:3"
																																	}
																																],
																																"functionName": {
																																	"name": "mload",
																																	"nativeSrc": "8268:5:3",
																																	"nodeType": "YulIdentifier",
																																	"src": "8268:5:3"
																																},
																																"nativeSrc": "8268:16:3",
																																"nodeType": "YulFunctionCall",
																																"src": "8268:16:3"
																															},
																															"variableNames": [
																																{
																																	"name": "currOwnershipAddr",
																																	"nativeSrc": "8247:17:3",
																																	"nodeType": "YulIdentifier",
																																	"src": "8247:17:3"
																																}
																															]
																														}
																													]
																												},
																												"condition": {
																													"arguments": [
																														{
																															"name": "ownership",
																															"nativeSrc": "8202:9:3",
																															"nodeType": "YulIdentifier",
																															"src": "8202:9:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "8196:5:3",
																														"nodeType": "YulIdentifier",
																														"src": "8196:5:3"
																													},
																													"nativeSrc": "8196:16:3",
																													"nodeType": "YulFunctionCall",
																													"src": "8196:16:3"
																												},
																												"nativeSrc": "8193:121:3",
																												"nodeType": "YulIf",
																												"src": "8193:121:3"
																											},
																											{
																												"body": {
																													"nativeSrc": "8610:180:3",
																													"nodeType": "YulBlock",
																													"src": "8610:180:3",
																													"statements": [
																														{
																															"nativeSrc": "8644:34:3",
																															"nodeType": "YulAssignment",
																															"src": "8644:34:3",
																															"value": {
																																"arguments": [
																																	{
																																		"name": "tokenIdsIdx",
																																		"nativeSrc": "8663:11:3",
																																		"nodeType": "YulIdentifier",
																																		"src": "8663:11:3"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "8676:1:3",
																																		"nodeType": "YulLiteral",
																																		"src": "8676:1:3",
																																		"type": "",
																																		"value": "1"
																																	}
																																],
																																"functionName": {
																																	"name": "add",
																																	"nativeSrc": "8659:3:3",
																																	"nodeType": "YulIdentifier",
																																	"src": "8659:3:3"
																																},
																																"nativeSrc": "8659:19:3",
																																"nodeType": "YulFunctionCall",
																																"src": "8659:19:3"
																															},
																															"variableNames": [
																																{
																																	"name": "tokenIdsIdx",
																																	"nativeSrc": "8644:11:3",
																																	"nodeType": "YulIdentifier",
																																	"src": "8644:11:3"
																																}
																															]
																														},
																														{
																															"expression": {
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"name": "tokenIds",
																																				"nativeSrc": "8722:8:3",
																																				"nodeType": "YulIdentifier",
																																				"src": "8722:8:3"
																																			},
																																			{
																																				"arguments": [
																																					{
																																						"kind": "number",
																																						"nativeSrc": "8736:1:3",
																																						"nodeType": "YulLiteral",
																																						"src": "8736:1:3",
																																						"type": "",
																																						"value": "5"
																																					},
																																					{
																																						"name": "tokenIdsIdx",
																																						"nativeSrc": "8739:11:3",
																																						"nodeType": "YulIdentifier",
																																						"src": "8739:11:3"
																																					}
																																				],
																																				"functionName": {
																																					"name": "shl",
																																					"nativeSrc": "8732:3:3",
																																					"nodeType": "YulIdentifier",
																																					"src": "8732:3:3"
																																				},
																																				"nativeSrc": "8732:19:3",
																																				"nodeType": "YulFunctionCall",
																																				"src": "8732:19:3"
																																			}
																																		],
																																		"functionName": {
																																			"name": "add",
																																			"nativeSrc": "8718:3:3",
																																			"nodeType": "YulIdentifier",
																																			"src": "8718:3:3"
																																		},
																																		"nativeSrc": "8718:34:3",
																																		"nodeType": "YulFunctionCall",
																																		"src": "8718:34:3"
																																	},
																																	{
																																		"name": "start",
																																		"nativeSrc": "8754:5:3",
																																		"nodeType": "YulIdentifier",
																																		"src": "8754:5:3"
																																	}
																																],
																																"functionName": {
																																	"name": "mstore",
																																	"nativeSrc": "8711:6:3",
																																	"nodeType": "YulIdentifier",
																																	"src": "8711:6:3"
																																},
																																"nativeSrc": "8711:49:3",
																																"nodeType": "YulFunctionCall",
																																"src": "8711:49:3"
																															},
																															"nativeSrc": "8711:49:3",
																															"nodeType": "YulExpressionStatement",
																															"src": "8711:49:3"
																														}
																													]
																												},
																												"condition": {
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"kind": "number",
																																	"nativeSrc": "8574:2:3",
																																	"nodeType": "YulLiteral",
																																	"src": "8574:2:3",
																																	"type": "",
																																	"value": "96"
																																},
																																{
																																	"arguments": [
																																		{
																																			"name": "currOwnershipAddr",
																																			"nativeSrc": "8582:17:3",
																																			"nodeType": "YulIdentifier",
																																			"src": "8582:17:3"
																																		},
																																		{
																																			"name": "owner",
																																			"nativeSrc": "8601:5:3",
																																			"nodeType": "YulIdentifier",
																																			"src": "8601:5:3"
																																		}
																																	],
																																	"functionName": {
																																		"name": "xor",
																																		"nativeSrc": "8578:3:3",
																																		"nodeType": "YulIdentifier",
																																		"src": "8578:3:3"
																																	},
																																	"nativeSrc": "8578:29:3",
																																	"nodeType": "YulFunctionCall",
																																	"src": "8578:29:3"
																																}
																															],
																															"functionName": {
																																"name": "shl",
																																"nativeSrc": "8570:3:3",
																																"nodeType": "YulIdentifier",
																																"src": "8570:3:3"
																															},
																															"nativeSrc": "8570:38:3",
																															"nodeType": "YulFunctionCall",
																															"src": "8570:38:3"
																														}
																													],
																													"functionName": {
																														"name": "iszero",
																														"nativeSrc": "8563:6:3",
																														"nodeType": "YulIdentifier",
																														"src": "8563:6:3"
																													},
																													"nativeSrc": "8563:46:3",
																													"nodeType": "YulFunctionCall",
																													"src": "8563:46:3"
																												},
																												"nativeSrc": "8560:230:3",
																												"nodeType": "YulIf",
																												"src": "8560:230:3"
																											}
																										]
																									},
																									"nativeSrc": "7923:893:3",
																									"nodeType": "YulCase",
																									"src": "7923:893:3",
																									"value": {
																										"kind": "number",
																										"nativeSrc": "7928:1:3",
																										"nodeType": "YulLiteral",
																										"src": "7928:1:3",
																										"type": "",
																										"value": "0"
																									}
																								},
																								{
																									"body": {
																										"nativeSrc": "9081:78:3",
																										"nodeType": "YulBlock",
																										"src": "9081:78:3",
																										"statements": [
																											{
																												"nativeSrc": "9111:22:3",
																												"nodeType": "YulAssignment",
																												"src": "9111:22:3",
																												"value": {
																													"kind": "number",
																													"nativeSrc": "9132:1:3",
																													"nodeType": "YulLiteral",
																													"src": "9132:1:3",
																													"type": "",
																													"value": "0"
																												},
																												"variableNames": [
																													{
																														"name": "currOwnershipAddr",
																														"nativeSrc": "9111:17:3",
																														"nodeType": "YulIdentifier",
																														"src": "9111:17:3"
																													}
																												]
																											}
																										]
																									},
																									"nativeSrc": "9073:86:3",
																									"nodeType": "YulCase",
																									"src": "9073:86:3",
																									"value": "default"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "ownership",
																												"nativeSrc": "7822:9:3",
																												"nodeType": "YulIdentifier",
																												"src": "7822:9:3"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "7833:4:3",
																												"nodeType": "YulLiteral",
																												"src": "7833:4:3",
																												"type": "",
																												"value": "0x40"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7818:3:3",
																											"nodeType": "YulIdentifier",
																											"src": "7818:3:3"
																										},
																										"nativeSrc": "7818:20:3",
																										"nodeType": "YulFunctionCall",
																										"src": "7818:20:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7812:5:3",
																									"nodeType": "YulIdentifier",
																									"src": "7812:5:3"
																								},
																								"nativeSrc": "7812:27:3",
																								"nodeType": "YulFunctionCall",
																								"src": "7812:27:3"
																							},
																							"nativeSrc": "7805:1354:3",
																							"nodeType": "YulSwitch",
																							"src": "7805:1354:3"
																						},
																						{
																							"nativeSrc": "9184:22:3",
																							"nodeType": "YulAssignment",
																							"src": "9184:22:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "start",
																										"nativeSrc": "9197:5:3",
																										"nodeType": "YulIdentifier",
																										"src": "9197:5:3"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9204:1:3",
																										"nodeType": "YulLiteral",
																										"src": "9204:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9193:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "9193:3:3"
																								},
																								"nativeSrc": "9193:13:3",
																								"nodeType": "YulFunctionCall",
																								"src": "9193:13:3"
																							},
																							"variableNames": [
																								{
																									"name": "start",
																									"nativeSrc": "9184:5:3",
																									"nodeType": "YulIdentifier",
																									"src": "9184:5:3"
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "9392:4:3",
																										"nodeType": "YulLiteral",
																										"src": "9392:4:3",
																										"type": "",
																										"value": "0x40"
																									},
																									{
																										"name": "m",
																										"nativeSrc": "9398:1:3",
																										"nodeType": "YulIdentifier",
																										"src": "9398:1:3"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "9385:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "9385:6:3"
																								},
																								"nativeSrc": "9385:15:3",
																								"nodeType": "YulFunctionCall",
																								"src": "9385:15:3"
																							},
																							"nativeSrc": "9385:15:3",
																							"nodeType": "YulExpressionStatement",
																							"src": "9385:15:3"
																						}
																					]
																				},
																				"evmVersion": "cancun",
																				"externalReferences": [
																					{
																						"declaration": 2663,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "8247:17:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2663,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "8582:17:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2663,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "9111:17:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2652,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "9398:1:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2566,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "8601:5:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2657,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "7822:9:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2657,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "8202:9:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2657,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "8274:9:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2568,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "8754:5:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2568,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "9184:5:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2568,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "9197:5:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2574,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "8722:8:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2675,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "8644:11:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2675,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "8663:11:3",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2675,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "8739:11:3",
																						"valueSize": 1
																					}
																				],
																				"id": 2716,
																				"nodeType": "InlineAssembly",
																				"src": "7770:1652:3"
																			}
																		]
																	},
																	"condition": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "9448:52:3",
																		"subExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 2724,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2718,
																							"name": "start",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2568,
																							"src": "9450:5:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"id": 2719,
																							"name": "stop",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2570,
																							"src": "9459:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9450:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2723,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2721,
																							"name": "tokenIdsIdx",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2675,
																							"src": "9467:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"id": 2722,
																							"name": "tokenIdsMaxLength",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2623,
																							"src": "9482:17:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9467:32:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "9450:49:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 2725,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9449:51:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2727,
																	"nodeType": "DoWhileStatement",
																	"src": "7229:2273:3"
																},
																{
																	"AST": {
																		"nativeSrc": "9578:69:3",
																		"nodeType": "YulBlock",
																		"src": "9578:69:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tokenIds",
																							"nativeSrc": "9607:8:3",
																							"nodeType": "YulIdentifier",
																							"src": "9607:8:3"
																						},
																						{
																							"name": "tokenIdsIdx",
																							"nativeSrc": "9617:11:3",
																							"nodeType": "YulIdentifier",
																							"src": "9617:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "9600:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "9600:6:3"
																					},
																					"nativeSrc": "9600:29:3",
																					"nodeType": "YulFunctionCall",
																					"src": "9600:29:3"
																				},
																				"nativeSrc": "9600:29:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "9600:29:3"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 2574,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "9607:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2675,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "9617:11:3",
																			"valueSize": 1
																		}
																	],
																	"id": 2728,
																	"nodeType": "InlineAssembly",
																	"src": "9569:78:3"
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2564,
										"nodeType": "StructuredDocumentation",
										"src": "4529:237:3",
										"text": " @dev Helper function for returning an array of token IDs owned by `owner`.\n Note that this function is optimized for smaller bytecode size over runtime gas,\n since it is meant to be called off-chain."
									},
									"id": 2733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokensOfOwnerIn",
									"nameLocation": "4780:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4814:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "4806:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "4837:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "4829:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4829:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "stop",
												"nameLocation": "4860:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "4852:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4852:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4796:74:3"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "4910:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2733,
												"src": "4893:25:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2572,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4893:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2573,
													"nodeType": "ArrayTypeName",
													"src": "4893:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:27:3"
									},
									"scope": 2734,
									"src": "4771:4906:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2735,
							"src": "267:9412:3",
							"usedErrors": [
								2174,
								2177,
								2180,
								2183,
								2186,
								2189,
								2192,
								2195,
								2198,
								2201,
								2204,
								2207,
								2210,
								2213,
								2216,
								2219,
								2222,
								2225,
								2743
							],
							"usedEvents": [
								2257,
								2266,
								2275,
								2388
							]
						}
					],
					"src": "84:9596:3"
				},
				"id": 3
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/IERC721AQueryable.sol": {
				"ast": {
					"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/extensions/IERC721AQueryable.sol",
					"exportedSymbols": {
						"IERC721A": [
							2389
						],
						"IERC721AQueryable": [
							2786
						]
					},
					"id": 2787,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2736,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:4"
						},
						{
							"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 2737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2787,
							"sourceUnit": 2390,
							"src": "109:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2739,
										"name": "IERC721A",
										"nameLocations": [
											"214:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2389,
										"src": "214:8:4"
									},
									"id": 2740,
									"nodeType": "InheritanceSpecifier",
									"src": "214:8:4"
								}
							],
							"canonicalName": "IERC721AQueryable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2738,
								"nodeType": "StructuredDocumentation",
								"src": "136:46:4",
								"text": " @dev Interface of ERC721AQueryable."
							},
							"fullyImplemented": false,
							"id": 2786,
							"linearizedBaseContracts": [
								2786,
								2389
							],
							"name": "IERC721AQueryable",
							"nameLocation": "193:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "229:59:4",
										"text": " Invalid query range (`start` >= `stop`)."
									},
									"errorSelector": "32c1995a",
									"id": 2743,
									"name": "InvalidQueryRange",
									"nameLocation": "299:17:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:4"
									},
									"src": "293:26:4"
								},
								{
									"documentation": {
										"id": 2744,
										"nodeType": "StructuredDocumentation",
										"src": "325:727:4",
										"text": " @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n If the `tokenId` is out of bounds:\n - `addr = address(0)`\n - `startTimestamp = 0`\n - `burned = false`\n - `extraData = 0`\n If the `tokenId` is burned:\n - `addr = <Address of owner before token was burned>`\n - `startTimestamp = <Timestamp when token was burned>`\n - `burned = true`\n - `extraData = <Extra data when token was burned>`\n Otherwise:\n - `addr = <Address of owner>`\n - `startTimestamp = <Timestamp of start of ownership>`\n - `burned = false`\n - `extraData = <Extra data at start of ownership>`"
									},
									"functionSelector": "c23dc68f",
									"id": 2752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipOf",
									"nameLocation": "1066:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1094:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "1086:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:17:4"
									},
									"returnParameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "1126:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2234_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 2749,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2748,
														"name": "TokenOwnership",
														"nameLocations": [
															"1126:14:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2234,
														"src": "1126:14:4"
													},
													"referencedDeclaration": 2234,
													"src": "1126:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2234_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:23:4"
									},
									"scope": 2786,
									"src": "1057:92:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2753,
										"nodeType": "StructuredDocumentation",
										"src": "1155:142:4",
										"text": " @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n See {ERC721AQueryable-explicitOwnershipOf}"
									},
									"functionSelector": "5bbb2177",
									"id": 2763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "explicitOwnershipsOf",
									"nameLocation": "1311:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1349:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "1332:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2754,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1332:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2755,
													"nodeType": "ArrayTypeName",
													"src": "1332:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:27:4"
									},
									"returnParameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "1382:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2234_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership[]"
												},
												"typeName": {
													"baseType": {
														"id": 2759,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2758,
															"name": "TokenOwnership",
															"nameLocations": [
																"1382:14:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2234,
															"src": "1382:14:4"
														},
														"referencedDeclaration": 2234,
														"src": "1382:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$2234_storage_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														}
													},
													"id": 2760,
													"nodeType": "ArrayTypeName",
													"src": "1382:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenOwnership_$2234_storage_$dyn_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:25:4"
									},
									"scope": 2786,
									"src": "1302:105:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2764,
										"nodeType": "StructuredDocumentation",
										"src": "1413:363:4",
										"text": " @dev Returns an array of token IDs owned by `owner`,\n in the range [`start`, `stop`)\n (i.e. `start <= tokenId < stop`).\n This function allows for tokens to be queried if the collection\n grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n Requirements:\n - `start < stop`"
									},
									"functionSelector": "99a2557a",
									"id": 2776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwnerIn",
									"nameLocation": "1790:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1823:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "1815:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1846:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "1838:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "stop",
												"nameLocation": "1869:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "1861:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:74:4"
									},
									"returnParameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "1903:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2772,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1903:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2773,
													"nodeType": "ArrayTypeName",
													"src": "1903:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:18:4"
									},
									"scope": 2786,
									"src": "1781:140:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2777,
										"nodeType": "StructuredDocumentation",
										"src": "1927:424:4",
										"text": " @dev Returns an array of token IDs owned by `owner`.\n This function scans the ownership mapping and is O(`totalSupply`) in complexity.\n It is meant to be called off-chain.\n See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n multiple smaller scans if the collection is large enough to cause\n an out-of-gas error (10K collections should be fine)."
									},
									"functionSelector": "8462151c",
									"id": 2785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "2365:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2387:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "2379:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2379:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2378:15:4"
									},
									"returnParameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "2417:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2781,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2417:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2782,
													"nodeType": "ArrayTypeName",
													"src": "2417:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:18:4"
									},
									"scope": 2786,
									"src": "2356:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2787,
							"src": "183:2254:4",
							"usedErrors": [
								2174,
								2177,
								2180,
								2183,
								2186,
								2189,
								2192,
								2195,
								2198,
								2201,
								2204,
								2207,
								2210,
								2213,
								2216,
								2219,
								2222,
								2225,
								2743
							],
							"usedEvents": [
								2257,
								2266,
								2275,
								2388
							]
						}
					],
					"src": "84:2354:4"
				},
				"id": 4
			}
		}
	}
}