{
	"id": "1d7189045ae691da6434896cbe3ee917",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ContractW/ContractWV3.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.25;\r\n\r\nimport \"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\";\r\n\r\n// simple marketplace listing contract mimicking opensea's extensive functionality\r\ncontract ContractWV3 {\r\n    struct Listing {\r\n        address seller;\r\n        address nftContract;\r\n        uint256 tokenId;\r\n        uint256 price;\r\n        bytes32 salt;\r\n    }\r\n\r\n    // obtained via `keccak256(\"ListingCreated(bytes32, address)\")`\r\n    bytes32 private constant _LISTING_CREATED_EVENT_SIGNATURE = 0x17a154a37f0fb7c7f440e4672a098f6afcc1ba29bc7ab9ce143014be49d7410e;\r\n    // obtained via `keccak256(\"ListingCancelled(bytes32, address)\")`\r\n    bytes32 private constant _LISTING_CANCELLED_EVENT_SIGNATURE = 0x13c3e2105d66aef65e187710d248703d9b145a13fc06330bcec2d4481ad0da10;\r\n    // obtained via `keccak256(\"ListingPurchased(bytes32, address)\")`\r\n    bytes32 private constant _LISTING_PURCHASED_EVENT_SIGNATURE = 0x4c72f34d0e2a0b597a25ae9c086c06c4ac48ba071ecc23757ab1668bcd20be50;\r\n    \r\n    mapping (bytes32 => Listing) private listings;\r\n\r\n    error InvalidSeller();\r\n    error InvalidBuyer();\r\n    error ListingAlreadyCancelled(bytes32 listingHash);\r\n    error NotOwner(uint256 tokenId);\r\n    error ListingNotFound(bytes32 listingHash);\r\n    error InvalidListing(bytes32 listingHash);\r\n    error InvalidAmountToPay(bytes32 listingHash, uint256 price, uint256 amountToPay);\r\n\r\n    modifier onlyOwner(uint256 tokenId, address nftContract) {\r\n        _checkNFTOwned(tokenId, nftContract);\r\n\r\n        _;\r\n    }\r\n\r\n    modifier onlySeller(bytes32 listingHash) {\r\n        _checkIfSeller(listingHash);\r\n\r\n        _;\r\n    }\r\n\r\n    function createListing(\r\n        uint256 tokenId,\r\n        address nftContract,\r\n        bytes32 salt,\r\n        uint256 price\r\n    ) external onlyOwner(tokenId, nftContract) {\r\n        bytes32 listingHash = getListingHash(tokenId, msg.sender, price, nftContract, salt);\r\n\r\n        listings[listingHash] = Listing({\r\n            seller: msg.sender,\r\n            nftContract: nftContract,\r\n            tokenId: tokenId,\r\n            price: price,\r\n            salt: salt\r\n        });\r\n\r\n        assembly {\r\n            log3(\r\n                0,\r\n                0,\r\n                _LISTING_CREATED_EVENT_SIGNATURE,\r\n                listingHash,\r\n                caller()\r\n            )\r\n        }\r\n    }\r\n\r\n    // since empty listings have address(0) as the seller, we don't need an extra modifier to check\r\n    // if the listing actually exists. if `onlySeller` passes, it's assumed the listing does exist.\r\n    function cancelListing(bytes32 listingHash) external onlySeller(listingHash) {\r\n        delete listings[listingHash];\r\n\r\n        assembly {\r\n            log2(\r\n                0,\r\n                0,\r\n                listingHash,\r\n                caller()\r\n            )\r\n        }\r\n    }\r\n\r\n    function changeListingPrice(bytes32 listingHash, uint256 price) external onlySeller(listingHash) {\r\n        listings[listingHash].price = price;\r\n    }\r\n\r\n    function buy(bytes32 listingHash, address nftContract) external payable {\r\n        Listing memory listing = listings[listingHash];\r\n\r\n        _checkValidListing(listingHash);\r\n        _checkValidBuyer(listingHash);\r\n        _checkValidAmountToPay(listingHash);\r\n\r\n        IERC721A(nftContract).safeTransferFrom(listing.seller, msg.sender, listing.tokenId);\r\n\r\n        payable(listing.seller).transfer(msg.value);\r\n\r\n        delete listings[listingHash];\r\n        \r\n        assembly {\r\n            log3(\r\n                0,\r\n                0,\r\n                _LISTING_PURCHASED_EVENT_SIGNATURE,\r\n                listingHash,\r\n                caller()\r\n            )\r\n        }\r\n    }\r\n\r\n    function getListingHash(\r\n        uint256 tokenId,\r\n        address seller,\r\n        uint256 price,\r\n        address nftContract,\r\n        bytes32 salt\r\n    ) public pure returns (bytes32) {\r\n        return keccak256(\r\n            abi.encodePacked(\r\n                tokenId,\r\n                seller,\r\n                price,\r\n                nftContract,\r\n                salt\r\n            )\r\n        );\r\n    }\r\n\r\n    function _checkNFTOwned(uint256 tokenId, address nftContract) private view {\r\n        if (IERC721A(nftContract).ownerOf(tokenId) != msg.sender) revert NotOwner(tokenId);\r\n    }\r\n\r\n    function _checkIfSeller(bytes32 listingHash) private view {\r\n        if (listings[listingHash].seller != msg.sender) revert InvalidSeller();\r\n    }\r\n\r\n    function _checkValidListing(bytes32 listingHash) private view {\r\n        if (listings[listingHash].seller == address(0)) revert ListingNotFound(listingHash);\r\n    }\r\n\r\n    function _checkValidBuyer(bytes32 listingHash) private view {\r\n        if (listings[listingHash].seller == msg.sender) revert InvalidBuyer();\r\n    }\r\n\r\n    function _checkValidAmountToPay(bytes32 listingHash) private view {\r\n        if (msg.value != listings[listingHash].price) revert InvalidAmountToPay(listingHash, listings[listingHash].price, msg.value);\r\n    }\r\n}"
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    /**\n     * `_sequentialUpTo()` must be greater than `_startTokenId()`.\n     */\n    error SequentialUpToTooSmall();\n\n    /**\n     * The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\n     */\n    error SequentialMintExceedsLimit();\n\n    /**\n     * Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\n     */\n    error SpotMintTokenIdTooSmall();\n\n    /**\n     * Cannot mint over a token that already exists.\n     */\n    error TokenAlreadyExists();\n\n    /**\n     * The feature is not compatible with spot mints.\n     */\n    error NotCompatibleWithSpotMints();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ContractW/ContractWV3.sol": {
				"ContractWV3": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "listingHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountToPay",
									"type": "uint256"
								}
							],
							"name": "InvalidAmountToPay",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidBuyer",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "listingHash",
									"type": "bytes32"
								}
							],
							"name": "InvalidListing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSeller",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "listingHash",
									"type": "bytes32"
								}
							],
							"name": "ListingAlreadyCancelled",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "listingHash",
									"type": "bytes32"
								}
							],
							"name": "ListingNotFound",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "NotOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "listingHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "listingHash",
									"type": "bytes32"
								}
							],
							"name": "cancelListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "listingHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "changeListingPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "createListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "getListingHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ContractW/ContractWV3.sol\":231:5026  contract ContractWV3 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ContractW/ContractWV3.sol\":231:5026  contract ContractWV3 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaa8de794\n      gt\n      tag_7\n      jumpi\n      dup1\n      0xaa8de794\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc049604a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdac17732\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      dup1\n      0x04f24938\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x9299e552\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ContractW/ContractWV3.sol\":1672:2374  function createListing(... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/ContractW/ContractWV3.sol\":2584:2871  function cancelListing(bytes32 listingHash) external onlySeller(listingHash) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_9\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n        /* \"contracts/ContractW/ContractWV3.sol\":2879:3030  function changeListingPrice(bytes32 listingHash, uint256 price) external onlySeller(listingHash) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_9\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n        /* \"contracts/ContractW/ContractWV3.sol\":3038:3722  function buy(bytes32 listingHash, address nftContract) external payable {... */\n    tag_5:\n      tag_9\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n        /* \"contracts/ContractW/ContractWV3.sol\":3730:4139  function getListingHash(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/ContractW/ContractWV3.sol\":3961:4120  abi.encodePacked(... */\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2813:2832   */\n      swap8\n      swap1\n      swap8\n      mstore\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":2920:2922   */\n      0x60\n        /* \"#utility.yul\":2916:2931   */\n      swap7\n      dup8\n      shl\n        /* \"#utility.yul\":2912:2936   */\n      dup2\n      and\n        /* \"#utility.yul\":2898:2910   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":2891:2937   */\n      mstore\n        /* \"#utility.yul\":2953:2965   */\n      0x54\n      dup3\n      add\n        /* \"#utility.yul\":2946:2974   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":3008:3023   */\n      swap3\n      swap1\n      swap5\n      shl\n        /* \"#utility.yul\":3004:3028   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":2990:3002   */\n      0x74\n      dup3\n      add\n        /* \"#utility.yul\":2983:3029   */\n      mstore\n        /* \"#utility.yul\":3045:3058   */\n      0x88\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3038:3067   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ContractW/ContractWV3.sol\":3961:4120  abi.encodePacked(... */\n      dup3\n      mload\n      dup1\n      dup3\n      sub\n      swap1\n      swap3\n      add\n      dup3\n      mstore\n        /* \"#utility.yul\":3083:3096   */\n      0xa8\n      add\n        /* \"contracts/ContractW/ContractWV3.sol\":3961:4120  abi.encodePacked(... */\n      swap1\n      swap2\n      mstore\n        /* \"contracts/ContractW/ContractWV3.sol\":3937:4131  keccak256(... */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n      swap1\n        /* \"contracts/ContractW/ContractWV3.sol\":3730:4139  function getListingHash(... */\n      jump\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":2133:2158   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2121:2123   */\n      0x20\n        /* \"#utility.yul\":2106:2124   */\n      add\n        /* \"contracts/ContractW/ContractWV3.sol\":3730:4139  function getListingHash(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ContractW/ContractWV3.sol\":1672:2374  function createListing(... */\n    tag_12:\n        /* \"contracts/ContractW/ContractWV3.sol\":1824:1831  tokenId */\n      dup4\n        /* \"contracts/ContractW/ContractWV3.sol\":1833:1844  nftContract */\n      dup4\n        /* \"contracts/ContractW/ContractWV3.sol\":1497:1533  _checkNFTOwned(tokenId, nftContract) */\n      tag_35\n        /* \"contracts/ContractW/ContractWV3.sol\":1512:1519  tokenId */\n      dup3\n        /* \"contracts/ContractW/ContractWV3.sol\":1521:1532  nftContract */\n      dup3\n        /* \"contracts/ContractW/ContractWV3.sol\":1497:1511  _checkNFTOwned */\n      tag_36\n        /* \"contracts/ContractW/ContractWV3.sol\":1497:1533  _checkNFTOwned(tokenId, nftContract) */\n      jump\t// in\n    tag_35:\n        /* \"contracts/ContractW/ContractWV3.sol\":3961:4120  abi.encodePacked(... */\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2813:2832   */\n      dup10\n      swap1\n      mstore\n      not(0xffffffffffffffffffffffff)\n        /* \"contracts/ContractW/ContractWV3.sol\":1903:1913  msg.sender */\n      caller\n        /* \"#utility.yul\":2920:2922   */\n      0x60\n        /* \"#utility.yul\":2916:2931   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":2912:2936   */\n      dup3\n      and\n        /* \"#utility.yul\":2898:2910   */\n      dup5\n      dup7\n      add\n        /* \"#utility.yul\":2891:2937   */\n      mstore\n        /* \"#utility.yul\":2953:2965   */\n      0x54\n      dup5\n      add\n        /* \"#utility.yul\":2946:2974   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":3008:3023   */\n      dup10\n      swap1\n      shl\n        /* \"#utility.yul\":3004:3028   */\n      and\n        /* \"#utility.yul\":2990:3002   */\n      0x74\n      dup4\n      add\n        /* \"#utility.yul\":2983:3029   */\n      mstore\n        /* \"#utility.yul\":3045:3058   */\n      0x88\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":3038:3067   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/ContractW/ContractWV3.sol\":3961:4120  abi.encodePacked(... */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":3083:3096   */\n      0xa8\n      swap1\n      swap3\n      add\n        /* \"contracts/ContractW/ContractWV3.sol\":3961:4120  abi.encodePacked(... */\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ContractW/ContractWV3.sol\":3937:4131  keccak256(... */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":1857:1876  bytes32 listingHash */\n      0x00\n      swap1\n        /* \"contracts/ContractW/ContractWV3.sol\":1977:2152  Listing({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/ContractW/ContractWV3.sol\":2008:2018  msg.sender */\n      caller\n        /* \"contracts/ContractW/ContractWV3.sol\":1977:2152  Listing({... */\n      dup1\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      dup3\n      mstore\n      dup5\n      dup7\n      add\n      dup15\n      dup2\n      mstore\n      0x60\n      dup7\n      add\n      dup13\n      dup2\n      mstore\n      0x80\n      dup8\n      add\n      dup15\n      dup2\n      mstore\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":1953:1974  listings[listingHash] */\n      dup11\n      dup2\n      mstore\n      swap4\n      dup5\n      swap1\n      mstore\n      swap8\n      dup4\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":1953:2152  listings[listingHash] = Listing({... */\n      swap7\n      mload\n      dup8\n      sload\n      swap1\n      dup7\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap2\n      dup3\n      and\n      or\n      dup9\n      sstore\n      swap4\n      mload\n      0x01\n      dup9\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap7\n      and\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap4\n      sstore\n      swap2\n      mload\n      0x02\n      dup6\n      add\n      sstore\n      mload\n      0x03\n      dup5\n      add\n      sstore\n      swap3\n      mload\n      0x04\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ContractW/ContractWV3.sol\":1857:1940  bytes32 listingHash = getListingHash(tokenId, msg.sender, price, nftContract, salt) */\n      swap2\n      swap3\n      pop\n      dup3\n      swap1\n        /* \"contracts/ContractW/ContractWV3.sol\":2252:2284  _LISTING_CREATED_EVENT_SIGNATURE */\n      0x17a154a37f0fb7c7f440e4672a098f6afcc1ba29bc7ab9ce143014be49d7410e\n      swap1\n      dup1\n        /* \"contracts/ContractW/ContractWV3.sol\":2189:2356  log3(... */\n      log3\n        /* \"contracts/ContractW/ContractWV3.sol\":2174:2367  {... */\n      pop\n        /* \"contracts/ContractW/ContractWV3.sol\":1672:2374  function createListing(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ContractW/ContractWV3.sol\":2584:2871  function cancelListing(bytes32 listingHash) external onlySeller(listingHash) {... */\n    tag_17:\n        /* \"contracts/ContractW/ContractWV3.sol\":2648:2659  listingHash */\n      dup1\n        /* \"contracts/ContractW/ContractWV3.sol\":1615:1642  _checkIfSeller(listingHash) */\n      tag_40\n        /* \"contracts/ContractW/ContractWV3.sol\":1630:1641  listingHash */\n      dup2\n        /* \"contracts/ContractW/ContractWV3.sol\":1615:1629  _checkIfSeller */\n      tag_41\n        /* \"contracts/ContractW/ContractWV3.sol\":1615:1642  _checkIfSeller(listingHash) */\n      jump\t// in\n    tag_40:\n        /* \"contracts/ContractW/ContractWV3.sol\":2679:2687  listings */\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":2679:2700  listings[listingHash] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":2672:2700  delete listings[listingHash] */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n      0x02\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x03\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x04\n      add\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ContractW/ContractWV3.sol\":2830:2838  caller() */\n      caller\n      swap1\n        /* \"contracts/ContractW/ContractWV3.sol\":2688:2699  listingHash */\n      dup4\n      swap1\n        /* \"contracts/ContractW/ContractWV3.sol\":2679:2687  listings */\n      dup1\n        /* \"contracts/ContractW/ContractWV3.sol\":2737:2853  log2(... */\n      log2\n        /* \"contracts/ContractW/ContractWV3.sol\":2584:2871  function cancelListing(bytes32 listingHash) external onlySeller(listingHash) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ContractW/ContractWV3.sol\":2879:3030  function changeListingPrice(bytes32 listingHash, uint256 price) external onlySeller(listingHash) {... */\n    tag_22:\n        /* \"contracts/ContractW/ContractWV3.sol\":2963:2974  listingHash */\n      dup2\n        /* \"contracts/ContractW/ContractWV3.sol\":1615:1642  _checkIfSeller(listingHash) */\n      tag_44\n        /* \"contracts/ContractW/ContractWV3.sol\":1630:1641  listingHash */\n      dup2\n        /* \"contracts/ContractW/ContractWV3.sol\":1615:1629  _checkIfSeller */\n      tag_41\n        /* \"contracts/ContractW/ContractWV3.sol\":1615:1642  _checkIfSeller(listingHash) */\n      jump\t// in\n    tag_44:\n      pop\n        /* \"contracts/ContractW/ContractWV3.sol\":2987:2995  listings */\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":2987:3008  listings[listingHash] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":2987:3014  listings[listingHash].price */\n      0x03\n      add\n        /* \"contracts/ContractW/ContractWV3.sol\":2987:3022  listings[listingHash].price = price */\n      sstore\n        /* \"contracts/ContractW/ContractWV3.sol\":2879:3030  function changeListingPrice(bytes32 listingHash, uint256 price) external onlySeller(listingHash) {... */\n      jump\t// out\n        /* \"contracts/ContractW/ContractWV3.sol\":3038:3722  function buy(bytes32 listingHash, address nftContract) external payable {... */\n    tag_26:\n        /* \"contracts/ContractW/ContractWV3.sol\":3121:3143  Listing memory listing */\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":3146:3167  listings[listingHash] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":3121:3167  Listing memory listing = listings[listingHash] */\n      dup3\n      mload\n      0xa0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup3\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      swap1\n      swap2\n      add\n      sload\n      0x80\n      dup3\n      add\n      mstore\n        /* \"contracts/ContractW/ContractWV3.sol\":3180:3211  _checkValidListing(listingHash) */\n      tag_47\n        /* \"contracts/ContractW/ContractWV3.sol\":3155:3166  listingHash */\n      dup4\n        /* \"contracts/ContractW/ContractWV3.sol\":3180:3198  _checkValidListing */\n      tag_48\n        /* \"contracts/ContractW/ContractWV3.sol\":3180:3211  _checkValidListing(listingHash) */\n      jump\t// in\n    tag_47:\n        /* \"contracts/ContractW/ContractWV3.sol\":3222:3251  _checkValidBuyer(listingHash) */\n      tag_49\n        /* \"contracts/ContractW/ContractWV3.sol\":3239:3250  listingHash */\n      dup4\n        /* \"contracts/ContractW/ContractWV3.sol\":3222:3238  _checkValidBuyer */\n      tag_50\n        /* \"contracts/ContractW/ContractWV3.sol\":3222:3251  _checkValidBuyer(listingHash) */\n      jump\t// in\n    tag_49:\n        /* \"contracts/ContractW/ContractWV3.sol\":3262:3297  _checkValidAmountToPay(listingHash) */\n      tag_51\n        /* \"contracts/ContractW/ContractWV3.sol\":3285:3296  listingHash */\n      dup4\n        /* \"contracts/ContractW/ContractWV3.sol\":3262:3284  _checkValidAmountToPay */\n      tag_52\n        /* \"contracts/ContractW/ContractWV3.sol\":3262:3297  _checkValidAmountToPay(listingHash) */\n      jump\t// in\n    tag_51:\n        /* \"contracts/ContractW/ContractWV3.sol\":3349:3363  listing.seller */\n      dup1\n      mload\n        /* \"contracts/ContractW/ContractWV3.sol\":3377:3392  listing.tokenId */\n      0x40\n      dup1\n      dup4\n      add\n      mload\n        /* \"contracts/ContractW/ContractWV3.sol\":3310:3393  IERC721A(nftContract).safeTransferFrom(listing.seller, msg.sender, listing.tokenId) */\n      swap1\n      mload\n      0x42842e0e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2450:2465   */\n      swap3\n      dup4\n      and\n        /* \"contracts/ContractW/ContractWV3.sol\":3310:3393  IERC721A(nftContract).safeTransferFrom(listing.seller, msg.sender, listing.tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2432:2466   */\n      mstore\n        /* \"contracts/ContractW/ContractWV3.sol\":3365:3375  msg.sender */\n      caller\n        /* \"#utility.yul\":2482:2500   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2475:2518   */\n      mstore\n        /* \"#utility.yul\":2534:2552   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2527:2561   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/ContractW/ContractWV3.sol\":3310:3348  IERC721A(nftContract).safeTransferFrom */\n      swap1\n      dup4\n      and\n      swap1\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":2344:2362   */\n      0x64\n      add\n        /* \"contracts/ContractW/ContractWV3.sol\":3310:3393  IERC721A(nftContract).safeTransferFrom(listing.seller, msg.sender, listing.tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n        /* \"contracts/ContractW/ContractWV3.sol\":3414:3428  listing.seller */\n      dup3\n      mload\n        /* \"contracts/ContractW/ContractWV3.sol\":3406:3449  payable(listing.seller).transfer(msg.value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ContractW/ContractWV3.sol\":3406:3438  payable(listing.seller).transfer */\n      swap1\n      swap2\n      and\n      swap3\n      pop\n        /* \"contracts/ContractW/ContractWV3.sol\":3439:3448  msg.value */\n      callvalue\n        /* \"contracts/ContractW/ContractWV3.sol\":3406:3449  payable(listing.seller).transfer(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap3\n      pop\n        /* \"contracts/ContractW/ContractWV3.sol\":3439:3448  msg.value */\n      swap1\n        /* \"contracts/ContractW/ContractWV3.sol\":3414:3428  listing.seller */\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":3406:3449  payable(listing.seller).transfer(msg.value) */\n      dup2\n        /* \"contracts/ContractW/ContractWV3.sol\":3414:3428  listing.seller */\n      dup2\n        /* \"contracts/ContractW/ContractWV3.sol\":3406:3449  payable(listing.seller).transfer(msg.value) */\n      dup2\n        /* \"contracts/ContractW/ContractWV3.sol\":3439:3448  msg.value */\n      dup6\n        /* \"contracts/ContractW/ContractWV3.sol\":3406:3438  payable(listing.seller).transfer */\n      dup9\n        /* \"contracts/ContractW/ContractWV3.sol\":3406:3449  payable(listing.seller).transfer(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n        /* \"contracts/ContractW/ContractWV3.sol\":3469:3477  listings */\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":3469:3490  listings[listingHash] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":3462:3490  delete listings[listingHash] */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n      0x02\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x03\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x04\n      add\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ContractW/ContractWV3.sol\":3681:3689  caller() */\n      caller\n      swap1\n        /* \"contracts/ContractW/ContractWV3.sol\":3478:3489  listingHash */\n      dup5\n      swap1\n        /* \"contracts/ContractW/ContractWV3.sol\":3598:3632  _LISTING_PURCHASED_EVENT_SIGNATURE */\n      0x4c72f34d0e2a0b597a25ae9c086c06c4ac48ba071ecc23757ab1668bcd20be50\n      swap1\n        /* \"contracts/ContractW/ContractWV3.sol\":3469:3477  listings */\n      dup1\n        /* \"contracts/ContractW/ContractWV3.sol\":3535:3704  log3(... */\n      log3\n        /* \"contracts/ContractW/ContractWV3.sol\":3520:3715  {... */\n      pop\n        /* \"contracts/ContractW/ContractWV3.sol\":3038:3722  function buy(bytes32 listingHash, address nftContract) external payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ContractW/ContractWV3.sol\":4147:4323  function _checkNFTOwned(uint256 tokenId, address nftContract) private view {... */\n    tag_36:\n        /* \"contracts/ContractW/ContractWV3.sol\":4237:4275  IERC721A(nftContract).ownerOf(tokenId) */\n      mload(0x40)\n      0x6352211e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2133:2158   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/ContractW/ContractWV3.sol\":4279:4289  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ContractW/ContractWV3.sol\":4237:4266  IERC721A(nftContract).ownerOf */\n      dup4\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":2106:2124   */\n      0x24\n      add\n        /* \"contracts/ContractW/ContractWV3.sol\":4237:4275  IERC721A(nftContract).ownerOf(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ContractW/ContractWV3.sol\":4237:4289  IERC721A(nftContract).ownerOf(tokenId) != msg.sender */\n      and\n      eq\n        /* \"contracts/ContractW/ContractWV3.sol\":4233:4315  if (IERC721A(nftContract).ownerOf(tokenId) != msg.sender) revert NotOwner(tokenId) */\n      tag_70\n      jumpi\n        /* \"contracts/ContractW/ContractWV3.sol\":4298:4315  NotOwner(tokenId) */\n      mload(0x40)\n      0x4d65ccb800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2133:2158   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2106:2124   */\n      0x24\n      add\n        /* \"contracts/ContractW/ContractWV3.sol\":4298:4315  NotOwner(tokenId) */\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ContractW/ContractWV3.sol\":4233:4315  if (IERC721A(nftContract).ownerOf(tokenId) != msg.sender) revert NotOwner(tokenId) */\n    tag_70:\n        /* \"contracts/ContractW/ContractWV3.sol\":4147:4323  function _checkNFTOwned(uint256 tokenId, address nftContract) private view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ContractW/ContractWV3.sol\":4331:4478  function _checkIfSeller(bytes32 listingHash) private view {... */\n    tag_41:\n        /* \"contracts/ContractW/ContractWV3.sol\":4404:4412  listings */\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":4404:4425  listings[listingHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":4404:4432  listings[listingHash].seller */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ContractW/ContractWV3.sol\":4436:4446  msg.sender */\n      caller\n        /* \"contracts/ContractW/ContractWV3.sol\":4404:4446  listings[listingHash].seller != msg.sender */\n      eq\n        /* \"contracts/ContractW/ContractWV3.sol\":4400:4470  if (listings[listingHash].seller != msg.sender) revert InvalidSeller() */\n      tag_73\n      jumpi\n        /* \"contracts/ContractW/ContractWV3.sol\":4455:4470  InvalidSeller() */\n      mload(0x40)\n      0xbab7ca3500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ContractW/ContractWV3.sol\":4400:4470  if (listings[listingHash].seller != msg.sender) revert InvalidSeller() */\n    tag_73:\n        /* \"contracts/ContractW/ContractWV3.sol\":4331:4478  function _checkIfSeller(bytes32 listingHash) private view {... */\n      pop\n      jump\t// out\n        /* \"contracts/ContractW/ContractWV3.sol\":4486:4650  function _checkValidListing(bytes32 listingHash) private view {... */\n    tag_48:\n        /* \"contracts/ContractW/ContractWV3.sol\":4603:4604  0 */\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":4563:4584  listings[listingHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":4563:4591  listings[listingHash].seller */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ContractW/ContractWV3.sol\":4559:4642  if (listings[listingHash].seller == address(0)) revert ListingNotFound(listingHash) */\n      tag_73\n      jumpi\n        /* \"contracts/ContractW/ContractWV3.sol\":4614:4642  ListingNotFound(listingHash) */\n      mload(0x40)\n      0x45abffa900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2133:2158   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2106:2124   */\n      0x24\n      add\n        /* \"contracts/ContractW/ContractWV3.sol\":4614:4642  ListingNotFound(listingHash) */\n      tag_71\n        /* \"#utility.yul\":1987:2164   */\n      jump\n        /* \"contracts/ContractW/ContractWV3.sol\":4658:4806  function _checkValidBuyer(bytes32 listingHash) private view {... */\n    tag_50:\n        /* \"contracts/ContractW/ContractWV3.sol\":4733:4741  listings */\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":4733:4754  listings[listingHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":4733:4761  listings[listingHash].seller */\n      sload\n        /* \"contracts/ContractW/ContractWV3.sol\":4765:4775  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ContractW/ContractWV3.sol\":4733:4761  listings[listingHash].seller */\n      swap1\n      swap2\n      and\n        /* \"contracts/ContractW/ContractWV3.sol\":4733:4775  listings[listingHash].seller == msg.sender */\n      sub\n        /* \"contracts/ContractW/ContractWV3.sol\":4729:4798  if (listings[listingHash].seller == msg.sender) revert InvalidBuyer() */\n      tag_73\n      jumpi\n        /* \"contracts/ContractW/ContractWV3.sol\":4784:4798  InvalidBuyer() */\n      mload(0x40)\n      0xb1df0e0600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ContractW/ContractWV3.sol\":4814:5023  function _checkValidAmountToPay(bytes32 listingHash) private view {... */\n    tag_52:\n        /* \"contracts/ContractW/ContractWV3.sol\":4908:4916  listings */\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":4908:4929  listings[listingHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":4908:4935  listings[listingHash].price */\n      0x03\n      add\n      sload\n        /* \"contracts/ContractW/ContractWV3.sol\":4895:4904  msg.value */\n      callvalue\n        /* \"contracts/ContractW/ContractWV3.sol\":4895:4935  msg.value != listings[listingHash].price */\n      eq\n        /* \"contracts/ContractW/ContractWV3.sol\":4891:5015  if (msg.value != listings[listingHash].price) revert InvalidAmountToPay(listingHash, listings[listingHash].price, msg.value) */\n      tag_73\n      jumpi\n        /* \"contracts/ContractW/ContractWV3.sol\":4976:4984  listings */\n      0x00\n        /* \"contracts/ContractW/ContractWV3.sol\":4976:4997  listings[listingHash] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ContractW/ContractWV3.sol\":4976:5003  listings[listingHash].price */\n      0x03\n      add\n      sload\n        /* \"contracts/ContractW/ContractWV3.sol\":4944:5015  InvalidAmountToPay(listingHash, listings[listingHash].price, msg.value) */\n      swap1\n      mload\n      0x5cd9779900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3747:3772   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3788:3806   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3781:3815   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/ContractW/ContractWV3.sol\":5005:5014  msg.value */\n      callvalue\n        /* \"#utility.yul\":3831:3849   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3824:3858   */\n      mstore\n        /* \"#utility.yul\":3720:3738   */\n      0x64\n      add\n        /* \"contracts/ContractW/ContractWV3.sol\":4944:5015  InvalidAmountToPay(listingHash, listings[listingHash].price, msg.value) */\n      tag_71\n        /* \"#utility.yul\":3545:3864   */\n      jump\n        /* \"#utility.yul\":14:168   */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":89:143   */\n      and\n        /* \"#utility.yul\":82:87   */\n      dup2\n        /* \"#utility.yul\":79:144   */\n      eq\n        /* \"#utility.yul\":69:162   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":158:159   */\n      0x00\n        /* \"#utility.yul\":155:156   */\n      dup1\n        /* \"#utility.yul\":148:160   */\n      revert\n        /* \"#utility.yul\":173:625   */\n    tag_11:\n        /* \"#utility.yul\":259:265   */\n      0x00\n        /* \"#utility.yul\":267:273   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      0x00\n        /* \"#utility.yul\":283:289   */\n      dup1\n        /* \"#utility.yul\":336:339   */\n      0x80\n        /* \"#utility.yul\":324:333   */\n      dup6\n        /* \"#utility.yul\":315:322   */\n      dup8\n        /* \"#utility.yul\":311:334   */\n      sub\n        /* \"#utility.yul\":307:340   */\n      slt\n        /* \"#utility.yul\":304:357   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":350:351   */\n      dup1\n        /* \"#utility.yul\":343:355   */\n      revert\n        /* \"#utility.yul\":304:357   */\n    tag_88:\n        /* \"#utility.yul\":389:398   */\n      dup5\n        /* \"#utility.yul\":376:399   */\n      calldataload\n        /* \"#utility.yul\":366:399   */\n      swap4\n      pop\n        /* \"#utility.yul\":449:451   */\n      0x20\n        /* \"#utility.yul\":438:447   */\n      dup6\n        /* \"#utility.yul\":434:452   */\n      add\n        /* \"#utility.yul\":421:453   */\n      calldataload\n        /* \"#utility.yul\":462:493   */\n      tag_89\n        /* \"#utility.yul\":487:492   */\n      dup2\n        /* \"#utility.yul\":462:493   */\n      tag_83\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":173:625   */\n      swap4\n      swap7\n        /* \"#utility.yul\":512:517   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":564:566   */\n      0x40\n        /* \"#utility.yul\":549:567   */\n      dup3\n      add\n        /* \"#utility.yul\":536:568   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":615:617   */\n      0x60\n        /* \"#utility.yul\":600:618   */\n      add\n        /* \"#utility.yul\":587:619   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":173:625   */\n      jump\t// out\n        /* \"#utility.yul\":630:810   */\n    tag_16:\n        /* \"#utility.yul\":689:695   */\n      0x00\n        /* \"#utility.yul\":742:744   */\n      0x20\n        /* \"#utility.yul\":730:739   */\n      dup3\n        /* \"#utility.yul\":721:728   */\n      dup5\n        /* \"#utility.yul\":717:740   */\n      sub\n        /* \"#utility.yul\":713:745   */\n      slt\n        /* \"#utility.yul\":710:762   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":758:759   */\n      0x00\n        /* \"#utility.yul\":755:756   */\n      dup1\n        /* \"#utility.yul\":748:760   */\n      revert\n        /* \"#utility.yul\":710:762   */\n    tag_91:\n      pop\n        /* \"#utility.yul\":781:804   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":630:810   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":815:1063   */\n    tag_21:\n        /* \"#utility.yul\":883:889   */\n      0x00\n        /* \"#utility.yul\":891:897   */\n      dup1\n        /* \"#utility.yul\":944:946   */\n      0x40\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":923:930   */\n      dup6\n        /* \"#utility.yul\":919:942   */\n      sub\n        /* \"#utility.yul\":915:947   */\n      slt\n        /* \"#utility.yul\":912:964   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":960:961   */\n      0x00\n        /* \"#utility.yul\":957:958   */\n      dup1\n        /* \"#utility.yul\":950:962   */\n      revert\n        /* \"#utility.yul\":912:964   */\n    tag_93:\n      pop\n      pop\n        /* \"#utility.yul\":983:1006   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1053:1055   */\n      0x20\n        /* \"#utility.yul\":1038:1056   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1025:1057   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":815:1063   */\n      jump\t// out\n        /* \"#utility.yul\":1068:1383   */\n    tag_25:\n        /* \"#utility.yul\":1136:1142   */\n      0x00\n        /* \"#utility.yul\":1144:1150   */\n      dup1\n        /* \"#utility.yul\":1197:1199   */\n      0x40\n        /* \"#utility.yul\":1185:1194   */\n      dup4\n        /* \"#utility.yul\":1176:1183   */\n      dup6\n        /* \"#utility.yul\":1172:1195   */\n      sub\n        /* \"#utility.yul\":1168:1200   */\n      slt\n        /* \"#utility.yul\":1165:1217   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":1213:1214   */\n      0x00\n        /* \"#utility.yul\":1210:1211   */\n      dup1\n        /* \"#utility.yul\":1203:1215   */\n      revert\n        /* \"#utility.yul\":1165:1217   */\n    tag_95:\n        /* \"#utility.yul\":1249:1258   */\n      dup3\n        /* \"#utility.yul\":1236:1259   */\n      calldataload\n        /* \"#utility.yul\":1226:1259   */\n      swap2\n      pop\n        /* \"#utility.yul\":1309:1311   */\n      0x20\n        /* \"#utility.yul\":1298:1307   */\n      dup4\n        /* \"#utility.yul\":1294:1312   */\n      add\n        /* \"#utility.yul\":1281:1313   */\n      calldataload\n        /* \"#utility.yul\":1322:1353   */\n      tag_96\n        /* \"#utility.yul\":1347:1352   */\n      dup2\n        /* \"#utility.yul\":1322:1353   */\n      tag_83\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1372:1377   */\n      dup1\n        /* \"#utility.yul\":1362:1377   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1068:1383   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1388:1982   */\n    tag_30:\n        /* \"#utility.yul\":1483:1489   */\n      0x00\n        /* \"#utility.yul\":1491:1497   */\n      dup1\n        /* \"#utility.yul\":1499:1505   */\n      0x00\n        /* \"#utility.yul\":1507:1513   */\n      dup1\n        /* \"#utility.yul\":1515:1521   */\n      0x00\n        /* \"#utility.yul\":1568:1571   */\n      0xa0\n        /* \"#utility.yul\":1556:1565   */\n      dup7\n        /* \"#utility.yul\":1547:1554   */\n      dup9\n        /* \"#utility.yul\":1543:1566   */\n      sub\n        /* \"#utility.yul\":1539:1572   */\n      slt\n        /* \"#utility.yul\":1536:1589   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1585:1586   */\n      0x00\n        /* \"#utility.yul\":1582:1583   */\n      dup1\n        /* \"#utility.yul\":1575:1587   */\n      revert\n        /* \"#utility.yul\":1536:1589   */\n    tag_98:\n        /* \"#utility.yul\":1621:1630   */\n      dup6\n        /* \"#utility.yul\":1608:1631   */\n      calldataload\n        /* \"#utility.yul\":1598:1631   */\n      swap5\n      pop\n        /* \"#utility.yul\":1681:1683   */\n      0x20\n        /* \"#utility.yul\":1670:1679   */\n      dup7\n        /* \"#utility.yul\":1666:1684   */\n      add\n        /* \"#utility.yul\":1653:1685   */\n      calldataload\n        /* \"#utility.yul\":1694:1725   */\n      tag_99\n        /* \"#utility.yul\":1719:1724   */\n      dup2\n        /* \"#utility.yul\":1694:1725   */\n      tag_83\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1744:1749   */\n      swap4\n      pop\n        /* \"#utility.yul\":1796:1798   */\n      0x40\n        /* \"#utility.yul\":1781:1799   */\n      dup7\n      add\n        /* \"#utility.yul\":1768:1800   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1852:1854   */\n      0x60\n        /* \"#utility.yul\":1837:1855   */\n      dup7\n      add\n        /* \"#utility.yul\":1824:1856   */\n      calldataload\n        /* \"#utility.yul\":1865:1898   */\n      tag_100\n        /* \"#utility.yul\":1824:1856   */\n      dup2\n        /* \"#utility.yul\":1865:1898   */\n      tag_83\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1388:1982   */\n      swap5\n      swap8\n      swap4\n      swap7\n      pop\n      swap2\n      swap5\n        /* \"#utility.yul\":1971:1974   */\n      0x80\n        /* \"#utility.yul\":1956:1975   */\n      add\n        /* \"#utility.yul\":1943:1976   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":1388:1982   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3289:3540   */\n    tag_69:\n        /* \"#utility.yul\":3359:3365   */\n      0x00\n        /* \"#utility.yul\":3412:3414   */\n      0x20\n        /* \"#utility.yul\":3400:3409   */\n      dup3\n        /* \"#utility.yul\":3391:3398   */\n      dup5\n        /* \"#utility.yul\":3387:3410   */\n      sub\n        /* \"#utility.yul\":3383:3415   */\n      slt\n        /* \"#utility.yul\":3380:3432   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":3428:3429   */\n      0x00\n        /* \"#utility.yul\":3425:3426   */\n      dup1\n        /* \"#utility.yul\":3418:3430   */\n      revert\n        /* \"#utility.yul\":3380:3432   */\n    tag_106:\n        /* \"#utility.yul\":3460:3469   */\n      dup2\n        /* \"#utility.yul\":3454:3470   */\n      mload\n        /* \"#utility.yul\":3479:3510   */\n      tag_107\n        /* \"#utility.yul\":3504:3509   */\n      dup2\n        /* \"#utility.yul\":3479:3510   */\n      tag_83\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3529:3534   */\n      swap4\n        /* \"#utility.yul\":3289:3540   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ab7a2d1d01e1ff4dd97af4b2e532050e06a564f7eeb334120df2b2ac628c323564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061081d8061001c5f395ff3fe608060405260043610610058575f3560e01c8063aa8de79411610041578063aa8de7941461009c578063c049604a146100bb578063dac17732146100ce575f80fd5b806304f249381461005c5780639299e5521461007d575b5f80fd5b348015610067575f80fd5b5061007b6100763660046106d8565b610155565b005b348015610088575f80fd5b5061007b610097366004610712565b61027a565b3480156100a7575f80fd5b5061007b6100b6366004610729565b6102d7565b61007b6100c9366004610749565b6102f6565b3480156100d9575f80fd5b506101436100e8366004610777565b604080516020808201979097526bffffffffffffffffffffffff19606096871b81168284015260548201959095529290941b90921660748201526088808201929092528251808203909201825260a801909152805191012090565b60405190815260200160405180910390f35b83836101618282610497565b6040805160208082018990526bffffffffffffffffffffffff1933606090811b8216848601526054840188905289901b16607483015260888083018890528351808403909101815260a890920190925280519101205f906040805160a081018252338082526001600160a01b038a811660208085019182528486018e8152606086018c8152608087018e81525f8a8152938490529783209651875490861673ffffffffffffffffffffffffffffffffffffffff1991821617885593516001880180549190961694169390931790935591516002850155516003840155925160049092019190915591925082907f17a154a37f0fb7c7f440e4672a098f6afcc1ba29bc7ab9ce143014be49d7410e9080a350505050505050565b8061028481610565565b5f828152602081905260408120805473ffffffffffffffffffffffffffffffffffffffff199081168255600182018054909116905560028101829055600381018290556004018190553390839080a25050565b816102e181610565565b505f9182526020829052604090912060030155565b5f8281526020818152604091829020825160a08101845281546001600160a01b03908116825260018301541692810192909252600281015492820192909252600382015460608201526004909101546080820152610353836105b7565b61035c83610607565b61036583610658565b805160408083015190517f42842e0e0000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201523360248201526044810191909152908316906342842e0e906064015f604051808303815f87803b1580156103d4575f80fd5b505af11580156103e6573d5f803e3d5ffd5b505082516040516001600160a01b0390911692503480156108fc029250905f818181858888f19350505050158015610420573d5f803e3d5ffd5b505f838152602081905260408120805473ffffffffffffffffffffffffffffffffffffffff19908116825560018201805490911690556002810182905560038101829055600401819055339084907f4c72f34d0e2a0b597a25ae9c086c06c4ac48ba071ecc23757ab1668bcd20be509080a3505050565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810183905233906001600160a01b03831690636352211e90602401602060405180830381865afa1580156104f5573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061051991906107c5565b6001600160a01b031614610561576040517f4d65ccb8000000000000000000000000000000000000000000000000000000008152600481018390526024015b60405180910390fd5b5050565b5f818152602081905260409020546001600160a01b031633146105b4576040517fbab7ca3500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b5f818152602081905260409020546001600160a01b03166105b4576040517f45abffa900000000000000000000000000000000000000000000000000000000815260048101829052602401610558565b5f81815260208190526040902054336001600160a01b03909116036105b4576040517fb1df0e0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8181526020819052604090206003015434146105b4575f81815260208190526040908190206003015490517f5cd97799000000000000000000000000000000000000000000000000000000008152600481018390526024810191909152346044820152606401610558565b6001600160a01b03811681146105b4575f80fd5b5f805f80608085870312156106eb575f80fd5b8435935060208501356106fd816106c4565b93969395505050506040820135916060013590565b5f60208284031215610722575f80fd5b5035919050565b5f806040838503121561073a575f80fd5b50508035926020909101359150565b5f806040838503121561075a575f80fd5b82359150602083013561076c816106c4565b809150509250929050565b5f805f805f60a0868803121561078b575f80fd5b85359450602086013561079d816106c4565b93506040860135925060608601356107b4816106c4565b949793965091946080013592915050565b5f602082840312156107d5575f80fd5b81516107e0816106c4565b939250505056fea2646970667358221220ab7a2d1d01e1ff4dd97af4b2e532050e06a564f7eeb334120df2b2ac628c323564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x81D DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA8DE794 GT PUSH2 0x41 JUMPI DUP1 PUSH4 0xAA8DE794 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xC049604A EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xDAC17732 EQ PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F24938 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x9299E552 EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0x76 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xC9 CALLDATASIZE PUSH1 0x4 PUSH2 0x749 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH2 0xE8 CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP7 DUP8 SHL DUP2 AND DUP3 DUP5 ADD MSTORE PUSH1 0x54 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 SWAP1 SWAP5 SHL SWAP1 SWAP3 AND PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x88 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0xA8 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP4 DUP4 PUSH2 0x161 DUP3 DUP3 PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP5 DUP7 ADD MSTORE PUSH1 0x54 DUP5 ADD DUP9 SWAP1 MSTORE DUP10 SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP1 DUP4 ADD DUP9 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH0 SWAP1 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP5 DUP7 ADD DUP15 DUP2 MSTORE PUSH1 0x60 DUP7 ADD DUP13 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP15 DUP2 MSTORE PUSH0 DUP11 DUP2 MSTORE SWAP4 DUP5 SWAP1 MSTORE SWAP8 DUP4 KECCAK256 SWAP7 MLOAD DUP8 SLOAD SWAP1 DUP7 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP2 DUP3 AND OR DUP9 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP9 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP7 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE SWAP3 MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP3 POP DUP3 SWAP1 PUSH32 0x17A154A37F0FB7C7F440E4672A098F6AFCC1BA29BC7AB9CE143014BE49D7410E SWAP1 DUP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x284 DUP2 PUSH2 0x565 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 ADD DUP2 SWAP1 SSTORE CALLER SWAP1 DUP4 SWAP1 DUP1 LOG2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x2E1 DUP2 PUSH2 0x565 JUMP JUMPDEST POP PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SSTORE JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x353 DUP4 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x35C DUP4 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x365 DUP4 PUSH2 0x658 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 MLOAD PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP DUP3 MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 POP SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x420 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 ADD DUP2 SWAP1 SSTORE CALLER SWAP1 DUP5 SWAP1 PUSH32 0x4C72F34D0E2A0B597A25AE9C086C06C4AC48BA071ECC23757AB1668BCD20BE50 SWAP1 DUP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4D65CCB800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBAB7CA3500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x45ABFFA900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1DF0E0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD CALLVALUE EQ PUSH2 0x5B4 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH32 0x5CD9779900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLVALUE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x6FD DUP2 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x722 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x73A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x76C DUP2 PUSH2 0x6C4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x78B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x79D DUP2 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x7B4 DUP2 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7E0 DUP2 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH27 0x2D1D01E1FF4DD97AF4B2E532050E06A564F7EEB334120DF2B2AC62 DUP13 ORIGIN CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "231:4795:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkIfSeller_273": {
									"entryPoint": 1381,
									"id": 273,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkNFTOwned_256": {
									"entryPoint": 1175,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkValidAmountToPay_334": {
									"entryPoint": 1624,
									"id": 334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkValidBuyer_310": {
									"entryPoint": 1543,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkValidListing_293": {
									"entryPoint": 1463,
									"id": 293,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buy_207": {
									"entryPoint": 758,
									"id": 207,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cancelListing_134": {
									"entryPoint": 634,
									"id": 134,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeListingPrice_152": {
									"entryPoint": 727,
									"id": 152,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@createListing_119": {
									"entryPoint": 341,
									"id": 119,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@getListingHash_234": {
									"entryPoint": null,
									"id": 234,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_uint256": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_bytes32t_uint256": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256t_addresst_bytes32": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_packed_t_uint256_t_address_t_uint256_t_address_t_bytes32__to_t_uint256_t_address_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3866:2",
										"nodeType": "YulBlock",
										"src": "0:3866:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "59:109:2",
													"nodeType": "YulBlock",
													"src": "59:109:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "146:16:2",
																"nodeType": "YulBlock",
																"src": "146:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "155:1:2",
																					"nodeType": "YulLiteral",
																					"src": "155:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "158:1:2",
																					"nodeType": "YulLiteral",
																					"src": "158:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "148:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "148:6:2"
																			},
																			"nativeSrc": "148:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "148:12:2"
																		},
																		"nativeSrc": "148:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "148:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "82:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "93:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "100:42:2",
																						"nodeType": "YulLiteral",
																						"src": "100:42:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "89:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:2"
																				},
																				"nativeSrc": "89:54:2",
																				"nodeType": "YulFunctionCall",
																				"src": "89:54:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "79:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:2"
																		},
																		"nativeSrc": "79:65:2",
																		"nodeType": "YulFunctionCall",
																		"src": "79:65:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "72:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:2"
																},
																"nativeSrc": "72:73:2",
																"nodeType": "YulFunctionCall",
																"src": "72:73:2"
															},
															"nativeSrc": "69:93:2",
															"nodeType": "YulIf",
															"src": "69:93:2"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "14:154:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:2",
														"nodeType": "YulTypedName",
														"src": "48:5:2",
														"type": ""
													}
												],
												"src": "14:154:2"
											},
											{
												"body": {
													"nativeSrc": "294:331:2",
													"nodeType": "YulBlock",
													"src": "294:331:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "341:16:2",
																"nodeType": "YulBlock",
																"src": "341:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "350:1:2",
																					"nodeType": "YulLiteral",
																					"src": "350:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "353:1:2",
																					"nodeType": "YulLiteral",
																					"src": "353:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "343:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "343:6:2"
																			},
																			"nativeSrc": "343:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "343:12:2"
																		},
																		"nativeSrc": "343:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "343:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:2"
																		},
																		"nativeSrc": "311:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:3:2",
																		"nodeType": "YulLiteral",
																		"src": "336:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:2"
																},
																"nativeSrc": "307:33:2",
																"nodeType": "YulFunctionCall",
																"src": "307:33:2"
															},
															"nativeSrc": "304:53:2",
															"nodeType": "YulIf",
															"src": "304:53:2"
														},
														{
															"nativeSrc": "366:33:2",
															"nodeType": "YulAssignment",
															"src": "366:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "389:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "376:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:2"
																},
																"nativeSrc": "376:23:2",
																"nodeType": "YulFunctionCall",
																"src": "376:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "366:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "366:6:2"
																}
															]
														},
														{
															"nativeSrc": "408:45:2",
															"nodeType": "YulVariableDeclaration",
															"src": "408:45:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "438:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "438:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "449:2:2",
																				"nodeType": "YulLiteral",
																				"src": "449:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "434:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "434:3:2"
																		},
																		"nativeSrc": "434:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "434:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "421:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "421:12:2"
																},
																"nativeSrc": "421:32:2",
																"nodeType": "YulFunctionCall",
																"src": "421:32:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "412:5:2",
																	"nodeType": "YulTypedName",
																	"src": "412:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "487:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "487:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "462:24:2",
																	"nodeType": "YulIdentifier",
																	"src": "462:24:2"
																},
																"nativeSrc": "462:31:2",
																"nodeType": "YulFunctionCall",
																"src": "462:31:2"
															},
															"nativeSrc": "462:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "462:31:2"
														},
														{
															"nativeSrc": "502:15:2",
															"nodeType": "YulAssignment",
															"src": "502:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "512:5:2",
																"nodeType": "YulIdentifier",
																"src": "512:5:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "502:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "502:6:2"
																}
															]
														},
														{
															"nativeSrc": "526:42:2",
															"nodeType": "YulAssignment",
															"src": "526:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "553:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "553:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "564:2:2",
																				"nodeType": "YulLiteral",
																				"src": "564:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "549:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "549:3:2"
																		},
																		"nativeSrc": "549:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "549:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "536:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "536:12:2"
																},
																"nativeSrc": "536:32:2",
																"nodeType": "YulFunctionCall",
																"src": "536:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "526:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "526:6:2"
																}
															]
														},
														{
															"nativeSrc": "577:42:2",
															"nodeType": "YulAssignment",
															"src": "577:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "604:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "604:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "615:2:2",
																				"nodeType": "YulLiteral",
																				"src": "615:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "600:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "600:3:2"
																		},
																		"nativeSrc": "600:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "600:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "587:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "587:12:2"
																},
																"nativeSrc": "587:32:2",
																"nodeType": "YulFunctionCall",
																"src": "587:32:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "577:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_bytes32t_uint256",
												"nativeSrc": "173:452:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "236:9:2",
														"nodeType": "YulTypedName",
														"src": "236:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "247:7:2",
														"nodeType": "YulTypedName",
														"src": "247:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "259:6:2",
														"nodeType": "YulTypedName",
														"src": "259:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "267:6:2",
														"nodeType": "YulTypedName",
														"src": "267:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "275:6:2",
														"nodeType": "YulTypedName",
														"src": "275:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "283:6:2",
														"nodeType": "YulTypedName",
														"src": "283:6:2",
														"type": ""
													}
												],
												"src": "173:452:2"
											},
											{
												"body": {
													"nativeSrc": "700:110:2",
													"nodeType": "YulBlock",
													"src": "700:110:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "746:16:2",
																"nodeType": "YulBlock",
																"src": "746:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "755:1:2",
																					"nodeType": "YulLiteral",
																					"src": "755:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "758:1:2",
																					"nodeType": "YulLiteral",
																					"src": "758:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "748:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:2"
																			},
																			"nativeSrc": "748:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "748:12:2"
																		},
																		"nativeSrc": "748:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "748:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "721:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "721:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "730:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "730:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "717:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "717:3:2"
																		},
																		"nativeSrc": "717:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "717:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "742:2:2",
																		"nodeType": "YulLiteral",
																		"src": "742:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "713:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:2"
																},
																"nativeSrc": "713:32:2",
																"nodeType": "YulFunctionCall",
																"src": "713:32:2"
															},
															"nativeSrc": "710:52:2",
															"nodeType": "YulIf",
															"src": "710:52:2"
														},
														{
															"nativeSrc": "771:33:2",
															"nodeType": "YulAssignment",
															"src": "771:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "794:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "794:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "781:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "781:12:2"
																},
																"nativeSrc": "781:23:2",
																"nodeType": "YulFunctionCall",
																"src": "781:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "771:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "771:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "630:180:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "666:9:2",
														"nodeType": "YulTypedName",
														"src": "666:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "677:7:2",
														"nodeType": "YulTypedName",
														"src": "677:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "689:6:2",
														"nodeType": "YulTypedName",
														"src": "689:6:2",
														"type": ""
													}
												],
												"src": "630:180:2"
											},
											{
												"body": {
													"nativeSrc": "902:161:2",
													"nodeType": "YulBlock",
													"src": "902:161:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "948:16:2",
																"nodeType": "YulBlock",
																"src": "948:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "957:1:2",
																					"nodeType": "YulLiteral",
																					"src": "957:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "960:1:2",
																					"nodeType": "YulLiteral",
																					"src": "960:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "950:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "950:6:2"
																			},
																			"nativeSrc": "950:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "950:12:2"
																		},
																		"nativeSrc": "950:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "950:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "923:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "923:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "932:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "932:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "919:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "919:3:2"
																		},
																		"nativeSrc": "919:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "919:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "944:2:2",
																		"nodeType": "YulLiteral",
																		"src": "944:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "915:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "915:3:2"
																},
																"nativeSrc": "915:32:2",
																"nodeType": "YulFunctionCall",
																"src": "915:32:2"
															},
															"nativeSrc": "912:52:2",
															"nodeType": "YulIf",
															"src": "912:52:2"
														},
														{
															"nativeSrc": "973:33:2",
															"nodeType": "YulAssignment",
															"src": "973:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "996:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "996:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "983:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "983:12:2"
																},
																"nativeSrc": "983:23:2",
																"nodeType": "YulFunctionCall",
																"src": "983:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "973:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "973:6:2"
																}
															]
														},
														{
															"nativeSrc": "1015:42:2",
															"nodeType": "YulAssignment",
															"src": "1015:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1042:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1042:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1053:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1053:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1038:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1038:3:2"
																		},
																		"nativeSrc": "1038:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1038:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1025:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1025:12:2"
																},
																"nativeSrc": "1025:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1025:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1015:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1015:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nativeSrc": "815:248:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "860:9:2",
														"nodeType": "YulTypedName",
														"src": "860:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "871:7:2",
														"nodeType": "YulTypedName",
														"src": "871:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "883:6:2",
														"nodeType": "YulTypedName",
														"src": "883:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "891:6:2",
														"nodeType": "YulTypedName",
														"src": "891:6:2",
														"type": ""
													}
												],
												"src": "815:248:2"
											},
											{
												"body": {
													"nativeSrc": "1155:228:2",
													"nodeType": "YulBlock",
													"src": "1155:228:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1201:16:2",
																"nodeType": "YulBlock",
																"src": "1201:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1210:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1210:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1213:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1213:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1203:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1203:6:2"
																			},
																			"nativeSrc": "1203:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1203:12:2"
																		},
																		"nativeSrc": "1203:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1203:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1176:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1176:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1185:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1185:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1172:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1172:3:2"
																		},
																		"nativeSrc": "1172:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1172:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1197:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1197:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1168:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:2"
																},
																"nativeSrc": "1168:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1168:32:2"
															},
															"nativeSrc": "1165:52:2",
															"nodeType": "YulIf",
															"src": "1165:52:2"
														},
														{
															"nativeSrc": "1226:33:2",
															"nodeType": "YulAssignment",
															"src": "1226:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1249:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1236:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1236:12:2"
																},
																"nativeSrc": "1236:23:2",
																"nodeType": "YulFunctionCall",
																"src": "1236:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1226:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1226:6:2"
																}
															]
														},
														{
															"nativeSrc": "1268:45:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1268:45:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1298:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1298:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1309:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1309:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1294:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1294:3:2"
																		},
																		"nativeSrc": "1294:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1294:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1281:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1281:12:2"
																},
																"nativeSrc": "1281:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1281:32:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1272:5:2",
																	"nodeType": "YulTypedName",
																	"src": "1272:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1347:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1347:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1322:24:2",
																	"nodeType": "YulIdentifier",
																	"src": "1322:24:2"
																},
																"nativeSrc": "1322:31:2",
																"nodeType": "YulFunctionCall",
																"src": "1322:31:2"
															},
															"nativeSrc": "1322:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "1322:31:2"
														},
														{
															"nativeSrc": "1362:15:2",
															"nodeType": "YulAssignment",
															"src": "1362:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "1372:5:2",
																"nodeType": "YulIdentifier",
																"src": "1372:5:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1362:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "1068:315:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1113:9:2",
														"nodeType": "YulTypedName",
														"src": "1113:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1124:7:2",
														"nodeType": "YulTypedName",
														"src": "1124:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1136:6:2",
														"nodeType": "YulTypedName",
														"src": "1136:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1144:6:2",
														"nodeType": "YulTypedName",
														"src": "1144:6:2",
														"type": ""
													}
												],
												"src": "1068:315:2"
											},
											{
												"body": {
													"nativeSrc": "1526:456:2",
													"nodeType": "YulBlock",
													"src": "1526:456:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1573:16:2",
																"nodeType": "YulBlock",
																"src": "1573:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1582:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1582:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1585:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1585:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1575:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1575:6:2"
																			},
																			"nativeSrc": "1575:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1575:12:2"
																		},
																		"nativeSrc": "1575:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1575:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1547:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1547:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1556:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1556:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1543:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:2"
																		},
																		"nativeSrc": "1543:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1568:3:2",
																		"nodeType": "YulLiteral",
																		"src": "1568:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1539:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1539:3:2"
																},
																"nativeSrc": "1539:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1539:33:2"
															},
															"nativeSrc": "1536:53:2",
															"nodeType": "YulIf",
															"src": "1536:53:2"
														},
														{
															"nativeSrc": "1598:33:2",
															"nodeType": "YulAssignment",
															"src": "1598:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1621:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1621:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1608:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1608:12:2"
																},
																"nativeSrc": "1608:23:2",
																"nodeType": "YulFunctionCall",
																"src": "1608:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1598:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:2"
																}
															]
														},
														{
															"nativeSrc": "1640:45:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1640:45:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1670:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1670:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1681:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1681:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1666:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1666:3:2"
																		},
																		"nativeSrc": "1666:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1666:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1653:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1653:12:2"
																},
																"nativeSrc": "1653:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1653:32:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1644:5:2",
																	"nodeType": "YulTypedName",
																	"src": "1644:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1719:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1719:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1694:24:2",
																	"nodeType": "YulIdentifier",
																	"src": "1694:24:2"
																},
																"nativeSrc": "1694:31:2",
																"nodeType": "YulFunctionCall",
																"src": "1694:31:2"
															},
															"nativeSrc": "1694:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "1694:31:2"
														},
														{
															"nativeSrc": "1734:15:2",
															"nodeType": "YulAssignment",
															"src": "1734:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "1744:5:2",
																"nodeType": "YulIdentifier",
																"src": "1744:5:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1734:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1734:6:2"
																}
															]
														},
														{
															"nativeSrc": "1758:42:2",
															"nodeType": "YulAssignment",
															"src": "1758:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1785:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1785:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1796:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1796:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1781:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:2"
																		},
																		"nativeSrc": "1781:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1768:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1768:12:2"
																},
																"nativeSrc": "1768:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1768:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1758:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:2"
																}
															]
														},
														{
															"nativeSrc": "1809:47:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1809:47:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1841:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1841:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1852:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1852:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1837:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:2"
																		},
																		"nativeSrc": "1837:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1837:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1824:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1824:12:2"
																},
																"nativeSrc": "1824:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1824:32:2"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1813:7:2",
																	"nodeType": "YulTypedName",
																	"src": "1813:7:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "1890:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "1890:7:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1865:24:2",
																	"nodeType": "YulIdentifier",
																	"src": "1865:24:2"
																},
																"nativeSrc": "1865:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1865:33:2"
															},
															"nativeSrc": "1865:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1865:33:2"
														},
														{
															"nativeSrc": "1907:17:2",
															"nodeType": "YulAssignment",
															"src": "1907:17:2",
															"value": {
																"name": "value_1",
																"nativeSrc": "1917:7:2",
																"nodeType": "YulIdentifier",
																"src": "1917:7:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1907:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1907:6:2"
																}
															]
														},
														{
															"nativeSrc": "1933:43:2",
															"nodeType": "YulAssignment",
															"src": "1933:43:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1960:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1960:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1971:3:2",
																				"nodeType": "YulLiteral",
																				"src": "1971:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1956:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1956:3:2"
																		},
																		"nativeSrc": "1956:19:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1956:19:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1943:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1943:12:2"
																},
																"nativeSrc": "1943:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1943:33:2"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1933:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1933:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256t_addresst_bytes32",
												"nativeSrc": "1388:594:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1460:9:2",
														"nodeType": "YulTypedName",
														"src": "1460:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1471:7:2",
														"nodeType": "YulTypedName",
														"src": "1471:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1483:6:2",
														"nodeType": "YulTypedName",
														"src": "1483:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1491:6:2",
														"nodeType": "YulTypedName",
														"src": "1491:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1499:6:2",
														"nodeType": "YulTypedName",
														"src": "1499:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1507:6:2",
														"nodeType": "YulTypedName",
														"src": "1507:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1515:6:2",
														"nodeType": "YulTypedName",
														"src": "1515:6:2",
														"type": ""
													}
												],
												"src": "1388:594:2"
											},
											{
												"body": {
													"nativeSrc": "2088:76:2",
													"nodeType": "YulBlock",
													"src": "2088:76:2",
													"statements": [
														{
															"nativeSrc": "2098:26:2",
															"nodeType": "YulAssignment",
															"src": "2098:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2110:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2110:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2121:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2121:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2106:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2106:3:2"
																},
																"nativeSrc": "2106:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2106:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2098:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2098:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2140:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2140:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2151:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2151:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2133:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:2"
																},
																"nativeSrc": "2133:25:2",
																"nodeType": "YulFunctionCall",
																"src": "2133:25:2"
															},
															"nativeSrc": "2133:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "2133:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1987:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2057:9:2",
														"nodeType": "YulTypedName",
														"src": "2057:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2068:6:2",
														"nodeType": "YulTypedName",
														"src": "2068:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2079:4:2",
														"nodeType": "YulTypedName",
														"src": "2079:4:2",
														"type": ""
													}
												],
												"src": "1987:177:2"
											},
											{
												"body": {
													"nativeSrc": "2326:241:2",
													"nodeType": "YulBlock",
													"src": "2326:241:2",
													"statements": [
														{
															"nativeSrc": "2336:26:2",
															"nodeType": "YulAssignment",
															"src": "2336:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2348:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2348:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2359:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2359:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2344:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:2"
																},
																"nativeSrc": "2344:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2344:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2336:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2336:4:2"
																}
															]
														},
														{
															"nativeSrc": "2371:52:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2371:52:2",
															"value": {
																"kind": "number",
																"nativeSrc": "2381:42:2",
																"nodeType": "YulLiteral",
																"src": "2381:42:2",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2375:2:2",
																	"nodeType": "YulTypedName",
																	"src": "2375:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2439:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2439:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2454:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:2"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2462:2:2",
																				"nodeType": "YulIdentifier",
																				"src": "2462:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2450:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2450:3:2"
																		},
																		"nativeSrc": "2450:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2450:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2432:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2432:6:2"
																},
																"nativeSrc": "2432:34:2",
																"nodeType": "YulFunctionCall",
																"src": "2432:34:2"
															},
															"nativeSrc": "2432:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "2432:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2486:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2486:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2497:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2497:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2482:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2482:3:2"
																		},
																		"nativeSrc": "2482:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2482:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2506:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2506:6:2"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2514:2:2",
																				"nodeType": "YulIdentifier",
																				"src": "2514:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2502:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:2"
																		},
																		"nativeSrc": "2502:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2502:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2475:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:2"
																},
																"nativeSrc": "2475:43:2",
																"nodeType": "YulFunctionCall",
																"src": "2475:43:2"
															},
															"nativeSrc": "2475:43:2",
															"nodeType": "YulExpressionStatement",
															"src": "2475:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2538:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2549:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2534:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:2"
																		},
																		"nativeSrc": "2534:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2534:18:2"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2554:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2554:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2527:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2527:6:2"
																},
																"nativeSrc": "2527:34:2",
																"nodeType": "YulFunctionCall",
																"src": "2527:34:2"
															},
															"nativeSrc": "2527:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "2527:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2169:398:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2279:9:2",
														"nodeType": "YulTypedName",
														"src": "2279:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2290:6:2",
														"nodeType": "YulTypedName",
														"src": "2290:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2298:6:2",
														"nodeType": "YulTypedName",
														"src": "2298:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2306:6:2",
														"nodeType": "YulTypedName",
														"src": "2306:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2317:4:2",
														"nodeType": "YulTypedName",
														"src": "2317:4:2",
														"type": ""
													}
												],
												"src": "2169:398:2"
											},
											{
												"body": {
													"nativeSrc": "2803:299:2",
													"nodeType": "YulBlock",
													"src": "2803:299:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2820:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2820:3:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2825:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2825:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2813:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2813:6:2"
																},
																"nativeSrc": "2813:19:2",
																"nodeType": "YulFunctionCall",
																"src": "2813:19:2"
															},
															"nativeSrc": "2813:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "2813:19:2"
														},
														{
															"nativeSrc": "2841:41:2",
															"nodeType": "YulVariableDeclaration",
															"src": "2841:41:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2855:26:2",
																		"nodeType": "YulLiteral",
																		"src": "2855:26:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "2851:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:2"
																},
																"nativeSrc": "2851:31:2",
																"nodeType": "YulFunctionCall",
																"src": "2851:31:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2845:2:2",
																	"nodeType": "YulTypedName",
																	"src": "2845:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2902:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "2902:3:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2907:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2907:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2898:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2898:3:2"
																		},
																		"nativeSrc": "2898:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2898:12:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2920:2:2",
																						"nodeType": "YulLiteral",
																						"src": "2920:2:2",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nativeSrc": "2924:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2924:6:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2916:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2916:3:2"
																				},
																				"nativeSrc": "2916:15:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2916:15:2"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2933:2:2",
																				"nodeType": "YulIdentifier",
																				"src": "2933:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2912:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2912:3:2"
																		},
																		"nativeSrc": "2912:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2912:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2891:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2891:6:2"
																},
																"nativeSrc": "2891:46:2",
																"nodeType": "YulFunctionCall",
																"src": "2891:46:2"
															},
															"nativeSrc": "2891:46:2",
															"nodeType": "YulExpressionStatement",
															"src": "2891:46:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2957:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "2957:3:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2962:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2962:2:2",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2953:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2953:3:2"
																		},
																		"nativeSrc": "2953:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2953:12:2"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2967:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2967:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2946:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2946:6:2"
																},
																"nativeSrc": "2946:28:2",
																"nodeType": "YulFunctionCall",
																"src": "2946:28:2"
															},
															"nativeSrc": "2946:28:2",
															"nodeType": "YulExpressionStatement",
															"src": "2946:28:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2994:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "2994:3:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2999:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:2",
																				"type": "",
																				"value": "84"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2990:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:2"
																		},
																		"nativeSrc": "2990:12:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2990:12:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3012:2:2",
																						"nodeType": "YulLiteral",
																						"src": "3012:2:2",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value3",
																						"nativeSrc": "3016:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "3016:6:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3008:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:2"
																				},
																				"nativeSrc": "3008:15:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:15:2"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3025:2:2",
																				"nodeType": "YulIdentifier",
																				"src": "3025:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3004:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:2"
																		},
																		"nativeSrc": "3004:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2983:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:2"
																},
																"nativeSrc": "2983:46:2",
																"nodeType": "YulFunctionCall",
																"src": "2983:46:2"
															},
															"nativeSrc": "2983:46:2",
															"nodeType": "YulExpressionStatement",
															"src": "2983:46:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "3049:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "3049:3:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3054:3:2",
																				"nodeType": "YulLiteral",
																				"src": "3054:3:2",
																				"type": "",
																				"value": "104"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3045:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3045:3:2"
																		},
																		"nativeSrc": "3045:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3045:13:2"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "3060:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3060:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3038:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3038:6:2"
																},
																"nativeSrc": "3038:29:2",
																"nodeType": "YulFunctionCall",
																"src": "3038:29:2"
															},
															"nativeSrc": "3038:29:2",
															"nodeType": "YulExpressionStatement",
															"src": "3038:29:2"
														},
														{
															"nativeSrc": "3076:20:2",
															"nodeType": "YulAssignment",
															"src": "3076:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3087:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3087:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3092:3:2",
																		"nodeType": "YulLiteral",
																		"src": "3092:3:2",
																		"type": "",
																		"value": "136"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3083:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3083:3:2"
																},
																"nativeSrc": "3083:13:2",
																"nodeType": "YulFunctionCall",
																"src": "3083:13:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3076:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3076:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256_t_address_t_bytes32__to_t_uint256_t_address_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2572:530:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2747:3:2",
														"nodeType": "YulTypedName",
														"src": "2747:3:2",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2752:6:2",
														"nodeType": "YulTypedName",
														"src": "2752:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2760:6:2",
														"nodeType": "YulTypedName",
														"src": "2760:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2768:6:2",
														"nodeType": "YulTypedName",
														"src": "2768:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2776:6:2",
														"nodeType": "YulTypedName",
														"src": "2776:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2784:6:2",
														"nodeType": "YulTypedName",
														"src": "2784:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2795:3:2",
														"nodeType": "YulTypedName",
														"src": "2795:3:2",
														"type": ""
													}
												],
												"src": "2572:530:2"
											},
											{
												"body": {
													"nativeSrc": "3208:76:2",
													"nodeType": "YulBlock",
													"src": "3208:76:2",
													"statements": [
														{
															"nativeSrc": "3218:26:2",
															"nodeType": "YulAssignment",
															"src": "3218:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3230:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3230:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3241:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3241:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3226:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:2"
																},
																"nativeSrc": "3226:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3226:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3218:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3218:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3260:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3260:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3271:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3271:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3253:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3253:6:2"
																},
																"nativeSrc": "3253:25:2",
																"nodeType": "YulFunctionCall",
																"src": "3253:25:2"
															},
															"nativeSrc": "3253:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "3253:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3107:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3177:9:2",
														"nodeType": "YulTypedName",
														"src": "3177:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3188:6:2",
														"nodeType": "YulTypedName",
														"src": "3188:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3199:4:2",
														"nodeType": "YulTypedName",
														"src": "3199:4:2",
														"type": ""
													}
												],
												"src": "3107:177:2"
											},
											{
												"body": {
													"nativeSrc": "3370:170:2",
													"nodeType": "YulBlock",
													"src": "3370:170:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3416:16:2",
																"nodeType": "YulBlock",
																"src": "3416:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3425:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3425:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3428:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3428:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3418:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3418:6:2"
																			},
																			"nativeSrc": "3418:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3418:12:2"
																		},
																		"nativeSrc": "3418:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3418:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3391:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3391:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3400:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3400:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3387:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3387:3:2"
																		},
																		"nativeSrc": "3387:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3387:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3412:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3412:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3383:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3383:3:2"
																},
																"nativeSrc": "3383:32:2",
																"nodeType": "YulFunctionCall",
																"src": "3383:32:2"
															},
															"nativeSrc": "3380:52:2",
															"nodeType": "YulIf",
															"src": "3380:52:2"
														},
														{
															"nativeSrc": "3441:29:2",
															"nodeType": "YulVariableDeclaration",
															"src": "3441:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3460:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3460:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3454:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "3454:5:2"
																},
																"nativeSrc": "3454:16:2",
																"nodeType": "YulFunctionCall",
																"src": "3454:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3445:5:2",
																	"nodeType": "YulTypedName",
																	"src": "3445:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3504:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "3504:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3479:24:2",
																	"nodeType": "YulIdentifier",
																	"src": "3479:24:2"
																},
																"nativeSrc": "3479:31:2",
																"nodeType": "YulFunctionCall",
																"src": "3479:31:2"
															},
															"nativeSrc": "3479:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "3479:31:2"
														},
														{
															"nativeSrc": "3519:15:2",
															"nodeType": "YulAssignment",
															"src": "3519:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "3529:5:2",
																"nodeType": "YulIdentifier",
																"src": "3529:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3519:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3519:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "3289:251:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3336:9:2",
														"nodeType": "YulTypedName",
														"src": "3336:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3347:7:2",
														"nodeType": "YulTypedName",
														"src": "3347:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3359:6:2",
														"nodeType": "YulTypedName",
														"src": "3359:6:2",
														"type": ""
													}
												],
												"src": "3289:251:2"
											},
											{
												"body": {
													"nativeSrc": "3702:162:2",
													"nodeType": "YulBlock",
													"src": "3702:162:2",
													"statements": [
														{
															"nativeSrc": "3712:26:2",
															"nodeType": "YulAssignment",
															"src": "3712:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3724:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3724:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3735:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3735:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3720:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3720:3:2"
																},
																"nativeSrc": "3720:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3720:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3712:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3712:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3754:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3754:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3765:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3765:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3747:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3747:6:2"
																},
																"nativeSrc": "3747:25:2",
																"nodeType": "YulFunctionCall",
																"src": "3747:25:2"
															},
															"nativeSrc": "3747:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "3747:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3792:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3792:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3803:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3803:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3788:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3788:3:2"
																		},
																		"nativeSrc": "3788:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3788:18:2"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3808:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3808:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3781:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:2"
																},
																"nativeSrc": "3781:34:2",
																"nodeType": "YulFunctionCall",
																"src": "3781:34:2"
															},
															"nativeSrc": "3781:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "3781:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3835:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3835:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3846:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3846:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3831:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3831:3:2"
																		},
																		"nativeSrc": "3831:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3831:18:2"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3851:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3851:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3824:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3824:6:2"
																},
																"nativeSrc": "3824:34:2",
																"nodeType": "YulFunctionCall",
																"src": "3824:34:2"
															},
															"nativeSrc": "3824:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "3824:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3545:319:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3655:9:2",
														"nodeType": "YulTypedName",
														"src": "3655:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3666:6:2",
														"nodeType": "YulTypedName",
														"src": "3666:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3674:6:2",
														"nodeType": "YulTypedName",
														"src": "3674:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3682:6:2",
														"nodeType": "YulTypedName",
														"src": "3682:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3693:4:2",
														"nodeType": "YulTypedName",
														"src": "3693:4:2",
														"type": ""
													}
												],
												"src": "3545:319:2"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_addresst_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256_t_address_t_bytes32__to_t_uint256_t_address_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(add(pos, 32), and(shl(96, value1), _1))\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), and(shl(96, value3), _1))\n        mstore(add(pos, 104), value4)\n        end := add(pos, 136)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610058575f3560e01c8063aa8de79411610041578063aa8de7941461009c578063c049604a146100bb578063dac17732146100ce575f80fd5b806304f249381461005c5780639299e5521461007d575b5f80fd5b348015610067575f80fd5b5061007b6100763660046106d8565b610155565b005b348015610088575f80fd5b5061007b610097366004610712565b61027a565b3480156100a7575f80fd5b5061007b6100b6366004610729565b6102d7565b61007b6100c9366004610749565b6102f6565b3480156100d9575f80fd5b506101436100e8366004610777565b604080516020808201979097526bffffffffffffffffffffffff19606096871b81168284015260548201959095529290941b90921660748201526088808201929092528251808203909201825260a801909152805191012090565b60405190815260200160405180910390f35b83836101618282610497565b6040805160208082018990526bffffffffffffffffffffffff1933606090811b8216848601526054840188905289901b16607483015260888083018890528351808403909101815260a890920190925280519101205f906040805160a081018252338082526001600160a01b038a811660208085019182528486018e8152606086018c8152608087018e81525f8a8152938490529783209651875490861673ffffffffffffffffffffffffffffffffffffffff1991821617885593516001880180549190961694169390931790935591516002850155516003840155925160049092019190915591925082907f17a154a37f0fb7c7f440e4672a098f6afcc1ba29bc7ab9ce143014be49d7410e9080a350505050505050565b8061028481610565565b5f828152602081905260408120805473ffffffffffffffffffffffffffffffffffffffff199081168255600182018054909116905560028101829055600381018290556004018190553390839080a25050565b816102e181610565565b505f9182526020829052604090912060030155565b5f8281526020818152604091829020825160a08101845281546001600160a01b03908116825260018301541692810192909252600281015492820192909252600382015460608201526004909101546080820152610353836105b7565b61035c83610607565b61036583610658565b805160408083015190517f42842e0e0000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201523360248201526044810191909152908316906342842e0e906064015f604051808303815f87803b1580156103d4575f80fd5b505af11580156103e6573d5f803e3d5ffd5b505082516040516001600160a01b0390911692503480156108fc029250905f818181858888f19350505050158015610420573d5f803e3d5ffd5b505f838152602081905260408120805473ffffffffffffffffffffffffffffffffffffffff19908116825560018201805490911690556002810182905560038101829055600401819055339084907f4c72f34d0e2a0b597a25ae9c086c06c4ac48ba071ecc23757ab1668bcd20be509080a3505050565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810183905233906001600160a01b03831690636352211e90602401602060405180830381865afa1580156104f5573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061051991906107c5565b6001600160a01b031614610561576040517f4d65ccb8000000000000000000000000000000000000000000000000000000008152600481018390526024015b60405180910390fd5b5050565b5f818152602081905260409020546001600160a01b031633146105b4576040517fbab7ca3500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b5f818152602081905260409020546001600160a01b03166105b4576040517f45abffa900000000000000000000000000000000000000000000000000000000815260048101829052602401610558565b5f81815260208190526040902054336001600160a01b03909116036105b4576040517fb1df0e0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8181526020819052604090206003015434146105b4575f81815260208190526040908190206003015490517f5cd97799000000000000000000000000000000000000000000000000000000008152600481018390526024810191909152346044820152606401610558565b6001600160a01b03811681146105b4575f80fd5b5f805f80608085870312156106eb575f80fd5b8435935060208501356106fd816106c4565b93969395505050506040820135916060013590565b5f60208284031215610722575f80fd5b5035919050565b5f806040838503121561073a575f80fd5b50508035926020909101359150565b5f806040838503121561075a575f80fd5b82359150602083013561076c816106c4565b809150509250929050565b5f805f805f60a0868803121561078b575f80fd5b85359450602086013561079d816106c4565b93506040860135925060608601356107b4816106c4565b949793965091946080013592915050565b5f602082840312156107d5575f80fd5b81516107e0816106c4565b939250505056fea2646970667358221220ab7a2d1d01e1ff4dd97af4b2e532050e06a564f7eeb334120df2b2ac628c323564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAA8DE794 GT PUSH2 0x41 JUMPI DUP1 PUSH4 0xAA8DE794 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xC049604A EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xDAC17732 EQ PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F24938 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x9299E552 EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0x76 CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x712 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xC9 CALLDATASIZE PUSH1 0x4 PUSH2 0x749 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH2 0xE8 CALLDATASIZE PUSH1 0x4 PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP7 DUP8 SHL DUP2 AND DUP3 DUP5 ADD MSTORE PUSH1 0x54 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 SWAP1 SWAP5 SHL SWAP1 SWAP3 AND PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x88 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD DUP1 DUP3 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0xA8 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP4 DUP4 PUSH2 0x161 DUP3 DUP3 PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND DUP5 DUP7 ADD MSTORE PUSH1 0x54 DUP5 ADD DUP9 SWAP1 MSTORE DUP10 SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP1 DUP4 ADD DUP9 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA8 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH0 SWAP1 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP5 DUP7 ADD DUP15 DUP2 MSTORE PUSH1 0x60 DUP7 ADD DUP13 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP15 DUP2 MSTORE PUSH0 DUP11 DUP2 MSTORE SWAP4 DUP5 SWAP1 MSTORE SWAP8 DUP4 KECCAK256 SWAP7 MLOAD DUP8 SLOAD SWAP1 DUP7 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP2 DUP3 AND OR DUP9 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP9 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP7 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE SWAP3 MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP3 POP DUP3 SWAP1 PUSH32 0x17A154A37F0FB7C7F440E4672A098F6AFCC1BA29BC7AB9CE143014BE49D7410E SWAP1 DUP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x284 DUP2 PUSH2 0x565 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 ADD DUP2 SWAP1 SSTORE CALLER SWAP1 DUP4 SWAP1 DUP1 LOG2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x2E1 DUP2 PUSH2 0x565 JUMP JUMPDEST POP PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SSTORE JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x353 DUP4 PUSH2 0x5B7 JUMP JUMPDEST PUSH2 0x35C DUP4 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x365 DUP4 PUSH2 0x658 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 MLOAD PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP DUP3 MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 POP SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x420 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 ADD DUP2 SWAP1 SSTORE CALLER SWAP1 DUP5 SWAP1 PUSH32 0x4C72F34D0E2A0B597A25AE9C086C06C4AC48BA071ECC23757AB1668BCD20BE50 SWAP1 DUP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4D65CCB800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBAB7CA3500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x45ABFFA900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1DF0E0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD CALLVALUE EQ PUSH2 0x5B4 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH32 0x5CD9779900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLVALUE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x6FD DUP2 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x722 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x73A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x76C DUP2 PUSH2 0x6C4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x78B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x79D DUP2 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x7B4 DUP2 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7E0 DUP2 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH27 0x2D1D01E1FF4DD97AF4B2E532050E06A564F7EEB334120DF2B2AC62 DUP13 ORIGIN CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "231:4795:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:702;;;;;;;;;;-1:-1:-1;1672:702:0;;;;;:::i;:::-;;:::i;:::-;;2584:287;;;;;;;;;;-1:-1:-1;2584:287:0;;;;;:::i;:::-;;:::i;2879:151::-;;;;;;;;;;-1:-1:-1;2879:151:0;;;;;:::i;:::-;;:::i;3038:684::-;;;;;;:::i;:::-;;:::i;3730:409::-;;;;;;;;;;-1:-1:-1;3730:409:0;;;;;:::i;:::-;3961:159;;;;;;;2813:19:2;;;;-1:-1:-1;;2920:2:2;2916:15;;;2912:24;;2898:12;;;2891:46;2953:12;;;2946:28;;;;3008:15;;;;3004:24;;;2990:12;;;2983:46;3045:13;;;;3038:29;;;;3961:159:0;;;;;;;;;;3083:13:2;;3961:159:0;;;3937:194;;;;;;3730:409;;;;2133:25:2;;;2121:2;2106:18;3730:409:0;;;;;;;1672:702;1824:7;1833:11;1497:36;1512:7;1521:11;1497:14;:36::i;:::-;3961:159;;;;;;;2813:19:2;;;-1:-1:-1;;1903:10:0::1;2920:2:2::0;2916:15;;;2912:24;;2898:12;;;2891:46;2953:12;;;2946:28;;;3008:15;;;3004:24;2990:12;;;2983:46;3045:13;;;;3038:29;;;3961:159:0;;;;;;;;;;3083:13:2;;;;3961:159:0;;;3937:194;;;;;1857:19:::1;::::0;1977:175:::1;::::0;;::::1;::::0;::::1;::::0;;2008:10:::1;1977:175:::0;;;-1:-1:-1;;;;;1977:175:0;;::::1;;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1953:21:0;;;;;;;;;;:199;;;;;;::::1;-1:-1:-1::0;;1953:199:0;;::::1;;::::0;;;;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;1857:83;;-1:-1:-1;1857:83:0;;2252:32:::1;::::0;-1:-1:-1;2189:167:0::1;2174:193;1672:702:::0;;;;;;:::o;2584:287::-;2648:11;1615:27;1630:11;1615:14;:27::i;:::-;2679:8:::1;:21:::0;;;::::1;::::0;;;;;;2672:28;;-1:-1:-1;;2672:28:0;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;;::::0;;;2830:8:::1;::::0;2688:11;;2679:8;2737:116:::1;2584:287:::0;;:::o;2879:151::-;2963:11;1615:27;1630:11;1615:14;:27::i;:::-;-1:-1:-1;2987:8:0::1;:21:::0;;;::::1;::::0;;;;;;;:27:::1;;:35:::0;2879:151::o;3038:684::-;3121:22;3146:21;;;;;;;;;;;;3121:46;;;;;;;;;-1:-1:-1;;;;;3121:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3180:31;3155:11;3180:18;:31::i;:::-;3222:29;3239:11;3222:16;:29::i;:::-;3262:35;3285:11;3262:22;:35::i;:::-;3349:14;;3377:15;;;;;3310:83;;;;;-1:-1:-1;;;;;2450:15:2;;;3310:83:0;;;2432:34:2;3365:10:0;2482:18:2;;;2475:43;2534:18;;;2527:34;;;;3310:38:0;;;;;;2344:18:2;;3310:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3414:14:0;;3406:43;;-1:-1:-1;;;;;3406:32:0;;;;-1:-1:-1;3439:9:0;3406:43;;;;;-1:-1:-1;3439:9:0;3414:14;3406:43;3414:14;3406:43;3439:9;3406:32;:43;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3469:8:0;:21;;;;;;;;;;3462:28;;-1:-1:-1;;3462:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3681:8;;3478:11;;3598:34;;3469:8;3535:169;3520:195;3038:684;;:::o;4147:176::-;4237:38;;;;;;;;2133:25:2;;;4279:10:0;;-1:-1:-1;;;;;4237:29:0;;;;;2106:18:2;;4237:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4237:52:0;;4233:82;;4298:17;;;;;;;;2133:25:2;;;2106:18;;4298:17:0;;;;;;;;4233:82;4147:176;;:::o;4331:147::-;4404:8;:21;;;;;;;;;;:28;-1:-1:-1;;;;;4404:28:0;4436:10;4404:42;4400:70;;4455:15;;;;;;;;;;;;;;4400:70;4331:147;:::o;4486:164::-;4603:1;4563:21;;;;;;;;;;:28;-1:-1:-1;;;;;4563:28:0;4559:83;;4614:28;;;;;;;;2133:25:2;;;2106:18;;4614:28:0;1987:177:2;4658:148:0;4733:8;:21;;;;;;;;;;:28;4765:10;-1:-1:-1;;;;;4733:28:0;;;:42;4729:69;;4784:14;;;;;;;;;;;;;;4814:209;4908:8;:21;;;;;;;;;;:27;;;4895:9;:40;4891:124;;4976:8;:21;;;;;;;;;;;;:27;;;4944:71;;;;;;;;3747:25:2;;;3788:18;;;3781:34;;;;5005:9:0;3831:18:2;;;3824:34;3720:18;;4944:71:0;3545:319:2;14:154;-1:-1:-1;;;;;93:5:2;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:452;259:6;267;275;283;336:3;324:9;315:7;311:23;307:33;304:53;;;353:1;350;343:12;304:53;389:9;376:23;366:33;;449:2;438:9;434:18;421:32;462:31;487:5;462:31;:::i;:::-;173:452;;512:5;;-1:-1:-1;;;;564:2:2;549:18;;536:32;;615:2;600:18;587:32;;173:452::o;630:180::-;689:6;742:2;730:9;721:7;717:23;713:32;710:52;;;758:1;755;748:12;710:52;-1:-1:-1;781:23:2;;630:180;-1:-1:-1;630:180:2:o;815:248::-;883:6;891;944:2;932:9;923:7;919:23;915:32;912:52;;;960:1;957;950:12;912:52;-1:-1:-1;;983:23:2;;;1053:2;1038:18;;;1025:32;;-1:-1:-1;815:248:2:o;1068:315::-;1136:6;1144;1197:2;1185:9;1176:7;1172:23;1168:32;1165:52;;;1213:1;1210;1203:12;1165:52;1249:9;1236:23;1226:33;;1309:2;1298:9;1294:18;1281:32;1322:31;1347:5;1322:31;:::i;:::-;1372:5;1362:15;;;1068:315;;;;;:::o;1388:594::-;1483:6;1491;1499;1507;1515;1568:3;1556:9;1547:7;1543:23;1539:33;1536:53;;;1585:1;1582;1575:12;1536:53;1621:9;1608:23;1598:33;;1681:2;1670:9;1666:18;1653:32;1694:31;1719:5;1694:31;:::i;:::-;1744:5;-1:-1:-1;1796:2:2;1781:18;;1768:32;;-1:-1:-1;1852:2:2;1837:18;;1824:32;1865:33;1824:32;1865:33;:::i;:::-;1388:594;;;;-1:-1:-1;1388:594:2;;1971:3;1956:19;1943:33;;1388:594;-1:-1:-1;;1388:594:2:o;3289:251::-;3359:6;3412:2;3400:9;3391:7;3387:23;3383:32;3380:52;;;3428:1;3425;3418:12;3380:52;3460:9;3454:16;3479:31;3504:5;3479:31;:::i;:::-;3529:5;3289:251;-1:-1:-1;;;3289:251:2:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "415400",
								"executionCost": "447",
								"totalCost": "415847"
							},
							"external": {
								"buy(bytes32,address)": "infinite",
								"cancelListing(bytes32)": "67183",
								"changeListingPrice(bytes32,uint256)": "24664",
								"createListing(uint256,address,bytes32,uint256)": "infinite",
								"getListingHash(uint256,address,uint256,address,bytes32)": "infinite"
							},
							"internal": {
								"_checkIfSeller(bytes32)": "infinite",
								"_checkNFTOwned(uint256,address)": "infinite",
								"_checkValidAmountToPay(bytes32)": "infinite",
								"_checkValidBuyer(bytes32)": "infinite",
								"_checkValidListing(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 5026,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 5026,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab7a2d1d01e1ff4dd97af4b2e532050e06a564f7eeb334120df2b2ac628c323564736f6c63430008190033",
									".code": [
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "AA8DE794"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "AA8DE794"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "C049604A"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "DAC17732"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "4F24938"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "9299E552"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 5026,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1672,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1672,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2584,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2584,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2879,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2879,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3038,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3038,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3730,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2832,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2832,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2832,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2920,
											"end": 2922,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2916,
											"end": 2931,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2931,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2931,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2936,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2910,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "PUSH",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2974,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2974,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2974,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3028,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "PUSH",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "PUSH",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3096,
											"name": "PUSH",
											"source": 2,
											"value": "A8"
										},
										{
											"begin": 3083,
											"end": 3096,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2123,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 4139,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1497,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1512,
											"end": 1519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1521,
											"end": 1532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1497,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1497,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1497,
											"end": 1533,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1497,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2832,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2832,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1903,
											"end": 1913,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 2922,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2916,
											"end": 2931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2931,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2936,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2910,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2910,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "PUSH",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2974,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2974,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3023,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "PUSH",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "PUSH",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3067,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3096,
											"name": "PUSH",
											"source": 2,
											"value": "A8"
										},
										{
											"begin": 3083,
											"end": 3096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3096,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3096,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4131,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2018,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1953,
											"end": 2152,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1940,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1857,
											"end": 1940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1857,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2252,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "17A154A37F0FB7C7F440E4672A098F6AFCC1BA29BC7AB9CE143014BE49D7410E"
										},
										{
											"begin": 2252,
											"end": 2284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2189,
											"end": 2356,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2174,
											"end": 2367,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1615,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2838,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2853,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2879,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 2974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1630,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1615,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2987,
											"end": 2995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2987,
											"end": 3008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 3008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2987,
											"end": 3014,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3022,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3121,
											"end": 3167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3155,
											"end": 3166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3180,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3180,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3239,
											"end": 3250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3222,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3251,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3222,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3262,
											"end": 3297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3262,
											"end": 3297,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3262,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3377,
											"end": 3392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3375,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2500,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2482,
											"end": 2500,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2518,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2561,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 3310,
											"end": 3348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3310,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3439,
											"end": 3448,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3439,
											"end": 3448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3439,
											"end": 3448,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3438,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3469,
											"end": 3477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3490,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3689,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3632,
											"name": "PUSH",
											"source": 0,
											"value": "4C72F34D0E2A0B597A25AE9C086C06C4AC48BA071ECC23757AB1668BCD20BE50"
										},
										{
											"begin": 3598,
											"end": 3632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3704,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3038,
											"end": 3722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3038,
											"end": 3722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4147,
											"end": 4323,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4147,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 4237,
											"end": 4266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4237,
											"end": 4275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4237,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4289,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4233,
											"end": 4315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "PUSH",
											"source": 0,
											"value": "4D65CCB800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4315,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4233,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4147,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4147,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4147,
											"end": 4323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4478,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4331,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4404,
											"end": 4432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4446,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4400,
											"end": 4470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "PUSH",
											"source": 0,
											"value": "BAB7CA3500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4470,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4400,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4331,
											"end": 4478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4486,
											"end": 4650,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4486,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4603,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4563,
											"end": 4584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4559,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4559,
											"end": 4642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "PUSH",
											"source": 0,
											"value": "45ABFFA900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4614,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1987,
											"end": 2164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4806,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4658,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4733,
											"end": 4754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4733,
											"end": 4754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4754,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4775,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4733,
											"end": 4761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4729,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4729,
											"end": 4798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "PUSH",
											"source": 0,
											"value": "B1DF0E0600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 5023,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4814,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4908,
											"end": 4929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4908,
											"end": 4935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4895,
											"end": 4904,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4895,
											"end": 4935,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4891,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4891,
											"end": 5015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5003,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4976,
											"end": 5003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 5015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 5015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 5015,
											"name": "PUSH",
											"source": 0,
											"value": "5CD9779900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4944,
											"end": 5015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 5015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 5015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4944,
											"end": 5015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 5015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 3772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 3772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 3815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 3815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 3815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 3815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5014,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3824,
											"end": 3858,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3720,
											"end": 3738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4944,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3545,
											"end": 3864,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 168,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 14,
											"end": 168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 89,
											"end": 143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 82,
											"end": 87,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 79,
											"end": 144,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 69,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 69,
											"end": 162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 158,
											"end": 159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 148,
											"end": 160,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 173,
											"end": 625,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 173,
											"end": 625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 259,
											"end": 265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 275,
											"end": 281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 289,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 336,
											"end": 339,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 324,
											"end": 333,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 315,
											"end": 322,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 311,
											"end": 334,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 307,
											"end": 340,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 304,
											"end": 357,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 304,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 304,
											"end": 357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 343,
											"end": 355,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 304,
											"end": 357,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 304,
											"end": 357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 389,
											"end": 398,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 366,
											"end": 399,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 366,
											"end": 399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 449,
											"end": 451,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 438,
											"end": 447,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 434,
											"end": 452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 421,
											"end": 453,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 462,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 487,
											"end": 492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 462,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 462,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 462,
											"end": 493,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 462,
											"end": 493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 173,
											"end": 625,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 173,
											"end": 625,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 512,
											"end": 517,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 512,
											"end": 517,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 564,
											"end": 566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 549,
											"end": 567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 536,
											"end": 568,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 536,
											"end": 568,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 600,
											"end": 618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 619,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 173,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 810,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 630,
											"end": 810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 689,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 739,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 721,
											"end": 728,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 717,
											"end": 740,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 713,
											"end": 745,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 710,
											"end": 762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 710,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 710,
											"end": 762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 758,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 748,
											"end": 760,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 710,
											"end": 762,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 710,
											"end": 762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 781,
											"end": 804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 630,
											"end": 810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 630,
											"end": 810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 815,
											"end": 1063,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 815,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 883,
											"end": 889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 944,
											"end": 946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 923,
											"end": 930,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 919,
											"end": 942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 915,
											"end": 947,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 912,
											"end": 964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 912,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 912,
											"end": 964,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 950,
											"end": 962,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 912,
											"end": 964,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 912,
											"end": 964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 983,
											"end": 1006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1006,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1006,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1038,
											"end": 1056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1057,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1057,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 815,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1383,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1068,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1183,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1195,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1200,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1215,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1165,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1298,
											"end": 1307,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1313,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1347,
											"end": 1352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1322,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1372,
											"end": 1377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1383,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1383,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1982,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1388,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1571,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1572,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1587,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1536,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1630,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1631,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1631,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1631,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1653,
											"end": 1685,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1694,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1725,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1694,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1749,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1800,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1800,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1852,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1855,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1855,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1856,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1865,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1982,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1982,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1982,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1982,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1982,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1971,
											"end": 1974,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1956,
											"end": 1975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1976,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1976,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3540,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3289,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3414,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3398,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3380,
											"end": 3432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3430,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3432,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3380,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3454,
											"end": 3470,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3504,
											"end": 3509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3479,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3510,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3479,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3540,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3289,
											"end": 3540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractW/ContractWV3.sol",
								"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buy(bytes32,address)": "c049604a",
							"cancelListing(bytes32)": "9299e552",
							"changeListingPrice(bytes32,uint256)": "aa8de794",
							"createListing(uint256,address,bytes32,uint256)": "04f24938",
							"getListingHash(uint256,address,uint256,address,bytes32)": "dac17732"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"listingHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToPay\",\"type\":\"uint256\"}],\"name\":\"InvalidAmountToPay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBuyer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"listingHash\",\"type\":\"bytes32\"}],\"name\":\"InvalidListing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeller\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"listingHash\",\"type\":\"bytes32\"}],\"name\":\"ListingAlreadyCancelled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"listingHash\",\"type\":\"bytes32\"}],\"name\":\"ListingNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"listingHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"listingHash\",\"type\":\"bytes32\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"listingHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"changeListingPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"getListingHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContractW/ContractWV3.sol\":\"ContractWV3\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/ContractW/ContractWV3.sol\":{\"keccak256\":\"0xcf783cc5fc6b7dd14f02b43fc68746a0db7ecf1232dc53dccac165ffda261fd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bb28ac39267e000feaca4974d1ae7aa3d7c68eea37d0ad400f47a449e9c5e1d\",\"dweb:/ipfs/QmS4QHhLh2U8ELaVYhnrYEWNvFMbcyK469UPc8z7qFmugz\"]},\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/ContractW/ContractWV3.sol:ContractWV3",
								"label": "listings",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(Listing)13_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(Listing)13_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct ContractWV3.Listing)",
								"numberOfBytes": "32",
								"value": "t_struct(Listing)13_storage"
							},
							"t_struct(Listing)13_storage": {
								"encoding": "inplace",
								"label": "struct ContractWV3.Listing",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/ContractW/ContractWV3.sol:ContractWV3",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 6,
										"contract": "contracts/ContractW/ContractWV3.sol:ContractWV3",
										"label": "nftContract",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 8,
										"contract": "contracts/ContractW/ContractWV3.sol:ContractWV3",
										"label": "tokenId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 10,
										"contract": "contracts/ContractW/ContractWV3.sol:ContractWV3",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 12,
										"contract": "contracts/ContractW/ContractWV3.sol:ContractWV3",
										"label": "salt",
										"offset": 0,
										"slot": "4",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ContractW/ContractWV3.sol": {
				"ast": {
					"absolutePath": "contracts/ContractW/ContractWV3.sol",
					"exportedSymbols": {
						"ContractWV3": [
							335
						],
						"IERC721A": [
							556
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
							"file": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 557,
							"src": "63:80:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ContractWV3",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335
							],
							"name": "ContractWV3",
							"nameLocation": "240:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ContractWV3.Listing",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "293:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "285:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "285:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "nftContract",
											"nameLocation": "318:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "310:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 5,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "310:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "348:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "340:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 7,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "374:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "366:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "366:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "salt",
											"nameLocation": "398:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "390:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 11,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "390:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Listing",
									"nameLocation": "266:7:0",
									"nodeType": "StructDefinition",
									"scope": 335,
									"src": "259:151:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 16,
									"mutability": "constant",
									"name": "_LISTING_CREATED_EVENT_SIGNATURE",
									"nameLocation": "512:32:0",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "487:126:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 14,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "487:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307831376131353461333766306662376337663434306534363732613039386636616663633162613239626337616239636531343330313462653439643734313065",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "547:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10688242049390010971352937632079492235457113392970507021413075410129803231502_by_1",
											"typeString": "int_const 1068...(69 digits omitted)...1502"
										},
										"value": "0x17a154a37f0fb7c7f440e4672a098f6afcc1ba29bc7ab9ce143014be49d7410e"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 19,
									"mutability": "constant",
									"name": "_LISTING_CANCELLED_EVENT_SIGNATURE",
									"nameLocation": "716:34:0",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "691:128:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 17,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "691:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307831336333653231303564363661656636356531383737313064323438373033643962313435613133666330363333306263656332643434383161643064613130",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "753:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8940039536583652310269552696712286280628537432281401376275587606580969921040_by_1",
											"typeString": "int_const 8940...(68 digits omitted)...1040"
										},
										"value": "0x13c3e2105d66aef65e187710d248703d9b145a13fc06330bcec2d4481ad0da10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 22,
									"mutability": "constant",
									"name": "_LISTING_PURCHASED_EVENT_SIGNATURE",
									"nameLocation": "922:34:0",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "897:128:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 20,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834633732663334643065326130623539376132356165396330383663303663346163343862613037316563633233373537616231363638626364323062653530",
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "959:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34578876259482812926731998020974445986503867145943425344109787753159849983568_by_1",
											"typeString": "int_const 3457...(69 digits omitted)...3568"
										},
										"value": "0x4c72f34d0e2a0b597a25ae9c086c06c4ac48ba071ecc23757ab1668bcd20be50"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "1075:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "1038:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
										"typeString": "mapping(bytes32 => struct ContractWV3.Listing)"
									},
									"typeName": {
										"id": 26,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1038:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
											"typeString": "mapping(bytes32 => struct ContractWV3.Listing)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "Listing",
												"nameLocations": [
													"1058:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 13,
												"src": "1058:7:0"
											},
											"referencedDeclaration": 13,
											"src": "1058:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Listing_$13_storage_ptr",
												"typeString": "struct ContractWV3.Listing"
											}
										}
									},
									"visibility": "private"
								},
								{
									"errorSelector": "bab7ca35",
									"id": 29,
									"name": "InvalidSeller",
									"nameLocation": "1098:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1111:2:0"
									},
									"src": "1092:22:0"
								},
								{
									"errorSelector": "b1df0e06",
									"id": 31,
									"name": "InvalidBuyer",
									"nameLocation": "1126:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1138:2:0"
									},
									"src": "1120:21:0"
								},
								{
									"errorSelector": "def2cec7",
									"id": 35,
									"name": "ListingAlreadyCancelled",
									"nameLocation": "1153:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "1185:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1177:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:21:0"
									},
									"src": "1147:51:0"
								},
								{
									"errorSelector": "4d65ccb8",
									"id": 39,
									"name": "NotOwner",
									"nameLocation": "1210:8:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1227:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1219:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:17:0"
									},
									"src": "1204:32:0"
								},
								{
									"errorSelector": "45abffa9",
									"id": 43,
									"name": "ListingNotFound",
									"nameLocation": "1248:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "1272:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1264:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 40,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:21:0"
									},
									"src": "1242:43:0"
								},
								{
									"errorSelector": "27204492",
									"id": 47,
									"name": "InvalidListing",
									"nameLocation": "1297:14:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "1320:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1312:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:21:0"
									},
									"src": "1291:42:0"
								},
								{
									"errorSelector": "5cd97799",
									"id": 55,
									"name": "InvalidAmountToPay",
									"nameLocation": "1345:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "1372:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1364:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1393:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1385:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amountToPay",
												"nameLocation": "1408:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1400:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:57:0"
									},
									"src": "1339:82:0"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1486:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 63,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1521:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 61,
														"name": "_checkNFTOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1497:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address) view"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1497:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "1497:36:0"
											},
											{
												"id": 66,
												"nodeType": "PlaceholderStatement",
												"src": "1546:1:0"
											}
										]
									},
									"id": 68,
									"name": "onlyOwner",
									"nameLocation": "1438:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1456:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1448:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1473:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1465:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1447:38:0"
									},
									"src": "1429:126:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "1604:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 73,
															"name": "listingHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1630:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 72,
														"name": "_checkIfSeller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "1615:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1615:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1615:27:0"
											},
											{
												"id": 76,
												"nodeType": "PlaceholderStatement",
												"src": "1655:1:0"
											}
										]
									},
									"id": 78,
									"name": "onlySeller",
									"nameLocation": "1572:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "1591:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "1583:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 69,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:21:0"
									},
									"src": "1563:101:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1846:528:0",
										"statements": [
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "listingHash",
														"nameLocation": "1865:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1857:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 93,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1857:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 103,
												"initialValue": {
													"arguments": [
														{
															"id": 96,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "1894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 97,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1903:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1907:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1903:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1915:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 100,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "1922:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1935:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 95,
														"name": "getListingHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1879:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (uint256,address,uint256,address,bytes32) pure returns (bytes32)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1879:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1857:83:0"
											},
											{
												"expression": {
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 104,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1953:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
																"typeString": "mapping(bytes32 => struct ContractWV3.Listing storage ref)"
															}
														},
														"id": 106,
														"indexExpression": {
															"id": 105,
															"name": "listingHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1962:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1953:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$13_storage",
															"typeString": "struct ContractWV3.Listing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 108,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2008:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2012:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2008:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 110,
																"name": "nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "2046:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 111,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2081:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 112,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "2110:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 113,
																"name": "salt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "2136:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 107,
															"name": "Listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "1977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Listing_$13_storage_ptr_$",
																"typeString": "type(struct ContractWV3.Listing storage pointer)"
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2000:6:0",
															"2033:11:0",
															"2072:7:0",
															"2103:5:0",
															"2130:4:0"
														],
														"names": [
															"seller",
															"nftContract",
															"tokenId",
															"price",
															"salt"
														],
														"nodeType": "FunctionCall",
														"src": "1977:175:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$13_memory_ptr",
															"typeString": "struct ContractWV3.Listing memory"
														}
													},
													"src": "1953:199:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$13_storage",
														"typeString": "struct ContractWV3.Listing storage ref"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1953:199:0"
											},
											{
												"AST": {
													"nativeSrc": "2174:193:0",
													"nodeType": "YulBlock",
													"src": "2174:193:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2212:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2212:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2232:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2232:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_LISTING_CREATED_EVENT_SIGNATURE",
																		"nativeSrc": "2252:32:0",
																		"nodeType": "YulIdentifier",
																		"src": "2252:32:0"
																	},
																	{
																		"name": "listingHash",
																		"nativeSrc": "2303:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "2303:11:0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "2333:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "2333:6:0"
																		},
																		"nativeSrc": "2333:8:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:8:0"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "2189:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "2189:4:0"
																},
																"nativeSrc": "2189:167:0",
																"nodeType": "YulFunctionCall",
																"src": "2189:167:0"
															},
															"nativeSrc": "2189:167:0",
															"nodeType": "YulExpressionStatement",
															"src": "2189:167:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 16,
														"isOffset": false,
														"isSlot": false,
														"src": "2252:32:0",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "2303:11:0",
														"valueSize": 1
													}
												],
												"id": 117,
												"nodeType": "InlineAssembly",
												"src": "2165:202:0"
											}
										]
									},
									"functionSelector": "04f24938",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 89,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "1824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 90,
													"name": "nftContract",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "1833:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 91,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 88,
												"name": "onlyOwner",
												"nameLocations": [
													"1814:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 68,
												"src": "1814:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1814:31:0"
										}
									],
									"name": "createListing",
									"nameLocation": "1681:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1713:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1705:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1739:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1731:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1761:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1792:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1784:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1694:110:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1846:0:0"
									},
									"scope": 335,
									"src": "1672:702:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2661:210:0",
										"statements": [
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2672:28:0",
													"subExpression": {
														"baseExpression": {
															"id": 127,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "2679:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
																"typeString": "mapping(bytes32 => struct ContractWV3.Listing storage ref)"
															}
														},
														"id": 129,
														"indexExpression": {
															"id": 128,
															"name": "listingHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "2688:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2679:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$13_storage",
															"typeString": "struct ContractWV3.Listing storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2672:28:0"
											},
											{
												"AST": {
													"nativeSrc": "2722:142:0",
													"nodeType": "YulBlock",
													"src": "2722:142:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2760:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2760:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2780:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2780:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "listingHash",
																		"nativeSrc": "2800:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "2800:11:0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "2830:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "2830:6:0"
																		},
																		"nativeSrc": "2830:8:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2830:8:0"
																	}
																],
																"functionName": {
																	"name": "log2",
																	"nativeSrc": "2737:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "2737:4:0"
																},
																"nativeSrc": "2737:116:0",
																"nodeType": "YulFunctionCall",
																"src": "2737:116:0"
															},
															"nativeSrc": "2737:116:0",
															"nodeType": "YulExpressionStatement",
															"src": "2737:116:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 121,
														"isOffset": false,
														"isSlot": false,
														"src": "2800:11:0",
														"valueSize": 1
													}
												],
												"id": 132,
												"nodeType": "InlineAssembly",
												"src": "2713:151:0"
											}
										]
									},
									"functionSelector": "9299e552",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 124,
													"name": "listingHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 121,
													"src": "2648:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 125,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 123,
												"name": "onlySeller",
												"nameLocations": [
													"2637:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 78,
												"src": "2637:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2637:23:0"
										}
									],
									"name": "cancelListing",
									"nameLocation": "2593:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "2615:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "2607:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:21:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2661:0:0"
									},
									"scope": 335,
									"src": "2584:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "2976:54:0",
										"statements": [
											{
												"expression": {
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 144,
																"name": "listings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2987:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
																	"typeString": "mapping(bytes32 => struct ContractWV3.Listing storage ref)"
																}
															},
															"id": 146,
															"indexExpression": {
																"id": 145,
																"name": "listingHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "2996:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2987:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$13_storage",
																"typeString": "struct ContractWV3.Listing storage ref"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3009:5:0",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "2987:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 148,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3017:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2987:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "2987:35:0"
											}
										]
									},
									"functionSelector": "aa8de794",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 141,
													"name": "listingHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "2963:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 140,
												"name": "onlySeller",
												"nameLocations": [
													"2952:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 78,
												"src": "2952:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2952:23:0"
										}
									],
									"name": "changeListingPrice",
									"nameLocation": "2888:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "2915:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2907:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2936:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2928:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:36:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2976:0:0"
									},
									"scope": 335,
									"src": "2879:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "3110:612:0",
										"statements": [
											{
												"assignments": [
													161
												],
												"declarations": [
													{
														"constant": false,
														"id": 161,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "3136:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "3121:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$13_memory_ptr",
															"typeString": "struct ContractWV3.Listing"
														},
														"typeName": {
															"id": 160,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 159,
																"name": "Listing",
																"nameLocations": [
																	"3121:7:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 13,
																"src": "3121:7:0"
															},
															"referencedDeclaration": 13,
															"src": "3121:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$13_storage_ptr",
																"typeString": "struct ContractWV3.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"initialValue": {
													"baseExpression": {
														"id": 162,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3146:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
															"typeString": "mapping(bytes32 => struct ContractWV3.Listing storage ref)"
														}
													},
													"id": 164,
													"indexExpression": {
														"id": 163,
														"name": "listingHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "3155:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3146:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$13_storage",
														"typeString": "struct ContractWV3.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3121:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 167,
															"name": "listingHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "3199:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 166,
														"name": "_checkValidListing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3180:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3180:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "3180:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "listingHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "3239:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 170,
														"name": "_checkValidBuyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "3222:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3222:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "3222:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "listingHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "3285:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 174,
														"name": "_checkValidAmountToPay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "3262:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3262:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3262:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 182,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "3349:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$13_memory_ptr",
																	"typeString": "struct ContractWV3.Listing memory"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3357:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "3349:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3365:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3369:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3365:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 186,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "3377:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$13_memory_ptr",
																	"typeString": "struct ContractWV3.Listing memory"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3385:7:0",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 8,
															"src": "3377:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 179,
																	"name": "nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "3319:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 178,
																"name": "IERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "3310:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721A_$556_$",
																	"typeString": "type(contract IERC721A)"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3310:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721A_$556",
																"typeString": "contract IERC721A"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3332:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 480,
														"src": "3310:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) payable external"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3310:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "3310:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 196,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3439:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3443:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3439:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 192,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "3414:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$13_memory_ptr",
																			"typeString": "struct ContractWV3.Listing memory"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3422:6:0",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "3414:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3406:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 190,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3406:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3406:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3430:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3406:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3406:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "3406:43:0"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3462:28:0",
													"subExpression": {
														"baseExpression": {
															"id": 200,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3469:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
																"typeString": "mapping(bytes32 => struct ContractWV3.Listing storage ref)"
															}
														},
														"id": 202,
														"indexExpression": {
															"id": 201,
															"name": "listingHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "3478:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3469:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$13_storage",
															"typeString": "struct ContractWV3.Listing storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "3462:28:0"
											},
											{
												"AST": {
													"nativeSrc": "3520:195:0",
													"nodeType": "YulBlock",
													"src": "3520:195:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3558:1:0",
																		"nodeType": "YulLiteral",
																		"src": "3558:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3578:1:0",
																		"nodeType": "YulLiteral",
																		"src": "3578:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_LISTING_PURCHASED_EVENT_SIGNATURE",
																		"nativeSrc": "3598:34:0",
																		"nodeType": "YulIdentifier",
																		"src": "3598:34:0"
																	},
																	{
																		"name": "listingHash",
																		"nativeSrc": "3651:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "3651:11:0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "3681:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "3681:6:0"
																		},
																		"nativeSrc": "3681:8:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:8:0"
																	}
																],
																"functionName": {
																	"name": "log3",
																	"nativeSrc": "3535:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "3535:4:0"
																},
																"nativeSrc": "3535:169:0",
																"nodeType": "YulFunctionCall",
																"src": "3535:169:0"
															},
															"nativeSrc": "3535:169:0",
															"nodeType": "YulExpressionStatement",
															"src": "3535:169:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 22,
														"isOffset": false,
														"isSlot": false,
														"src": "3598:34:0",
														"valueSize": 1
													},
													{
														"declaration": 154,
														"isOffset": false,
														"isSlot": false,
														"src": "3651:11:0",
														"valueSize": 1
													}
												],
												"id": 205,
												"nodeType": "InlineAssembly",
												"src": "3511:204:0"
											}
										]
									},
									"functionSelector": "c049604a",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "3047:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "3059:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "3051:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "3080:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "3072:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:42:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:0:0"
									},
									"scope": 335,
									"src": "3038:684:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "3919:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 225,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "3996:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 226,
																	"name": "seller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4022:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 227,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "4047:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 228,
																	"name": "nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "4071:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 229,
																	"name": "salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "4101:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 223,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3961:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3965:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3961:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3961:159:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 222,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3937:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3937:194:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 221,
												"id": 232,
												"nodeType": "Return",
												"src": "3930:201:0"
											}
										]
									},
									"functionSelector": "dac17732",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getListingHash",
									"nameLocation": "3739:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3772:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3764:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "3798:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3823:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3815:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "3847:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3839:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3877:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3869:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 216,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3753:135:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3910:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3909:9:0"
									},
									"scope": 335,
									"src": "3730:409:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "4222:101:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 245,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "4267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "nftContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "4246:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "IERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "4237:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC721A_$556_$",
																		"typeString": "type(contract IERC721A)"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4237:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721A_$556",
																	"typeString": "contract IERC721A"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4259:7:0",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 458,
															"src": "4237:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view external returns (address)"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4237:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 247,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4279:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4283:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4279:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "4233:82:0",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 251,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "4307:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 250,
															"name": "NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "4298:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4298:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 253,
													"nodeType": "RevertStatement",
													"src": "4291:24:0"
												}
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNFTOwned",
									"nameLocation": "4156:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "4196:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4188:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:38:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:0:0"
									},
									"scope": 335,
									"src": "4147:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "4389:89:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 261,
																"name": "listings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "4404:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
																	"typeString": "mapping(bytes32 => struct ContractWV3.Listing storage ref)"
																}
															},
															"id": 263,
															"indexExpression": {
																"id": 262,
																"name": "listingHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "4413:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4404:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$13_storage",
																"typeString": "struct ContractWV3.Listing storage ref"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4426:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "4404:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 265,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4436:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4440:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4436:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4404:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4400:70:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 268,
															"name": "InvalidSeller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4455:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4455:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 270,
													"nodeType": "RevertStatement",
													"src": "4448:22:0"
												}
											}
										]
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkIfSeller",
									"nameLocation": "4340:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "4363:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "4355:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4354:21:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4389:0:0"
									},
									"scope": 335,
									"src": "4331:147:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "4548:102:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 278,
																"name": "listings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "4563:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
																	"typeString": "mapping(bytes32 => struct ContractWV3.Listing storage ref)"
																}
															},
															"id": 280,
															"indexExpression": {
																"id": 279,
																"name": "listingHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "4572:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4563:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$13_storage",
																"typeString": "struct ContractWV3.Listing storage ref"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4585:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "4563:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4603:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4595:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 282,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4595:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4595:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4563:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "4559:83:0",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 288,
																"name": "listingHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "4630:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 287,
															"name": "ListingNotFound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "4614:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																"typeString": "function (bytes32) pure"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4614:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 290,
													"nodeType": "RevertStatement",
													"src": "4607:35:0"
												}
											}
										]
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkValidListing",
									"nameLocation": "4495:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "4522:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "4514:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 274,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:21:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4548:0:0"
									},
									"scope": 335,
									"src": "4486:164:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "4718:88:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 298,
																"name": "listings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "4733:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
																	"typeString": "mapping(bytes32 => struct ContractWV3.Listing storage ref)"
																}
															},
															"id": 300,
															"indexExpression": {
																"id": 299,
																"name": "listingHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "4742:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4733:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$13_storage",
																"typeString": "struct ContractWV3.Listing storage ref"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4755:6:0",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "4733:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 302,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4765:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4769:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4765:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4733:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "4729:69:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 305,
															"name": "InvalidBuyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "4784:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4784:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 307,
													"nodeType": "RevertStatement",
													"src": "4777:21:0"
												}
											}
										]
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkValidBuyer",
									"nameLocation": "4667:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "4692:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4684:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 294,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4683:21:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4718:0:0"
									},
									"scope": 335,
									"src": "4658:148:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4880:143:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 315,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4895:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4899:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4895:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 317,
																"name": "listings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "4908:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
																	"typeString": "mapping(bytes32 => struct ContractWV3.Listing storage ref)"
																}
															},
															"id": 319,
															"indexExpression": {
																"id": 318,
																"name": "listingHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "4917:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4908:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$13_storage",
																"typeString": "struct ContractWV3.Listing storage ref"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4930:5:0",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "4908:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4895:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "IfStatement",
												"src": "4891:124:0",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 323,
																"name": "listingHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "4963:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"expression": {
																	"baseExpression": {
																		"id": 324,
																		"name": "listings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "4976:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Listing_$13_storage_$",
																			"typeString": "mapping(bytes32 => struct ContractWV3.Listing storage ref)"
																		}
																	},
																	"id": 326,
																	"indexExpression": {
																		"id": 325,
																		"name": "listingHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "4985:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4976:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$13_storage",
																		"typeString": "struct ContractWV3.Listing storage ref"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4998:5:0",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "4976:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 328,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5005:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5009:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5005:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 322,
															"name": "InvalidAmountToPay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "4944:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
																"typeString": "function (bytes32,uint256,uint256) pure"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4944:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 331,
													"nodeType": "RevertStatement",
													"src": "4937:78:0"
												}
											}
										]
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkValidAmountToPay",
									"nameLocation": "4823:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "listingHash",
												"nameLocation": "4854:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4846:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4845:21:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4880:0:0"
									},
									"scope": 335,
									"src": "4814:209:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 336,
							"src": "231:4795:0",
							"usedErrors": [
								29,
								31,
								35,
								39,
								43,
								47,
								55
							],
							"usedEvents": []
						}
					],
					"src": "35:4991:0"
				},
				"id": 0
			},
			"https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "https://github.com/chiru-labs/ERC721A/blob/main/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							556
						]
					},
					"id": 557,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 338,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:1",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 556,
							"linearizedBaseContracts": [
								556
							],
							"name": "IERC721A",
							"nameLocation": "157:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 341,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:1"
									},
									"src": "253:42:1"
								},
								{
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 344,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:1"
									},
									"src": "350:41:1"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:1",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 347,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:1"
									},
									"src": "467:35:1"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:1",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 350,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "564:26:1"
								},
								{
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:1",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 353,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:1"
									},
									"src": "673:25:1"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 356,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:1"
									},
									"src": "753:38:1"
								},
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 359,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:1"
									},
									"src": "878:42:1"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:1",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 362,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:1"
									},
									"src": "984:35:1"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:1",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 365,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:1"
									},
									"src": "1146:47:1"
								},
								{
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:1",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 368,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:1"
									},
									"src": "1259:30:1"
								},
								{
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 371,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:1"
									},
									"src": "1344:36:1"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:1",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 374,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:1"
									},
									"src": "1470:40:1"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:1",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 377,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:1"
									},
									"src": "1604:44:1"
								},
								{
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "1654:78:1",
										"text": " `_sequentialUpTo()` must be greater than `_startTokenId()`."
									},
									"errorSelector": "fed8210f",
									"id": 380,
									"name": "SequentialUpToTooSmall",
									"nameLocation": "1743:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:1"
									},
									"src": "1737:31:1"
								},
								{
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1774:82:1",
										"text": " The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
									},
									"errorSelector": "81647e3a",
									"id": 383,
									"name": "SequentialMintExceedsLimit",
									"nameLocation": "1867:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1893:2:1"
									},
									"src": "1861:35:1"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1902:86:1",
										"text": " Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
									},
									"errorSelector": "524a12cc",
									"id": 386,
									"name": "SpotMintTokenIdTooSmall",
									"nameLocation": "1999:23:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:2:1"
									},
									"src": "1993:32:1"
								},
								{
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "2031:64:1",
										"text": " Cannot mint over a token that already exists."
									},
									"errorSelector": "c991cbb1",
									"id": 389,
									"name": "TokenAlreadyExists",
									"nameLocation": "2106:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2124:2:1"
									},
									"src": "2100:27:1"
								},
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "2133:65:1",
										"text": " The feature is not compatible with spot mints."
									},
									"errorSelector": "bdba09d7",
									"id": 392,
									"name": "NotCompatibleWithSpotMints",
									"nameLocation": "2209:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:2:1"
									},
									"src": "2203:35:1"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 401,
									"members": [
										{
											"constant": false,
											"id": 394,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "2502:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 401,
											"src": "2494:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 393,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2494:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 396,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2607:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 401,
											"src": "2600:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 395,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2600:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 398,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2682:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 401,
											"src": "2677:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 397,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2677:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 400,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2793:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 401,
											"src": "2786:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 399,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2786:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "2432:14:1",
									"nodeType": "StructDefinition",
									"scope": 556,
									"src": "2425:384:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "3000:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3206:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3217:2:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3243:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3243:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3242:9:1"
									},
									"scope": 556,
									"src": "3197:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "3439:341:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3794:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3819:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3812:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 409,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3812:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:20:1"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 556,
									"src": "3785:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "4048:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 424,
									"name": "Transfer",
									"nameLocation": "4147:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4172:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4156:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4194:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4178:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4214:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4198:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4198:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4155:67:1"
									},
									"src": "4141:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "4229:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 433,
									"name": "Approval",
									"nameLocation": "4334:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4359:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4343:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4343:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4382:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4366:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4408:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4392:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4392:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:74:1"
									},
									"src": "4328:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4423:124:1",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 442,
									"name": "ApprovalForAll",
									"nameLocation": "4558:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4589:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4573:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4612:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4596:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4627:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4622:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4572:64:1"
									},
									"src": "4552:85:1"
								},
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "4643:74:1",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4731:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4749:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4741:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4741:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4740:15:1"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4787:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4779:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:17:1"
									},
									"scope": 556,
									"src": "4722:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4802:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4947:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4963:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "4955:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4954:17:1"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5003:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "4995:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4995:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4994:15:1"
									},
									"scope": 556,
									"src": "4938:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "5016:711:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5741:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5775:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "5767:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5797:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "5789:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5789:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5817:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "5809:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5849:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "5834:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5834:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:102:1"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5876:0:1"
									},
									"scope": 556,
									"src": "5732:145:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5883:80:1",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5977:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6011:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6003:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5993:73:1"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 556,
									"src": "5968:116:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "6090:512:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6616:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6646:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6638:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6668:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6660:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6688:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6680:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6628:73:1"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6718:0:1"
									},
									"scope": 556,
									"src": "6607:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "6725:459:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7198:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7214:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "7206:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7226:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "7218:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:29:1"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7251:0:1"
									},
									"scope": 556,
									"src": "7189:63:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "7258:316:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7588:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7614:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "7606:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7606:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7629:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "7624:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7624:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7605:34:1"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7648:0:1"
									},
									"scope": 556,
									"src": "7579:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "7655:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7808:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7828:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "7820:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7819:17:1"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7868:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "7860:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7859:18:1"
									},
									"scope": 556,
									"src": "7799:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "7884:139:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "8037:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8062:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8054:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8077:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8069:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8069:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8053:33:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8110:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8110:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8109:6:1"
									},
									"scope": 556,
									"src": "8028:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8307:58:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8379:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8383:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "8409:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 527,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8409:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8408:15:1"
									},
									"scope": 556,
									"src": "8370:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "8430:60:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8504:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8510:2:1"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "8536:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8536:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8535:15:1"
									},
									"scope": 556,
									"src": "8495:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "8557:90:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8661:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "8670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8669:17:1"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "8710:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 541,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8709:15:1"
									},
									"scope": 556,
									"src": "8652:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "8912:267:1",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 555,
									"name": "ConsecutiveTransfer",
									"nameLocation": "9190:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "9226:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "9210:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9210:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "9247:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "9239:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9274:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "9258:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9296:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "9280:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9280:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9209:90:1"
									},
									"src": "9184:116:1"
								}
							],
							"scope": 557,
							"src": "147:9155:1",
							"usedErrors": [
								341,
								344,
								347,
								350,
								353,
								356,
								359,
								362,
								365,
								368,
								371,
								374,
								377,
								380,
								383,
								386,
								389,
								392
							],
							"usedEvents": [
								424,
								433,
								442,
								555
							]
						}
					],
					"src": "84:9219:1"
				},
				"id": 1
			}
		}
	}
}