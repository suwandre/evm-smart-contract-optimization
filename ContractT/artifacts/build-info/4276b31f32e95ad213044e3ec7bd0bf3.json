{
	"id": "4276b31f32e95ad213044e3ec7bd0bf3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ContractT/ProxyAdmin.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.25;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\";"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/transparent/ProxyAdmin.sol)\n\npragma solidity ^0.8.20;\n\nimport {ITransparentUpgradeableProxy} from \"./TransparentUpgradeableProxy.sol\";\nimport {Ownable} from \"../../access/Ownable.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract ProxyAdmin is Ownable {\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)`\n     * and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called,\n     * while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev Sets the initial owner who can perform upgrades.\n     */\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    /**\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation.\n     * See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    function upgradeAndCall(\n        ITransparentUpgradeableProxy proxy,\n        address implementation,\n        bytes memory data\n    ) public payable virtual onlyOwner {\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1967Utils} from \"../ERC1967/ERC1967Utils.sol\";\nimport {ERC1967Proxy} from \"../ERC1967/ERC1967Proxy.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {ProxyAdmin} from \"./ProxyAdmin.sol\";\n\n/**\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n * does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n * include them in the ABI so this interface must be used to interact with it.\n */\ninterface ITransparentUpgradeableProxy is IERC1967 {\n    function upgradeToAndCall(address, bytes calldata) external payable;\n}\n\n/**\n * @dev This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to\n * the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating\n * the proxy admin cannot fallback to the target implementation.\n *\n * These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a\n * dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to\n * call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and\n * allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative\n * interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership.\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a\n * meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract.\n *\n * IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an\n * immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be\n * overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an\n * undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot\n * is generally fine if the implementation is trusted.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the\n * compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new\n * function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This\n * could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    // An immutable address for the admin to avoid unnecessary SLOADs before each call\n    // at the expense of removing the ability to change the admin once it's set.\n    // This is acceptable if the admin is always a ProxyAdmin instance or similar contract\n    // with its own ability to transfer the permissions to another account.\n    address private immutable _admin;\n\n    /**\n     * @dev The proxy caller is the current admin, and can't fallback to the proxy target.\n     */\n    error ProxyDeniedAdminAccess();\n\n    /**\n     * @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n     * backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n     * {ERC1967Proxy-constructor}.\n     */\n    constructor(address _logic, address initialOwner, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\n        _admin = address(new ProxyAdmin(initialOwner));\n        // Set the storage value and emit an event for ERC-1967 compatibility\n        ERC1967Utils.changeAdmin(_proxyAdmin());\n    }\n\n    /**\n     * @dev Returns the admin of this proxy.\n     */\n    function _proxyAdmin() internal view virtual returns (address) {\n        return _admin;\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior.\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _proxyAdmin()) {\n            if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\n                revert ProxyDeniedAdminAccess();\n            } else {\n                _dispatchUpgradeToAndCall();\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy. See {ERC1967Utils-upgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    function _dispatchUpgradeToAndCall() private {\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n        ERC1967Utils.upgradeToAndCall(newImplementation, data);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.24;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * Since version 5.1, this library also support writing and reading value types to and from transient storage.\n *\n *  * Example using transient storage:\n * ```solidity\n * contract Lock {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _LOCK_SLOT = 0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542;\n *\n *     modifier locked() {\n *         require(!_LOCK_SLOT.asBoolean().tload());\n *\n *         _LOCK_SLOT.asBoolean().tstore(true);\n *         _;\n *         _LOCK_SLOT.asBoolean().tstore(false);\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev UDVT that represent a slot holding a address.\n     */\n    type AddressSlotType is bytes32;\n\n    /**\n     * @dev Cast an arbitrary slot to a AddressSlotType.\n     */\n    function asAddress(bytes32 slot) internal pure returns (AddressSlotType) {\n        return AddressSlotType.wrap(slot);\n    }\n\n    /**\n     * @dev UDVT that represent a slot holding a bool.\n     */\n    type BooleanSlotType is bytes32;\n\n    /**\n     * @dev Cast an arbitrary slot to a BooleanSlotType.\n     */\n    function asBoolean(bytes32 slot) internal pure returns (BooleanSlotType) {\n        return BooleanSlotType.wrap(slot);\n    }\n\n    /**\n     * @dev UDVT that represent a slot holding a bytes32.\n     */\n    type Bytes32SlotType is bytes32;\n\n    /**\n     * @dev Cast an arbitrary slot to a Bytes32SlotType.\n     */\n    function asBytes32(bytes32 slot) internal pure returns (Bytes32SlotType) {\n        return Bytes32SlotType.wrap(slot);\n    }\n\n    /**\n     * @dev UDVT that represent a slot holding a uint256.\n     */\n    type Uint256SlotType is bytes32;\n\n    /**\n     * @dev Cast an arbitrary slot to a Uint256SlotType.\n     */\n    function asUint256(bytes32 slot) internal pure returns (Uint256SlotType) {\n        return Uint256SlotType.wrap(slot);\n    }\n\n    /**\n     * @dev UDVT that represent a slot holding a int256.\n     */\n    type Int256SlotType is bytes32;\n\n    /**\n     * @dev Cast an arbitrary slot to a Int256SlotType.\n     */\n    function asInt256(bytes32 slot) internal pure returns (Int256SlotType) {\n        return Int256SlotType.wrap(slot);\n    }\n\n    /**\n     * @dev Load the value held at location `slot` in transient storage.\n     */\n    function tload(AddressSlotType slot) internal view returns (address value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            value := tload(slot)\n        }\n    }\n\n    /**\n     * @dev Store `value` at location `slot` in transient storage.\n     */\n    function tstore(AddressSlotType slot, address value) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            tstore(slot, value)\n        }\n    }\n\n    /**\n     * @dev Load the value held at location `slot` in transient storage.\n     */\n    function tload(BooleanSlotType slot) internal view returns (bool value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            value := tload(slot)\n        }\n    }\n\n    /**\n     * @dev Store `value` at location `slot` in transient storage.\n     */\n    function tstore(BooleanSlotType slot, bool value) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            tstore(slot, value)\n        }\n    }\n\n    /**\n     * @dev Load the value held at location `slot` in transient storage.\n     */\n    function tload(Bytes32SlotType slot) internal view returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            value := tload(slot)\n        }\n    }\n\n    /**\n     * @dev Store `value` at location `slot` in transient storage.\n     */\n    function tstore(Bytes32SlotType slot, bytes32 value) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            tstore(slot, value)\n        }\n    }\n\n    /**\n     * @dev Load the value held at location `slot` in transient storage.\n     */\n    function tload(Uint256SlotType slot) internal view returns (uint256 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            value := tload(slot)\n        }\n    }\n\n    /**\n     * @dev Store `value` at location `slot` in transient storage.\n     */\n    function tstore(Uint256SlotType slot, uint256 value) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            tstore(slot, value)\n        }\n    }\n\n    /**\n     * @dev Load the value held at location `slot` in transient storage.\n     */\n    function tload(Int256SlotType slot) internal view returns (int256 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            value := tload(slot)\n        }\n    }\n\n    /**\n     * @dev Store `value` at location `slot` in transient storage.\n     */\n    function tstore(Int256SlotType slot, int256 value) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            tstore(slot, value)\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1185:1199  implementation */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1201:1206  _data */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1184  ERC1967Utils.upgradeToAndCall */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  jump(tag_46)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2274:2618  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2365:2402  _setImplementation(newImplementation) */\n  tag_9\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2384:2401  newImplementation */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2365:2383  _setImplementation */\n  tag_10\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2365:2402  _setImplementation(newImplementation) */\n  jump\t// in\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2417:2453  IERC1967.Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2468:2479  data.length */\n  dup1\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2468:2483  data.length > 0 */\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2464:2612  if (data.length > 0) {... */\n  tag_11\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2499:2552  Address.functionDelegateCall(newImplementation, data) */\n  tag_12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2528:2545  newImplementation */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2547:2551  data */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2499:2527  Address.functionDelegateCall */\n  tag_13\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2499:2552  Address.functionDelegateCall(newImplementation, data) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2274:2618  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2464:2612  if (data.length > 0) {... */\ntag_11:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2583:2601  _checkNonPayable() */\n  tag_15\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2583:2599  _checkNonPayable */\n  tag_16\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2583:2601  _checkNonPayable() */\n  jump\t// in\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2274:2618  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1681:1962  function _setImplementation(address newImplementation) private {... */\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1758:1775  newImplementation */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1758:1787  newImplementation.code.length */\n  and\n  extcodesize\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1791:1792  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1758:1792  newImplementation.code.length == 0 */\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1754:1873  if (newImplementation.code.length == 0) {... */\n  tag_18\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1815:1862  ERC1967InvalidImplementation(newImplementation) */\n  mload(0x40)\n  shl(0xe0, 0x4c9c8ce3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1393:1425   */\n  dup3\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1815:1862  ERC1967InvalidImplementation(newImplementation) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1375:1426   */\n  mstore\n    /* \"#utility.yul\":1348:1366   */\n  0x24\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1815:1862  ERC1967InvalidImplementation(newImplementation) */\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1754:1873  if (newImplementation.code.length == 0) {... */\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":821:887  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1882:1955  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1681:1962  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":3983:3995  bytes memory */\n  0x60\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4008:4020  bool success */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4049:4055  target */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4069:4073  data */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  mload(0x40)\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_28\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_27)\ntag_28:\n  0x60\n  swap2\n  pop\ntag_27:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_29\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4118:4124  target */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n  tag_30\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  jump\t// in\ntag_29:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n  swap6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6123:6245  function _checkNonPayable() private {... */\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6173:6182  msg.value */\n  callvalue\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6173:6186  msg.value > 0 */\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6169:6239  if (msg.value > 0) {... */\n  tag_32\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6209:6228  ERC1967NonPayable() */\n  mload(0x40)\n  shl(0xe0, 0xb398979f)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6169:6239  if (msg.value > 0) {... */\ntag_32:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6123:6245  function _checkNonPayable() private {... */\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\ntag_30:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4565:4577  bytes memory */\n  0x60\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4594:4601  success */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n  tag_35\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n  tag_36\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4625:4635  returndata */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4617:4624  _revert */\n  tag_37\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n  jump\t// in\ntag_36:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n  jump(tag_38)\ntag_35:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4858  returndata.length */\n  dup2\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  iszero\n  tag_39\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4867:4885  target.code.length */\n  dup5\n  and\n  extcodesize\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\ntag_39:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n  iszero\n  tag_40\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  mload(0x40)\n  shl(0xe0, 0x9996b315)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1393:1425   */\n  dup6\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1375:1426   */\n  mstore\n    /* \"#utility.yul\":1348:1366   */\n  0x24\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  tag_19\n    /* \"#utility.yul\":1229:1432   */\n  jump\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_40:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4976:4986  returndata */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\ntag_38:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5543:6061  function _revert(bytes memory returndata) private pure {... */\ntag_37:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5674:5691  returndata.length */\n  dup1\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5670:6055  if (returndata.length > 0) {... */\n  tag_43\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5902:5912  returndata */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5896:5913  mload(returndata) */\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5958:5973  returndata_size */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5945:5955  returndata */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5941:5943  32 */\n  0x20\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5937:5956  add(32, returndata) */\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5930:5974  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5670:6055  if (returndata.length > 0) {... */\ntag_43:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":6025:6044  Errors.FailedCall() */\n  mload(0x40)\n  shl(0xe0, 0xd6bda275)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"#utility.yul\":14:141   */\ntag_45:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1224   */\ntag_2:\n    /* \"#utility.yul\":234:240   */\n  0x00\n    /* \"#utility.yul\":242:248   */\n  dup1\n    /* \"#utility.yul\":295:297   */\n  0x40\n    /* \"#utility.yul\":283:292   */\n  dup4\n    /* \"#utility.yul\":274:281   */\n  dup6\n    /* \"#utility.yul\":270:293   */\n  sub\n    /* \"#utility.yul\":266:298   */\n  slt\n    /* \"#utility.yul\":263:315   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":311:312   */\n  0x00\n    /* \"#utility.yul\":308:309   */\n  dup1\n    /* \"#utility.yul\":301:313   */\n  revert\n    /* \"#utility.yul\":263:315   */\ntag_49:\n    /* \"#utility.yul\":337:353   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":382:413   */\n  dup2\n  and\n    /* \"#utility.yul\":372:414   */\n  dup2\n  eq\n    /* \"#utility.yul\":362:432   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":428:429   */\n  0x00\n    /* \"#utility.yul\":425:426   */\n  dup1\n    /* \"#utility.yul\":418:430   */\n  revert\n    /* \"#utility.yul\":362:432   */\ntag_50:\n    /* \"#utility.yul\":500:502   */\n  0x20\n    /* \"#utility.yul\":485:503   */\n  dup5\n  add\n    /* \"#utility.yul\":479:504   */\n  mload\n    /* \"#utility.yul\":451:456   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":553:567   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":550:584   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":580:581   */\n  0x00\n    /* \"#utility.yul\":577:578   */\n  dup1\n    /* \"#utility.yul\":570:582   */\n  revert\n    /* \"#utility.yul\":550:584   */\ntag_51:\n    /* \"#utility.yul\":618:624   */\n  dup2\n    /* \"#utility.yul\":607:616   */\n  dup6\n    /* \"#utility.yul\":603:625   */\n  add\n    /* \"#utility.yul\":593:625   */\n  swap2\n  pop\n    /* \"#utility.yul\":663:670   */\n  dup6\n    /* \"#utility.yul\":656:660   */\n  0x1f\n    /* \"#utility.yul\":652:654   */\n  dup4\n    /* \"#utility.yul\":648:661   */\n  add\n    /* \"#utility.yul\":644:671   */\n  slt\n    /* \"#utility.yul\":634:689   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":685:686   */\n  0x00\n    /* \"#utility.yul\":682:683   */\n  dup1\n    /* \"#utility.yul\":675:687   */\n  revert\n    /* \"#utility.yul\":634:689   */\ntag_52:\n    /* \"#utility.yul\":714:716   */\n  dup2\n    /* \"#utility.yul\":708:717   */\n  mload\n    /* \"#utility.yul\":736:738   */\n  dup2\n    /* \"#utility.yul\":732:734   */\n  dup2\n    /* \"#utility.yul\":729:739   */\n  gt\n    /* \"#utility.yul\":726:762   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":742:760   */\n  tag_54\n  tag_45\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":817:819   */\n  0x40\n    /* \"#utility.yul\":811:820   */\n  mload\n    /* \"#utility.yul\":785:787   */\n  0x1f\n    /* \"#utility.yul\":871:884   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":867:889   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":891:893   */\n  0x3f\n    /* \"#utility.yul\":863:894   */\n  add\n    /* \"#utility.yul\":859:899   */\n  and\n    /* \"#utility.yul\":847:900   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":915:933   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":935:957   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":912:958   */\n  or\n    /* \"#utility.yul\":909:981   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":961:979   */\n  tag_56\n  tag_45\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1001:1011   */\n  dup2\n    /* \"#utility.yul\":997:999   */\n  0x40\n    /* \"#utility.yul\":990:1012   */\n  mstore\n    /* \"#utility.yul\":1036:1038   */\n  dup3\n    /* \"#utility.yul\":1028:1034   */\n  dup2\n    /* \"#utility.yul\":1021:1039   */\n  mstore\n    /* \"#utility.yul\":1076:1083   */\n  dup9\n    /* \"#utility.yul\":1071:1073   */\n  0x20\n    /* \"#utility.yul\":1066:1068   */\n  dup5\n    /* \"#utility.yul\":1062:1064   */\n  dup8\n    /* \"#utility.yul\":1058:1069   */\n  add\n    /* \"#utility.yul\":1054:1074   */\n  add\n    /* \"#utility.yul\":1051:1084   */\n  gt\n    /* \"#utility.yul\":1048:1101   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1097:1098   */\n  0x00\n    /* \"#utility.yul\":1094:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1099   */\n  revert\n    /* \"#utility.yul\":1048:1101   */\ntag_57:\n    /* \"#utility.yul\":1146:1148   */\n  dup3\n    /* \"#utility.yul\":1141:1143   */\n  0x20\n    /* \"#utility.yul\":1137:1139   */\n  dup7\n    /* \"#utility.yul\":1133:1144   */\n  add\n    /* \"#utility.yul\":1128:1130   */\n  0x20\n    /* \"#utility.yul\":1120:1126   */\n  dup4\n    /* \"#utility.yul\":1116:1131   */\n  add\n    /* \"#utility.yul\":1110:1149   */\n  mcopy\n    /* \"#utility.yul\":1191:1192   */\n  0x00\n    /* \"#utility.yul\":1186:1188   */\n  0x20\n    /* \"#utility.yul\":1181:1183   */\n  dup5\n    /* \"#utility.yul\":1173:1179   */\n  dup4\n    /* \"#utility.yul\":1169:1184   */\n  add\n    /* \"#utility.yul\":1165:1189   */\n  add\n    /* \"#utility.yul\":1158:1193   */\n  mstore\n    /* \"#utility.yul\":1212:1218   */\n  dup1\n    /* \"#utility.yul\":1202:1218   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1224   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1437:1738   */\ntag_25:\n    /* \"#utility.yul\":1566:1569   */\n  0x00\n    /* \"#utility.yul\":1604:1610   */\n  dup3\n    /* \"#utility.yul\":1598:1611   */\n  mload\n    /* \"#utility.yul\":1650:1656   */\n  dup1\n    /* \"#utility.yul\":1643:1647   */\n  0x20\n    /* \"#utility.yul\":1635:1641   */\n  dup6\n    /* \"#utility.yul\":1631:1648   */\n  add\n    /* \"#utility.yul\":1626:1629   */\n  dup5\n    /* \"#utility.yul\":1620:1657   */\n  mcopy\n    /* \"#utility.yul\":1712:1713   */\n  0x00\n    /* \"#utility.yul\":1676:1692   */\n  swap3\n  add\n    /* \"#utility.yul\":1701:1714   */\n  swap2\n  dup3\n  mstore\n  pop\n    /* \"#utility.yul\":1676:1692   */\n  swap2\n    /* \"#utility.yul\":1437:1738   */\n  swap1\n  pop\n  jump\t// out\ntag_46:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      tag_5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n      tag_6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":600:1717  contract ERC1967Proxy is Proxy {... */\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      tag_8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      tag_9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n      tag_10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      jump\t// in\n    tag_9:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n      tag_11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      jump\t// in\n    tag_8:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n    tag_10:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1650:1657  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":821:887  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1529:1582  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1451:1589  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1669:1708  return ERC1967Utils.getImplementation() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n    tag_11:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n      calldatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1284:1285  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1281:1282  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1501:1502  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1498:1499  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n      calldatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1479:1480  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n      gas\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1574:1575  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1571:1572  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1615:1621  result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n      dup1\n      iszero\n      tag_17\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1794:1795  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1714:1715  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n      revert\n\n    auxdata: 0xa2646970667358221220707ab20fbed5744d78c32faf864642380974ac96f3a352d051d0b14473b5fda964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_196": {
									"entryPoint": null,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkNonPayable_502": {
									"entryPoint": 383,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_990": {
									"entryPoint": 511,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_282": {
									"entryPoint": 145,
									"id": 282,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_908": {
									"entryPoint": 268,
									"id": 908,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1073": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_318": {
									"entryPoint": 51,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_948": {
									"entryPoint": 416,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1740:13",
										"nodeType": "YulBlock",
										"src": "0:1740:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:13",
													"nodeType": "YulBlock",
													"src": "46:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:13",
																		"nodeType": "YulLiteral",
																		"src": "63:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:13",
																				"nodeType": "YulLiteral",
																				"src": "70:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:13",
																				"nodeType": "YulLiteral",
																				"src": "75:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:13"
																		},
																		"nativeSrc": "66:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:13"
																},
																"nativeSrc": "56:31:13",
																"nodeType": "YulFunctionCall",
																"src": "56:31:13"
															},
															"nativeSrc": "56:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:13",
																		"nodeType": "YulLiteral",
																		"src": "103:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:13",
																		"nodeType": "YulLiteral",
																		"src": "106:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:13"
																},
																"nativeSrc": "96:15:13",
																"nodeType": "YulFunctionCall",
																"src": "96:15:13"
															},
															"nativeSrc": "96:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:13",
																		"nodeType": "YulLiteral",
																		"src": "127:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:13",
																		"nodeType": "YulLiteral",
																		"src": "130:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:13"
																},
																"nativeSrc": "120:15:13",
																"nodeType": "YulFunctionCall",
																"src": "120:15:13"
															},
															"nativeSrc": "120:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:13"
											},
											{
												"body": {
													"nativeSrc": "253:971:13",
													"nodeType": "YulBlock",
													"src": "253:971:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "299:16:13",
																"nodeType": "YulBlock",
																"src": "299:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "308:1:13",
																					"nodeType": "YulLiteral",
																					"src": "308:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "311:1:13",
																					"nodeType": "YulLiteral",
																					"src": "311:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "301:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "301:6:13"
																			},
																			"nativeSrc": "301:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "301:12:13"
																		},
																		"nativeSrc": "301:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "301:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "274:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "274:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "283:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "283:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "270:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "270:3:13"
																		},
																		"nativeSrc": "270:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "270:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "295:2:13",
																		"nodeType": "YulLiteral",
																		"src": "295:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "266:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "266:3:13"
																},
																"nativeSrc": "266:32:13",
																"nodeType": "YulFunctionCall",
																"src": "266:32:13"
															},
															"nativeSrc": "263:52:13",
															"nodeType": "YulIf",
															"src": "263:52:13"
														},
														{
															"nativeSrc": "324:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "324:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "343:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "337:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "337:5:13"
																},
																"nativeSrc": "337:16:13",
																"nodeType": "YulFunctionCall",
																"src": "337:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "328:5:13",
																	"nodeType": "YulTypedName",
																	"src": "328:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "416:16:13",
																"nodeType": "YulBlock",
																"src": "416:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "425:1:13",
																					"nodeType": "YulLiteral",
																					"src": "425:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "428:1:13",
																					"nodeType": "YulLiteral",
																					"src": "428:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "418:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "418:6:13"
																			},
																			"nativeSrc": "418:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "418:12:13"
																		},
																		"nativeSrc": "418:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "418:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "375:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "375:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "386:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "386:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "401:3:13",
																										"nodeType": "YulLiteral",
																										"src": "401:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "406:1:13",
																										"nodeType": "YulLiteral",
																										"src": "406:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "397:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "397:3:13"
																								},
																								"nativeSrc": "397:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "397:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "410:1:13",
																								"nodeType": "YulLiteral",
																								"src": "410:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "393:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "393:3:13"
																						},
																						"nativeSrc": "393:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "393:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "382:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "382:3:13"
																				},
																				"nativeSrc": "382:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "382:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "372:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "372:2:13"
																		},
																		"nativeSrc": "372:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "372:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "365:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:13"
																},
																"nativeSrc": "365:50:13",
																"nodeType": "YulFunctionCall",
																"src": "365:50:13"
															},
															"nativeSrc": "362:70:13",
															"nodeType": "YulIf",
															"src": "362:70:13"
														},
														{
															"nativeSrc": "441:15:13",
															"nodeType": "YulAssignment",
															"src": "441:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "451:5:13",
																"nodeType": "YulIdentifier",
																"src": "451:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "441:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:13"
																}
															]
														},
														{
															"nativeSrc": "465:39:13",
															"nodeType": "YulVariableDeclaration",
															"src": "465:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "489:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "500:2:13",
																				"nodeType": "YulLiteral",
																				"src": "500:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "485:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:13"
																		},
																		"nativeSrc": "485:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "485:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "479:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "479:5:13"
																},
																"nativeSrc": "479:25:13",
																"nodeType": "YulFunctionCall",
																"src": "479:25:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "469:6:13",
																	"nodeType": "YulTypedName",
																	"src": "469:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "513:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "513:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "531:2:13",
																				"nodeType": "YulLiteral",
																				"src": "531:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "535:1:13",
																				"nodeType": "YulLiteral",
																				"src": "535:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "527:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "527:3:13"
																		},
																		"nativeSrc": "527:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "527:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "539:1:13",
																		"nodeType": "YulLiteral",
																		"src": "539:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "523:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "523:3:13"
																},
																"nativeSrc": "523:18:13",
																"nodeType": "YulFunctionCall",
																"src": "523:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "517:2:13",
																	"nodeType": "YulTypedName",
																	"src": "517:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "568:16:13",
																"nodeType": "YulBlock",
																"src": "568:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "577:1:13",
																					"nodeType": "YulLiteral",
																					"src": "577:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "580:1:13",
																					"nodeType": "YulLiteral",
																					"src": "580:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "570:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "570:6:13"
																			},
																			"nativeSrc": "570:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "570:12:13"
																		},
																		"nativeSrc": "570:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "570:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "556:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "556:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "564:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "564:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "553:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "553:2:13"
																},
																"nativeSrc": "553:14:13",
																"nodeType": "YulFunctionCall",
																"src": "553:14:13"
															},
															"nativeSrc": "550:34:13",
															"nodeType": "YulIf",
															"src": "550:34:13"
														},
														{
															"nativeSrc": "593:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "593:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "607:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "607:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "618:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "618:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "603:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "603:3:13"
																},
																"nativeSrc": "603:22:13",
																"nodeType": "YulFunctionCall",
																"src": "603:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "597:2:13",
																	"nodeType": "YulTypedName",
																	"src": "597:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "673:16:13",
																"nodeType": "YulBlock",
																"src": "673:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "682:1:13",
																					"nodeType": "YulLiteral",
																					"src": "682:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "685:1:13",
																					"nodeType": "YulLiteral",
																					"src": "685:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "675:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "675:6:13"
																			},
																			"nativeSrc": "675:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "675:12:13"
																		},
																		"nativeSrc": "675:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "675:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "652:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "652:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "656:4:13",
																						"nodeType": "YulLiteral",
																						"src": "656:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "648:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "648:3:13"
																				},
																				"nativeSrc": "648:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "648:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "663:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "663:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "644:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "644:3:13"
																		},
																		"nativeSrc": "644:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "644:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "637:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "637:6:13"
																},
																"nativeSrc": "637:35:13",
																"nodeType": "YulFunctionCall",
																"src": "637:35:13"
															},
															"nativeSrc": "634:55:13",
															"nodeType": "YulIf",
															"src": "634:55:13"
														},
														{
															"nativeSrc": "698:19:13",
															"nodeType": "YulVariableDeclaration",
															"src": "698:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "714:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "714:2:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "708:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "708:5:13"
																},
																"nativeSrc": "708:9:13",
																"nodeType": "YulFunctionCall",
																"src": "708:9:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "702:2:13",
																	"nodeType": "YulTypedName",
																	"src": "702:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "740:22:13",
																"nodeType": "YulBlock",
																"src": "740:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "742:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "742:16:13"
																			},
																			"nativeSrc": "742:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "742:18:13"
																		},
																		"nativeSrc": "742:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "742:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "732:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "732:2:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "736:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "736:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "729:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "729:2:13"
																},
																"nativeSrc": "729:10:13",
																"nodeType": "YulFunctionCall",
																"src": "729:10:13"
															},
															"nativeSrc": "726:36:13",
															"nodeType": "YulIf",
															"src": "726:36:13"
														},
														{
															"nativeSrc": "771:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "771:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "785:2:13",
																		"nodeType": "YulLiteral",
																		"src": "785:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "781:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "781:3:13"
																},
																"nativeSrc": "781:7:13",
																"nodeType": "YulFunctionCall",
																"src": "781:7:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "775:2:13",
																	"nodeType": "YulTypedName",
																	"src": "775:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "797:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "797:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "817:2:13",
																		"nodeType": "YulLiteral",
																		"src": "817:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "811:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "811:5:13"
																},
																"nativeSrc": "811:9:13",
																"nodeType": "YulFunctionCall",
																"src": "811:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "801:6:13",
																	"nodeType": "YulTypedName",
																	"src": "801:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "829:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "829:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "851:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "851:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "875:2:13",
																										"nodeType": "YulIdentifier",
																										"src": "875:2:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "879:4:13",
																										"nodeType": "YulLiteral",
																										"src": "879:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "871:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "871:3:13"
																								},
																								"nativeSrc": "871:13:13",
																								"nodeType": "YulFunctionCall",
																								"src": "871:13:13"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "886:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "886:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "867:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "867:3:13"
																						},
																						"nativeSrc": "867:22:13",
																						"nodeType": "YulFunctionCall",
																						"src": "867:22:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "891:2:13",
																						"nodeType": "YulLiteral",
																						"src": "891:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "863:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "863:3:13"
																				},
																				"nativeSrc": "863:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "863:31:13"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "896:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "896:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:13"
																		},
																		"nativeSrc": "859:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "859:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "847:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "847:3:13"
																},
																"nativeSrc": "847:53:13",
																"nodeType": "YulFunctionCall",
																"src": "847:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "833:10:13",
																	"nodeType": "YulTypedName",
																	"src": "833:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "959:22:13",
																"nodeType": "YulBlock",
																"src": "959:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "961:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "961:16:13"
																			},
																			"nativeSrc": "961:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "961:18:13"
																		},
																		"nativeSrc": "961:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "961:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "918:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "918:10:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "930:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "915:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "915:2:13"
																		},
																		"nativeSrc": "915:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "915:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "938:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "938:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "950:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "950:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "935:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "935:2:13"
																		},
																		"nativeSrc": "935:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "935:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "912:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "912:2:13"
																},
																"nativeSrc": "912:46:13",
																"nodeType": "YulFunctionCall",
																"src": "912:46:13"
															},
															"nativeSrc": "909:72:13",
															"nodeType": "YulIf",
															"src": "909:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "997:2:13",
																		"nodeType": "YulLiteral",
																		"src": "997:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1001:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1001:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "990:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:13"
																},
																"nativeSrc": "990:22:13",
																"nodeType": "YulFunctionCall",
																"src": "990:22:13"
															},
															"nativeSrc": "990:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "990:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1028:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1028:6:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1036:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1036:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1021:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1021:6:13"
																},
																"nativeSrc": "1021:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1021:18:13"
															},
															"nativeSrc": "1021:18:13",
															"nodeType": "YulExpressionStatement",
															"src": "1021:18:13"
														},
														{
															"body": {
																"nativeSrc": "1085:16:13",
																"nodeType": "YulBlock",
																"src": "1085:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1094:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1094:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1097:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1097:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1087:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:13"
																			},
																			"nativeSrc": "1087:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1087:12:13"
																		},
																		"nativeSrc": "1087:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1087:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1062:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1062:2:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1066:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1066:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1058:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1058:3:13"
																				},
																				"nativeSrc": "1058:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1058:11:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1071:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1071:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1054:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1054:3:13"
																		},
																		"nativeSrc": "1054:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1054:20:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1076:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1076:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1051:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1051:2:13"
																},
																"nativeSrc": "1051:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1051:33:13"
															},
															"nativeSrc": "1048:53:13",
															"nodeType": "YulIf",
															"src": "1048:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1120:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1120:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1128:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1128:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1116:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1116:3:13"
																		},
																		"nativeSrc": "1116:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1116:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "1137:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1137:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1141:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1141:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1133:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1133:3:13"
																		},
																		"nativeSrc": "1133:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1133:11:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1146:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1146:2:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1110:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:13"
																},
																"nativeSrc": "1110:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1110:39:13"
															},
															"nativeSrc": "1110:39:13",
															"nodeType": "YulExpressionStatement",
															"src": "1110:39:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1173:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1173:6:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1181:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1181:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1169:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1169:3:13"
																				},
																				"nativeSrc": "1169:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1186:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1186:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1165:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1165:3:13"
																		},
																		"nativeSrc": "1165:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1165:24:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1191:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1191:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1158:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1158:6:13"
																},
																"nativeSrc": "1158:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1158:35:13"
															},
															"nativeSrc": "1158:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "1158:35:13"
														},
														{
															"nativeSrc": "1202:16:13",
															"nodeType": "YulAssignment",
															"src": "1202:16:13",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1212:6:13",
																"nodeType": "YulIdentifier",
																"src": "1212:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1202:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nativeSrc": "146:1078:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "211:9:13",
														"nodeType": "YulTypedName",
														"src": "211:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "222:7:13",
														"nodeType": "YulTypedName",
														"src": "222:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "234:6:13",
														"nodeType": "YulTypedName",
														"src": "234:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "242:6:13",
														"nodeType": "YulTypedName",
														"src": "242:6:13",
														"type": ""
													}
												],
												"src": "146:1078:13"
											},
											{
												"body": {
													"nativeSrc": "1330:102:13",
													"nodeType": "YulBlock",
													"src": "1330:102:13",
													"statements": [
														{
															"nativeSrc": "1340:26:13",
															"nodeType": "YulAssignment",
															"src": "1340:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1352:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1363:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1348:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:13"
																},
																"nativeSrc": "1348:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1348:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1340:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1340:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1382:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1382:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1397:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1397:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1413:3:13",
																								"nodeType": "YulLiteral",
																								"src": "1413:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1418:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1418:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1409:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1409:3:13"
																						},
																						"nativeSrc": "1409:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1409:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1422:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1422:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1405:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1405:3:13"
																				},
																				"nativeSrc": "1405:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1405:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1393:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1393:3:13"
																		},
																		"nativeSrc": "1393:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1393:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1375:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1375:6:13"
																},
																"nativeSrc": "1375:51:13",
																"nodeType": "YulFunctionCall",
																"src": "1375:51:13"
															},
															"nativeSrc": "1375:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "1375:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1229:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1299:9:13",
														"nodeType": "YulTypedName",
														"src": "1299:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1310:6:13",
														"nodeType": "YulTypedName",
														"src": "1310:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1321:4:13",
														"nodeType": "YulTypedName",
														"src": "1321:4:13",
														"type": ""
													}
												],
												"src": "1229:203:13"
											},
											{
												"body": {
													"nativeSrc": "1574:164:13",
													"nodeType": "YulBlock",
													"src": "1574:164:13",
													"statements": [
														{
															"nativeSrc": "1584:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1584:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1604:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1588:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1626:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1626:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1635:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1635:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1643:4:13",
																				"nodeType": "YulLiteral",
																				"src": "1643:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1631:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1631:3:13"
																		},
																		"nativeSrc": "1631:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1650:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1620:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1620:5:13"
																},
																"nativeSrc": "1620:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1620:37:13"
															},
															"nativeSrc": "1620:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1620:37:13"
														},
														{
															"nativeSrc": "1666:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1666:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1680:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1680:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1685:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1685:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1676:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1676:3:13"
																},
																"nativeSrc": "1676:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1676:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1670:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1670:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1708:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1708:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1712:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1712:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1701:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1701:6:13"
																},
																"nativeSrc": "1701:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1701:13:13"
															},
															"nativeSrc": "1701:13:13",
															"nodeType": "YulExpressionStatement",
															"src": "1701:13:13"
														},
														{
															"nativeSrc": "1723:9:13",
															"nodeType": "YulAssignment",
															"src": "1723:9:13",
															"value": {
																"name": "_1",
																"nativeSrc": "1730:2:13",
																"nodeType": "YulIdentifier",
																"src": "1730:2:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1723:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1723:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1437:301:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1550:3:13",
														"nodeType": "YulTypedName",
														"src": "1550:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1555:6:13",
														"nodeType": "YulTypedName",
														"src": "1555:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1566:3:13",
														"nodeType": "YulTypedName",
														"src": "1566:3:13",
														"type": ""
													}
												],
												"src": "1437:301:13"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        mcopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040516103d73803806103d78339810160408190526100229161023c565b61002c8282610033565b505061031b565b61003c82610091565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561008557610080828261010c565b505050565b61008d61017f565b5050565b806001600160a01b03163b5f036100cb57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101289190610305565b5f60405180830381855af49150503d805f8114610160576040519150601f19603f3d011682016040523d82523d5f602084013e610165565b606091505b5090925090506101768583836101a0565b95945050505050565b341561019e5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101b5576101b0826101ff565b6101f8565b81511580156101cc57506001600160a01b0384163b155b156101f557604051639996b31560e01b81526001600160a01b03851660048201526024016100c2565b50805b9392505050565b80511561020f5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f806040838503121561024d575f80fd5b82516001600160a01b0381168114610263575f80fd5b60208401519092506001600160401b038082111561027f575f80fd5b818501915085601f830112610292575f80fd5b8151818111156102a4576102a4610228565b604051601f8201601f19908116603f011681019083821181831017156102cc576102cc610228565b816040528281528860208487010111156102e4575f80fd5b8260208601602083015e5f6020848301015280955050505050509250929050565b5f82518060208501845e5f920191825250919050565b60b0806103275f395ff3fe6080604052600a600c565b005b60186014601a565b605d565b565b5f60587f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b365f80375f80365f845af43d5f803e8080156076573d5ff35b3d5ffdfea2646970667358221220707ab20fbed5744d78c32faf864642380974ac96f3a352d051d0b14473b5fda964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3D7 CODESIZE SUB DUP1 PUSH2 0x3D7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x23C JUMP JUMPDEST PUSH2 0x2C DUP3 DUP3 PUSH2 0x33 JUMP JUMPDEST POP POP PUSH2 0x31B JUMP JUMPDEST PUSH2 0x3C DUP3 PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x85 JUMPI PUSH2 0x80 DUP3 DUP3 PUSH2 0x10C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8D PUSH2 0x17F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xCB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x305 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x165 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x176 DUP6 DUP4 DUP4 PUSH2 0x1A0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x19E JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1B5 JUMPI PUSH2 0x1B0 DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xC2 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x20F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2A4 JUMPI PUSH2 0x2A4 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2CC JUMPI PUSH2 0x2CC PUSH2 0x228 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB0 DUP1 PUSH2 0x327 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x5D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x58 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x76 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7AB20FBED5744D78C32FAF864642380974 0xAC SWAP7 RETURN LOG3 MSTORE 0xD0 MLOAD 0xD0 0xB1 PREVRANDAO PUSH20 0xB5FDA964736F6C63430008190033000000000000 ",
							"sourceMap": "600:1117:3:-:0;;;1081:133;;;;;;;;;;;;;;;;;;:::i;:::-;1155:52;1185:14;1201:5;1155:29;:52::i;:::-;1081:133;;600:1117;;2274:344:4;2365:37;2384:17;2365:18;:37::i;:::-;2417:36;;-1:-1:-1;;;;;2417:36:4;;;;;;;;2468:11;;:15;2464:148;;2499:53;2528:17;2547:4;2499:28;:53::i;:::-;;2274:344;;:::o;2464:148::-;2583:18;:16;:18::i;:::-;2274:344;;:::o;1681:281::-;1758:17;-1:-1:-1;;;;;1758:29:4;;1791:1;1758:34;1754:119;;1815:47;;-1:-1:-1;;;1815:47:4;;-1:-1:-1;;;;;1393:32:13;;1815:47:4;;;1375:51:13;1348:18;;1815:47:4;;;;;;;;1754:119;821:66;1882:73;;-1:-1:-1;;;;;;1882:73:4;-1:-1:-1;;;;;1882:73:4;;;;;;;;;;1681:281::o;3900:253:9:-;3983:12;4008;4022:23;4049:6;-1:-1:-1;;;;;4049:19:9;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4007:67:9;;-1:-1:-1;4007:67:9;-1:-1:-1;4091:55:9;4118:6;4007:67;;4091:26;:55::i;:::-;4084:62;3900:253;-1:-1:-1;;;;;3900:253:9:o;6123:122:4:-;6173:9;:13;6169:70;;6209:19;;-1:-1:-1;;;6209:19:4;;;;;;;;;;;6169:70;6123:122::o;4421:582:9:-;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4841:17;;:22;:49;;;;-1:-1:-1;;;;;;4867:18:9;;;:23;4841:49;4837:119;;;4917:24;;-1:-1:-1;;;4917:24:9;;-1:-1:-1;;;;;1393:32:13;;4917:24:9;;;1375:51:13;1348:18;;4917:24:9;1229:203:13;4837:119:9;-1:-1:-1;4976:10:9;4589:408;4421:582;;;;;:::o;5543:518::-;5674:17;;:21;5670:385;;5902:10;5896:17;5958:15;5945:10;5941:2;5937:19;5930:44;5670:385;6025:19;;-1:-1:-1;;;6025:19:9;;;;;;;;;;;14:127:13;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1078;234:6;242;295:2;283:9;274:7;270:23;266:32;263:52;;;311:1;308;301:12;263:52;337:16;;-1:-1:-1;;;;;382:31:13;;372:42;;362:70;;428:1;425;418:12;362:70;500:2;485:18;;479:25;451:5;;-1:-1:-1;;;;;;553:14:13;;;550:34;;;580:1;577;570:12;550:34;618:6;607:9;603:22;593:32;;663:7;656:4;652:2;648:13;644:27;634:55;;685:1;682;675:12;634:55;714:2;708:9;736:2;732;729:10;726:36;;;742:18;;:::i;:::-;817:2;811:9;785:2;871:13;;-1:-1:-1;;867:22:13;;;891:2;863:31;859:40;847:53;;;915:18;;;935:22;;;912:46;909:72;;;961:18;;:::i;:::-;1001:10;997:2;990:22;1036:2;1028:6;1021:18;1076:7;1071:2;1066;1062;1058:11;1054:20;1051:33;1048:53;;;1097:1;1094;1087:12;1048:53;1146:2;1141;1137;1133:11;1128:2;1120:6;1116:15;1110:39;1191:1;1186:2;1181;1173:6;1169:15;1165:24;1158:35;1212:6;1202:16;;;;;;;146:1078;;;;;:::o;1437:301::-;1566:3;1604:6;1598:13;1650:6;1643:4;1635:6;1631:17;1626:3;1620:37;1712:1;1676:16;;1701:13;;;-1:-1:-1;1676:16:13;1437:301;-1:-1:-1;1437:301:13:o;:::-;600:1117:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_538": {
									"entryPoint": null,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_514": {
									"entryPoint": 93,
									"id": 514,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_530": {
									"entryPoint": 12,
									"id": 530,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_208": {
									"entryPoint": 26,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAddressSlot_1073": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600a600c565b005b60186014601a565b605d565b565b5f60587f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b365f80375f80365f845af43d5f803e8080156076573d5ff35b3d5ffdfea2646970667358221220707ab20fbed5744d78c32faf864642380974ac96f3a352d051d0b14473b5fda964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x5D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x58 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x76 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7AB20FBED5744D78C32FAF864642380974 0xAC SWAP7 RETURN LOG3 MSTORE 0xD0 MLOAD 0xD0 0xB1 PREVRANDAO PUSH20 0xB5FDA964736F6C63430008190033000000000000 ",
							"sourceMap": "600:1117:3:-:0;;;2649:11:5;:9;:11::i;:::-;600:1117:3;2323:83:5;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;1583:132:3:-;1650:7;1676:32;821:66:4;1529:53;;;;1451:138;1676:32:3;1669:39;;1583:132;:::o;949:895:5:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "35200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "2143"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1081,
									"end": 1214,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1185,
									"end": 1199,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1201,
									"end": 1206,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1155,
									"end": 1207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2365,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2384,
									"end": 2401,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2365,
									"end": 2383,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2365,
									"end": 2402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2365,
									"end": 2402,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2365,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "PUSH",
									"source": 4,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "LOG2",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2479,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2479,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2483,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2464,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2464,
									"end": 2612,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2499,
									"end": 2552,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2528,
									"end": 2545,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2547,
									"end": 2551,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2499,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2499,
									"end": 2552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2499,
									"end": 2552,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2499,
									"end": 2552,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2499,
									"end": 2552,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2464,
									"end": 2612,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2464,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2583,
									"end": 2601,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2583,
									"end": 2599,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2583,
									"end": 2601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2583,
									"end": 2601,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2583,
									"end": 2601,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1681,
									"end": 1962,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1681,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1775,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1758,
									"end": 1787,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1787,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1758,
									"end": 1792,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1754,
									"end": 1873,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1754,
									"end": 1873,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C9C8CE3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1393,
									"end": 1425,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1393,
									"end": 1425,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1375,
									"end": 1426,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1348,
									"end": 1366,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1348,
									"end": 1366,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1754,
									"end": 1873,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1754,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 821,
									"end": 887,
									"name": "PUSH",
									"source": 4,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1681,
									"end": 1962,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3983,
									"end": 3995,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4008,
									"end": 4020,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4022,
									"end": 4045,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4055,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4049,
									"end": 4068,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4069,
									"end": 4073,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 4049,
									"end": 4074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DELEGATECALL",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 4118,
									"end": 4124,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4091,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 4091,
									"end": 4146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4084,
									"end": 4146,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3900,
									"end": 4153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6123,
									"end": 6245,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 6123,
									"end": 6245,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6173,
									"end": 6182,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 6173,
									"end": 6186,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6169,
									"end": 6239,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 6169,
									"end": 6239,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B398979F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6169,
									"end": 6239,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 6169,
									"end": 6239,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6123,
									"end": 6245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4565,
									"end": 4577,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4594,
									"end": 4601,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 4625,
									"end": 4635,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4624,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 4617,
									"end": 4636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4858,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4858,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4863,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "EXTCODESIZE",
									"source": 9
								},
								{
									"begin": 4867,
									"end": 4890,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9996B315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1393,
									"end": 1425,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1393,
									"end": 1425,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1375,
									"end": 1426,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1348,
									"end": 1366,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1348,
									"end": 1366,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1229,
									"end": 1432,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4976,
									"end": 4986,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5543,
									"end": 6061,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 5543,
									"end": 6061,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5674,
									"end": 5691,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5674,
									"end": 5691,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5674,
									"end": 5695,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5670,
									"end": 6055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 5670,
									"end": 6055,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5902,
									"end": 5912,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5896,
									"end": 5913,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5958,
									"end": 5973,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5945,
									"end": 5955,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5941,
									"end": 5943,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5937,
									"end": 5956,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5930,
									"end": 5974,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 5670,
									"end": 6055,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 5670,
									"end": 6055,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D6BDA275"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1224,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 146,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 234,
									"end": 240,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 248,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 295,
									"end": 297,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 292,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 274,
									"end": 281,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 270,
									"end": 293,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 266,
									"end": 298,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 263,
									"end": 315,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 263,
									"end": 315,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 263,
									"end": 315,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 311,
									"end": 312,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 308,
									"end": 309,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 301,
									"end": 313,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 263,
									"end": 315,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 263,
									"end": 315,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 337,
									"end": 353,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 337,
									"end": 353,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 382,
									"end": 413,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 382,
									"end": 413,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 372,
									"end": 414,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 372,
									"end": 414,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 362,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 362,
									"end": 432,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 428,
									"end": 429,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 426,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 418,
									"end": 430,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 362,
									"end": 432,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 362,
									"end": 432,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 503,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 485,
									"end": 503,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 479,
									"end": 504,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 451,
									"end": 456,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 451,
									"end": 456,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 553,
									"end": 567,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 553,
									"end": 567,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 553,
									"end": 567,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 550,
									"end": 584,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 550,
									"end": 584,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 550,
									"end": 584,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 580,
									"end": 581,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 570,
									"end": 582,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 550,
									"end": 584,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 550,
									"end": 584,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 618,
									"end": 624,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 607,
									"end": 616,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 603,
									"end": 625,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 593,
									"end": 625,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 593,
									"end": 625,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 663,
									"end": 670,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 656,
									"end": 660,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 652,
									"end": 654,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 648,
									"end": 661,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 644,
									"end": 671,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 634,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 634,
									"end": 689,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 685,
									"end": 686,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 682,
									"end": 683,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 675,
									"end": 687,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 634,
									"end": 689,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 634,
									"end": 689,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 714,
									"end": 716,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 708,
									"end": 717,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 736,
									"end": 738,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 732,
									"end": 734,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 729,
									"end": 739,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 726,
									"end": 762,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 726,
									"end": 762,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 726,
									"end": 762,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 742,
									"end": 760,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 742,
									"end": 760,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 742,
									"end": 760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 742,
									"end": 760,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 742,
									"end": 760,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 817,
									"end": 819,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 811,
									"end": 820,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 785,
									"end": 787,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 871,
									"end": 884,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 871,
									"end": 884,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 867,
									"end": 889,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 867,
									"end": 889,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 867,
									"end": 889,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 891,
									"end": 893,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 863,
									"end": 894,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 859,
									"end": 899,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 847,
									"end": 900,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 847,
									"end": 900,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 847,
									"end": 900,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 915,
									"end": 933,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 915,
									"end": 933,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 915,
									"end": 933,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 935,
									"end": 957,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 935,
									"end": 957,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 935,
									"end": 957,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 912,
									"end": 958,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 909,
									"end": 981,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 909,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 909,
									"end": 981,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 961,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 961,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 961,
									"end": 979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 961,
									"end": 979,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 961,
									"end": 979,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1011,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 997,
									"end": 999,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 990,
									"end": 1012,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1021,
									"end": 1039,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1076,
									"end": 1083,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1071,
									"end": 1073,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1066,
									"end": 1068,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1062,
									"end": 1064,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1058,
									"end": 1069,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1054,
									"end": 1074,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1084,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1048,
									"end": 1101,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1048,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1048,
									"end": 1101,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1097,
									"end": 1098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1094,
									"end": 1095,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1087,
									"end": 1099,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1048,
									"end": 1101,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1048,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1146,
									"end": 1148,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1141,
									"end": 1143,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1137,
									"end": 1139,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1133,
									"end": 1144,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1128,
									"end": 1130,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1126,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1116,
									"end": 1131,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1110,
									"end": 1149,
									"name": "MCOPY",
									"source": 13
								},
								{
									"begin": 1191,
									"end": 1192,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 1188,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1181,
									"end": 1183,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1173,
									"end": 1179,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1184,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1165,
									"end": 1189,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1158,
									"end": 1193,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1218,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1218,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1218,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1224,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1224,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1224,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1224,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1224,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1738,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1437,
									"end": 1738,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1566,
									"end": 1569,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1604,
									"end": 1610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1598,
									"end": 1611,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1650,
									"end": 1656,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1643,
									"end": 1647,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1635,
									"end": 1641,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1648,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1629,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1620,
									"end": 1657,
									"name": "MCOPY",
									"source": 13
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1676,
									"end": 1692,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1676,
									"end": 1692,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1714,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1714,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1714,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1676,
									"end": 1692,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1738,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1437,
									"end": 1738,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1738,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1437,
									"end": 1738,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1717,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220707ab20fbed5744d78c32faf864642380974ac96f3a352d051d0b14473b5fda964736f6c63430008190033",
									".code": [
										{
											"begin": 600,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2649,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 600,
											"end": 1717,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2381,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2371,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 821,
											"end": 887,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1589,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1503,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1734,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractT/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x5f3770f82f75d132e210b43c071d3feec1bef13c385d1d799763a366e8bda311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a50b7702cbd525c4a0fd3c36d1e116432b5f645f84cb25e4473dc9c88a917c5\",\"dweb:/ipfs/QmaN5QKZwgypVK3zAwdgXfsygEeauRYa4sSe4x8yKXDRtV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfd29ed7a01e9ef109cc31542ca0f51ba3e793740570b69172ec3d8bfbb1643b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99379e0649be8106d2708a2bde73b5cdaba4505f1001f1586b53788bf971d097\",\"dweb:/ipfs/QmV9cCnvFoVzV2cVDW4Zbs3JQ3ehxBcooQS52taVxR637S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":506:6247  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":506:6247  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208d8af9bc1bdc1e600d33383d56490fe803d77ace71cc2b2b12e9663296f3e37864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208d8af9bc1bdc1e600d33383d56490fe803d77ace71cc2b2b12e9663296f3e37864736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 DUP11 0xF9 0xBC SHL 0xDC 0x1E PUSH1 0xD CALLER CODESIZE RETURNDATASIZE JUMP BLOBHASH 0xF 0xE8 SUB 0xD7 PUSH27 0xCE71CC2B2B12E9663296F3E37864736F6C63430008190033000000 ",
							"sourceMap": "506:5741:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;506:5741:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208d8af9bc1bdc1e600d33383d56490fe803d77ace71cc2b2b12e9663296f3e37864736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 DUP11 0xF9 0xBC SHL 0xDC 0x1E PUSH1 0xD CALLER CODESIZE RETURNDATASIZE JUMP BLOBHASH 0xF 0xE8 SUB 0xD7 PUSH27 0xCE71CC2B2B12E9663296F3E37864736F6C63430008190033000000 ",
							"sourceMap": "506:5741:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 506,
									"end": 6247,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d8af9bc1bdc1e600d33383d56490fe803d77ace71cc2b2b12e9663296f3e37864736f6c63430008190033",
									".code": [
										{
											"begin": 506,
											"end": 6247,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 506,
											"end": 6247,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 506,
											"end": 6247,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 506,
											"end": 6247,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 506,
											"end": 6247,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 6247,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 506,
											"end": 6247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 6247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 506,
											"end": 6247,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractT/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x5f3770f82f75d132e210b43c071d3feec1bef13c385d1d799763a366e8bda311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a50b7702cbd525c4a0fd3c36d1e116432b5f645f84cb25e4473dc9c88a917c5\",\"dweb:/ipfs/QmaN5QKZwgypVK3zAwdgXfsygEeauRYa4sSe4x8yKXDRtV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfd29ed7a01e9ef109cc31542ca0f51ba3e793740570b69172ec3d8bfbb1643b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99379e0649be8106d2708a2bde73b5cdaba4505f1001f1586b53788bf971d097\",\"dweb:/ipfs/QmV9cCnvFoVzV2cVDW4Zbs3JQ3ehxBcooQS52taVxR637S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol": {
				"ProxyAdmin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ITransparentUpgradeableProxy",
									"name": "proxy",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the initial owner who can perform upgrades."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeAndCall(address,address,bytes)": {
								"details": "Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)` and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called, while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1329:1387  constructor(address initialOwner) Ownable(initialOwner) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1371:1383  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1329:1387  constructor(address initialOwner) Ownable(initialOwner) {} */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n  jump(tag_15)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9623609d\n      gt\n      tag_7\n      jumpi\n      dup1\n      0x9623609d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      dup1\n      0x715018a6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1717:1962  function upgradeAndCall(... */\n    tag_4:\n      tag_9\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1187:1245  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_9\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_34\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_35\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1717:1962  function upgradeAndCall(... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      mload(0x40)\n      0x4f1ef28600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1915  proxy.upgradeToAndCall */\n      dup5\n      and\n      swap1\n      0x4f1ef286\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1923:1932  msg.value */\n      callvalue\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      tag_40\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1934:1948  implementation */\n      dup7\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1950:1954  data */\n      dup7\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n      0x04\n      add\n      tag_41\n      jump\t// in\n    tag_40:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1717:1962  function upgradeAndCall(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_48\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:234   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_35\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_34\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:234   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_49\n        /* \"#utility.yul\":14:240   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":245:429   */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":354:359   */\n      dup2\n        /* \"#utility.yul\":350:404   */\n      and\n        /* \"#utility.yul\":343:348   */\n      dup2\n        /* \"#utility.yul\":340:405   */\n      eq\n        /* \"#utility.yul\":330:423   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":419:420   */\n      0x00\n        /* \"#utility.yul\":416:417   */\n      dup1\n        /* \"#utility.yul\":409:421   */\n      revert\n        /* \"#utility.yul\":434:618   */\n    tag_61:\n        /* \"#utility.yul\":486:563   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":476:564   */\n      mstore\n        /* \"#utility.yul\":583:587   */\n      0x41\n        /* \"#utility.yul\":580:581   */\n      0x04\n        /* \"#utility.yul\":573:588   */\n      mstore\n        /* \"#utility.yul\":607:611   */\n      0x24\n        /* \"#utility.yul\":604:605   */\n      0x00\n        /* \"#utility.yul\":597:612   */\n      revert\n        /* \"#utility.yul\":623:1916   */\n    tag_18:\n        /* \"#utility.yul\":745:751   */\n      0x00\n        /* \"#utility.yul\":753:759   */\n      dup1\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:834   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":830:831   */\n      0x00\n        /* \"#utility.yul\":827:828   */\n      dup1\n        /* \"#utility.yul\":820:832   */\n      revert\n        /* \"#utility.yul\":782:834   */\n    tag_69:\n        /* \"#utility.yul\":869:878   */\n      dup4\n        /* \"#utility.yul\":856:879   */\n      calldataload\n        /* \"#utility.yul\":888:949   */\n      tag_70\n        /* \"#utility.yul\":943:948   */\n      dup2\n        /* \"#utility.yul\":888:949   */\n      tag_60\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":968:973   */\n      swap3\n      pop\n        /* \"#utility.yul\":1025:1027   */\n      0x20\n        /* \"#utility.yul\":1010:1028   */\n      dup5\n      add\n        /* \"#utility.yul\":997:1029   */\n      calldataload\n        /* \"#utility.yul\":1038:1101   */\n      tag_71\n        /* \"#utility.yul\":997:1029   */\n      dup2\n        /* \"#utility.yul\":1038:1101   */\n      tag_60\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1120:1127   */\n      swap2\n      pop\n        /* \"#utility.yul\":1178:1180   */\n      0x40\n        /* \"#utility.yul\":1163:1181   */\n      dup5\n      add\n        /* \"#utility.yul\":1150:1182   */\n      calldataload\n        /* \"#utility.yul\":1201:1219   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1231:1245   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1228:1262   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":1258:1259   */\n      0x00\n        /* \"#utility.yul\":1255:1256   */\n      dup1\n        /* \"#utility.yul\":1248:1260   */\n      revert\n        /* \"#utility.yul\":1228:1262   */\n    tag_72:\n        /* \"#utility.yul\":1296:1302   */\n      dup2\n        /* \"#utility.yul\":1285:1294   */\n      dup7\n        /* \"#utility.yul\":1281:1303   */\n      add\n        /* \"#utility.yul\":1271:1303   */\n      swap2\n      pop\n        /* \"#utility.yul\":1341:1348   */\n      dup7\n        /* \"#utility.yul\":1334:1338   */\n      0x1f\n        /* \"#utility.yul\":1330:1332   */\n      dup4\n        /* \"#utility.yul\":1326:1339   */\n      add\n        /* \"#utility.yul\":1322:1349   */\n      slt\n        /* \"#utility.yul\":1312:1367   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1363:1364   */\n      0x00\n        /* \"#utility.yul\":1360:1361   */\n      dup1\n        /* \"#utility.yul\":1353:1365   */\n      revert\n        /* \"#utility.yul\":1312:1367   */\n    tag_73:\n        /* \"#utility.yul\":1399:1401   */\n      dup2\n        /* \"#utility.yul\":1386:1402   */\n      calldataload\n        /* \"#utility.yul\":1421:1423   */\n      dup2\n        /* \"#utility.yul\":1417:1419   */\n      dup2\n        /* \"#utility.yul\":1414:1424   */\n      gt\n        /* \"#utility.yul\":1411:1447   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":1427:1445   */\n      tag_75\n      tag_61\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1502:1504   */\n      0x40\n        /* \"#utility.yul\":1496:1505   */\n      mload\n        /* \"#utility.yul\":1470:1472   */\n      0x1f\n        /* \"#utility.yul\":1556:1569   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1552:1574   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1576:1578   */\n      0x3f\n        /* \"#utility.yul\":1548:1579   */\n      add\n        /* \"#utility.yul\":1544:1584   */\n      and\n        /* \"#utility.yul\":1532:1585   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1600:1618   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1620:1642   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1597:1643   */\n      or\n        /* \"#utility.yul\":1594:1666   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":1646:1664   */\n      tag_77\n      tag_61\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1686:1696   */\n      dup2\n        /* \"#utility.yul\":1682:1684   */\n      0x40\n        /* \"#utility.yul\":1675:1697   */\n      mstore\n        /* \"#utility.yul\":1721:1723   */\n      dup3\n        /* \"#utility.yul\":1713:1719   */\n      dup2\n        /* \"#utility.yul\":1706:1724   */\n      mstore\n        /* \"#utility.yul\":1761:1768   */\n      dup10\n        /* \"#utility.yul\":1756:1758   */\n      0x20\n        /* \"#utility.yul\":1751:1753   */\n      dup5\n        /* \"#utility.yul\":1747:1749   */\n      dup8\n        /* \"#utility.yul\":1743:1754   */\n      add\n        /* \"#utility.yul\":1739:1759   */\n      add\n        /* \"#utility.yul\":1736:1769   */\n      gt\n        /* \"#utility.yul\":1733:1786   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":1782:1783   */\n      0x00\n        /* \"#utility.yul\":1779:1780   */\n      dup1\n        /* \"#utility.yul\":1772:1784   */\n      revert\n        /* \"#utility.yul\":1733:1786   */\n    tag_78:\n        /* \"#utility.yul\":1838:1840   */\n      dup3\n        /* \"#utility.yul\":1833:1835   */\n      0x20\n        /* \"#utility.yul\":1829:1831   */\n      dup7\n        /* \"#utility.yul\":1825:1836   */\n      add\n        /* \"#utility.yul\":1820:1822   */\n      0x20\n        /* \"#utility.yul\":1812:1818   */\n      dup4\n        /* \"#utility.yul\":1808:1823   */\n      add\n        /* \"#utility.yul\":1795:1841   */\n      calldatacopy\n        /* \"#utility.yul\":1883:1884   */\n      0x00\n        /* \"#utility.yul\":1878:1880   */\n      0x20\n        /* \"#utility.yul\":1873:1875   */\n      dup5\n        /* \"#utility.yul\":1865:1871   */\n      dup4\n        /* \"#utility.yul\":1861:1876   */\n      add\n        /* \"#utility.yul\":1857:1881   */\n      add\n        /* \"#utility.yul\":1850:1885   */\n      mstore\n        /* \"#utility.yul\":1904:1910   */\n      dup1\n        /* \"#utility.yul\":1894:1910   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":623:1916   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1921:2210   */\n    tag_62:\n        /* \"#utility.yul\":1963:1966   */\n      0x00\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1995:2007   */\n      mload\n        /* \"#utility.yul\":2028:2034   */\n      dup1\n        /* \"#utility.yul\":2023:2026   */\n      dup5\n        /* \"#utility.yul\":2016:2035   */\n      mstore\n        /* \"#utility.yul\":2084:2090   */\n      dup1\n        /* \"#utility.yul\":2077:2081   */\n      0x20\n        /* \"#utility.yul\":2070:2075   */\n      dup5\n        /* \"#utility.yul\":2066:2082   */\n      add\n        /* \"#utility.yul\":2059:2063   */\n      0x20\n        /* \"#utility.yul\":2054:2057   */\n      dup7\n        /* \"#utility.yul\":2050:2064   */\n      add\n        /* \"#utility.yul\":2044:2091   */\n      mcopy\n        /* \"#utility.yul\":2136:2137   */\n      0x00\n        /* \"#utility.yul\":2129:2133   */\n      0x20\n        /* \"#utility.yul\":2120:2126   */\n      dup3\n        /* \"#utility.yul\":2115:2118   */\n      dup7\n        /* \"#utility.yul\":2111:2127   */\n      add\n        /* \"#utility.yul\":2107:2134   */\n      add\n        /* \"#utility.yul\":2100:2138   */\n      mstore\n        /* \"#utility.yul\":2199:2203   */\n      0x20\n        /* \"#utility.yul\":2192:2194   */\n      0x1f\n        /* \"#utility.yul\":2188:2195   */\n      not\n        /* \"#utility.yul\":2183:2185   */\n      0x1f\n        /* \"#utility.yul\":2175:2181   */\n      dup4\n        /* \"#utility.yul\":2171:2186   */\n      add\n        /* \"#utility.yul\":2167:2196   */\n      and\n        /* \"#utility.yul\":2162:2165   */\n      dup6\n        /* \"#utility.yul\":2158:2197   */\n      add\n        /* \"#utility.yul\":2154:2204   */\n      add\n        /* \"#utility.yul\":2147:2204   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1921:2210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2435   */\n    tag_24:\n        /* \"#utility.yul\":2364:2366   */\n      0x20\n        /* \"#utility.yul\":2353:2362   */\n      dup2\n        /* \"#utility.yul\":2346:2367   */\n      mstore\n        /* \"#utility.yul\":2327:2331   */\n      0x00\n        /* \"#utility.yul\":2384:2429   */\n      tag_81\n        /* \"#utility.yul\":2425:2427   */\n      0x20\n        /* \"#utility.yul\":2414:2423   */\n      dup4\n        /* \"#utility.yul\":2410:2428   */\n      add\n        /* \"#utility.yul\":2402:2408   */\n      dup5\n        /* \"#utility.yul\":2384:2429   */\n      tag_62\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2376:2429   */\n      swap4\n        /* \"#utility.yul\":2215:2435   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2440:2717   */\n    tag_28:\n        /* \"#utility.yul\":2499:2505   */\n      0x00\n        /* \"#utility.yul\":2552:2554   */\n      0x20\n        /* \"#utility.yul\":2540:2549   */\n      dup3\n        /* \"#utility.yul\":2531:2538   */\n      dup5\n        /* \"#utility.yul\":2527:2550   */\n      sub\n        /* \"#utility.yul\":2523:2555   */\n      slt\n        /* \"#utility.yul\":2520:2572   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2568:2569   */\n      0x00\n        /* \"#utility.yul\":2565:2566   */\n      dup1\n        /* \"#utility.yul\":2558:2570   */\n      revert\n        /* \"#utility.yul\":2520:2572   */\n    tag_83:\n        /* \"#utility.yul\":2607:2616   */\n      dup2\n        /* \"#utility.yul\":2594:2617   */\n      calldataload\n        /* \"#utility.yul\":2626:2687   */\n      tag_81\n        /* \"#utility.yul\":2681:2686   */\n      dup2\n        /* \"#utility.yul\":2626:2687   */\n      tag_60\n      jump\t// in\n        /* \"#utility.yul\":2722:3060   */\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2901:2907   */\n      dup4\n        /* \"#utility.yul\":2897:2952   */\n      and\n        /* \"#utility.yul\":2886:2895   */\n      dup2\n        /* \"#utility.yul\":2879:2953   */\n      mstore\n        /* \"#utility.yul\":2989:2991   */\n      0x40\n        /* \"#utility.yul\":2984:2986   */\n      0x20\n        /* \"#utility.yul\":2973:2982   */\n      dup3\n        /* \"#utility.yul\":2969:2987   */\n      add\n        /* \"#utility.yul\":2962:2992   */\n      mstore\n        /* \"#utility.yul\":2860:2864   */\n      0x00\n        /* \"#utility.yul\":3009:3054   */\n      tag_86\n        /* \"#utility.yul\":3050:3052   */\n      0x40\n        /* \"#utility.yul\":3039:3048   */\n      dup4\n        /* \"#utility.yul\":3035:3053   */\n      add\n        /* \"#utility.yul\":3027:3033   */\n      dup5\n        /* \"#utility.yul\":3009:3054   */\n      tag_62\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3001:3054   */\n      swap5\n        /* \"#utility.yul\":2722:3060   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122077ecba69c01c31832a71b8b8e6bbb452462afc9570c5ffedbf52c409c789a31a64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_572": {
									"entryPoint": null,
									"id": 572,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_149": {
									"entryPoint": 108,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:514:13",
										"nodeType": "YulBlock",
										"src": "0:514:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:13",
													"nodeType": "YulBlock",
													"src": "95:209:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:13",
																"nodeType": "YulBlock",
																"src": "141:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:13",
																					"nodeType": "YulLiteral",
																					"src": "150:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:13",
																					"nodeType": "YulLiteral",
																					"src": "153:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:13"
																			},
																			"nativeSrc": "143:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:13"
																		},
																		"nativeSrc": "143:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:13"
																		},
																		"nativeSrc": "112:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:13",
																		"nodeType": "YulLiteral",
																		"src": "137:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:13"
																},
																"nativeSrc": "108:32:13",
																"nodeType": "YulFunctionCall",
																"src": "108:32:13"
															},
															"nativeSrc": "105:52:13",
															"nodeType": "YulIf",
															"src": "105:52:13"
														},
														{
															"nativeSrc": "166:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:13"
																},
																"nativeSrc": "179:16:13",
																"nodeType": "YulFunctionCall",
																"src": "179:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:13",
																	"nodeType": "YulTypedName",
																	"src": "170:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:13",
																"nodeType": "YulBlock",
																"src": "258:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:13",
																					"nodeType": "YulLiteral",
																					"src": "267:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:13",
																					"nodeType": "YulLiteral",
																					"src": "270:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:13"
																			},
																			"nativeSrc": "260:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:13"
																		},
																		"nativeSrc": "260:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:13",
																										"nodeType": "YulLiteral",
																										"src": "243:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:13",
																										"nodeType": "YulLiteral",
																										"src": "248:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:13"
																								},
																								"nativeSrc": "239:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:13",
																								"nodeType": "YulLiteral",
																								"src": "252:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:13"
																						},
																						"nativeSrc": "235:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:13"
																				},
																				"nativeSrc": "224:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:13"
																		},
																		"nativeSrc": "214:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:13"
																},
																"nativeSrc": "207:50:13",
																"nodeType": "YulFunctionCall",
																"src": "207:50:13"
															},
															"nativeSrc": "204:70:13",
															"nodeType": "YulIf",
															"src": "204:70:13"
														},
														{
															"nativeSrc": "283:15:13",
															"nodeType": "YulAssignment",
															"src": "283:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:13",
																"nodeType": "YulIdentifier",
																"src": "293:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:13",
														"nodeType": "YulTypedName",
														"src": "61:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:13",
														"nodeType": "YulTypedName",
														"src": "72:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:13",
														"nodeType": "YulTypedName",
														"src": "84:6:13",
														"type": ""
													}
												],
												"src": "14:290:13"
											},
											{
												"body": {
													"nativeSrc": "410:102:13",
													"nodeType": "YulBlock",
													"src": "410:102:13",
													"statements": [
														{
															"nativeSrc": "420:26:13",
															"nodeType": "YulAssignment",
															"src": "420:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:13",
																		"nodeType": "YulLiteral",
																		"src": "443:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:13"
																},
																"nativeSrc": "428:18:13",
																"nodeType": "YulFunctionCall",
																"src": "428:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:13",
																								"nodeType": "YulLiteral",
																								"src": "493:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:13",
																								"nodeType": "YulLiteral",
																								"src": "498:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:13"
																						},
																						"nativeSrc": "489:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:13",
																						"nodeType": "YulLiteral",
																						"src": "502:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:13"
																				},
																				"nativeSrc": "485:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:13"
																		},
																		"nativeSrc": "473:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:13"
																},
																"nativeSrc": "455:51:13",
																"nodeType": "YulFunctionCall",
																"src": "455:51:13"
															},
															"nativeSrc": "455:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:13",
														"nodeType": "YulTypedName",
														"src": "379:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:13",
														"nodeType": "YulTypedName",
														"src": "390:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:13",
														"nodeType": "YulTypedName",
														"src": "401:4:13",
														"type": ""
													}
												],
												"src": "309:203:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161058838038061058883398101604081905261002e916100bb565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100658161006c565b50506100e8565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100cb575f80fd5b81516001600160a01b03811681146100e1575f80fd5b9392505050565b610493806100f55f395ff3fe608060405260043610610058575f3560e01c80639623609d116100415780639623609d1461009d578063ad3cb1cc146100b0578063f2fde38b14610105575f80fd5b8063715018a61461005c5780638da5cb5b14610072575b5f80fd5b348015610067575f80fd5b50610070610124565b005b34801561007d575f80fd5b505f546040516001600160a01b0390911681526020015b60405180910390f35b6100706100ab366004610303565b610137565b3480156100bb575f80fd5b506100f86040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516100949190610400565b348015610110575f80fd5b5061007061011f366004610419565b6101bb565b61012c610216565b6101355f61025b565b565b61013f610216565b6040517f4f1ef2860000000000000000000000000000000000000000000000000000000081526001600160a01b03841690634f1ef2869034906101889086908690600401610434565b5f604051808303818588803b15801561019f575f80fd5b505af11580156101b1573d5f803e3d5ffd5b5050505050505050565b6101c3610216565b6001600160a01b03811661020a576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b6102138161025b565b50565b5f546001600160a01b03163314610135576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610201565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610213575f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f805f60608486031215610315575f80fd5b8335610320816102c2565b92506020840135610330816102c2565b9150604084013567ffffffffffffffff8082111561034c575f80fd5b818601915086601f83011261035f575f80fd5b813581811115610371576103716102d6565b604051601f8201601f19908116603f01168101908382118183101715610399576103996102d6565b816040528281528960208487010111156103b1575f80fd5b826020860160208301375f6020848301015280955050505050509250925092565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61041260208301846103d2565b9392505050565b5f60208284031215610429575f80fd5b8135610412816102c2565b6001600160a01b0383168152604060208201525f61045560408301846103d2565b94935050505056fea264697066735822122077ecba69c01c31832a71b8b8e6bbb452462afc9570c5ffedbf52c409c789a31a64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x588 CODESIZE SUB DUP1 PUSH2 0x588 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xBB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x6C JUMP JUMPDEST POP POP PUSH2 0xE8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x493 DUP1 PUSH2 0xF5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x41 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x105 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x303 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x12C PUSH2 0x216 JUMP JUMPDEST PUSH2 0x135 PUSH0 PUSH2 0x25B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13F PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x4F1EF286 SWAP1 CALLVALUE SWAP1 PUSH2 0x188 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x434 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x213 DUP2 PUSH2 0x25B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x135 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x201 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x315 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x320 DUP2 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x330 DUP2 PUSH2 0x2C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x34C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x371 JUMPI PUSH2 0x371 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x399 JUMPI PUSH2 0x399 PUSH2 0x2D6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x412 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x412 DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x455 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xECBA69C01C31832A71B8B8E6BBB452462AFC9570C5FFEDBF MSTORE 0xC4 MULMOD 0xC7 DUP10 LOG3 BYTE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "502:1462:7:-:0;;;1329:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1371:12;-1:-1:-1;;;;;1273:26:1;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:1;;1350:1;1322:31;;;455:51:13;428:18;;1322:31:1;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;1329:58:7;502:1462;;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:13:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:13;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:13:o;309:203::-;502:1462:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_562": {
									"entryPoint": null,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_87": {
									"entryPoint": 534,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1003": {
									"entryPoint": null,
									"id": 1003,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_149": {
									"entryPoint": 603,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_101": {
									"entryPoint": 292,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_129": {
									"entryPoint": 443,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeAndCall_596": {
									"entryPoint": 311,
									"id": 596,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$618t_addresst_bytes_memory_ptr": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_string": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_ITransparentUpgradeableProxy": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3062:13",
										"nodeType": "YulBlock",
										"src": "0:3062:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:125:13",
													"nodeType": "YulBlock",
													"src": "115:125:13",
													"statements": [
														{
															"nativeSrc": "125:26:13",
															"nodeType": "YulAssignment",
															"src": "125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:13",
																		"nodeType": "YulLiteral",
																		"src": "148:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:13"
																},
																"nativeSrc": "133:18:13",
																"nodeType": "YulFunctionCall",
																"src": "133:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "190:42:13",
																				"nodeType": "YulLiteral",
																				"src": "190:42:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:13"
																		},
																		"nativeSrc": "178:55:13",
																		"nodeType": "YulFunctionCall",
																		"src": "178:55:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:13"
																},
																"nativeSrc": "160:74:13",
																"nodeType": "YulFunctionCall",
																"src": "160:74:13"
															},
															"nativeSrc": "160:74:13",
															"nodeType": "YulExpressionStatement",
															"src": "160:74:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:226:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:13",
														"nodeType": "YulTypedName",
														"src": "84:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:13",
														"nodeType": "YulTypedName",
														"src": "95:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:13",
														"nodeType": "YulTypedName",
														"src": "106:4:13",
														"type": ""
													}
												],
												"src": "14:226:13"
											},
											{
												"body": {
													"nativeSrc": "320:109:13",
													"nodeType": "YulBlock",
													"src": "320:109:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "407:16:13",
																"nodeType": "YulBlock",
																"src": "407:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "416:1:13",
																					"nodeType": "YulLiteral",
																					"src": "416:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "419:1:13",
																					"nodeType": "YulLiteral",
																					"src": "419:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "409:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "409:6:13"
																			},
																			"nativeSrc": "409:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "409:12:13"
																		},
																		"nativeSrc": "409:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "409:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "343:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "343:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "354:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "354:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "361:42:13",
																						"nodeType": "YulLiteral",
																						"src": "361:42:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "350:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "350:3:13"
																				},
																				"nativeSrc": "350:54:13",
																				"nodeType": "YulFunctionCall",
																				"src": "350:54:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "340:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "340:2:13"
																		},
																		"nativeSrc": "340:65:13",
																		"nodeType": "YulFunctionCall",
																		"src": "340:65:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "333:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:13"
																},
																"nativeSrc": "333:73:13",
																"nodeType": "YulFunctionCall",
																"src": "333:73:13"
															},
															"nativeSrc": "330:93:13",
															"nodeType": "YulIf",
															"src": "330:93:13"
														}
													]
												},
												"name": "validator_revert_contract_ITransparentUpgradeableProxy",
												"nativeSrc": "245:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "309:5:13",
														"nodeType": "YulTypedName",
														"src": "309:5:13",
														"type": ""
													}
												],
												"src": "245:184:13"
											},
											{
												"body": {
													"nativeSrc": "466:152:13",
													"nodeType": "YulBlock",
													"src": "466:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:13",
																		"nodeType": "YulLiteral",
																		"src": "483:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "486:77:13",
																		"nodeType": "YulLiteral",
																		"src": "486:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "476:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:13"
																},
																"nativeSrc": "476:88:13",
																"nodeType": "YulFunctionCall",
																"src": "476:88:13"
															},
															"nativeSrc": "476:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "476:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "580:1:13",
																		"nodeType": "YulLiteral",
																		"src": "580:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "583:4:13",
																		"nodeType": "YulLiteral",
																		"src": "583:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "573:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:13"
																},
																"nativeSrc": "573:15:13",
																"nodeType": "YulFunctionCall",
																"src": "573:15:13"
															},
															"nativeSrc": "573:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "573:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:13",
																		"nodeType": "YulLiteral",
																		"src": "604:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "607:4:13",
																		"nodeType": "YulLiteral",
																		"src": "607:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "597:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																},
																"nativeSrc": "597:15:13",
																"nodeType": "YulFunctionCall",
																"src": "597:15:13"
															},
															"nativeSrc": "597:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "597:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "434:184:13",
												"nodeType": "YulFunctionDefinition",
												"src": "434:184:13"
											},
											{
												"body": {
													"nativeSrc": "772:1144:13",
													"nodeType": "YulBlock",
													"src": "772:1144:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "818:16:13",
																"nodeType": "YulBlock",
																"src": "818:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "827:1:13",
																					"nodeType": "YulLiteral",
																					"src": "827:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "830:1:13",
																					"nodeType": "YulLiteral",
																					"src": "830:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "820:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:13"
																			},
																			"nativeSrc": "820:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:13"
																		},
																		"nativeSrc": "820:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "793:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "802:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "789:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:13"
																		},
																		"nativeSrc": "789:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "814:2:13",
																		"nodeType": "YulLiteral",
																		"src": "814:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "785:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:13"
																},
																"nativeSrc": "785:32:13",
																"nodeType": "YulFunctionCall",
																"src": "785:32:13"
															},
															"nativeSrc": "782:52:13",
															"nodeType": "YulIf",
															"src": "782:52:13"
														},
														{
															"nativeSrc": "843:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "843:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "869:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "856:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "856:12:13"
																},
																"nativeSrc": "856:23:13",
																"nodeType": "YulFunctionCall",
																"src": "856:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "847:5:13",
																	"nodeType": "YulTypedName",
																	"src": "847:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "943:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "943:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_ITransparentUpgradeableProxy",
																	"nativeSrc": "888:54:13",
																	"nodeType": "YulIdentifier",
																	"src": "888:54:13"
																},
																"nativeSrc": "888:61:13",
																"nodeType": "YulFunctionCall",
																"src": "888:61:13"
															},
															"nativeSrc": "888:61:13",
															"nodeType": "YulExpressionStatement",
															"src": "888:61:13"
														},
														{
															"nativeSrc": "958:15:13",
															"nodeType": "YulAssignment",
															"src": "958:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "968:5:13",
																"nodeType": "YulIdentifier",
																"src": "968:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "958:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:13"
																}
															]
														},
														{
															"nativeSrc": "982:47:13",
															"nodeType": "YulVariableDeclaration",
															"src": "982:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1014:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1014:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1025:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1025:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1010:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1010:3:13"
																		},
																		"nativeSrc": "1010:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1010:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "997:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "997:12:13"
																},
																"nativeSrc": "997:32:13",
																"nodeType": "YulFunctionCall",
																"src": "997:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "986:7:13",
																	"nodeType": "YulTypedName",
																	"src": "986:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "1093:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1093:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_ITransparentUpgradeableProxy",
																	"nativeSrc": "1038:54:13",
																	"nodeType": "YulIdentifier",
																	"src": "1038:54:13"
																},
																"nativeSrc": "1038:63:13",
																"nodeType": "YulFunctionCall",
																"src": "1038:63:13"
															},
															"nativeSrc": "1038:63:13",
															"nodeType": "YulExpressionStatement",
															"src": "1038:63:13"
														},
														{
															"nativeSrc": "1110:17:13",
															"nodeType": "YulAssignment",
															"src": "1110:17:13",
															"value": {
																"name": "value_1",
																"nativeSrc": "1120:7:13",
																"nodeType": "YulIdentifier",
																"src": "1120:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1110:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1110:6:13"
																}
															]
														},
														{
															"nativeSrc": "1136:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1136:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1167:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1167:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1178:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1178:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:13"
																		},
																		"nativeSrc": "1163:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1150:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1150:12:13"
																},
																"nativeSrc": "1150:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1150:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1140:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1140:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1191:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1191:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1201:18:13",
																"nodeType": "YulLiteral",
																"src": "1201:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1195:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1195:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1246:16:13",
																"nodeType": "YulBlock",
																"src": "1246:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1255:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1255:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1258:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1258:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1248:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1248:6:13"
																			},
																			"nativeSrc": "1248:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1248:12:13"
																		},
																		"nativeSrc": "1248:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1248:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1234:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1234:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1242:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1242:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1231:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1231:2:13"
																},
																"nativeSrc": "1231:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1231:14:13"
															},
															"nativeSrc": "1228:34:13",
															"nodeType": "YulIf",
															"src": "1228:34:13"
														},
														{
															"nativeSrc": "1271:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1271:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1285:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1285:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1296:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1296:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1281:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1281:3:13"
																},
																"nativeSrc": "1281:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1281:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1275:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1275:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1351:16:13",
																"nodeType": "YulBlock",
																"src": "1351:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1360:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1360:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1363:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1363:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1353:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:13"
																			},
																			"nativeSrc": "1353:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1353:12:13"
																		},
																		"nativeSrc": "1353:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1353:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1330:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1330:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1334:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1334:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1326:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1326:3:13"
																				},
																				"nativeSrc": "1326:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1326:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1341:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1341:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1322:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1322:3:13"
																		},
																		"nativeSrc": "1322:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1315:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:13"
																},
																"nativeSrc": "1315:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1315:35:13"
															},
															"nativeSrc": "1312:55:13",
															"nodeType": "YulIf",
															"src": "1312:55:13"
														},
														{
															"nativeSrc": "1376:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1376:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1399:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1399:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1386:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1386:12:13"
																},
																"nativeSrc": "1386:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1386:16:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "1380:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1380:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1425:22:13",
																"nodeType": "YulBlock",
																"src": "1425:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1427:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1427:16:13"
																			},
																			"nativeSrc": "1427:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1427:18:13"
																		},
																		"nativeSrc": "1427:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1427:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "1417:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1417:2:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1421:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1421:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1414:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1414:2:13"
																},
																"nativeSrc": "1414:10:13",
																"nodeType": "YulFunctionCall",
																"src": "1414:10:13"
															},
															"nativeSrc": "1411:36:13",
															"nodeType": "YulIf",
															"src": "1411:36:13"
														},
														{
															"nativeSrc": "1456:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1456:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1470:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1470:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "1466:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1466:3:13"
																},
																"nativeSrc": "1466:7:13",
																"nodeType": "YulFunctionCall",
																"src": "1466:7:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "1460:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1460:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1482:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1482:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1502:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1502:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1496:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1496:5:13"
																},
																"nativeSrc": "1496:9:13",
																"nodeType": "YulFunctionCall",
																"src": "1496:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1486:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1486:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1514:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1514:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1536:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1536:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "1560:2:13",
																										"nodeType": "YulIdentifier",
																										"src": "1560:2:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1564:4:13",
																										"nodeType": "YulLiteral",
																										"src": "1564:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1556:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1556:3:13"
																								},
																								"nativeSrc": "1556:13:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1556:13:13"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "1571:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "1571:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1552:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1552:3:13"
																						},
																						"nativeSrc": "1552:22:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1552:22:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1576:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1576:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1548:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1548:3:13"
																				},
																				"nativeSrc": "1548:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1548:31:13"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "1581:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1581:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1544:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1544:3:13"
																		},
																		"nativeSrc": "1544:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1532:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1532:3:13"
																},
																"nativeSrc": "1532:53:13",
																"nodeType": "YulFunctionCall",
																"src": "1532:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1518:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1518:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1644:22:13",
																"nodeType": "YulBlock",
																"src": "1644:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1646:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1646:16:13"
																			},
																			"nativeSrc": "1646:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1646:18:13"
																		},
																		"nativeSrc": "1646:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1603:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1603:10:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1615:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1615:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1600:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1600:2:13"
																		},
																		"nativeSrc": "1600:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1600:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1623:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1623:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1635:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1635:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1620:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1620:2:13"
																		},
																		"nativeSrc": "1620:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1620:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1597:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1597:2:13"
																},
																"nativeSrc": "1597:46:13",
																"nodeType": "YulFunctionCall",
																"src": "1597:46:13"
															},
															"nativeSrc": "1594:72:13",
															"nodeType": "YulIf",
															"src": "1594:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1682:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1682:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1686:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1686:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1675:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1675:6:13"
																},
																"nativeSrc": "1675:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1675:22:13"
															},
															"nativeSrc": "1675:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1675:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1713:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1713:6:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1721:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1721:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1706:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1706:6:13"
																},
																"nativeSrc": "1706:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1706:18:13"
															},
															"nativeSrc": "1706:18:13",
															"nodeType": "YulExpressionStatement",
															"src": "1706:18:13"
														},
														{
															"body": {
																"nativeSrc": "1770:16:13",
																"nodeType": "YulBlock",
																"src": "1770:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1779:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1779:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1782:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1782:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1772:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1772:6:13"
																			},
																			"nativeSrc": "1772:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1772:12:13"
																		},
																		"nativeSrc": "1772:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1772:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1747:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1747:2:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1751:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1751:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1743:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1743:3:13"
																				},
																				"nativeSrc": "1743:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1743:11:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1756:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1756:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1739:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1739:3:13"
																		},
																		"nativeSrc": "1739:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1739:20:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1761:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1761:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1736:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1736:2:13"
																},
																"nativeSrc": "1736:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1736:33:13"
															},
															"nativeSrc": "1733:53:13",
															"nodeType": "YulIf",
															"src": "1733:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1812:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1812:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1820:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1820:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1808:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:13"
																		},
																		"nativeSrc": "1808:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "1829:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1829:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1833:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1833:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1825:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1825:3:13"
																		},
																		"nativeSrc": "1825:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1825:11:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1838:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1838:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1795:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1795:12:13"
																},
																"nativeSrc": "1795:46:13",
																"nodeType": "YulFunctionCall",
																"src": "1795:46:13"
															},
															"nativeSrc": "1795:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "1795:46:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1865:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1865:6:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1873:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1873:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1861:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1861:3:13"
																				},
																				"nativeSrc": "1861:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1861:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1878:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1878:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1857:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1857:3:13"
																		},
																		"nativeSrc": "1857:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1857:24:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1883:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1883:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1850:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:13"
																},
																"nativeSrc": "1850:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1850:35:13"
															},
															"nativeSrc": "1850:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "1850:35:13"
														},
														{
															"nativeSrc": "1894:16:13",
															"nodeType": "YulAssignment",
															"src": "1894:16:13",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1904:6:13",
																"nodeType": "YulIdentifier",
																"src": "1904:6:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1894:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1894:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$618t_addresst_bytes_memory_ptr",
												"nativeSrc": "623:1293:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "722:9:13",
														"nodeType": "YulTypedName",
														"src": "722:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "733:7:13",
														"nodeType": "YulTypedName",
														"src": "733:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "745:6:13",
														"nodeType": "YulTypedName",
														"src": "745:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "753:6:13",
														"nodeType": "YulTypedName",
														"src": "753:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "761:6:13",
														"nodeType": "YulTypedName",
														"src": "761:6:13",
														"type": ""
													}
												],
												"src": "623:1293:13"
											},
											{
												"body": {
													"nativeSrc": "1971:239:13",
													"nodeType": "YulBlock",
													"src": "1971:239:13",
													"statements": [
														{
															"nativeSrc": "1981:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1981:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2001:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2001:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1995:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1995:5:13"
																},
																"nativeSrc": "1995:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1995:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1985:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1985:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2023:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2028:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2016:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:13"
																},
																"nativeSrc": "2016:19:13",
																"nodeType": "YulFunctionCall",
																"src": "2016:19:13"
															},
															"nativeSrc": "2016:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "2016:19:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2054:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2054:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2059:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2059:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2050:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2050:3:13"
																		},
																		"nativeSrc": "2050:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2050:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2070:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2070:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2077:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2077:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2066:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2066:3:13"
																		},
																		"nativeSrc": "2066:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2066:16:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2084:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2084:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2044:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2044:5:13"
																},
																"nativeSrc": "2044:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2044:47:13"
															},
															"nativeSrc": "2044:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2044:47:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2115:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2115:3:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2120:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2120:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2111:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2111:3:13"
																				},
																				"nativeSrc": "2111:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2111:16:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2129:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2129:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2107:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2107:3:13"
																		},
																		"nativeSrc": "2107:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2107:27:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2136:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2136:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2100:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2100:6:13"
																},
																"nativeSrc": "2100:38:13",
																"nodeType": "YulFunctionCall",
																"src": "2100:38:13"
															},
															"nativeSrc": "2100:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "2100:38:13"
														},
														{
															"nativeSrc": "2147:57:13",
															"nodeType": "YulAssignment",
															"src": "2147:57:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2162:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2162:3:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "2175:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "2175:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2183:2:13",
																								"nodeType": "YulLiteral",
																								"src": "2183:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2171:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2171:3:13"
																						},
																						"nativeSrc": "2171:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2171:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2192:2:13",
																								"nodeType": "YulLiteral",
																								"src": "2192:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2188:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2188:3:13"
																						},
																						"nativeSrc": "2188:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2188:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2167:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2167:3:13"
																				},
																				"nativeSrc": "2167:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2167:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2158:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2158:3:13"
																		},
																		"nativeSrc": "2158:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2158:39:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2199:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2199:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2154:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2154:3:13"
																},
																"nativeSrc": "2154:50:13",
																"nodeType": "YulFunctionCall",
																"src": "2154:50:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2147:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2147:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "1921:289:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:13",
														"nodeType": "YulTypedName",
														"src": "1948:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1955:3:13",
														"nodeType": "YulTypedName",
														"src": "1955:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1963:3:13",
														"nodeType": "YulTypedName",
														"src": "1963:3:13",
														"type": ""
													}
												],
												"src": "1921:289:13"
											},
											{
												"body": {
													"nativeSrc": "2336:99:13",
													"nodeType": "YulBlock",
													"src": "2336:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2353:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2353:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2364:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2364:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2346:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:13"
																},
																"nativeSrc": "2346:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2346:21:13"
															},
															"nativeSrc": "2346:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "2346:21:13"
														},
														{
															"nativeSrc": "2376:53:13",
															"nodeType": "YulAssignment",
															"src": "2376:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2402:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2402:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2414:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2425:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2425:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2410:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:13"
																		},
																		"nativeSrc": "2410:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2410:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "2384:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2384:17:13"
																},
																"nativeSrc": "2384:45:13",
																"nodeType": "YulFunctionCall",
																"src": "2384:45:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2376:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2215:220:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2305:9:13",
														"nodeType": "YulTypedName",
														"src": "2305:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2316:6:13",
														"nodeType": "YulTypedName",
														"src": "2316:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2327:4:13",
														"nodeType": "YulTypedName",
														"src": "2327:4:13",
														"type": ""
													}
												],
												"src": "2215:220:13"
											},
											{
												"body": {
													"nativeSrc": "2510:207:13",
													"nodeType": "YulBlock",
													"src": "2510:207:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2556:16:13",
																"nodeType": "YulBlock",
																"src": "2556:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2565:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2565:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2568:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2568:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2558:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2558:6:13"
																			},
																			"nativeSrc": "2558:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2558:12:13"
																		},
																		"nativeSrc": "2558:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2558:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2531:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2531:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2540:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2540:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2527:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:13"
																		},
																		"nativeSrc": "2527:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2552:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2552:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2523:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2523:3:13"
																},
																"nativeSrc": "2523:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2523:32:13"
															},
															"nativeSrc": "2520:52:13",
															"nodeType": "YulIf",
															"src": "2520:52:13"
														},
														{
															"nativeSrc": "2581:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2581:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2607:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2607:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2594:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2594:12:13"
																},
																"nativeSrc": "2594:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2594:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2585:5:13",
																	"nodeType": "YulTypedName",
																	"src": "2585:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2681:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2681:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_ITransparentUpgradeableProxy",
																	"nativeSrc": "2626:54:13",
																	"nodeType": "YulIdentifier",
																	"src": "2626:54:13"
																},
																"nativeSrc": "2626:61:13",
																"nodeType": "YulFunctionCall",
																"src": "2626:61:13"
															},
															"nativeSrc": "2626:61:13",
															"nodeType": "YulExpressionStatement",
															"src": "2626:61:13"
														},
														{
															"nativeSrc": "2696:15:13",
															"nodeType": "YulAssignment",
															"src": "2696:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "2706:5:13",
																"nodeType": "YulIdentifier",
																"src": "2706:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2696:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2696:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2440:277:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2476:9:13",
														"nodeType": "YulTypedName",
														"src": "2476:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2487:7:13",
														"nodeType": "YulTypedName",
														"src": "2487:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2499:6:13",
														"nodeType": "YulTypedName",
														"src": "2499:6:13",
														"type": ""
													}
												],
												"src": "2440:277:13"
											},
											{
												"body": {
													"nativeSrc": "2869:191:13",
													"nodeType": "YulBlock",
													"src": "2869:191:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2886:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2886:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2901:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2901:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2909:42:13",
																				"nodeType": "YulLiteral",
																				"src": "2909:42:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2897:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2897:3:13"
																		},
																		"nativeSrc": "2897:55:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2897:55:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2879:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2879:6:13"
																},
																"nativeSrc": "2879:74:13",
																"nodeType": "YulFunctionCall",
																"src": "2879:74:13"
															},
															"nativeSrc": "2879:74:13",
															"nodeType": "YulExpressionStatement",
															"src": "2879:74:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2973:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2973:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2984:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2984:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2969:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2969:3:13"
																		},
																		"nativeSrc": "2969:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2969:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2989:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2989:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2962:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:13"
																},
																"nativeSrc": "2962:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2962:30:13"
															},
															"nativeSrc": "2962:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "2962:30:13"
														},
														{
															"nativeSrc": "3001:53:13",
															"nodeType": "YulAssignment",
															"src": "3001:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3027:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3027:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3039:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3039:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3050:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3050:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3035:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3035:3:13"
																		},
																		"nativeSrc": "3035:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3035:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3009:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3009:17:13"
																},
																"nativeSrc": "3009:45:13",
																"nodeType": "YulFunctionCall",
																"src": "3009:45:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3001:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3001:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "2722:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2830:9:13",
														"nodeType": "YulTypedName",
														"src": "2830:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2841:6:13",
														"nodeType": "YulTypedName",
														"src": "2841:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2849:6:13",
														"nodeType": "YulTypedName",
														"src": "2849:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2860:4:13",
														"nodeType": "YulTypedName",
														"src": "2860:4:13",
														"type": ""
													}
												],
												"src": "2722:338:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_contract_ITransparentUpgradeableProxy(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_contract$_ITransparentUpgradeableProxy_$618t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_ITransparentUpgradeableProxy(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value2 := memPtr\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ITransparentUpgradeableProxy(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610058575f3560e01c80639623609d116100415780639623609d1461009d578063ad3cb1cc146100b0578063f2fde38b14610105575f80fd5b8063715018a61461005c5780638da5cb5b14610072575b5f80fd5b348015610067575f80fd5b50610070610124565b005b34801561007d575f80fd5b505f546040516001600160a01b0390911681526020015b60405180910390f35b6100706100ab366004610303565b610137565b3480156100bb575f80fd5b506100f86040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516100949190610400565b348015610110575f80fd5b5061007061011f366004610419565b6101bb565b61012c610216565b6101355f61025b565b565b61013f610216565b6040517f4f1ef2860000000000000000000000000000000000000000000000000000000081526001600160a01b03841690634f1ef2869034906101889086908690600401610434565b5f604051808303818588803b15801561019f575f80fd5b505af11580156101b1573d5f803e3d5ffd5b5050505050505050565b6101c3610216565b6001600160a01b03811661020a576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b6102138161025b565b50565b5f546001600160a01b03163314610135576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610201565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610213575f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f805f60608486031215610315575f80fd5b8335610320816102c2565b92506020840135610330816102c2565b9150604084013567ffffffffffffffff8082111561034c575f80fd5b818601915086601f83011261035f575f80fd5b813581811115610371576103716102d6565b604051601f8201601f19908116603f01168101908382118183101715610399576103996102d6565b816040528281528960208487010111156103b1575f80fd5b826020860160208301375f6020848301015280955050505050509250925092565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61041260208301846103d2565b9392505050565b5f60208284031215610429575f80fd5b8135610412816102c2565b6001600160a01b0383168152604060208201525f61045560408301846103d2565b94935050505056fea264697066735822122077ecba69c01c31832a71b8b8e6bbb452462afc9570c5ffedbf52c409c789a31a64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x41 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x105 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x303 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x12C PUSH2 0x216 JUMP JUMPDEST PUSH2 0x135 PUSH0 PUSH2 0x25B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13F PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x4F1EF286 SWAP1 CALLVALUE SWAP1 PUSH2 0x188 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x434 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x213 DUP2 PUSH2 0x25B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x135 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x201 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x315 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x320 DUP2 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x330 DUP2 PUSH2 0x2C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x34C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x371 JUMPI PUSH2 0x371 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x399 JUMPI PUSH2 0x399 PUSH2 0x2D6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x412 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x412 DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x455 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xECBA69C01C31832A71B8B8E6BBB452462AFC9570C5FFEDBF MSTORE 0xC4 MULMOD 0xC7 DUP10 LOG3 BYTE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "502:1462:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;-1:-1:-1;1684:7:1;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:1;;;160:74:13;;148:2;133:18;1638:85:1;;;;;;;;1717:245:7;;;;;;:::i;:::-;;:::i;1187:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2543:215:1:-;;;;;;;;;;-1:-1:-1;2543:215:1;;;;;:::i;:::-;;:::i;2293:101::-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1717:245:7:-;1531:13:1;:11;:13::i;:::-;1893:62:7::1;::::0;;;;-1:-1:-1;;;;;1893:22:7;::::1;::::0;::::1;::::0;1923:9:::1;::::0;1893:62:::1;::::0;1934:14;;1950:4;;1893:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;1717:245:::0;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:1;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;160:74:13::0;133:18;;2672:31:1::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:1;735:10:10;1855:23:1;1851:101;;1901:40;;;;;735:10:10;1901:40:1;;;160:74:13;133:18;;1901:40:1;14:226:13;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;245:184:13:-;-1:-1:-1;;;;;354:5:13;350:54;343:5;340:65;330:93;;419:1;416;409:12;434:184;486:77;483:1;476:88;583:4;580:1;573:15;607:4;604:1;597:15;623:1293;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:52;;;830:1;827;820:12;782:52;869:9;856:23;888:61;943:5;888:61;:::i;:::-;968:5;-1:-1:-1;1025:2:13;1010:18;;997:32;1038:63;997:32;1038:63;:::i;:::-;1120:7;-1:-1:-1;1178:2:13;1163:18;;1150:32;1201:18;1231:14;;;1228:34;;;1258:1;1255;1248:12;1228:34;1296:6;1285:9;1281:22;1271:32;;1341:7;1334:4;1330:2;1326:13;1322:27;1312:55;;1363:1;1360;1353:12;1312:55;1399:2;1386:16;1421:2;1417;1414:10;1411:36;;;1427:18;;:::i;:::-;1502:2;1496:9;1470:2;1556:13;;-1:-1:-1;;1552:22:13;;;1576:2;1548:31;1544:40;1532:53;;;1600:18;;;1620:22;;;1597:46;1594:72;;;1646:18;;:::i;:::-;1686:10;1682:2;1675:22;1721:2;1713:6;1706:18;1761:7;1756:2;1751;1747;1743:11;1739:20;1736:33;1733:53;;;1782:1;1779;1772:12;1733:53;1838:2;1833;1829;1825:11;1820:2;1812:6;1808:15;1795:46;1883:1;1878:2;1873;1865:6;1861:15;1857:24;1850:35;1904:6;1894:16;;;;;;;623:1293;;;;;:::o;1921:289::-;1963:3;2001:5;1995:12;2028:6;2023:3;2016:19;2084:6;2077:4;2070:5;2066:16;2059:4;2054:3;2050:14;2044:47;2136:1;2129:4;2120:6;2115:3;2111:16;2107:27;2100:38;2199:4;2192:2;2188:7;2183:2;2175:6;2171:15;2167:29;2162:3;2158:39;2154:50;2147:57;;;1921:289;;;;:::o;2215:220::-;2364:2;2353:9;2346:21;2327:4;2384:45;2425:2;2414:9;2410:18;2402:6;2384:45;:::i;:::-;2376:53;2215:220;-1:-1:-1;;;2215:220:13:o;2440:277::-;2499:6;2552:2;2540:9;2531:7;2527:23;2523:32;2520:52;;;2568:1;2565;2558:12;2520:52;2607:9;2594:23;2626:61;2681:5;2626:61;:::i;2722:338::-;-1:-1:-1;;;;;2901:6:13;2897:55;2886:9;2879:74;2989:2;2984;2973:9;2969:18;2962:30;2860:4;3009:45;3050:2;3039:9;3035:18;3027:6;3009:45;:::i;:::-;3001:53;2722:338;-1:-1:-1;;;;2722:338:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "234200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"owner()": "2311",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"upgradeAndCall(address,address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 502,
									"end": 1964,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1329,
									"end": 1387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1371,
									"end": 1383,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1387,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 1964,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122077ecba69c01c31832a71b8b8e6bbb452462afc9570c5ffedbf52c409c789a31a64736f6c63430008190033",
									".code": [
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "9623609D"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "9623609D"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "AD3CB1CC"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 234,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 160,
											"end": 234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1717,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1717,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH",
											"source": 7,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1187,
											"end": 1245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1955,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"name": "PUSH",
											"source": 7,
											"value": "4F1EF28600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1893,
											"end": 1955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1893,
											"end": 1915,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1915,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4F1EF286"
										},
										{
											"begin": 1893,
											"end": 1915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 1932,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 1932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1893,
											"end": 1955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1955,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1955,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1893,
											"end": 1955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 245,
											"end": 429,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 245,
											"end": 429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 354,
											"end": 359,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 350,
											"end": 404,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 343,
											"end": 348,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 340,
											"end": 405,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 330,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 330,
											"end": 423,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 419,
											"end": 420,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 417,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 409,
											"end": 421,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 434,
											"end": 618,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 434,
											"end": 618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 486,
											"end": 563,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 564,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 583,
											"end": 587,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 580,
											"end": 581,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 588,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 607,
											"end": 611,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 604,
											"end": 605,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 612,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 623,
											"end": 1916,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 623,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 782,
											"end": 834,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 782,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 782,
											"end": 834,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 828,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 820,
											"end": 832,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 782,
											"end": 834,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 782,
											"end": 834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 856,
											"end": 879,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 888,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 888,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 888,
											"end": 949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 888,
											"end": 949,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 888,
											"end": 949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 968,
											"end": 973,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1028,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1028,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1029,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 997,
											"end": 1029,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1038,
											"end": 1101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1101,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1038,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1150,
											"end": 1182,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1201,
											"end": 1219,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1231,
											"end": 1245,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1245,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1245,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1256,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1260,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1228,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1285,
											"end": 1294,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1303,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1348,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1338,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1349,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1312,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1312,
											"end": 1367,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1364,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1353,
											"end": 1365,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1312,
											"end": 1367,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1312,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1402,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1421,
											"end": 1423,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1414,
											"end": 1424,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1411,
											"end": 1447,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1411,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1411,
											"end": 1447,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1427,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1427,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1445,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1427,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1502,
											"end": 1504,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1496,
											"end": 1505,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1470,
											"end": 1472,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1556,
											"end": 1569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1569,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1552,
											"end": 1574,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1574,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1574,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1576,
											"end": 1578,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 1548,
											"end": 1579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1544,
											"end": 1584,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1585,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1532,
											"end": 1585,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1620,
											"end": 1642,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1643,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1594,
											"end": 1666,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1594,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1594,
											"end": 1666,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1646,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1686,
											"end": 1696,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1682,
											"end": 1684,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1697,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1713,
											"end": 1719,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1706,
											"end": 1724,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1758,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1749,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1743,
											"end": 1754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1769,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1786,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1733,
											"end": 1786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1780,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1784,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1786,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1733,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1838,
											"end": 1840,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1831,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1836,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1795,
											"end": 1841,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1875,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1865,
											"end": 1871,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1885,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1910,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 623,
											"end": 1916,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 623,
											"end": 1916,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 623,
											"end": 1916,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 623,
											"end": 1916,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 623,
											"end": 1916,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 623,
											"end": 1916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 2210,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1921,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2007,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2023,
											"end": 2026,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2035,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2077,
											"end": 2081,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2075,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2066,
											"end": 2082,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2054,
											"end": 2057,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2091,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2133,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2126,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2118,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2107,
											"end": 2134,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2138,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2199,
											"end": 2203,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2185,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2171,
											"end": 2186,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2196,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2162,
											"end": 2165,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2197,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2154,
											"end": 2204,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2147,
											"end": 2204,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2147,
											"end": 2204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2147,
											"end": 2204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 2210,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 2210,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 2210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 2210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2435,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2215,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2364,
											"end": 2366,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2367,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2327,
											"end": 2331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2384,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2429,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 2384,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2429,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2435,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2440,
											"end": 2717,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 2440,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2554,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2538,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2527,
											"end": 2550,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2523,
											"end": 2555,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2520,
											"end": 2572,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2520,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2520,
											"end": 2572,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2569,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2566,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2520,
											"end": 2572,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2520,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2607,
											"end": 2616,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2594,
											"end": 2617,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2626,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 2681,
											"end": 2686,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2626,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2626,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2722,
											"end": 3060,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2722,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2897,
											"end": 2952,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2879,
											"end": 2953,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2989,
											"end": 2991,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 2986,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 2982,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2969,
											"end": 2987,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2962,
											"end": 2992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2864,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3048,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3035,
											"end": 3053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 3009,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3054,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 3009,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3001,
											"end": 3054,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2722,
											"end": 3060,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2722,
											"end": 3060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractT/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"upgradeAndCall(address,address,bytes)": "9623609d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the initial owner who can perform upgrades.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)` and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called, while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":\"ProxyAdmin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x5f3770f82f75d132e210b43c071d3feec1bef13c385d1d799763a366e8bda311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a50b7702cbd525c4a0fd3c36d1e116432b5f645f84cb25e4473dc9c88a917c5\",\"dweb:/ipfs/QmaN5QKZwgypVK3zAwdgXfsygEeauRYa4sSe4x8yKXDRtV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x3cfd70b5e57ac16134caf206c6a71ea5ff113bc2032cd6d845231793f5c62995\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://984097ae51f9be9b94d2a3f5be7f284bd525fd9f0a0ccdca34cfaa7f0e1625d1\",\"dweb:/ipfs/QmXSL4rFMM25pJzvuTzN1DX4ddAwTCnmxS2axDwaZyzNHL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfd29ed7a01e9ef109cc31542ca0f51ba3e793740570b69172ec3d8bfbb1643b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99379e0649be8106d2708a2bde73b5cdaba4505f1001f1586b53788bf971d097\",\"dweb:/ipfs/QmV9cCnvFoVzV2cVDW4Zbs3JQ3ehxBcooQS52taVxR637S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
				"ITransparentUpgradeableProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x5f3770f82f75d132e210b43c071d3feec1bef13c385d1d799763a366e8bda311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a50b7702cbd525c4a0fd3c36d1e116432b5f645f84cb25e4473dc9c88a917c5\",\"dweb:/ipfs/QmaN5QKZwgypVK3zAwdgXfsygEeauRYa4sSe4x8yKXDRtV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x3cfd70b5e57ac16134caf206c6a71ea5ff113bc2032cd6d845231793f5c62995\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://984097ae51f9be9b94d2a3f5be7f284bd525fd9f0a0ccdca34cfaa7f0e1625d1\",\"dweb:/ipfs/QmXSL4rFMM25pJzvuTzN1DX4ddAwTCnmxS2axDwaZyzNHL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfd29ed7a01e9ef109cc31542ca0f51ba3e793740570b69172ec3d8bfbb1643b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99379e0649be8106d2708a2bde73b5cdaba4505f1001f1586b53788bf971d097\",\"dweb:/ipfs/QmV9cCnvFoVzV2cVDW4Zbs3JQ3ehxBcooQS52taVxR637S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransparentUpgradeableProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ProxyDeniedAdminAccess",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself. 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating the proxy admin cannot fallback to the target implementation. These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract. IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot is generally fine if the implementation is trusted. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"ProxyDeniedAdminAccess()": [
								{
									"details": "The proxy caller is the current admin, and can't fallback to the proxy target."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4239:6470  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore(0x40, 0xa0)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5082:5378  constructor(address _logic, address initialOwner, bytes memory _data) payable ERC1967Proxy(_logic, _data) {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5173:5179  _logic */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5181:5186  _data */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5173:5179  _logic */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5181:5186  _data */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1184  ERC1967Utils.upgradeToAndCall */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1155:1207  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  jump\t// in\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1081:1214  constructor(address implementation, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5230:5242  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5215:5243  new ProxyAdmin(initialOwner) */\n  mload(0x40)\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1578:1610   */\n  swap1\n  swap2\n  and\n    /* \"#utility.yul\":1560:1611   */\n  dup2\n  mstore\n    /* \"#utility.yul\":1548:1550   */\n  0x20\n    /* \"#utility.yul\":1533:1551   */\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5215:5243  new ProxyAdmin(initialOwner) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_13\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_13:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5198:5244  _admin = address(new ProxyAdmin(initialOwner)) */\n  and\n  0x80\n  mstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5332:5371  ERC1967Utils.changeAdmin(_proxyAdmin()) */\n  tag_14\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5357:5370  _proxyAdmin() */\n  tag_15\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5525:5531  _admin */\n  mload(0x80)\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5445:5538  function _proxyAdmin() internal view virtual returns (address) {... */\n  jump\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5357:5370  _proxyAdmin() */\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5332:5356  ERC1967Utils.changeAdmin */\n  tag_17\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5332:5371  ERC1967Utils.changeAdmin(_proxyAdmin()) */\n  jump\t// in\ntag_14:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5082:5378  constructor(address _logic, address initialOwner, bytes memory _data) payable ERC1967Proxy(_logic, _data) {... */\n  pop\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4239:6470  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  jump(tag_71)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2274:2618  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2365:2402  _setImplementation(newImplementation) */\n  tag_20\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2384:2401  newImplementation */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2365:2383  _setImplementation */\n  tag_21\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2365:2402  _setImplementation(newImplementation) */\n  jump\t// in\ntag_20:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2417:2453  IERC1967.Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2468:2479  data.length */\n  dup1\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2468:2483  data.length > 0 */\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2464:2612  if (data.length > 0) {... */\n  tag_22\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2499:2552  Address.functionDelegateCall(newImplementation, data) */\n  tag_23\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2528:2545  newImplementation */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2547:2551  data */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2499:2527  Address.functionDelegateCall */\n  tag_24\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2499:2552  Address.functionDelegateCall(newImplementation, data) */\n  jump\t// in\ntag_23:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2274:2618  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2464:2612  if (data.length > 0) {... */\ntag_22:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2583:2601  _checkNonPayable() */\n  tag_26\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2583:2599  _checkNonPayable */\n  tag_27\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2583:2601  _checkNonPayable() */\n  jump\t// in\ntag_26:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2274:2618  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3837:3979  function changeAdmin(address newAdmin) internal {... */\ntag_17:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3900:3943  IERC1967.AdminChanged(getAdmin(), newAdmin) */\n  0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3922:3932  getAdmin() */\n  tag_30\n  0x00\n  dup1\n  mload\n  0x20\n  data_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3366:3410  StorageSlot.getAddressSlot(ADMIN_SLOT).value */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3297:3417  function getAdmin() internal view returns (address) {... */\n  jump\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3922:3932  getAdmin() */\ntag_30:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3900:3943  IERC1967.AdminChanged(getAdmin(), newAdmin) */\n  0x40\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1852:1867   */\n  swap3\n  dup4\n  and\n    /* \"#utility.yul\":1834:1868   */\n  dup2\n  mstore\n    /* \"#utility.yul\":1904:1919   */\n  swap2\n  dup5\n  and\n    /* \"#utility.yul\":1899:1901   */\n  0x20\n    /* \"#utility.yul\":1884:1902   */\n  dup4\n  add\n    /* \"#utility.yul\":1877:1920   */\n  mstore\n    /* \"#utility.yul\":1769:1787   */\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3900:3943  IERC1967.AdminChanged(getAdmin(), newAdmin) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3953:3972  _setAdmin(newAdmin) */\n  tag_34\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3963:3971  newAdmin */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3953:3962  _setAdmin */\n  tag_35\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3953:3972  _setAdmin(newAdmin) */\n  jump\t// in\ntag_34:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3837:3979  function changeAdmin(address newAdmin) internal {... */\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1681:1962  function _setImplementation(address newImplementation) private {... */\ntag_21:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1758:1775  newImplementation */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1758:1787  newImplementation.code.length */\n  and\n  extcodesize\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1791:1792  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1758:1792  newImplementation.code.length == 0 */\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1754:1873  if (newImplementation.code.length == 0) {... */\n  tag_37\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1815:1862  ERC1967InvalidImplementation(newImplementation) */\n  mload(0x40)\n  shl(0xe0, 0x4c9c8ce3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1578:1610   */\n  dup3\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1815:1862  ERC1967InvalidImplementation(newImplementation) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1560:1611   */\n  mstore\n    /* \"#utility.yul\":1533:1551   */\n  0x24\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1815:1862  ERC1967InvalidImplementation(newImplementation) */\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1754:1873  if (newImplementation.code.length == 0) {... */\ntag_37:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1938:1955  newImplementation */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":821:887  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1882:1929  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\ntag_39:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1882:1955  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1681:1962  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_24:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":3983:3995  bytes memory */\n  0x60\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4008:4020  bool success */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4049:4055  target */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4069:4073  data */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_46\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_45)\ntag_46:\n  0x60\n  swap2\n  pop\ntag_45:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  tag_47\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4118:4124  target */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n  tag_48\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n  jump\t// in\ntag_47:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n  swap6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6123:6245  function _checkNonPayable() private {... */\ntag_27:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6173:6182  msg.value */\n  callvalue\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6173:6186  msg.value > 0 */\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6169:6239  if (msg.value > 0) {... */\n  tag_50\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6209:6228  ERC1967NonPayable() */\n  mload(0x40)\n  shl(0xe0, 0xb398979f)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6169:6239  if (msg.value > 0) {... */\ntag_50:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6123:6245  function _checkNonPayable() private {... */\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3500:3717  function _setAdmin(address newAdmin) private {... */\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3559:3581  newAdmin == address(0) */\n  dup2\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3555:3646  if (newAdmin == address(0)) {... */\n  tag_54\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3604:3635  ERC1967InvalidAdmin(address(0)) */\n  mload(0x40)\n  shl(0xe1, 0x3173bdd1)\n  dup2\n  mstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3632:3633  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3604:3635  ERC1967InvalidAdmin(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1560:1611   */\n  mstore\n    /* \"#utility.yul\":1533:1551   */\n  0x24\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3604:3635  ERC1967InvalidAdmin(address(0)) */\n  tag_38\n    /* \"#utility.yul\":1414:1617   */\n  jump\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3555:3646  if (newAdmin == address(0)) {... */\ntag_54:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3702:3710  newAdmin */\n  dup1\n  0x00\n  dup1\n  mload\n  0x20\n  data_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":3655:3693  StorageSlot.getAddressSlot(ADMIN_SLOT) */\n  tag_39\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":2514:2704  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\ntag_48:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4565:4577  bytes memory */\n  0x60\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4594:4601  success */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n  tag_59\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n  tag_60\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4625:4635  returndata */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4617:4624  _revert */\n  tag_61\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n  jump\t// in\ntag_60:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n  jump(tag_62)\ntag_59:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4858  returndata.length */\n  dup2\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  iszero\n  tag_63\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4867:4885  target.code.length */\n  dup5\n  and\n  extcodesize\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\ntag_63:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n  iszero\n  tag_64\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  mload(0x40)\n  shl(0xe0, 0x9996b315)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1578:1610   */\n  dup6\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1560:1611   */\n  mstore\n    /* \"#utility.yul\":1533:1551   */\n  0x24\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n  tag_38\n    /* \"#utility.yul\":1414:1617   */\n  jump\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_64:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4976:4986  returndata */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\ntag_62:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5543:6061  function _revert(bytes memory returndata) private pure {... */\ntag_61:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5674:5691  returndata.length */\n  dup1\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5670:6055  if (returndata.length > 0) {... */\n  tag_67\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5902:5912  returndata */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5896:5913  mload(returndata) */\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5958:5973  returndata_size */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5945:5955  returndata */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5941:5943  32 */\n  0x20\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5937:5956  add(32, returndata) */\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5930:5974  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5670:6055  if (returndata.length > 0) {... */\ntag_67:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":6025:6044  Errors.FailedCall() */\n  mload(0x40)\n  shl(0xe0, 0xd6bda275)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4239:6470  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\ntag_10:\n  dataSize(sub_1)\n  dup1\n  dataOffset(sub_1)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_69:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_73:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_70:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:1409   */\ntag_2:\n    /* \"#utility.yul\":425:431   */\n  0x00\n    /* \"#utility.yul\":433:439   */\n  dup1\n    /* \"#utility.yul\":441:447   */\n  0x00\n    /* \"#utility.yul\":494:496   */\n  0x60\n    /* \"#utility.yul\":482:491   */\n  dup5\n    /* \"#utility.yul\":473:480   */\n  dup7\n    /* \"#utility.yul\":469:492   */\n  sub\n    /* \"#utility.yul\":465:497   */\n  slt\n    /* \"#utility.yul\":462:514   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":510:511   */\n  0x00\n    /* \"#utility.yul\":507:508   */\n  dup1\n    /* \"#utility.yul\":500:512   */\n  revert\n    /* \"#utility.yul\":462:514   */\ntag_76:\n    /* \"#utility.yul\":533:573   */\n  tag_77\n    /* \"#utility.yul\":563:572   */\n  dup5\n    /* \"#utility.yul\":533:573   */\n  tag_69\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":523:573   */\n  swap3\n  pop\n    /* \"#utility.yul\":592:641   */\n  tag_78\n    /* \"#utility.yul\":637:639   */\n  0x20\n    /* \"#utility.yul\":626:635   */\n  dup6\n    /* \"#utility.yul\":622:640   */\n  add\n    /* \"#utility.yul\":592:641   */\n  tag_69\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":685:687   */\n  0x40\n    /* \"#utility.yul\":670:688   */\n  dup6\n  add\n    /* \"#utility.yul\":664:689   */\n  mload\n    /* \"#utility.yul\":582:641   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":738:752   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":735:769   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":765:766   */\n  0x00\n    /* \"#utility.yul\":762:763   */\n  dup1\n    /* \"#utility.yul\":755:767   */\n  revert\n    /* \"#utility.yul\":735:769   */\ntag_79:\n    /* \"#utility.yul\":803:809   */\n  dup2\n    /* \"#utility.yul\":792:801   */\n  dup7\n    /* \"#utility.yul\":788:810   */\n  add\n    /* \"#utility.yul\":778:810   */\n  swap2\n  pop\n    /* \"#utility.yul\":848:855   */\n  dup7\n    /* \"#utility.yul\":841:845   */\n  0x1f\n    /* \"#utility.yul\":837:839   */\n  dup4\n    /* \"#utility.yul\":833:846   */\n  add\n    /* \"#utility.yul\":829:856   */\n  slt\n    /* \"#utility.yul\":819:874   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":870:871   */\n  0x00\n    /* \"#utility.yul\":867:868   */\n  dup1\n    /* \"#utility.yul\":860:872   */\n  revert\n    /* \"#utility.yul\":819:874   */\ntag_80:\n    /* \"#utility.yul\":899:901   */\n  dup2\n    /* \"#utility.yul\":893:902   */\n  mload\n    /* \"#utility.yul\":921:923   */\n  dup2\n    /* \"#utility.yul\":917:919   */\n  dup2\n    /* \"#utility.yul\":914:924   */\n  gt\n    /* \"#utility.yul\":911:947   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":927:945   */\n  tag_82\n  tag_70\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1002:1004   */\n  0x40\n    /* \"#utility.yul\":996:1005   */\n  mload\n    /* \"#utility.yul\":970:972   */\n  0x1f\n    /* \"#utility.yul\":1056:1069   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1052:1074   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1076:1078   */\n  0x3f\n    /* \"#utility.yul\":1048:1079   */\n  add\n    /* \"#utility.yul\":1044:1084   */\n  and\n    /* \"#utility.yul\":1032:1085   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1100:1118   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1120:1142   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1097:1143   */\n  or\n    /* \"#utility.yul\":1094:1166   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":1146:1164   */\n  tag_84\n  tag_70\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1186:1196   */\n  dup2\n    /* \"#utility.yul\":1182:1184   */\n  0x40\n    /* \"#utility.yul\":1175:1197   */\n  mstore\n    /* \"#utility.yul\":1221:1223   */\n  dup3\n    /* \"#utility.yul\":1213:1219   */\n  dup2\n    /* \"#utility.yul\":1206:1224   */\n  mstore\n    /* \"#utility.yul\":1261:1268   */\n  dup10\n    /* \"#utility.yul\":1256:1258   */\n  0x20\n    /* \"#utility.yul\":1251:1253   */\n  dup5\n    /* \"#utility.yul\":1247:1249   */\n  dup8\n    /* \"#utility.yul\":1243:1254   */\n  add\n    /* \"#utility.yul\":1239:1259   */\n  add\n    /* \"#utility.yul\":1236:1269   */\n  gt\n    /* \"#utility.yul\":1233:1286   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":1282:1283   */\n  0x00\n    /* \"#utility.yul\":1279:1280   */\n  dup1\n    /* \"#utility.yul\":1272:1284   */\n  revert\n    /* \"#utility.yul\":1233:1286   */\ntag_85:\n    /* \"#utility.yul\":1331:1333   */\n  dup3\n    /* \"#utility.yul\":1326:1328   */\n  0x20\n    /* \"#utility.yul\":1322:1324   */\n  dup7\n    /* \"#utility.yul\":1318:1329   */\n  add\n    /* \"#utility.yul\":1313:1315   */\n  0x20\n    /* \"#utility.yul\":1305:1311   */\n  dup4\n    /* \"#utility.yul\":1301:1316   */\n  add\n    /* \"#utility.yul\":1295:1334   */\n  mcopy\n    /* \"#utility.yul\":1376:1377   */\n  0x00\n    /* \"#utility.yul\":1371:1373   */\n  0x20\n    /* \"#utility.yul\":1366:1368   */\n  dup5\n    /* \"#utility.yul\":1358:1364   */\n  dup4\n    /* \"#utility.yul\":1354:1369   */\n  add\n    /* \"#utility.yul\":1350:1374   */\n  add\n    /* \"#utility.yul\":1343:1378   */\n  mstore\n    /* \"#utility.yul\":1397:1403   */\n  dup1\n    /* \"#utility.yul\":1387:1403   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":328:1409   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1931:2232   */\ntag_43:\n    /* \"#utility.yul\":2060:2063   */\n  0x00\n    /* \"#utility.yul\":2098:2104   */\n  dup3\n    /* \"#utility.yul\":2092:2105   */\n  mload\n    /* \"#utility.yul\":2144:2150   */\n  dup1\n    /* \"#utility.yul\":2137:2141   */\n  0x20\n    /* \"#utility.yul\":2129:2135   */\n  dup6\n    /* \"#utility.yul\":2125:2142   */\n  add\n    /* \"#utility.yul\":2120:2123   */\n  dup5\n    /* \"#utility.yul\":2114:2151   */\n  mcopy\n    /* \"#utility.yul\":2206:2207   */\n  0x00\n    /* \"#utility.yul\":2170:2186   */\n  swap3\n  add\n    /* \"#utility.yul\":2195:2208   */\n  swap2\n  dup3\n  mstore\n  pop\n    /* \"#utility.yul\":2170:2186   */\n  swap2\n    /* \"#utility.yul\":1931:2232   */\n  swap1\n  pop\n  jump\t// out\ntag_71:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4239:6470  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc7087a93770541a54b276c354f6d56c80647702e0edc6c1d5ee9aeacf01dfad8\")\n  return(0x00, dataSize(sub_0))\nstop\ndata_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481 b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4239:6470  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      tag_5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n      tag_6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":4239:6470  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5680:6049  function _fallback() internal virtual override {... */\n    tag_6:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5525:5531  _admin */\n      immutable(\"0xc7087a93770541a54b276c354f6d56c80647702e0edc6c1d5ee9aeacf01dfad8\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5741:5768  msg.sender == _proxyAdmin() */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5741:5751  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5741:5768  msg.sender == _proxyAdmin() */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5737:6043  if (msg.sender == _proxyAdmin()) {... */\n      tag_10\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5788:5795  msg.sig */\n      calldataload(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5788:5853  msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5788:5795  msg.sig */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5799:5853  ITransparentUpgradeableProxy.upgradeToAndCall.selector */\n      0x4f1ef28600000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5788:5853  msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5784:5985  if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {... */\n      tag_11\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5880:5904  ProxyDeniedAdminAccess() */\n      mload(0x40)\n      0xd2b576ec00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5784:5985  if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {... */\n    tag_11:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5943:5970  _dispatchUpgradeToAndCall() */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5943:5968  _dispatchUpgradeToAndCall */\n      tag_14\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5943:5970  _dispatchUpgradeToAndCall() */\n      jump\t// in\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5680:6049  function _fallback() internal virtual override {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":5737:6043  if (msg.sender == _proxyAdmin()) {... */\n    tag_10:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6015:6032  super._fallback() */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6015:6030  super._fallback */\n      tag_17\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6015:6032  super._fallback() */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6251:6468  function _dispatchUpgradeToAndCall() private {... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6307:6332  address newImplementation */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6366:6378  msg.data[4:] */\n      tag_20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6366:6374  msg.data */\n      calldatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6375:6376  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6366:6374  msg.data */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6307:6332  address newImplementation */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6366:6378  msg.data[4:] */\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6355:6397  abi.decode(msg.data[4:], (address, bytes)) */\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6306:6397  (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6407:6461  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6437:6454  newImplementation */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6456:6460  data */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6407:6436  ERC1967Utils.upgradeToAndCall */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6407:6461  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6296:6468  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6251:6468  function _dispatchUpgradeToAndCall() private {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      tag_28\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n      tag_29\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      jump\t// in\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n      tag_30\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2274:2618  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2365:2402  _setImplementation(newImplementation) */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2384:2401  newImplementation */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2365:2383  _setImplementation */\n      tag_33\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2365:2402  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2417:2453  IERC1967.Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2468:2479  data.length */\n      dup1\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2468:2483  data.length > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2464:2612  if (data.length > 0) {... */\n      tag_34\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2499:2552  Address.functionDelegateCall(newImplementation, data) */\n      tag_35\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2528:2545  newImplementation */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2547:2551  data */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2499:2527  Address.functionDelegateCall */\n      tag_36\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2499:2552  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_35:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6296:6468  {... */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":6251:6468  function _dispatchUpgradeToAndCall() private {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2464:2612  if (data.length > 0) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2583:2601  _checkNonPayable() */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2583:2599  _checkNonPayable */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":2583:2601  _checkNonPayable() */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1650:1657  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n      tag_41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":821:887  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1529:1582  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1451:1589  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1676:1708  ERC1967Utils.getImplementation() */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1669:1708  return ERC1967Utils.getImplementation() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1583:1715  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n      calldatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1284:1285  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1281:1282  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1501:1502  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1498:1499  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n      calldatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1479:1480  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n      gas\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1574:1575  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1571:1572  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1615:1621  result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n      dup1\n      iszero\n      tag_45\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1794:1795  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n      returndatasize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1714:1715  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1681:1962  function _setImplementation(address newImplementation) private {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1758:1775  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1758:1787  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1791:1792  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1758:1792  newImplementation.code.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1754:1873  if (newImplementation.code.length == 0) {... */\n      tag_47\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1815:1862  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1834:1889   */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1815:1862  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1816:1890   */\n      mstore\n        /* \"#utility.yul\":1789:1807   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1815:1862  ERC1967InvalidImplementation(newImplementation) */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1754:1873  if (newImplementation.code.length == 0) {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":821:887  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1882:1955  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":1681:1962  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":3983:3995  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4008:4020  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4049:4055  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4069:4073  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_57\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_56)\n    tag_57:\n      0x60\n      swap2\n      pop\n    tag_56:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_58\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4118:4124  target */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4126:4133  success */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4135:4145  returndata */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6123:6245  function _checkNonPayable() private {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6173:6182  msg.value */\n      callvalue\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6173:6186  msg.value > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6169:6239  if (msg.value > 0) {... */\n      tag_13\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":6209:6228  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_66\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_69)\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4858  returndata.length */\n      dup2\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_70\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1834:1889   */\n      dup6\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1816:1890   */\n      mstore\n        /* \"#utility.yul\":1789:1807   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      tag_48\n        /* \"#utility.yul\":1670:1896   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_71:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4976:4986  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5543:6061  function _revert(bytes memory returndata) private pure {... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      dup1\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5670:6055  if (returndata.length > 0) {... */\n      tag_74\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5902:5912  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5896:5913  mload(returndata) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5958:5973  returndata_size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5945:5955  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5941:5943  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5937:5956  add(32, returndata) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5930:5974  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":5670:6055  if (returndata.length > 0) {... */\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":6025:6044  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:345   */\n    tag_21:\n        /* \"#utility.yul\":119:128   */\n      0x00\n        /* \"#utility.yul\":130:139   */\n      dup1\n        /* \"#utility.yul\":172:180   */\n      dup6\n        /* \"#utility.yul\":160:170   */\n      dup6\n        /* \"#utility.yul\":157:181   */\n      gt\n        /* \"#utility.yul\":154:198   */\n      iszero\n      tag_79\n      jumpi\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":191:192   */\n      dup1\n        /* \"#utility.yul\":184:196   */\n      revert\n        /* \"#utility.yul\":154:198   */\n    tag_79:\n        /* \"#utility.yul\":223:229   */\n      dup4\n        /* \"#utility.yul\":213:221   */\n      dup7\n        /* \"#utility.yul\":210:230   */\n      gt\n        /* \"#utility.yul\":207:247   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":243:244   */\n      0x00\n        /* \"#utility.yul\":240:241   */\n      dup1\n        /* \"#utility.yul\":233:245   */\n      revert\n        /* \"#utility.yul\":207:247   */\n    tag_80:\n      pop\n      pop\n        /* \"#utility.yul\":269:292   */\n      dup3\n      add\n      swap4\n        /* \"#utility.yul\":314:339   */\n      swap2\n      swap1\n      swap3\n      sub\n      swap2\n      pop\n        /* \"#utility.yul\":14:345   */\n      jump\t// out\n        /* \"#utility.yul\":350:534   */\n    tag_76:\n        /* \"#utility.yul\":402:479   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":399:400   */\n      0x00\n        /* \"#utility.yul\":392:480   */\n      mstore\n        /* \"#utility.yul\":499:503   */\n      0x41\n        /* \"#utility.yul\":496:497   */\n      0x04\n        /* \"#utility.yul\":489:504   */\n      mstore\n        /* \"#utility.yul\":523:527   */\n      0x24\n        /* \"#utility.yul\":520:521   */\n      0x00\n        /* \"#utility.yul\":513:528   */\n      revert\n        /* \"#utility.yul\":539:1665   */\n    tag_23:\n        /* \"#utility.yul\":624:630   */\n      0x00\n        /* \"#utility.yul\":632:638   */\n      dup1\n        /* \"#utility.yul\":685:687   */\n      0x40\n        /* \"#utility.yul\":673:682   */\n      dup4\n        /* \"#utility.yul\":664:671   */\n      dup6\n        /* \"#utility.yul\":660:683   */\n      sub\n        /* \"#utility.yul\":656:688   */\n      slt\n        /* \"#utility.yul\":653:705   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":701:702   */\n      0x00\n        /* \"#utility.yul\":698:699   */\n      dup1\n        /* \"#utility.yul\":691:703   */\n      revert\n        /* \"#utility.yul\":653:705   */\n    tag_83:\n        /* \"#utility.yul\":740:749   */\n      dup3\n        /* \"#utility.yul\":727:750   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":783:788   */\n      dup2\n        /* \"#utility.yul\":779:833   */\n      and\n        /* \"#utility.yul\":772:777   */\n      dup2\n        /* \"#utility.yul\":769:834   */\n      eq\n        /* \"#utility.yul\":759:852   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":848:849   */\n      0x00\n        /* \"#utility.yul\":845:846   */\n      dup1\n        /* \"#utility.yul\":838:850   */\n      revert\n        /* \"#utility.yul\":759:852   */\n    tag_84:\n        /* \"#utility.yul\":871:876   */\n      swap2\n      pop\n        /* \"#utility.yul\":927:929   */\n      0x20\n        /* \"#utility.yul\":912:930   */\n      dup4\n      add\n        /* \"#utility.yul\":899:931   */\n      calldataload\n        /* \"#utility.yul\":950:968   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":980:994   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":977:1011   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":1007:1008   */\n      0x00\n        /* \"#utility.yul\":1004:1005   */\n      dup1\n        /* \"#utility.yul\":997:1009   */\n      revert\n        /* \"#utility.yul\":977:1011   */\n    tag_85:\n        /* \"#utility.yul\":1045:1051   */\n      dup2\n        /* \"#utility.yul\":1034:1043   */\n      dup6\n        /* \"#utility.yul\":1030:1052   */\n      add\n        /* \"#utility.yul\":1020:1052   */\n      swap2\n      pop\n        /* \"#utility.yul\":1090:1097   */\n      dup6\n        /* \"#utility.yul\":1083:1087   */\n      0x1f\n        /* \"#utility.yul\":1079:1081   */\n      dup4\n        /* \"#utility.yul\":1075:1088   */\n      add\n        /* \"#utility.yul\":1071:1098   */\n      slt\n        /* \"#utility.yul\":1061:1116   */\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1109:1110   */\n      dup1\n        /* \"#utility.yul\":1102:1114   */\n      revert\n        /* \"#utility.yul\":1061:1116   */\n    tag_86:\n        /* \"#utility.yul\":1148:1150   */\n      dup2\n        /* \"#utility.yul\":1135:1151   */\n      calldataload\n        /* \"#utility.yul\":1170:1172   */\n      dup2\n        /* \"#utility.yul\":1166:1168   */\n      dup2\n        /* \"#utility.yul\":1163:1173   */\n      gt\n        /* \"#utility.yul\":1160:1196   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":1176:1194   */\n      tag_88\n      tag_76\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1251:1253   */\n      0x40\n        /* \"#utility.yul\":1245:1254   */\n      mload\n        /* \"#utility.yul\":1219:1221   */\n      0x1f\n        /* \"#utility.yul\":1305:1318   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1301:1323   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1325:1327   */\n      0x3f\n        /* \"#utility.yul\":1297:1328   */\n      add\n        /* \"#utility.yul\":1293:1333   */\n      and\n        /* \"#utility.yul\":1281:1334   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1349:1367   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1369:1391   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1346:1392   */\n      or\n        /* \"#utility.yul\":1343:1415   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":1395:1413   */\n      tag_90\n      tag_76\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1435:1445   */\n      dup2\n        /* \"#utility.yul\":1431:1433   */\n      0x40\n        /* \"#utility.yul\":1424:1446   */\n      mstore\n        /* \"#utility.yul\":1470:1472   */\n      dup3\n        /* \"#utility.yul\":1462:1468   */\n      dup2\n        /* \"#utility.yul\":1455:1473   */\n      mstore\n        /* \"#utility.yul\":1510:1517   */\n      dup9\n        /* \"#utility.yul\":1505:1507   */\n      0x20\n        /* \"#utility.yul\":1500:1502   */\n      dup5\n        /* \"#utility.yul\":1496:1498   */\n      dup8\n        /* \"#utility.yul\":1492:1503   */\n      add\n        /* \"#utility.yul\":1488:1508   */\n      add\n        /* \"#utility.yul\":1485:1518   */\n      gt\n        /* \"#utility.yul\":1482:1535   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":1531:1532   */\n      0x00\n        /* \"#utility.yul\":1528:1529   */\n      dup1\n        /* \"#utility.yul\":1521:1533   */\n      revert\n        /* \"#utility.yul\":1482:1535   */\n    tag_91:\n        /* \"#utility.yul\":1587:1589   */\n      dup3\n        /* \"#utility.yul\":1582:1584   */\n      0x20\n        /* \"#utility.yul\":1578:1580   */\n      dup7\n        /* \"#utility.yul\":1574:1585   */\n      add\n        /* \"#utility.yul\":1569:1571   */\n      0x20\n        /* \"#utility.yul\":1561:1567   */\n      dup4\n        /* \"#utility.yul\":1557:1572   */\n      add\n        /* \"#utility.yul\":1544:1590   */\n      calldatacopy\n        /* \"#utility.yul\":1632:1633   */\n      0x00\n        /* \"#utility.yul\":1627:1629   */\n      0x20\n        /* \"#utility.yul\":1622:1624   */\n      dup5\n        /* \"#utility.yul\":1614:1620   */\n      dup4\n        /* \"#utility.yul\":1610:1625   */\n      add\n        /* \"#utility.yul\":1606:1630   */\n      add\n        /* \"#utility.yul\":1599:1634   */\n      mstore\n        /* \"#utility.yul\":1653:1659   */\n      dup1\n        /* \"#utility.yul\":1643:1659   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":539:1665   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1901:2202   */\n    tag_54:\n        /* \"#utility.yul\":2030:2033   */\n      0x00\n        /* \"#utility.yul\":2068:2074   */\n      dup3\n        /* \"#utility.yul\":2062:2075   */\n      mload\n        /* \"#utility.yul\":2114:2120   */\n      dup1\n        /* \"#utility.yul\":2107:2111   */\n      0x20\n        /* \"#utility.yul\":2099:2105   */\n      dup6\n        /* \"#utility.yul\":2095:2112   */\n      add\n        /* \"#utility.yul\":2090:2093   */\n      dup5\n        /* \"#utility.yul\":2084:2121   */\n      mcopy\n        /* \"#utility.yul\":2176:2177   */\n      0x00\n        /* \"#utility.yul\":2140:2156   */\n      swap3\n      add\n        /* \"#utility.yul\":2165:2178   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":2140:2156   */\n      swap2\n        /* \"#utility.yul\":1901:2202   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122008e833b8a99f99db0b94d2b0cd95bc37bbcbeeed1cc58f47dce8130cc9d93ce164736f6c63430008190033\n}\n\nsub_1: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      mstore(0x40, 0x80)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1329:1387  constructor(address initialOwner) Ownable(initialOwner) {} */\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      mload(0x40)\n      sub(codesize, bytecodeSize)\n      dup1\n      bytecodeSize\n      dup4\n      codecopy\n      dup2\n      add\n      0x40\n      dup2\n      swap1\n      mstore\n      tag_2\n      swap2\n      tag_3\n      jump\t// in\n    tag_2:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1371:1383  initialOwner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n      tag_7\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1350:1351  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":455:506   */\n      mstore\n        /* \"#utility.yul\":428:446   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n    tag_7:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n      tag_10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n      tag_11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_10:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1329:1387  constructor(address initialOwner) Ownable(initialOwner) {} */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      jump(tag_15)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_11:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:304   */\n    tag_3:\n        /* \"#utility.yul\":84:90   */\n      0x00\n        /* \"#utility.yul\":137:139   */\n      0x20\n        /* \"#utility.yul\":125:134   */\n      dup3\n        /* \"#utility.yul\":116:123   */\n      dup5\n        /* \"#utility.yul\":112:135   */\n      sub\n        /* \"#utility.yul\":108:140   */\n      slt\n        /* \"#utility.yul\":105:157   */\n      iszero\n      tag_17\n      jumpi\n        /* \"#utility.yul\":153:154   */\n      0x00\n        /* \"#utility.yul\":150:151   */\n      dup1\n        /* \"#utility.yul\":143:155   */\n      revert\n        /* \"#utility.yul\":105:157   */\n    tag_17:\n        /* \"#utility.yul\":179:195   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":224:255   */\n      dup2\n      and\n        /* \"#utility.yul\":214:256   */\n      dup2\n      eq\n        /* \"#utility.yul\":204:274   */\n      tag_18\n      jumpi\n        /* \"#utility.yul\":270:271   */\n      0x00\n        /* \"#utility.yul\":267:268   */\n      dup1\n        /* \"#utility.yul\":260:272   */\n      revert\n        /* \"#utility.yul\":204:274   */\n    tag_18:\n        /* \"#utility.yul\":293:298   */\n      swap4\n        /* \"#utility.yul\":14:304   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":309:512   */\n    tag_15:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      0x00\n      codecopy\n      0x00\n      return\n    stop\n\n    sub_0: assembly {\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":502:1964  contract ProxyAdmin is Ownable {... */\n          mstore(0x40, 0x80)\n          jumpi(tag_1, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x9623609d\n          gt\n          tag_7\n          jumpi\n          dup1\n          0x9623609d\n          eq\n          tag_4\n          jumpi\n          dup1\n          0xad3cb1cc\n          eq\n          tag_5\n          jumpi\n          dup1\n          0xf2fde38b\n          eq\n          tag_6\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_7:\n          dup1\n          0x715018a6\n          eq\n          tag_2\n          jumpi\n          dup1\n          0x8da5cb5b\n          eq\n          tag_3\n          jumpi\n        tag_1:\n          0x00\n          dup1\n          revert\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n        tag_2:\n          callvalue\n          dup1\n          iszero\n          tag_8\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_8:\n          pop\n          tag_9\n          tag_10\n          jump\t// in\n        tag_9:\n          stop\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n        tag_3:\n          callvalue\n          dup1\n          iszero\n          tag_11\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_11:\n          pop\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n          0x00\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n          sload\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n          mload(0x40)\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n          swap1\n          swap2\n          and\n            /* \"#utility.yul\":160:234   */\n          dup2\n          mstore\n            /* \"#utility.yul\":148:150   */\n          0x20\n            /* \"#utility.yul\":133:151   */\n          add\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n        tag_14:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1717:1962  function upgradeAndCall(... */\n        tag_4:\n          tag_9\n          tag_17\n          calldatasize\n          0x04\n          tag_18\n          jump\t// in\n        tag_17:\n          tag_19\n          jump\t// in\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1187:1245  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n        tag_5:\n          callvalue\n          dup1\n          iszero\n          tag_20\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_20:\n          pop\n          tag_21\n          mload(0x40)\n          dup1\n          0x40\n          add\n          0x40\n          mstore\n          dup1\n          0x05\n          dup2\n          mstore\n          0x20\n          add\n          0x352e302e30000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          pop\n          dup2\n          jump\n        tag_21:\n          mload(0x40)\n          tag_14\n          swap2\n          swap1\n          tag_24\n          jump\t// in\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n        tag_6:\n          callvalue\n          dup1\n          iszero\n          tag_25\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_25:\n          pop\n          tag_9\n          tag_27\n          calldatasize\n          0x04\n          tag_28\n          jump\t// in\n        tag_27:\n          tag_29\n          jump\t// in\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n        tag_10:\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_31\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_32\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_31:\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n          tag_34\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2384:2385  0 */\n          0x00\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n          tag_35\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n          jump\t// in\n        tag_34:\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n          jump\t// out\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1717:1962  function upgradeAndCall(... */\n        tag_19:\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_38\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_32\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_38:\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          mload(0x40)\n          0x4f1ef28600000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1915  proxy.upgradeToAndCall */\n          dup5\n          and\n          swap1\n          0x4f1ef286\n          swap1\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1923:1932  msg.value */\n          callvalue\n          swap1\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          tag_40\n          swap1\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1934:1948  implementation */\n          dup7\n          swap1\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1950:1954  data */\n          dup7\n          swap1\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1893:1955  proxy.upgradeToAndCall{value: msg.value}(implementation, data) */\n          0x04\n          add\n          tag_41\n          jump\t// in\n        tag_40:\n          0x00\n          mload(0x40)\n          dup1\n          dup4\n          sub\n          dup2\n          dup6\n          dup9\n          dup1\n          extcodesize\n          iszero\n          dup1\n          iszero\n          tag_42\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_42:\n          pop\n          gas\n          call\n          iszero\n          dup1\n          iszero\n          tag_44\n          jumpi\n          returndatasize\n          0x00\n          dup1\n          returndatacopy\n          revert(0x00, returndatasize)\n        tag_44:\n          pop\n          pop\n          pop\n          pop\n          pop\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":1717:1962  function upgradeAndCall(... */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n        tag_29:\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_46\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_32\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_46:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n          dup2\n          and\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n          tag_48\n          jumpi\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          mload(0x40)\n          0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2700:2701  0 */\n          0x00\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":160:234   */\n          mstore\n            /* \"#utility.yul\":133:151   */\n          0x24\n          add\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n        tag_49:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n        tag_48:\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n          tag_50\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n          dup2\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n          tag_35\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n          jump\t// in\n        tag_50:\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n          pop\n          jump\t// out\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n        tag_32:\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n          0x00\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n          and\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n          eq\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n          tag_34\n          jumpi\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          mload(0x40)\n          0x118cdaa700000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":160:234   */\n          mstore\n            /* \"#utility.yul\":133:151   */\n          0x24\n          add\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          tag_49\n            /* \"#utility.yul\":14:240   */\n          jump\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n        tag_35:\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n          0x00\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n          dup1\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n          dup4\n          dup2\n          and\n          0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n          dup4\n          and\n          dup2\n          or\n          dup5\n          sstore\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          mload(0x40)\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n          swap2\n          swap1\n          swap3\n          and\n          swap3\n          dup4\n          swap2\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n          swap2\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n          swap1\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n          pop\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":245:429   */\n        tag_60:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":354:359   */\n          dup2\n            /* \"#utility.yul\":350:404   */\n          and\n            /* \"#utility.yul\":343:348   */\n          dup2\n            /* \"#utility.yul\":340:405   */\n          eq\n            /* \"#utility.yul\":330:423   */\n          tag_50\n          jumpi\n            /* \"#utility.yul\":419:420   */\n          0x00\n            /* \"#utility.yul\":416:417   */\n          dup1\n            /* \"#utility.yul\":409:421   */\n          revert\n            /* \"#utility.yul\":434:618   */\n        tag_61:\n            /* \"#utility.yul\":486:563   */\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n            /* \"#utility.yul\":483:484   */\n          0x00\n            /* \"#utility.yul\":476:564   */\n          mstore\n            /* \"#utility.yul\":583:587   */\n          0x41\n            /* \"#utility.yul\":580:581   */\n          0x04\n            /* \"#utility.yul\":573:588   */\n          mstore\n            /* \"#utility.yul\":607:611   */\n          0x24\n            /* \"#utility.yul\":604:605   */\n          0x00\n            /* \"#utility.yul\":597:612   */\n          revert\n            /* \"#utility.yul\":623:1916   */\n        tag_18:\n            /* \"#utility.yul\":745:751   */\n          0x00\n            /* \"#utility.yul\":753:759   */\n          dup1\n            /* \"#utility.yul\":761:767   */\n          0x00\n            /* \"#utility.yul\":814:816   */\n          0x60\n            /* \"#utility.yul\":802:811   */\n          dup5\n            /* \"#utility.yul\":793:800   */\n          dup7\n            /* \"#utility.yul\":789:812   */\n          sub\n            /* \"#utility.yul\":785:817   */\n          slt\n            /* \"#utility.yul\":782:834   */\n          iszero\n          tag_69\n          jumpi\n            /* \"#utility.yul\":830:831   */\n          0x00\n            /* \"#utility.yul\":827:828   */\n          dup1\n            /* \"#utility.yul\":820:832   */\n          revert\n            /* \"#utility.yul\":782:834   */\n        tag_69:\n            /* \"#utility.yul\":869:878   */\n          dup4\n            /* \"#utility.yul\":856:879   */\n          calldataload\n            /* \"#utility.yul\":888:949   */\n          tag_70\n            /* \"#utility.yul\":943:948   */\n          dup2\n            /* \"#utility.yul\":888:949   */\n          tag_60\n          jump\t// in\n        tag_70:\n            /* \"#utility.yul\":968:973   */\n          swap3\n          pop\n            /* \"#utility.yul\":1025:1027   */\n          0x20\n            /* \"#utility.yul\":1010:1028   */\n          dup5\n          add\n            /* \"#utility.yul\":997:1029   */\n          calldataload\n            /* \"#utility.yul\":1038:1101   */\n          tag_71\n            /* \"#utility.yul\":997:1029   */\n          dup2\n            /* \"#utility.yul\":1038:1101   */\n          tag_60\n          jump\t// in\n        tag_71:\n            /* \"#utility.yul\":1120:1127   */\n          swap2\n          pop\n            /* \"#utility.yul\":1178:1180   */\n          0x40\n            /* \"#utility.yul\":1163:1181   */\n          dup5\n          add\n            /* \"#utility.yul\":1150:1182   */\n          calldataload\n            /* \"#utility.yul\":1201:1219   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":1231:1245   */\n          dup1\n          dup3\n          gt\n            /* \"#utility.yul\":1228:1262   */\n          iszero\n          tag_72\n          jumpi\n            /* \"#utility.yul\":1258:1259   */\n          0x00\n            /* \"#utility.yul\":1255:1256   */\n          dup1\n            /* \"#utility.yul\":1248:1260   */\n          revert\n            /* \"#utility.yul\":1228:1262   */\n        tag_72:\n            /* \"#utility.yul\":1296:1302   */\n          dup2\n            /* \"#utility.yul\":1285:1294   */\n          dup7\n            /* \"#utility.yul\":1281:1303   */\n          add\n            /* \"#utility.yul\":1271:1303   */\n          swap2\n          pop\n            /* \"#utility.yul\":1341:1348   */\n          dup7\n            /* \"#utility.yul\":1334:1338   */\n          0x1f\n            /* \"#utility.yul\":1330:1332   */\n          dup4\n            /* \"#utility.yul\":1326:1339   */\n          add\n            /* \"#utility.yul\":1322:1349   */\n          slt\n            /* \"#utility.yul\":1312:1367   */\n          tag_73\n          jumpi\n            /* \"#utility.yul\":1363:1364   */\n          0x00\n            /* \"#utility.yul\":1360:1361   */\n          dup1\n            /* \"#utility.yul\":1353:1365   */\n          revert\n            /* \"#utility.yul\":1312:1367   */\n        tag_73:\n            /* \"#utility.yul\":1399:1401   */\n          dup2\n            /* \"#utility.yul\":1386:1402   */\n          calldataload\n            /* \"#utility.yul\":1421:1423   */\n          dup2\n            /* \"#utility.yul\":1417:1419   */\n          dup2\n            /* \"#utility.yul\":1414:1424   */\n          gt\n            /* \"#utility.yul\":1411:1447   */\n          iszero\n          tag_75\n          jumpi\n            /* \"#utility.yul\":1427:1445   */\n          tag_75\n          tag_61\n          jump\t// in\n        tag_75:\n            /* \"#utility.yul\":1502:1504   */\n          0x40\n            /* \"#utility.yul\":1496:1505   */\n          mload\n            /* \"#utility.yul\":1470:1472   */\n          0x1f\n            /* \"#utility.yul\":1556:1569   */\n          dup3\n          add\n          not(0x1f)\n            /* \"#utility.yul\":1552:1574   */\n          swap1\n          dup2\n          and\n            /* \"#utility.yul\":1576:1578   */\n          0x3f\n            /* \"#utility.yul\":1548:1579   */\n          add\n            /* \"#utility.yul\":1544:1584   */\n          and\n            /* \"#utility.yul\":1532:1585   */\n          dup2\n          add\n          swap1\n            /* \"#utility.yul\":1600:1618   */\n          dup4\n          dup3\n          gt\n            /* \"#utility.yul\":1620:1642   */\n          dup2\n          dup4\n          lt\n            /* \"#utility.yul\":1597:1643   */\n          or\n            /* \"#utility.yul\":1594:1666   */\n          iszero\n          tag_77\n          jumpi\n            /* \"#utility.yul\":1646:1664   */\n          tag_77\n          tag_61\n          jump\t// in\n        tag_77:\n            /* \"#utility.yul\":1686:1696   */\n          dup2\n            /* \"#utility.yul\":1682:1684   */\n          0x40\n            /* \"#utility.yul\":1675:1697   */\n          mstore\n            /* \"#utility.yul\":1721:1723   */\n          dup3\n            /* \"#utility.yul\":1713:1719   */\n          dup2\n            /* \"#utility.yul\":1706:1724   */\n          mstore\n            /* \"#utility.yul\":1761:1768   */\n          dup10\n            /* \"#utility.yul\":1756:1758   */\n          0x20\n            /* \"#utility.yul\":1751:1753   */\n          dup5\n            /* \"#utility.yul\":1747:1749   */\n          dup8\n            /* \"#utility.yul\":1743:1754   */\n          add\n            /* \"#utility.yul\":1739:1759   */\n          add\n            /* \"#utility.yul\":1736:1769   */\n          gt\n            /* \"#utility.yul\":1733:1786   */\n          iszero\n          tag_78\n          jumpi\n            /* \"#utility.yul\":1782:1783   */\n          0x00\n            /* \"#utility.yul\":1779:1780   */\n          dup1\n            /* \"#utility.yul\":1772:1784   */\n          revert\n            /* \"#utility.yul\":1733:1786   */\n        tag_78:\n            /* \"#utility.yul\":1838:1840   */\n          dup3\n            /* \"#utility.yul\":1833:1835   */\n          0x20\n            /* \"#utility.yul\":1829:1831   */\n          dup7\n            /* \"#utility.yul\":1825:1836   */\n          add\n            /* \"#utility.yul\":1820:1822   */\n          0x20\n            /* \"#utility.yul\":1812:1818   */\n          dup4\n            /* \"#utility.yul\":1808:1823   */\n          add\n            /* \"#utility.yul\":1795:1841   */\n          calldatacopy\n            /* \"#utility.yul\":1883:1884   */\n          0x00\n            /* \"#utility.yul\":1878:1880   */\n          0x20\n            /* \"#utility.yul\":1873:1875   */\n          dup5\n            /* \"#utility.yul\":1865:1871   */\n          dup4\n            /* \"#utility.yul\":1861:1876   */\n          add\n            /* \"#utility.yul\":1857:1881   */\n          add\n            /* \"#utility.yul\":1850:1885   */\n          mstore\n            /* \"#utility.yul\":1904:1910   */\n          dup1\n            /* \"#utility.yul\":1894:1910   */\n          swap6\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":623:1916   */\n          swap3\n          pop\n          swap3\n          pop\n          swap3\n          jump\t// out\n            /* \"#utility.yul\":1921:2210   */\n        tag_62:\n            /* \"#utility.yul\":1963:1966   */\n          0x00\n            /* \"#utility.yul\":2001:2006   */\n          dup2\n            /* \"#utility.yul\":1995:2007   */\n          mload\n            /* \"#utility.yul\":2028:2034   */\n          dup1\n            /* \"#utility.yul\":2023:2026   */\n          dup5\n            /* \"#utility.yul\":2016:2035   */\n          mstore\n            /* \"#utility.yul\":2084:2090   */\n          dup1\n            /* \"#utility.yul\":2077:2081   */\n          0x20\n            /* \"#utility.yul\":2070:2075   */\n          dup5\n            /* \"#utility.yul\":2066:2082   */\n          add\n            /* \"#utility.yul\":2059:2063   */\n          0x20\n            /* \"#utility.yul\":2054:2057   */\n          dup7\n            /* \"#utility.yul\":2050:2064   */\n          add\n            /* \"#utility.yul\":2044:2091   */\n          mcopy\n            /* \"#utility.yul\":2136:2137   */\n          0x00\n            /* \"#utility.yul\":2129:2133   */\n          0x20\n            /* \"#utility.yul\":2120:2126   */\n          dup3\n            /* \"#utility.yul\":2115:2118   */\n          dup7\n            /* \"#utility.yul\":2111:2127   */\n          add\n            /* \"#utility.yul\":2107:2134   */\n          add\n            /* \"#utility.yul\":2100:2138   */\n          mstore\n            /* \"#utility.yul\":2199:2203   */\n          0x20\n            /* \"#utility.yul\":2192:2194   */\n          0x1f\n            /* \"#utility.yul\":2188:2195   */\n          not\n            /* \"#utility.yul\":2183:2185   */\n          0x1f\n            /* \"#utility.yul\":2175:2181   */\n          dup4\n            /* \"#utility.yul\":2171:2186   */\n          add\n            /* \"#utility.yul\":2167:2196   */\n          and\n            /* \"#utility.yul\":2162:2165   */\n          dup6\n            /* \"#utility.yul\":2158:2197   */\n          add\n            /* \"#utility.yul\":2154:2204   */\n          add\n            /* \"#utility.yul\":2147:2204   */\n          swap2\n          pop\n          pop\n            /* \"#utility.yul\":1921:2210   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2215:2435   */\n        tag_24:\n            /* \"#utility.yul\":2364:2366   */\n          0x20\n            /* \"#utility.yul\":2353:2362   */\n          dup2\n            /* \"#utility.yul\":2346:2367   */\n          mstore\n            /* \"#utility.yul\":2327:2331   */\n          0x00\n            /* \"#utility.yul\":2384:2429   */\n          tag_81\n            /* \"#utility.yul\":2425:2427   */\n          0x20\n            /* \"#utility.yul\":2414:2423   */\n          dup4\n            /* \"#utility.yul\":2410:2428   */\n          add\n            /* \"#utility.yul\":2402:2408   */\n          dup5\n            /* \"#utility.yul\":2384:2429   */\n          tag_62\n          jump\t// in\n        tag_81:\n            /* \"#utility.yul\":2376:2429   */\n          swap4\n            /* \"#utility.yul\":2215:2435   */\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2440:2717   */\n        tag_28:\n            /* \"#utility.yul\":2499:2505   */\n          0x00\n            /* \"#utility.yul\":2552:2554   */\n          0x20\n            /* \"#utility.yul\":2540:2549   */\n          dup3\n            /* \"#utility.yul\":2531:2538   */\n          dup5\n            /* \"#utility.yul\":2527:2550   */\n          sub\n            /* \"#utility.yul\":2523:2555   */\n          slt\n            /* \"#utility.yul\":2520:2572   */\n          iszero\n          tag_83\n          jumpi\n            /* \"#utility.yul\":2568:2569   */\n          0x00\n            /* \"#utility.yul\":2565:2566   */\n          dup1\n            /* \"#utility.yul\":2558:2570   */\n          revert\n            /* \"#utility.yul\":2520:2572   */\n        tag_83:\n            /* \"#utility.yul\":2607:2616   */\n          dup2\n            /* \"#utility.yul\":2594:2617   */\n          calldataload\n            /* \"#utility.yul\":2626:2687   */\n          tag_81\n            /* \"#utility.yul\":2681:2686   */\n          dup2\n            /* \"#utility.yul\":2626:2687   */\n          tag_60\n          jump\t// in\n            /* \"#utility.yul\":2722:3060   */\n        tag_41:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":2901:2907   */\n          dup4\n            /* \"#utility.yul\":2897:2952   */\n          and\n            /* \"#utility.yul\":2886:2895   */\n          dup2\n            /* \"#utility.yul\":2879:2953   */\n          mstore\n            /* \"#utility.yul\":2989:2991   */\n          0x40\n            /* \"#utility.yul\":2984:2986   */\n          0x20\n            /* \"#utility.yul\":2973:2982   */\n          dup3\n            /* \"#utility.yul\":2969:2987   */\n          add\n            /* \"#utility.yul\":2962:2992   */\n          mstore\n            /* \"#utility.yul\":2860:2864   */\n          0x00\n            /* \"#utility.yul\":3009:3054   */\n          tag_86\n            /* \"#utility.yul\":3050:3052   */\n          0x40\n            /* \"#utility.yul\":3039:3048   */\n          dup4\n            /* \"#utility.yul\":3035:3053   */\n          add\n            /* \"#utility.yul\":3027:3033   */\n          dup5\n            /* \"#utility.yul\":3009:3054   */\n          tag_62\n          jump\t// in\n        tag_86:\n            /* \"#utility.yul\":3001:3054   */\n          swap5\n            /* \"#utility.yul\":2722:3060   */\n          swap4\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n\n        auxdata: 0xa264697066735822122077ecba69c01c31832a71b8b8e6bbb452462afc9570c5ffedbf52c409c789a31a64736f6c63430008190033\n    }\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_196": {
									"entryPoint": null,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_659": {
									"entryPoint": null,
									"id": 659,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkNonPayable_502": {
									"entryPoint": 584,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_proxyAdmin_668": {
									"entryPoint": null,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_990": {
									"entryPoint": 773,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setAdmin_366": {
									"entryPoint": 617,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_282": {
									"entryPoint": 343,
									"id": 282,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeAdmin_385": {
									"entryPoint": 234,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_908": {
									"entryPoint": 469,
									"id": 908,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1073": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAdmin_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@upgradeToAndCall_318": {
									"entryPoint": 140,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_948": {
									"entryPoint": 678,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2234:13",
										"nodeType": "YulBlock",
										"src": "0:2234:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:13",
													"nodeType": "YulBlock",
													"src": "74:117:13",
													"statements": [
														{
															"nativeSrc": "84:22:13",
															"nodeType": "YulAssignment",
															"src": "84:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:13"
																},
																"nativeSrc": "93:13:13",
																"nodeType": "YulFunctionCall",
																"src": "93:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:13",
																"nodeType": "YulBlock",
																"src": "169:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:13",
																					"nodeType": "YulLiteral",
																					"src": "178:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:13",
																					"nodeType": "YulLiteral",
																					"src": "181:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:13"
																			},
																			"nativeSrc": "171:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:13"
																		},
																		"nativeSrc": "171:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:13",
																										"nodeType": "YulLiteral",
																										"src": "154:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:13",
																										"nodeType": "YulLiteral",
																										"src": "159:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:13"
																								},
																								"nativeSrc": "150:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:13",
																								"nodeType": "YulLiteral",
																								"src": "163:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:13"
																						},
																						"nativeSrc": "146:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:13"
																				},
																				"nativeSrc": "135:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:13"
																		},
																		"nativeSrc": "125:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:13"
																},
																"nativeSrc": "118:50:13",
																"nodeType": "YulFunctionCall",
																"src": "118:50:13"
															},
															"nativeSrc": "115:70:13",
															"nodeType": "YulIf",
															"src": "115:70:13"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:13",
														"nodeType": "YulTypedName",
														"src": "53:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:13",
														"nodeType": "YulTypedName",
														"src": "64:5:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											},
											{
												"body": {
													"nativeSrc": "228:95:13",
													"nodeType": "YulBlock",
													"src": "228:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "245:1:13",
																		"nodeType": "YulLiteral",
																		"src": "245:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "252:3:13",
																				"nodeType": "YulLiteral",
																				"src": "252:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "257:10:13",
																				"nodeType": "YulLiteral",
																				"src": "257:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "248:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:13"
																		},
																		"nativeSrc": "248:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "238:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:13"
																},
																"nativeSrc": "238:31:13",
																"nodeType": "YulFunctionCall",
																"src": "238:31:13"
															},
															"nativeSrc": "238:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "238:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "285:1:13",
																		"nodeType": "YulLiteral",
																		"src": "285:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "288:4:13",
																		"nodeType": "YulLiteral",
																		"src": "288:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:13"
																},
																"nativeSrc": "278:15:13",
																"nodeType": "YulFunctionCall",
																"src": "278:15:13"
															},
															"nativeSrc": "278:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "278:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "309:1:13",
																		"nodeType": "YulLiteral",
																		"src": "309:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "312:4:13",
																		"nodeType": "YulLiteral",
																		"src": "312:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "302:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:13"
																},
																"nativeSrc": "302:15:13",
																"nodeType": "YulFunctionCall",
																"src": "302:15:13"
															},
															"nativeSrc": "302:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "302:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "196:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:13"
											},
											{
												"body": {
													"nativeSrc": "452:957:13",
													"nodeType": "YulBlock",
													"src": "452:957:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "498:16:13",
																"nodeType": "YulBlock",
																"src": "498:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "507:1:13",
																					"nodeType": "YulLiteral",
																					"src": "507:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "510:1:13",
																					"nodeType": "YulLiteral",
																					"src": "510:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "500:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "500:6:13"
																			},
																			"nativeSrc": "500:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "500:12:13"
																		},
																		"nativeSrc": "500:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "500:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "473:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "473:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "482:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "482:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "469:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:13"
																		},
																		"nativeSrc": "469:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "469:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "494:2:13",
																		"nodeType": "YulLiteral",
																		"src": "494:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "465:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "465:3:13"
																},
																"nativeSrc": "465:32:13",
																"nodeType": "YulFunctionCall",
																"src": "465:32:13"
															},
															"nativeSrc": "462:52:13",
															"nodeType": "YulIf",
															"src": "462:52:13"
														},
														{
															"nativeSrc": "523:50:13",
															"nodeType": "YulAssignment",
															"src": "523:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "563:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "533:29:13",
																	"nodeType": "YulIdentifier",
																	"src": "533:29:13"
																},
																"nativeSrc": "533:40:13",
																"nodeType": "YulFunctionCall",
																"src": "533:40:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "523:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:13"
																}
															]
														},
														{
															"nativeSrc": "582:59:13",
															"nodeType": "YulAssignment",
															"src": "582:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "626:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "626:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "637:2:13",
																				"nodeType": "YulLiteral",
																				"src": "637:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "622:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "622:3:13"
																		},
																		"nativeSrc": "622:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "622:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "592:29:13",
																	"nodeType": "YulIdentifier",
																	"src": "592:29:13"
																},
																"nativeSrc": "592:49:13",
																"nodeType": "YulFunctionCall",
																"src": "592:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "582:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "582:6:13"
																}
															]
														},
														{
															"nativeSrc": "650:39:13",
															"nodeType": "YulVariableDeclaration",
															"src": "650:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "674:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "674:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "685:2:13",
																				"nodeType": "YulLiteral",
																				"src": "685:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "670:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "670:3:13"
																		},
																		"nativeSrc": "670:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "670:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "664:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "664:5:13"
																},
																"nativeSrc": "664:25:13",
																"nodeType": "YulFunctionCall",
																"src": "664:25:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "654:6:13",
																	"nodeType": "YulTypedName",
																	"src": "654:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "698:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "698:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "716:2:13",
																				"nodeType": "YulLiteral",
																				"src": "716:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "720:1:13",
																				"nodeType": "YulLiteral",
																				"src": "720:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "712:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "712:3:13"
																		},
																		"nativeSrc": "712:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "712:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "724:1:13",
																		"nodeType": "YulLiteral",
																		"src": "724:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "708:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "708:3:13"
																},
																"nativeSrc": "708:18:13",
																"nodeType": "YulFunctionCall",
																"src": "708:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "702:2:13",
																	"nodeType": "YulTypedName",
																	"src": "702:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "753:16:13",
																"nodeType": "YulBlock",
																"src": "753:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "762:1:13",
																					"nodeType": "YulLiteral",
																					"src": "762:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "765:1:13",
																					"nodeType": "YulLiteral",
																					"src": "765:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "755:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "755:6:13"
																			},
																			"nativeSrc": "755:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "755:12:13"
																		},
																		"nativeSrc": "755:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "755:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "741:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "749:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "749:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "738:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "738:2:13"
																},
																"nativeSrc": "738:14:13",
																"nodeType": "YulFunctionCall",
																"src": "738:14:13"
															},
															"nativeSrc": "735:34:13",
															"nodeType": "YulIf",
															"src": "735:34:13"
														},
														{
															"nativeSrc": "778:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "778:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "792:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "792:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "803:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "803:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "788:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:13"
																},
																"nativeSrc": "788:22:13",
																"nodeType": "YulFunctionCall",
																"src": "788:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "782:2:13",
																	"nodeType": "YulTypedName",
																	"src": "782:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "858:16:13",
																"nodeType": "YulBlock",
																"src": "858:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "867:1:13",
																					"nodeType": "YulLiteral",
																					"src": "867:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "870:1:13",
																					"nodeType": "YulLiteral",
																					"src": "870:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "860:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "860:6:13"
																			},
																			"nativeSrc": "860:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "860:12:13"
																		},
																		"nativeSrc": "860:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "860:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "837:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "837:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "841:4:13",
																						"nodeType": "YulLiteral",
																						"src": "841:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "833:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "833:3:13"
																				},
																				"nativeSrc": "833:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "833:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "848:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "848:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "829:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "829:3:13"
																		},
																		"nativeSrc": "829:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "829:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "822:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "822:6:13"
																},
																"nativeSrc": "822:35:13",
																"nodeType": "YulFunctionCall",
																"src": "822:35:13"
															},
															"nativeSrc": "819:55:13",
															"nodeType": "YulIf",
															"src": "819:55:13"
														},
														{
															"nativeSrc": "883:19:13",
															"nodeType": "YulVariableDeclaration",
															"src": "883:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "899:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "899:2:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "893:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "893:5:13"
																},
																"nativeSrc": "893:9:13",
																"nodeType": "YulFunctionCall",
																"src": "893:9:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "887:2:13",
																	"nodeType": "YulTypedName",
																	"src": "887:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "925:22:13",
																"nodeType": "YulBlock",
																"src": "925:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "927:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "927:16:13"
																			},
																			"nativeSrc": "927:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "927:18:13"
																		},
																		"nativeSrc": "927:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "927:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "917:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "917:2:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "921:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "921:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "914:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "914:2:13"
																},
																"nativeSrc": "914:10:13",
																"nodeType": "YulFunctionCall",
																"src": "914:10:13"
															},
															"nativeSrc": "911:36:13",
															"nodeType": "YulIf",
															"src": "911:36:13"
														},
														{
															"nativeSrc": "956:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "956:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "970:2:13",
																		"nodeType": "YulLiteral",
																		"src": "970:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "966:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "966:3:13"
																},
																"nativeSrc": "966:7:13",
																"nodeType": "YulFunctionCall",
																"src": "966:7:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "960:2:13",
																	"nodeType": "YulTypedName",
																	"src": "960:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "982:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "982:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1002:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1002:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "996:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "996:5:13"
																},
																"nativeSrc": "996:9:13",
																"nodeType": "YulFunctionCall",
																"src": "996:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "986:6:13",
																	"nodeType": "YulTypedName",
																	"src": "986:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1014:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1014:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1036:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1036:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "1060:2:13",
																										"nodeType": "YulIdentifier",
																										"src": "1060:2:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1064:4:13",
																										"nodeType": "YulLiteral",
																										"src": "1064:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1056:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1056:3:13"
																								},
																								"nativeSrc": "1056:13:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1056:13:13"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "1071:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "1071:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1052:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1052:3:13"
																						},
																						"nativeSrc": "1052:22:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1052:22:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1076:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1076:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1048:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1048:3:13"
																				},
																				"nativeSrc": "1048:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1048:31:13"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "1081:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1081:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1044:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1044:3:13"
																		},
																		"nativeSrc": "1044:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1044:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1032:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1032:3:13"
																},
																"nativeSrc": "1032:53:13",
																"nodeType": "YulFunctionCall",
																"src": "1032:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1018:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1018:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1144:22:13",
																"nodeType": "YulBlock",
																"src": "1144:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1146:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1146:16:13"
																			},
																			"nativeSrc": "1146:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1146:18:13"
																		},
																		"nativeSrc": "1146:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1103:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1103:10:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1115:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1115:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1100:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1100:2:13"
																		},
																		"nativeSrc": "1100:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1123:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1123:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1135:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1135:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1120:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1120:2:13"
																		},
																		"nativeSrc": "1120:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1097:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1097:2:13"
																},
																"nativeSrc": "1097:46:13",
																"nodeType": "YulFunctionCall",
																"src": "1097:46:13"
															},
															"nativeSrc": "1094:72:13",
															"nodeType": "YulIf",
															"src": "1094:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1182:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1182:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1186:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1186:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1175:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1175:6:13"
																},
																"nativeSrc": "1175:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1175:22:13"
															},
															"nativeSrc": "1175:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1175:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1213:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1213:6:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1221:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1221:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1206:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:13"
																},
																"nativeSrc": "1206:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1206:18:13"
															},
															"nativeSrc": "1206:18:13",
															"nodeType": "YulExpressionStatement",
															"src": "1206:18:13"
														},
														{
															"body": {
																"nativeSrc": "1270:16:13",
																"nodeType": "YulBlock",
																"src": "1270:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1279:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1279:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1282:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1282:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1272:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1272:6:13"
																			},
																			"nativeSrc": "1272:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1272:12:13"
																		},
																		"nativeSrc": "1272:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1272:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1247:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1247:2:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1251:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1251:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1243:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1243:3:13"
																				},
																				"nativeSrc": "1243:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1243:11:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1256:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1256:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1239:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1239:3:13"
																		},
																		"nativeSrc": "1239:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1239:20:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1261:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1261:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1236:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1236:2:13"
																},
																"nativeSrc": "1236:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1236:33:13"
															},
															"nativeSrc": "1233:53:13",
															"nodeType": "YulIf",
															"src": "1233:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1305:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1305:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1313:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1313:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1301:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1301:3:13"
																		},
																		"nativeSrc": "1301:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "1322:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1322:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1326:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1326:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1318:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:13"
																		},
																		"nativeSrc": "1318:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:11:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1331:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1331:2:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1295:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1295:5:13"
																},
																"nativeSrc": "1295:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1295:39:13"
															},
															"nativeSrc": "1295:39:13",
															"nodeType": "YulExpressionStatement",
															"src": "1295:39:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1358:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1358:6:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1366:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1366:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1354:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1354:3:13"
																				},
																				"nativeSrc": "1354:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1354:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1371:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1371:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1350:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:13"
																		},
																		"nativeSrc": "1350:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1350:24:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1376:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1376:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1343:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1343:6:13"
																},
																"nativeSrc": "1343:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1343:35:13"
															},
															"nativeSrc": "1343:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "1343:35:13"
														},
														{
															"nativeSrc": "1387:16:13",
															"nodeType": "YulAssignment",
															"src": "1387:16:13",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1397:6:13",
																"nodeType": "YulIdentifier",
																"src": "1397:6:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1387:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory",
												"nativeSrc": "328:1081:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "402:9:13",
														"nodeType": "YulTypedName",
														"src": "402:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "413:7:13",
														"nodeType": "YulTypedName",
														"src": "413:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "425:6:13",
														"nodeType": "YulTypedName",
														"src": "425:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "433:6:13",
														"nodeType": "YulTypedName",
														"src": "433:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "441:6:13",
														"nodeType": "YulTypedName",
														"src": "441:6:13",
														"type": ""
													}
												],
												"src": "328:1081:13"
											},
											{
												"body": {
													"nativeSrc": "1515:102:13",
													"nodeType": "YulBlock",
													"src": "1515:102:13",
													"statements": [
														{
															"nativeSrc": "1525:26:13",
															"nodeType": "YulAssignment",
															"src": "1525:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1537:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1537:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1548:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1548:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1533:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1533:3:13"
																},
																"nativeSrc": "1533:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1533:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1525:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1525:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1567:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1567:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1582:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1582:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1598:3:13",
																								"nodeType": "YulLiteral",
																								"src": "1598:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1603:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1603:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1594:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1594:3:13"
																						},
																						"nativeSrc": "1594:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1594:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1607:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1607:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1590:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1590:3:13"
																				},
																				"nativeSrc": "1590:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1590:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1578:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1578:3:13"
																		},
																		"nativeSrc": "1578:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1578:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1560:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1560:6:13"
																},
																"nativeSrc": "1560:51:13",
																"nodeType": "YulFunctionCall",
																"src": "1560:51:13"
															},
															"nativeSrc": "1560:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "1560:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1414:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1484:9:13",
														"nodeType": "YulTypedName",
														"src": "1484:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1495:6:13",
														"nodeType": "YulTypedName",
														"src": "1495:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1506:4:13",
														"nodeType": "YulTypedName",
														"src": "1506:4:13",
														"type": ""
													}
												],
												"src": "1414:203:13"
											},
											{
												"body": {
													"nativeSrc": "1751:175:13",
													"nodeType": "YulBlock",
													"src": "1751:175:13",
													"statements": [
														{
															"nativeSrc": "1761:26:13",
															"nodeType": "YulAssignment",
															"src": "1761:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1773:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1773:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1784:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1784:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1769:3:13"
																},
																"nativeSrc": "1769:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1769:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1761:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1761:4:13"
																}
															]
														},
														{
															"nativeSrc": "1796:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1796:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1814:3:13",
																				"nodeType": "YulLiteral",
																				"src": "1814:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1819:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1819:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1810:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:13"
																		},
																		"nativeSrc": "1810:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1810:11:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1823:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1823:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1806:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1806:3:13"
																},
																"nativeSrc": "1806:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1806:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1800:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1800:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1841:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1841:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1856:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1856:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1864:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1864:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1852:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1852:3:13"
																		},
																		"nativeSrc": "1852:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1852:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1834:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:13"
																},
																"nativeSrc": "1834:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1834:34:13"
															},
															"nativeSrc": "1834:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1834:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1888:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1888:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1899:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1899:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1884:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1884:3:13"
																		},
																		"nativeSrc": "1884:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1884:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1908:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1908:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1916:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1916:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1904:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1904:3:13"
																		},
																		"nativeSrc": "1904:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1904:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1877:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:13"
																},
																"nativeSrc": "1877:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1877:43:13"
															},
															"nativeSrc": "1877:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "1877:43:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "1622:304:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1712:9:13",
														"nodeType": "YulTypedName",
														"src": "1712:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1723:6:13",
														"nodeType": "YulTypedName",
														"src": "1723:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1731:6:13",
														"nodeType": "YulTypedName",
														"src": "1731:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1742:4:13",
														"nodeType": "YulTypedName",
														"src": "1742:4:13",
														"type": ""
													}
												],
												"src": "1622:304:13"
											},
											{
												"body": {
													"nativeSrc": "2068:164:13",
													"nodeType": "YulBlock",
													"src": "2068:164:13",
													"statements": [
														{
															"nativeSrc": "2078:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2078:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2098:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2098:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2092:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2092:5:13"
																},
																"nativeSrc": "2092:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2092:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2082:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2082:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2120:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2129:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2129:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2137:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2137:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2125:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2125:3:13"
																		},
																		"nativeSrc": "2125:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2144:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2144:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2114:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2114:5:13"
																},
																"nativeSrc": "2114:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2114:37:13"
															},
															"nativeSrc": "2114:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2114:37:13"
														},
														{
															"nativeSrc": "2160:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2160:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2174:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2174:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2179:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2170:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:13"
																},
																"nativeSrc": "2170:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2170:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2164:2:13",
																	"nodeType": "YulTypedName",
																	"src": "2164:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2202:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "2202:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2206:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2206:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2195:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2195:6:13"
																},
																"nativeSrc": "2195:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2195:13:13"
															},
															"nativeSrc": "2195:13:13",
															"nodeType": "YulExpressionStatement",
															"src": "2195:13:13"
														},
														{
															"nativeSrc": "2217:9:13",
															"nodeType": "YulAssignment",
															"src": "2217:9:13",
															"value": {
																"name": "_1",
																"nativeSrc": "2224:2:13",
																"nodeType": "YulIdentifier",
																"src": "2224:2:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2217:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1931:301:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2044:3:13",
														"nodeType": "YulTypedName",
														"src": "2044:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2049:6:13",
														"nodeType": "YulTypedName",
														"src": "2049:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2060:3:13",
														"nodeType": "YulTypedName",
														"src": "2060:3:13",
														"type": ""
													}
												],
												"src": "1931:301:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        mcopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value2 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052604051610f3c380380610f3c8339810160408190526100229161036a565b828161002e828261008c565b50508160405161003d9061032e565b6001600160a01b039091168152602001604051809103905ff080158015610066573d5f803e3d5ffd5b506001600160a01b031660805261008461007f60805190565b6100ea565b50505061044b565b61009582610157565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156100de576100d982826101d5565b505050565b6100e6610248565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6101295f80516020610f1c833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a161015481610269565b50565b806001600160a01b03163b5f0361019157604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b60605f80846001600160a01b0316846040516101f19190610435565b5f60405180830381855af49150503d805f8114610229576040519150601f19603f3d011682016040523d82523d5f602084013e61022e565b606091505b50909250905061023f8583836102a6565b95945050505050565b34156102675760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b03811661029257604051633173bdd160e11b81525f6004820152602401610188565b805f80516020610f1c8339815191526101b4565b6060826102bb576102b682610305565b6102fe565b81511580156102d257506001600160a01b0384163b155b156102fb57604051639996b31560e01b81526001600160a01b0385166004820152602401610188565b50805b9392505050565b8051156103155780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6105888061099483390190565b80516001600160a01b0381168114610351575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f805f6060848603121561037c575f80fd5b6103858461033b565b92506103936020850161033b565b60408501519092506001600160401b03808211156103af575f80fd5b818601915086601f8301126103c2575f80fd5b8151818111156103d4576103d4610356565b604051601f8201601f19908116603f011681019083821181831017156103fc576103fc610356565b81604052828152896020848701011115610414575f80fd5b8260208601602083015e5f6020848301015280955050505050509250925092565b5f82518060208501845e5f920191825250919050565b6080516105326104625f395f601001526105325ff3fe608060405261000c61000e565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036100c4575f357fffffffff00000000000000000000000000000000000000000000000000000000167f4f1ef28600000000000000000000000000000000000000000000000000000000146100ba576040517fd2b576ec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6100c26100cc565b565b6100c26100fa565b5f806100db36600481846103c9565b8101906100e8919061041d565b915091506100f6828261010a565b5050565b6100c2610105610164565b61019b565b610113826101b9565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561015c576101578282610265565b505050565b6100f66102d7565b5f6101967f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156101b5573d5ff35b3d5ffd5b806001600160a01b03163b5f0361020c576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161028191906104e6565b5f60405180830381855af49150503d805f81146102b9576040519150601f19603f3d011682016040523d82523d5f602084013e6102be565b606091505b50915091506102ce85838361030f565b95945050505050565b34156100c2576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826103245761031f82610387565b610380565b815115801561033b57506001600160a01b0384163b155b1561037d576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610203565b50805b9392505050565b8051156103975780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80858511156103d7575f80fd5b838611156103e3575f80fd5b5050820193919092039150565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f806040838503121561042e575f80fd5b82356001600160a01b0381168114610444575f80fd5b9150602083013567ffffffffffffffff80821115610460575f80fd5b818501915085601f830112610473575f80fd5b813581811115610485576104856103f0565b604051601f8201601f19908116603f011681019083821181831017156104ad576104ad6103f0565b816040528281528860208487010111156104c5575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f82518060208501845e5f92019182525091905056fea264697066735822122008e833b8a99f99db0b94d2b0cd95bc37bbcbeeed1cc58f47dce8130cc9d93ce164736f6c63430008190033608060405234801561000f575f80fd5b5060405161058838038061058883398101604081905261002e916100bb565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100658161006c565b50506100e8565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100cb575f80fd5b81516001600160a01b03811681146100e1575f80fd5b9392505050565b610493806100f55f395ff3fe608060405260043610610058575f3560e01c80639623609d116100415780639623609d1461009d578063ad3cb1cc146100b0578063f2fde38b14610105575f80fd5b8063715018a61461005c5780638da5cb5b14610072575b5f80fd5b348015610067575f80fd5b50610070610124565b005b34801561007d575f80fd5b505f546040516001600160a01b0390911681526020015b60405180910390f35b6100706100ab366004610303565b610137565b3480156100bb575f80fd5b506100f86040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516100949190610400565b348015610110575f80fd5b5061007061011f366004610419565b6101bb565b61012c610216565b6101355f61025b565b565b61013f610216565b6040517f4f1ef2860000000000000000000000000000000000000000000000000000000081526001600160a01b03841690634f1ef2869034906101889086908690600401610434565b5f604051808303818588803b15801561019f575f80fd5b505af11580156101b1573d5f803e3d5ffd5b5050505050505050565b6101c3610216565b6001600160a01b03811661020a576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b6102138161025b565b50565b5f546001600160a01b03163314610135576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610201565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610213575f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f805f60608486031215610315575f80fd5b8335610320816102c2565b92506020840135610330816102c2565b9150604084013567ffffffffffffffff8082111561034c575f80fd5b818601915086601f83011261035f575f80fd5b813581811115610371576103716102d6565b604051601f8201601f19908116603f01168101908382118183101715610399576103996102d6565b816040528281528960208487010111156103b1575f80fd5b826020860160208301375f6020848301015280955050505050509250925092565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61041260208301846103d2565b9392505050565b5f60208284031215610429575f80fd5b8135610412816102c2565b6001600160a01b0383168152604060208201525f61045560408301846103d2565b94935050505056fea264697066735822122077ecba69c01c31832a71b8b8e6bbb452462afc9570c5ffedbf52c409c789a31a64736f6c63430008190033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xF3C CODESIZE SUB DUP1 PUSH2 0xF3C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x36A JUMP JUMPDEST DUP3 DUP2 PUSH2 0x2E DUP3 DUP3 PUSH2 0x8C JUMP JUMPDEST POP POP DUP2 PUSH1 0x40 MLOAD PUSH2 0x3D SWAP1 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x66 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x84 PUSH2 0x7F PUSH1 0x80 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST POP POP POP PUSH2 0x44B JUMP JUMPDEST PUSH2 0x95 DUP3 PUSH2 0x157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xDE JUMPI PUSH2 0xD9 DUP3 DUP3 PUSH2 0x1D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x248 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x129 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF1C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x154 DUP2 PUSH2 0x269 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x435 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x23F DUP6 DUP4 DUP4 PUSH2 0x2A6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x292 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3173BDD1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST DUP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF1C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2BB JUMPI PUSH2 0x2B6 DUP3 PUSH2 0x305 JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x188 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x315 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP1 PUSH2 0x994 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP5 PUSH2 0x33B JUMP JUMPDEST SWAP3 POP PUSH2 0x393 PUSH1 0x20 DUP6 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x3D4 JUMPI PUSH2 0x3D4 PUSH2 0x356 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3FC JUMPI PUSH2 0x3FC PUSH2 0x356 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x414 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x532 PUSH2 0x462 PUSH0 CODECOPY PUSH0 PUSH1 0x10 ADD MSTORE PUSH2 0x532 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xC4 JUMPI PUSH0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 EQ PUSH2 0xBA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD2B576EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2 PUSH2 0xCC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xFA JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDB CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x3C9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF6 DUP3 DUP3 PUSH2 0x10A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x105 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x19B JUMP JUMPDEST PUSH2 0x113 DUP3 PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x15C JUMPI PUSH2 0x157 DUP3 DUP3 PUSH2 0x265 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF6 PUSH2 0x2D7 JUMP JUMPDEST PUSH0 PUSH2 0x196 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x4E6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2B9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2CE DUP6 DUP4 DUP4 PUSH2 0x30F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x324 JUMPI PUSH2 0x31F DUP3 PUSH2 0x387 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x203 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x397 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x3D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x444 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x473 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x485 JUMPI PUSH2 0x485 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AD PUSH2 0x3F0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x4C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xE8 CALLER 0xB8 0xA9 SWAP16 SWAP10 0xDB SIGNEXTEND SWAP5 0xD2 0xB0 0xCD SWAP6 0xBC CALLDATACOPY 0xBB 0xCB 0xEE 0xED SHR 0xC5 DUP16 SELFBALANCE 0xDC 0xE8 SGT 0xC 0xC9 0xD9 EXTCODECOPY 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x588 CODESIZE SUB DUP1 PUSH2 0x588 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xBB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x6C JUMP JUMPDEST POP POP PUSH2 0xE8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x493 DUP1 PUSH2 0xF5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x41 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x105 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x72 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x303 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x400 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x12C PUSH2 0x216 JUMP JUMPDEST PUSH2 0x135 PUSH0 PUSH2 0x25B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13F PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x4F1EF286 SWAP1 CALLVALUE SWAP1 PUSH2 0x188 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x434 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x213 DUP2 PUSH2 0x25B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x135 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x201 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x315 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x320 DUP2 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x330 DUP2 PUSH2 0x2C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x34C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x371 JUMPI PUSH2 0x371 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x399 JUMPI PUSH2 0x399 PUSH2 0x2D6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x412 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x412 DUP2 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x455 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xECBA69C01C31832A71B8B8E6BBB452462AFC9570C5FFEDBF MSTORE 0xC4 MULMOD 0xC7 DUP10 LOG3 BYTE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER 0xB5 BALANCE 0x27 PUSH9 0x4A568B3173AE13B9F8 0xA6 ADD PUSH15 0x243E63B6E8EE1178D6A717850B5D61 SUB ",
							"sourceMap": "4239:2231:8:-:0;;;5082:296;;;;;;;;;;;;;;;;;;:::i;:::-;5173:6;5181:5;1155:52:3;5173:6:8;5181:5;1155:29:3;:52::i;:::-;1081:133;;5230:12:8::1;5215:28;;;;;:::i;:::-;-1:-1:-1::0;;;;;1578:32:13;;;1560:51;;1548:2;1533:18;5215:28:8::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;5198:46:8::1;;::::0;5332:39:::1;5357:13;5525:6:::0;;;5445:93;5357:13:::1;5332:24;:39::i;:::-;5082:296:::0;;;4239:2231;;2274:344:4;2365:37;2384:17;2365:18;:37::i;:::-;2417:36;;-1:-1:-1;;;;;2417:36:4;;;;;;;;2468:11;;:15;2464:148;;2499:53;2528:17;2547:4;2499:28;:53::i;:::-;;2274:344;;:::o;2464:148::-;2583:18;:16;:18::i;:::-;2274:344;;:::o;3837:142::-;3900:43;3922:10;-1:-1:-1;;;;;;;;;;;3366:44:4;-1:-1:-1;;;;;3366:44:4;;3297:120;3922:10;3900:43;;;-1:-1:-1;;;;;1852:15:13;;;1834:34;;1904:15;;;1899:2;1884:18;;1877:43;1769:18;3900:43:4;;;;;;;3953:19;3963:8;3953:9;:19::i;:::-;3837:142;:::o;1681:281::-;1758:17;-1:-1:-1;;;;;1758:29:4;;1791:1;1758:34;1754:119;;1815:47;;-1:-1:-1;;;1815:47:4;;-1:-1:-1;;;;;1578:32:13;;1815:47:4;;;1560:51:13;1533:18;;1815:47:4;;;;;;;;1754:119;1938:17;821:66;1882:47;:73;;-1:-1:-1;;;;;;1882:73:4;-1:-1:-1;;;;;1882:73:4;;;;;;;;;;-1:-1:-1;1681:281:4:o;3900:253:9:-;3983:12;4008;4022:23;4049:6;-1:-1:-1;;;;;4049:19:9;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4007:67:9;;-1:-1:-1;4007:67:9;-1:-1:-1;4091:55:9;4118:6;4007:67;;4091:26;:55::i;:::-;4084:62;3900:253;-1:-1:-1;;;;;3900:253:9:o;6123:122:4:-;6173:9;:13;6169:70;;6209:19;;-1:-1:-1;;;6209:19:4;;;;;;;;;;;6169:70;6123:122::o;3500:217::-;-1:-1:-1;;;;;3559:22:4;;3555:91;;3604:31;;-1:-1:-1;;;3604:31:4;;3632:1;3604:31;;;1560:51:13;1533:18;;3604:31:4;1414:203:13;3555:91:4;3702:8;-1:-1:-1;;;;;;;;;;;3655:38:4;2514:190:12:o;4421:582:9:-;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4841:17;;:22;:49;;;;-1:-1:-1;;;;;;4867:18:9;;;:23;4841:49;4837:119;;;4917:24;;-1:-1:-1;;;4917:24:9;;-1:-1:-1;;;;;1578:32:13;;4917:24:9;;;1560:51:13;1533:18;;4917:24:9;1414:203:13;4837:119:9;-1:-1:-1;4976:10:9;4589:408;4421:582;;;;;:::o;5543:518::-;5674:17;;:21;5670:385;;5902:10;5896:17;5958:15;5945:10;5941:2;5937:19;5930:44;5670:385;6025:19;;-1:-1:-1;;;6025:19:9;;;;;;;;;;;4239:2231:8;;;;;;;;:::o;14:177:13:-;93:13;;-1:-1:-1;;;;;135:31:13;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1081;425:6;433;441;494:2;482:9;473:7;469:23;465:32;462:52;;;510:1;507;500:12;462:52;533:40;563:9;533:40;:::i;:::-;523:50;;592:49;637:2;626:9;622:18;592:49;:::i;:::-;685:2;670:18;;664:25;582:59;;-1:-1:-1;;;;;;738:14:13;;;735:34;;;765:1;762;755:12;735:34;803:6;792:9;788:22;778:32;;848:7;841:4;837:2;833:13;829:27;819:55;;870:1;867;860:12;819:55;899:2;893:9;921:2;917;914:10;911:36;;;927:18;;:::i;:::-;1002:2;996:9;970:2;1056:13;;-1:-1:-1;;1052:22:13;;;1076:2;1048:31;1044:40;1032:53;;;1100:18;;;1120:22;;;1097:46;1094:72;;;1146:18;;:::i;:::-;1186:10;1182:2;1175:22;1221:2;1213:6;1206:18;1261:7;1256:2;1251;1247;1243:11;1239:20;1236:33;1233:53;;;1282:1;1279;1272:12;1233:53;1331:2;1326;1322;1318:11;1313:2;1305:6;1301:15;1295:39;1376:1;1371:2;1366;1358:6;1354:15;1350:24;1343:35;1397:6;1387:16;;;;;;;328:1081;;;;;:::o;1931:301::-;2060:3;2098:6;2092:13;2144:6;2137:4;2129:6;2125:17;2120:3;2114:37;2206:1;2170:16;;2195:13;;;-1:-1:-1;2170:16:13;1931:301;-1:-1:-1;1931:301:13:o;:::-;4239:2231:8;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_538": {
									"entryPoint": null,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_502": {
									"entryPoint": 727,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_514": {
									"entryPoint": 411,
									"id": 514,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_dispatchUpgradeToAndCall_731": {
									"entryPoint": 204,
									"id": 731,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_fallback_530": {
									"entryPoint": 250,
									"id": 530,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_fallback_702": {
									"entryPoint": 14,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_208": {
									"entryPoint": 356,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_proxyAdmin_668": {
									"entryPoint": null,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_990": {
									"entryPoint": 903,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_282": {
									"entryPoint": 441,
									"id": 282,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_908": {
									"entryPoint": 613,
									"id": 908,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1073": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@upgradeToAndCall_318": {
									"entryPoint": 266,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_948": {
									"entryPoint": 783,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_bytes_memory_ptr": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_array_index_range_access_t_bytes_calldata_ptr": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"panic_error_0x41": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2204:13",
										"nodeType": "YulBlock",
										"src": "0:2204:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "144:201:13",
													"nodeType": "YulBlock",
													"src": "144:201:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "182:16:13",
																"nodeType": "YulBlock",
																"src": "182:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "191:1:13",
																					"nodeType": "YulLiteral",
																					"src": "191:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "194:1:13",
																					"nodeType": "YulLiteral",
																					"src": "194:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "184:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "184:6:13"
																			},
																			"nativeSrc": "184:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "184:12:13"
																		},
																		"nativeSrc": "184:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "184:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "startIndex",
																		"nativeSrc": "160:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "160:10:13"
																	},
																	{
																		"name": "endIndex",
																		"nativeSrc": "172:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "172:8:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "157:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "157:2:13"
																},
																"nativeSrc": "157:24:13",
																"nodeType": "YulFunctionCall",
																"src": "157:24:13"
															},
															"nativeSrc": "154:44:13",
															"nodeType": "YulIf",
															"src": "154:44:13"
														},
														{
															"body": {
																"nativeSrc": "231:16:13",
																"nodeType": "YulBlock",
																"src": "231:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "240:1:13",
																					"nodeType": "YulLiteral",
																					"src": "240:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "243:1:13",
																					"nodeType": "YulLiteral",
																					"src": "243:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "233:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "233:6:13"
																			},
																			"nativeSrc": "233:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "233:12:13"
																		},
																		"nativeSrc": "233:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "233:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nativeSrc": "213:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "213:8:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "223:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "223:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "210:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "210:2:13"
																},
																"nativeSrc": "210:20:13",
																"nodeType": "YulFunctionCall",
																"src": "210:20:13"
															},
															"nativeSrc": "207:40:13",
															"nodeType": "YulIf",
															"src": "207:40:13"
														},
														{
															"nativeSrc": "256:36:13",
															"nodeType": "YulAssignment",
															"src": "256:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "273:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "273:6:13"
																	},
																	{
																		"name": "startIndex",
																		"nativeSrc": "281:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "281:10:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "269:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "269:3:13"
																},
																"nativeSrc": "269:23:13",
																"nodeType": "YulFunctionCall",
																"src": "269:23:13"
															},
															"variableNames": [
																{
																	"name": "offsetOut",
																	"nativeSrc": "256:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "256:9:13"
																}
															]
														},
														{
															"nativeSrc": "301:38:13",
															"nodeType": "YulAssignment",
															"src": "301:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nativeSrc": "318:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "318:8:13"
																	},
																	{
																		"name": "startIndex",
																		"nativeSrc": "328:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "328:10:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "314:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "314:3:13"
																},
																"nativeSrc": "314:25:13",
																"nodeType": "YulFunctionCall",
																"src": "314:25:13"
															},
															"variableNames": [
																{
																	"name": "lengthOut",
																	"nativeSrc": "301:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "301:9:13"
																}
															]
														}
													]
												},
												"name": "calldata_array_index_range_access_t_bytes_calldata_ptr",
												"nativeSrc": "14:331:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "78:6:13",
														"nodeType": "YulTypedName",
														"src": "78:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "86:6:13",
														"nodeType": "YulTypedName",
														"src": "86:6:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "94:10:13",
														"nodeType": "YulTypedName",
														"src": "94:10:13",
														"type": ""
													},
													{
														"name": "endIndex",
														"nativeSrc": "106:8:13",
														"nodeType": "YulTypedName",
														"src": "106:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "offsetOut",
														"nativeSrc": "119:9:13",
														"nodeType": "YulTypedName",
														"src": "119:9:13",
														"type": ""
													},
													{
														"name": "lengthOut",
														"nativeSrc": "130:9:13",
														"nodeType": "YulTypedName",
														"src": "130:9:13",
														"type": ""
													}
												],
												"src": "14:331:13"
											},
											{
												"body": {
													"nativeSrc": "382:152:13",
													"nodeType": "YulBlock",
													"src": "382:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "399:1:13",
																		"nodeType": "YulLiteral",
																		"src": "399:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "402:77:13",
																		"nodeType": "YulLiteral",
																		"src": "402:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:13"
																},
																"nativeSrc": "392:88:13",
																"nodeType": "YulFunctionCall",
																"src": "392:88:13"
															},
															"nativeSrc": "392:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "392:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "496:1:13",
																		"nodeType": "YulLiteral",
																		"src": "496:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "499:4:13",
																		"nodeType": "YulLiteral",
																		"src": "499:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "489:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:13"
																},
																"nativeSrc": "489:15:13",
																"nodeType": "YulFunctionCall",
																"src": "489:15:13"
															},
															"nativeSrc": "489:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "489:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:13",
																		"nodeType": "YulLiteral",
																		"src": "520:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "523:4:13",
																		"nodeType": "YulLiteral",
																		"src": "523:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "513:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "513:6:13"
																},
																"nativeSrc": "513:15:13",
																"nodeType": "YulFunctionCall",
																"src": "513:15:13"
															},
															"nativeSrc": "513:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "513:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "350:184:13",
												"nodeType": "YulFunctionDefinition",
												"src": "350:184:13"
											},
											{
												"body": {
													"nativeSrc": "643:1022:13",
													"nodeType": "YulBlock",
													"src": "643:1022:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "689:16:13",
																"nodeType": "YulBlock",
																"src": "689:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "698:1:13",
																					"nodeType": "YulLiteral",
																					"src": "698:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "701:1:13",
																					"nodeType": "YulLiteral",
																					"src": "701:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "691:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "691:6:13"
																			},
																			"nativeSrc": "691:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "691:12:13"
																		},
																		"nativeSrc": "691:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "691:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "664:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "664:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "673:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "673:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "660:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "660:3:13"
																		},
																		"nativeSrc": "660:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "660:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "685:2:13",
																		"nodeType": "YulLiteral",
																		"src": "685:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "656:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "656:3:13"
																},
																"nativeSrc": "656:32:13",
																"nodeType": "YulFunctionCall",
																"src": "656:32:13"
															},
															"nativeSrc": "653:52:13",
															"nodeType": "YulIf",
															"src": "653:52:13"
														},
														{
															"nativeSrc": "714:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "714:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "740:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "727:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "727:12:13"
																},
																"nativeSrc": "727:23:13",
																"nodeType": "YulFunctionCall",
																"src": "727:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "718:5:13",
																	"nodeType": "YulTypedName",
																	"src": "718:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "836:16:13",
																"nodeType": "YulBlock",
																"src": "836:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "845:1:13",
																					"nodeType": "YulLiteral",
																					"src": "845:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "848:1:13",
																					"nodeType": "YulLiteral",
																					"src": "848:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "838:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "838:6:13"
																			},
																			"nativeSrc": "838:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "838:12:13"
																		},
																		"nativeSrc": "838:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "772:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "772:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "783:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "783:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "790:42:13",
																						"nodeType": "YulLiteral",
																						"src": "790:42:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "779:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "779:3:13"
																				},
																				"nativeSrc": "779:54:13",
																				"nodeType": "YulFunctionCall",
																				"src": "779:54:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "769:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "769:2:13"
																		},
																		"nativeSrc": "769:65:13",
																		"nodeType": "YulFunctionCall",
																		"src": "769:65:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "762:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:13"
																},
																"nativeSrc": "762:73:13",
																"nodeType": "YulFunctionCall",
																"src": "762:73:13"
															},
															"nativeSrc": "759:93:13",
															"nodeType": "YulIf",
															"src": "759:93:13"
														},
														{
															"nativeSrc": "861:15:13",
															"nodeType": "YulAssignment",
															"src": "861:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "871:5:13",
																"nodeType": "YulIdentifier",
																"src": "871:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "861:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:13"
																}
															]
														},
														{
															"nativeSrc": "885:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "885:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "916:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "916:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "927:2:13",
																				"nodeType": "YulLiteral",
																				"src": "927:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "912:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "912:3:13"
																		},
																		"nativeSrc": "912:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "912:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "899:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "899:12:13"
																},
																"nativeSrc": "899:32:13",
																"nodeType": "YulFunctionCall",
																"src": "899:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "889:6:13",
																	"nodeType": "YulTypedName",
																	"src": "889:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "940:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "940:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "950:18:13",
																"nodeType": "YulLiteral",
																"src": "950:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "944:2:13",
																	"nodeType": "YulTypedName",
																	"src": "944:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "995:16:13",
																"nodeType": "YulBlock",
																"src": "995:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1004:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1004:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1007:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1007:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "997:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "997:6:13"
																			},
																			"nativeSrc": "997:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "997:12:13"
																		},
																		"nativeSrc": "997:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "997:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "983:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "983:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "991:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "991:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "980:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "980:2:13"
																},
																"nativeSrc": "980:14:13",
																"nodeType": "YulFunctionCall",
																"src": "980:14:13"
															},
															"nativeSrc": "977:34:13",
															"nodeType": "YulIf",
															"src": "977:34:13"
														},
														{
															"nativeSrc": "1020:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1020:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1034:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1034:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1045:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1045:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1030:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1030:3:13"
																},
																"nativeSrc": "1030:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1030:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1024:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1024:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1100:16:13",
																"nodeType": "YulBlock",
																"src": "1100:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1109:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1102:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1102:6:13"
																			},
																			"nativeSrc": "1102:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1102:12:13"
																		},
																		"nativeSrc": "1102:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1102:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1079:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1079:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1083:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1083:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1075:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:13"
																				},
																				"nativeSrc": "1075:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1075:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1090:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1090:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1071:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1071:3:13"
																		},
																		"nativeSrc": "1071:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1071:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1064:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:13"
																},
																"nativeSrc": "1064:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1064:35:13"
															},
															"nativeSrc": "1061:55:13",
															"nodeType": "YulIf",
															"src": "1061:55:13"
														},
														{
															"nativeSrc": "1125:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1125:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1148:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1148:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1135:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1135:12:13"
																},
																"nativeSrc": "1135:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1135:16:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "1129:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1129:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1174:22:13",
																"nodeType": "YulBlock",
																"src": "1174:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1176:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1176:16:13"
																			},
																			"nativeSrc": "1176:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1176:18:13"
																		},
																		"nativeSrc": "1176:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "1166:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1166:2:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1170:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1170:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1163:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1163:2:13"
																},
																"nativeSrc": "1163:10:13",
																"nodeType": "YulFunctionCall",
																"src": "1163:10:13"
															},
															"nativeSrc": "1160:36:13",
															"nodeType": "YulIf",
															"src": "1160:36:13"
														},
														{
															"nativeSrc": "1205:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1205:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1219:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "1215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:13"
																},
																"nativeSrc": "1215:7:13",
																"nodeType": "YulFunctionCall",
																"src": "1215:7:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "1209:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1209:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1231:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1231:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1251:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1251:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1245:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1245:5:13"
																},
																"nativeSrc": "1245:9:13",
																"nodeType": "YulFunctionCall",
																"src": "1245:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1235:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1235:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1263:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1263:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1285:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1285:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "1309:2:13",
																										"nodeType": "YulIdentifier",
																										"src": "1309:2:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1313:4:13",
																										"nodeType": "YulLiteral",
																										"src": "1313:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1305:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1305:3:13"
																								},
																								"nativeSrc": "1305:13:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1305:13:13"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "1320:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "1320:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1301:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1301:3:13"
																						},
																						"nativeSrc": "1301:22:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1301:22:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1325:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1325:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1297:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1297:3:13"
																				},
																				"nativeSrc": "1297:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1297:31:13"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "1330:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1330:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1293:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1293:3:13"
																		},
																		"nativeSrc": "1293:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1293:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1281:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1281:3:13"
																},
																"nativeSrc": "1281:53:13",
																"nodeType": "YulFunctionCall",
																"src": "1281:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1267:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1267:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1393:22:13",
																"nodeType": "YulBlock",
																"src": "1393:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1395:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1395:16:13"
																			},
																			"nativeSrc": "1395:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1395:18:13"
																		},
																		"nativeSrc": "1395:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1395:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1352:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1352:10:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1364:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1364:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1349:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1349:2:13"
																		},
																		"nativeSrc": "1349:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1349:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1372:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1372:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1384:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1384:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1369:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1369:2:13"
																		},
																		"nativeSrc": "1369:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1369:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1346:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1346:2:13"
																},
																"nativeSrc": "1346:46:13",
																"nodeType": "YulFunctionCall",
																"src": "1346:46:13"
															},
															"nativeSrc": "1343:72:13",
															"nodeType": "YulIf",
															"src": "1343:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1431:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1435:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1435:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1424:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1424:6:13"
																},
																"nativeSrc": "1424:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1424:22:13"
															},
															"nativeSrc": "1424:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1424:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1462:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1462:6:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1470:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1470:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1455:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1455:6:13"
																},
																"nativeSrc": "1455:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1455:18:13"
															},
															"nativeSrc": "1455:18:13",
															"nodeType": "YulExpressionStatement",
															"src": "1455:18:13"
														},
														{
															"body": {
																"nativeSrc": "1519:16:13",
																"nodeType": "YulBlock",
																"src": "1519:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1528:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1528:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1531:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1531:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1521:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1521:6:13"
																			},
																			"nativeSrc": "1521:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1521:12:13"
																		},
																		"nativeSrc": "1521:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1521:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1496:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1496:2:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1500:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1500:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1492:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1492:3:13"
																				},
																				"nativeSrc": "1492:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1492:11:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1505:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1505:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1488:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1488:3:13"
																		},
																		"nativeSrc": "1488:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1488:20:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1510:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1510:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1485:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1485:2:13"
																},
																"nativeSrc": "1485:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1485:33:13"
															},
															"nativeSrc": "1482:53:13",
															"nodeType": "YulIf",
															"src": "1482:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1561:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1561:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1569:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1569:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1557:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1557:3:13"
																		},
																		"nativeSrc": "1557:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1557:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "1578:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1578:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1582:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1582:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1574:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1574:3:13"
																		},
																		"nativeSrc": "1574:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1574:11:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1587:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1587:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1544:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1544:12:13"
																},
																"nativeSrc": "1544:46:13",
																"nodeType": "YulFunctionCall",
																"src": "1544:46:13"
															},
															"nativeSrc": "1544:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "1544:46:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1614:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1614:6:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1622:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1622:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1610:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1610:3:13"
																				},
																				"nativeSrc": "1610:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1610:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1627:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1627:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1606:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:13"
																		},
																		"nativeSrc": "1606:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:24:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1632:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1599:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:13"
																},
																"nativeSrc": "1599:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1599:35:13"
															},
															"nativeSrc": "1599:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "1599:35:13"
														},
														{
															"nativeSrc": "1643:16:13",
															"nodeType": "YulAssignment",
															"src": "1643:16:13",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1653:6:13",
																"nodeType": "YulIdentifier",
																"src": "1653:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1643:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_bytes_memory_ptr",
												"nativeSrc": "539:1126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "601:9:13",
														"nodeType": "YulTypedName",
														"src": "601:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "612:7:13",
														"nodeType": "YulTypedName",
														"src": "612:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "624:6:13",
														"nodeType": "YulTypedName",
														"src": "624:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "632:6:13",
														"nodeType": "YulTypedName",
														"src": "632:6:13",
														"type": ""
													}
												],
												"src": "539:1126:13"
											},
											{
												"body": {
													"nativeSrc": "1771:125:13",
													"nodeType": "YulBlock",
													"src": "1771:125:13",
													"statements": [
														{
															"nativeSrc": "1781:26:13",
															"nodeType": "YulAssignment",
															"src": "1781:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1793:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1793:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1804:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1804:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1789:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1789:3:13"
																},
																"nativeSrc": "1789:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1789:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1781:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1781:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1823:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1823:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1838:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1846:42:13",
																				"nodeType": "YulLiteral",
																				"src": "1846:42:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1834:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1834:3:13"
																		},
																		"nativeSrc": "1834:55:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1834:55:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1816:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1816:6:13"
																},
																"nativeSrc": "1816:74:13",
																"nodeType": "YulFunctionCall",
																"src": "1816:74:13"
															},
															"nativeSrc": "1816:74:13",
															"nodeType": "YulExpressionStatement",
															"src": "1816:74:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1670:226:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1740:9:13",
														"nodeType": "YulTypedName",
														"src": "1740:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1751:6:13",
														"nodeType": "YulTypedName",
														"src": "1751:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1762:4:13",
														"nodeType": "YulTypedName",
														"src": "1762:4:13",
														"type": ""
													}
												],
												"src": "1670:226:13"
											},
											{
												"body": {
													"nativeSrc": "2038:164:13",
													"nodeType": "YulBlock",
													"src": "2038:164:13",
													"statements": [
														{
															"nativeSrc": "2048:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2048:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2068:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2068:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2062:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2062:5:13"
																},
																"nativeSrc": "2062:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2062:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2052:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2052:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2090:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2090:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2099:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2099:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2107:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2107:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2095:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2095:3:13"
																		},
																		"nativeSrc": "2095:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2095:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2114:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2114:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2084:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2084:5:13"
																},
																"nativeSrc": "2084:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2084:37:13"
															},
															"nativeSrc": "2084:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2084:37:13"
														},
														{
															"nativeSrc": "2130:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2130:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2144:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2144:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2149:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2149:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2140:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2140:3:13"
																},
																"nativeSrc": "2140:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2140:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2134:2:13",
																	"nodeType": "YulTypedName",
																	"src": "2134:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2172:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "2172:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2176:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2176:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2165:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:13"
																},
																"nativeSrc": "2165:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2165:13:13"
															},
															"nativeSrc": "2165:13:13",
															"nodeType": "YulExpressionStatement",
															"src": "2165:13:13"
														},
														{
															"nativeSrc": "2187:9:13",
															"nodeType": "YulAssignment",
															"src": "2187:9:13",
															"value": {
																"name": "_1",
																"nativeSrc": "2194:2:13",
																"nodeType": "YulIdentifier",
																"src": "2194:2:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2187:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2187:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1901:301:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2014:3:13",
														"nodeType": "YulTypedName",
														"src": "2014:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2019:6:13",
														"nodeType": "YulTypedName",
														"src": "2019:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2030:3:13",
														"nodeType": "YulTypedName",
														"src": "2030:3:13",
														"type": ""
													}
												],
												"src": "1901:301:13"
											}
										]
									},
									"contents": "{\n    { }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address_payablet_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"623": [
									{
										"length": 32,
										"start": 16
									}
								]
							},
							"linkReferences": {},
							"object": "608060405261000c61000e565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036100c4575f357fffffffff00000000000000000000000000000000000000000000000000000000167f4f1ef28600000000000000000000000000000000000000000000000000000000146100ba576040517fd2b576ec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6100c26100cc565b565b6100c26100fa565b5f806100db36600481846103c9565b8101906100e8919061041d565b915091506100f6828261010a565b5050565b6100c2610105610164565b61019b565b610113826101b9565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561015c576101578282610265565b505050565b6100f66102d7565b5f6101967f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156101b5573d5ff35b3d5ffd5b806001600160a01b03163b5f0361020c576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161028191906104e6565b5f60405180830381855af49150503d805f81146102b9576040519150601f19603f3d011682016040523d82523d5f602084013e6102be565b606091505b50915091506102ce85838361030f565b95945050505050565b34156100c2576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826103245761031f82610387565b610380565b815115801561033b57506001600160a01b0384163b155b1561037d576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610203565b50805b9392505050565b8051156103975780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80858511156103d7575f80fd5b838611156103e3575f80fd5b5050820193919092039150565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f806040838503121561042e575f80fd5b82356001600160a01b0381168114610444575f80fd5b9150602083013567ffffffffffffffff80821115610460575f80fd5b818501915085601f830112610473575f80fd5b813581811115610485576104856103f0565b604051601f8201601f19908116603f011681019083821181831017156104ad576104ad6103f0565b816040528281528860208487010111156104c5575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f82518060208501845e5f92019182525091905056fea264697066735822122008e833b8a99f99db0b94d2b0cd95bc37bbcbeeed1cc58f47dce8130cc9d93ce164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xC4 JUMPI PUSH0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 EQ PUSH2 0xBA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD2B576EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2 PUSH2 0xCC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xFA JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDB CALLDATASIZE PUSH1 0x4 DUP2 DUP5 PUSH2 0x3C9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF6 DUP3 DUP3 PUSH2 0x10A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x105 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x19B JUMP JUMPDEST PUSH2 0x113 DUP3 PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x15C JUMPI PUSH2 0x157 DUP3 DUP3 PUSH2 0x265 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF6 PUSH2 0x2D7 JUMP JUMPDEST PUSH0 PUSH2 0x196 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x4E6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2B9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2CE DUP6 DUP4 DUP4 PUSH2 0x30F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x324 JUMPI PUSH2 0x31F DUP3 PUSH2 0x387 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x203 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x397 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x3D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x444 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x473 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x485 JUMPI PUSH2 0x485 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4AD JUMPI PUSH2 0x4AD PUSH2 0x3F0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x4C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xE8 CALLER 0xB8 0xA9 SWAP16 SWAP10 0xDB SIGNEXTEND SWAP5 0xD2 0xB0 0xCD SWAP6 0xBC CALLDATACOPY 0xBB 0xCB 0xEE 0xED SHR 0xC5 DUP16 SELFBALANCE 0xDC 0xE8 SGT 0xC 0xC9 0xD9 EXTCODECOPY 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "4239:2231:8:-:0;;;2649:11:5;:9;:11::i;:::-;4239:2231:8;5680:369;5525:6;-1:-1:-1;;;;;5741:27:8;:10;:27;5737:306;;5788:7;;:65;:7;5799:54;5788:65;5784:201;;5880:24;;;;;;;;;;;;;;5784:201;5943:27;:25;:27::i;:::-;5680:369::o;5737:306::-;6015:17;:15;:17::i;6251:217::-;6307:25;;6366:12;:8;6375:1;6366:8;6307:25;6366:12;:::i;:::-;6355:42;;;;;;;:::i;:::-;6306:91;;;;6407:54;6437:17;6456:4;6407:29;:54::i;:::-;6296:172;;6251:217::o;2323:83:5:-;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;2274:344:4:-;2365:37;2384:17;2365:18;:37::i;:::-;2417:36;;-1:-1:-1;;;;;2417:36:4;;;;;;;;2468:11;;:15;2464:148;;2499:53;2528:17;2547:4;2499:28;:53::i;:::-;;6296:172:8;;6251:217::o;2464:148:4:-;2583:18;:16;:18::i;1583:132:3:-;1650:7;1676:32;821:66:4;1529:53;-1:-1:-1;;;;;1529:53:4;;1451:138;1676:32:3;1669:39;;1583:132;:::o;949:895:5:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27;1681:281:4;1758:17;-1:-1:-1;;;;;1758:29:4;;1791:1;1758:34;1754:119;;1815:47;;;;;-1:-1:-1;;;;;1834:55:13;;1815:47:4;;;1816:74:13;1789:18;;1815:47:4;;;;;;;;1754:119;821:66;1882:73;;;;-1:-1:-1;;;;;1882:73:4;;;;;;;;;;1681:281::o;3900:253:9:-;3983:12;4008;4022:23;4049:6;-1:-1:-1;;;;;4049:19:9;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;:::-;4084:62;3900:253;-1:-1:-1;;;;;3900:253:9:o;6123:122:4:-;6173:9;:13;6169:70;;6209:19;;;;;;;;;;;;;;4421:582:9;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4841:17;;:22;:49;;;;-1:-1:-1;;;;;;4867:18:9;;;:23;4841:49;4837:119;;;4917:24;;;;;-1:-1:-1;;;;;1834:55:13;;4917:24:9;;;1816:74:13;1789:18;;4917:24:9;1670:226:13;4837:119:9;-1:-1:-1;4976:10:9;4589:408;4421:582;;;;;:::o;5543:518::-;5674:17;;:21;5670:385;;5902:10;5896:17;5958:15;5945:10;5941:2;5937:19;5930:44;5670:385;6025:19;;;;;;;;;;;;;;14:331:13;119:9;130;172:8;160:10;157:24;154:44;;;194:1;191;184:12;154:44;223:6;213:8;210:20;207:40;;;243:1;240;233:12;207:40;-1:-1:-1;;269:23:13;;;314:25;;;;;-1:-1:-1;14:331:13:o;350:184::-;402:77;399:1;392:88;499:4;496:1;489:15;523:4;520:1;513:15;539:1126;624:6;632;685:2;673:9;664:7;660:23;656:32;653:52;;;701:1;698;691:12;653:52;740:9;727:23;-1:-1:-1;;;;;783:5:13;779:54;772:5;769:65;759:93;;848:1;845;838:12;759:93;871:5;-1:-1:-1;927:2:13;912:18;;899:32;950:18;980:14;;;977:34;;;1007:1;1004;997:12;977:34;1045:6;1034:9;1030:22;1020:32;;1090:7;1083:4;1079:2;1075:13;1071:27;1061:55;;1112:1;1109;1102:12;1061:55;1148:2;1135:16;1170:2;1166;1163:10;1160:36;;;1176:18;;:::i;:::-;1251:2;1245:9;1219:2;1305:13;;-1:-1:-1;;1301:22:13;;;1325:2;1297:31;1293:40;1281:53;;;1349:18;;;1369:22;;;1346:46;1343:72;;;1395:18;;:::i;:::-;1435:10;1431:2;1424:22;1470:2;1462:6;1455:18;1510:7;1505:2;1500;1496;1492:11;1488:20;1485:33;1482:53;;;1531:1;1528;1521:12;1482:53;1587:2;1582;1578;1574:11;1569:2;1561:6;1557:15;1544:46;1632:1;1627:2;1622;1614:6;1610:15;1606:24;1599:35;1653:6;1643:16;;;;;;;539:1126;;;;;:::o;1901:301::-;2030:3;2068:6;2062:13;2114:6;2107:4;2099:6;2095:17;2090:3;2084:37;2176:1;2140:16;;2165:13;;;-1:-1:-1;2140:16:13;1901:301;-1:-1:-1;1901:301:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "266000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_dispatchUpgradeToAndCall()": "infinite",
								"_fallback()": "infinite",
								"_proxyAdmin()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5082,
									"end": 5378,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5179,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5181,
									"end": 5186,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 5173,
									"end": 5179,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5181,
									"end": 5186,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1155,
									"end": 1207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1155,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1081,
									"end": 1214,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5230,
									"end": 5242,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 5215,
									"end": 5243,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1578,
									"end": 1610,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1578,
									"end": 1610,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1578,
									"end": 1610,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1560,
									"end": 1611,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1560,
									"end": 1611,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1548,
									"end": 1550,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1533,
									"end": 1551,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "CREATE",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5215,
									"end": 5243,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 5215,
									"end": 5243,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5198,
									"end": 5244,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5198,
									"end": 5244,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5198,
									"end": 5244,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5332,
									"end": 5371,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 5357,
									"end": 5370,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 5525,
									"end": 5531,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 5525,
									"end": 5531,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5525,
									"end": 5531,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5445,
									"end": 5538,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5357,
									"end": 5370,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 5357,
									"end": 5370,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5332,
									"end": 5356,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 5332,
									"end": 5371,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5332,
									"end": 5371,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 5332,
									"end": 5371,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5082,
									"end": 5378,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2365,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2384,
									"end": 2401,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2365,
									"end": 2383,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2365,
									"end": 2402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2365,
									"end": 2402,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2365,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "PUSH",
									"source": 4,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2417,
									"end": 2453,
									"name": "LOG2",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2479,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2479,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2483,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2464,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2464,
									"end": 2612,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2499,
									"end": 2552,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2528,
									"end": 2545,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2547,
									"end": 2551,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2499,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2499,
									"end": 2552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2499,
									"end": 2552,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2499,
									"end": 2552,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2499,
									"end": 2552,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2464,
									"end": 2612,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2464,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2583,
									"end": 2601,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2583,
									"end": 2599,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2583,
									"end": 2601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2583,
									"end": 2601,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2583,
									"end": 2601,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2274,
									"end": 2618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3837,
									"end": 3979,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 3837,
									"end": 3979,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "PUSH",
									"source": 4,
									"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
								},
								{
									"begin": 3922,
									"end": 3932,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "52DF0BDF5A5F92D8037CF11E50F13D8017AEFC99D20A73C826416DF79570D481"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3366,
									"end": 3410,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3366,
									"end": 3410,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3366,
									"end": 3410,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3297,
									"end": 3417,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3922,
									"end": 3932,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3922,
									"end": 3932,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1852,
									"end": 1867,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1852,
									"end": 1867,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1852,
									"end": 1867,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1834,
									"end": 1868,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1834,
									"end": 1868,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1904,
									"end": 1919,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1904,
									"end": 1919,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1904,
									"end": 1919,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1899,
									"end": 1901,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1884,
									"end": 1902,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1884,
									"end": 1902,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1877,
									"end": 1920,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1769,
									"end": 1787,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 3943,
									"name": "LOG1",
									"source": 4
								},
								{
									"begin": 3953,
									"end": 3972,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 3963,
									"end": 3971,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3953,
									"end": 3962,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 3953,
									"end": 3972,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3953,
									"end": 3972,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 3953,
									"end": 3972,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3837,
									"end": 3979,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3837,
									"end": 3979,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1681,
									"end": 1962,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1681,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1775,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1758,
									"end": 1787,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1787,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1758,
									"end": 1792,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1754,
									"end": 1873,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1754,
									"end": 1873,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C9C8CE3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1578,
									"end": 1610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1578,
									"end": 1610,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1560,
									"end": 1611,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1533,
									"end": 1551,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1533,
									"end": 1551,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1815,
									"end": 1862,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1754,
									"end": 1873,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1754,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1938,
									"end": 1955,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 821,
									"end": 887,
									"name": "PUSH",
									"source": 4,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1882,
									"end": 1929,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1882,
									"end": 1929,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 1955,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1681,
									"end": 1962,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3983,
									"end": 3995,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4008,
									"end": 4020,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4022,
									"end": 4045,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4055,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4049,
									"end": 4068,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4069,
									"end": 4073,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 4049,
									"end": 4074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DELEGATECALL",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 4049,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 4118,
									"end": 4124,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4074,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4091,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 4091,
									"end": 4146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 4091,
									"end": 4146,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4084,
									"end": 4146,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3900,
									"end": 4153,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3900,
									"end": 4153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6123,
									"end": 6245,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6123,
									"end": 6245,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6173,
									"end": 6182,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 6173,
									"end": 6186,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6169,
									"end": 6239,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 6169,
									"end": 6239,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B398979F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6209,
									"end": 6228,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6169,
									"end": 6239,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 6169,
									"end": 6239,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6123,
									"end": 6245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3500,
									"end": 3717,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 3500,
									"end": 3717,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3559,
									"end": 3581,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3559,
									"end": 3581,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3555,
									"end": 3646,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 3555,
									"end": 3646,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3635,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3604,
									"end": 3635,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3173BDD1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3604,
									"end": 3635,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3635,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3632,
									"end": 3633,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3604,
									"end": 3635,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3604,
									"end": 3635,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3635,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1560,
									"end": 1611,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1533,
									"end": 1551,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1533,
									"end": 1551,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3604,
									"end": 3635,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1414,
									"end": 1617,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3555,
									"end": 3646,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 3555,
									"end": 3646,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3702,
									"end": 3710,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "52DF0BDF5A5F92D8037CF11E50F13D8017AEFC99D20A73C826416DF79570D481"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 3655,
									"end": 3693,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 2514,
									"end": 2704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4565,
									"end": 4577,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4594,
									"end": 4601,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4625,
									"end": 4635,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4624,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4617,
									"end": 4636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4617,
									"end": 4636,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4858,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4858,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4863,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4867,
									"end": 4885,
									"name": "EXTCODESIZE",
									"source": 9
								},
								{
									"begin": 4867,
									"end": 4890,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 4841,
									"end": 4890,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9996B315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1578,
									"end": 1610,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1578,
									"end": 1610,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1560,
									"end": 1611,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1533,
									"end": 1551,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1533,
									"end": 1551,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4917,
									"end": 4941,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1414,
									"end": 1617,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4837,
									"end": 4956,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4976,
									"end": 4986,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 4589,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4421,
									"end": 5003,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5543,
									"end": 6061,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 5543,
									"end": 6061,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5674,
									"end": 5691,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5674,
									"end": 5691,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5674,
									"end": 5695,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5670,
									"end": 6055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 5670,
									"end": 6055,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5902,
									"end": 5912,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5896,
									"end": 5913,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5958,
									"end": 5973,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5945,
									"end": 5955,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5941,
									"end": 5943,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5937,
									"end": 5956,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5930,
									"end": 5974,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 5670,
									"end": 6055,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 5670,
									"end": 6055,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D6BDA275"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6025,
									"end": 6044,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4239,
									"end": 6470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 328,
									"end": 1409,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 328,
									"end": 1409,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 425,
									"end": 431,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 439,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 441,
									"end": 447,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 496,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 482,
									"end": 491,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 473,
									"end": 480,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 469,
									"end": 492,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 465,
									"end": 497,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 462,
									"end": 514,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 462,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 462,
									"end": 514,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 510,
									"end": 511,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 507,
									"end": 508,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 500,
									"end": 512,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 462,
									"end": 514,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 462,
									"end": 514,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 533,
									"end": 573,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 563,
									"end": 572,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 533,
									"end": 573,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 533,
									"end": 573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 533,
									"end": 573,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 533,
									"end": 573,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 523,
									"end": 573,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 523,
									"end": 573,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 592,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 637,
									"end": 639,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 626,
									"end": 635,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 622,
									"end": 640,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 592,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 592,
									"end": 641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 592,
									"end": 641,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 592,
									"end": 641,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 685,
									"end": 687,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 670,
									"end": 688,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 670,
									"end": 688,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 664,
									"end": 689,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 582,
									"end": 641,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 582,
									"end": 641,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 738,
									"end": 752,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 735,
									"end": 769,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 735,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 735,
									"end": 769,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 765,
									"end": 766,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 763,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 755,
									"end": 767,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 735,
									"end": 769,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 735,
									"end": 769,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 803,
									"end": 809,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 792,
									"end": 801,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 788,
									"end": 810,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 778,
									"end": 810,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 810,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 848,
									"end": 855,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 841,
									"end": 845,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 837,
									"end": 839,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 833,
									"end": 846,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 829,
									"end": 856,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 819,
									"end": 874,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 819,
									"end": 874,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 870,
									"end": 871,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 867,
									"end": 868,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 860,
									"end": 872,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 819,
									"end": 874,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 819,
									"end": 874,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 899,
									"end": 901,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 893,
									"end": 902,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 914,
									"end": 924,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 911,
									"end": 947,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 911,
									"end": 947,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 911,
									"end": 947,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 927,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 927,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 927,
									"end": 945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 927,
									"end": 945,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 927,
									"end": 945,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1002,
									"end": 1004,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 996,
									"end": 1005,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 970,
									"end": 972,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1056,
									"end": 1069,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1069,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1052,
									"end": 1074,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1052,
									"end": 1074,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1052,
									"end": 1074,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1076,
									"end": 1078,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 1048,
									"end": 1079,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1044,
									"end": 1084,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1032,
									"end": 1085,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1032,
									"end": 1085,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1032,
									"end": 1085,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1100,
									"end": 1118,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1100,
									"end": 1118,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1100,
									"end": 1118,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1120,
									"end": 1142,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1120,
									"end": 1142,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1120,
									"end": 1142,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1097,
									"end": 1143,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1094,
									"end": 1166,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1094,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 1094,
									"end": 1166,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1146,
									"end": 1164,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 1146,
									"end": 1164,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1146,
									"end": 1164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1146,
									"end": 1164,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 1146,
									"end": 1164,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1186,
									"end": 1196,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1182,
									"end": 1184,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1175,
									"end": 1197,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1223,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1213,
									"end": 1219,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1206,
									"end": 1224,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1268,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1256,
									"end": 1258,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1253,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1247,
									"end": 1249,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1243,
									"end": 1254,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1239,
									"end": 1259,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1236,
									"end": 1269,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1233,
									"end": 1286,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1233,
									"end": 1286,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 1233,
									"end": 1286,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1282,
									"end": 1283,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 1280,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1284,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1233,
									"end": 1286,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 1233,
									"end": 1286,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1331,
									"end": 1333,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1328,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1322,
									"end": 1324,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1318,
									"end": 1329,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1313,
									"end": 1315,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1305,
									"end": 1311,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1301,
									"end": 1316,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1295,
									"end": 1334,
									"name": "MCOPY",
									"source": 13
								},
								{
									"begin": 1376,
									"end": 1377,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1373,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1366,
									"end": 1368,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1364,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1354,
									"end": 1369,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1350,
									"end": 1374,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1378,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1397,
									"end": 1403,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1403,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1403,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1403,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1403,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1403,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1403,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1403,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 328,
									"end": 1409,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 328,
									"end": 1409,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 328,
									"end": 1409,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 328,
									"end": 1409,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 328,
									"end": 1409,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 328,
									"end": 1409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1931,
									"end": 2232,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1931,
									"end": 2232,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2060,
									"end": 2063,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2098,
									"end": 2104,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2105,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2144,
									"end": 2150,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2137,
									"end": 2141,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2129,
									"end": 2135,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2125,
									"end": 2142,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2123,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2114,
									"end": 2151,
									"name": "MCOPY",
									"source": 13
								},
								{
									"begin": 2206,
									"end": 2207,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2170,
									"end": 2186,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2170,
									"end": 2186,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2195,
									"end": 2208,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2195,
									"end": 2208,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2195,
									"end": 2208,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2170,
									"end": 2186,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1931,
									"end": 2232,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1931,
									"end": 2232,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1931,
									"end": 2232,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 1931,
									"end": 2232,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "623"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4239,
									"end": 6470,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008e833b8a99f99db0b94d2b0cd95bc37bbcbeeed1cc58f47dce8130cc9d93ce164736f6c63430008190033",
									".code": [
										{
											"begin": 4239,
											"end": 6470,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4239,
											"end": 6470,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4239,
											"end": 6470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2649,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 6470,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5680,
											"end": 6049,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5680,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5531,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "623"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5741,
											"end": 5768,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5741,
											"end": 5751,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5741,
											"end": 5768,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 5737,
											"end": 6043,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5788,
											"end": 5795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5795,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5788,
											"end": 5853,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5788,
											"end": 5795,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5799,
											"end": 5853,
											"name": "PUSH",
											"source": 8,
											"value": "4F1EF28600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5788,
											"end": 5853,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5784,
											"end": 5985,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "PUSH",
											"source": 8,
											"value": "D2B576EC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5904,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5985,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5784,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5943,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 5943,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5970,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5943,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5680,
											"end": 6049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 6043,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 5737,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6015,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 6015,
											"end": 6032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6251,
											"end": 6468,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 6251,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6366,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6366,
											"end": 6374,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6375,
											"end": 6376,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6366,
											"end": 6374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6332,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6366,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6366,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6366,
											"end": 6378,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6366,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6355,
											"end": 6397,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6397,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6355,
											"end": 6397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6397,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6355,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6306,
											"end": 6397,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6306,
											"end": 6397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6306,
											"end": 6397,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6306,
											"end": 6397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6407,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6437,
											"end": 6454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6456,
											"end": 6460,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6407,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 6407,
											"end": 6461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6407,
											"end": 6461,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6407,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6251,
											"end": 6468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2381,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2371,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2618,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2274,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2384,
											"end": 2401,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2402,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "PUSH",
											"source": 4,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2483,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2464,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2464,
											"end": 2612,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2528,
											"end": 2545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2499,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2552,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2499,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6296,
											"end": 6468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6251,
											"end": 6468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2612,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2464,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2583,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 821,
											"end": 887,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1589,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1503,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1734,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1962,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1681,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1775,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1758,
											"end": 1787,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1787,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1792,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1754,
											"end": 1873,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "PUSH",
											"source": 4,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1834,
											"end": 1889,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1890,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1862,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1873,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1754,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 821,
											"end": 887,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1955,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4049,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4091,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3900,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6123,
											"end": 6245,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6123,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6182,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6186,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6169,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 6169,
											"end": 6239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "PUSH",
											"source": 4,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 9,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1889,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1834,
											"end": 1889,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1890,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1670,
											"end": 1896,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5543,
											"end": 6061,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5543,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 5670,
											"end": 6055,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5912,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5896,
											"end": 5913,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5945,
											"end": 5955,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5941,
											"end": 5943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5937,
											"end": 5956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 5974,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 6055,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 5670,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "PUSH",
											"source": 9,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14,
											"end": 345,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 119,
											"end": 128,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 172,
											"end": 180,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 160,
											"end": 170,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 157,
											"end": 181,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 154,
											"end": 198,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 154,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 154,
											"end": 198,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 192,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 184,
											"end": 196,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 154,
											"end": 198,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 154,
											"end": 198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 223,
											"end": 229,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 213,
											"end": 221,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 210,
											"end": 230,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 207,
											"end": 247,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 207,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 207,
											"end": 247,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 243,
											"end": 244,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 241,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 233,
											"end": 245,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 207,
											"end": 247,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 207,
											"end": 247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 269,
											"end": 292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 269,
											"end": 292,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 314,
											"end": 339,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 314,
											"end": 339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 314,
											"end": 339,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 314,
											"end": 339,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 314,
											"end": 339,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 350,
											"end": 534,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 350,
											"end": 534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 402,
											"end": 479,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 399,
											"end": 400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 480,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 499,
											"end": 503,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 489,
											"end": 504,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 523,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 520,
											"end": 521,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 528,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 539,
											"end": 1665,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 539,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 624,
											"end": 630,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 638,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 685,
											"end": 687,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 682,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 664,
											"end": 671,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 660,
											"end": 683,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 656,
											"end": 688,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 653,
											"end": 705,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 653,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 653,
											"end": 705,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 701,
											"end": 702,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 691,
											"end": 703,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 653,
											"end": 705,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 653,
											"end": 705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 740,
											"end": 749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 727,
											"end": 750,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 783,
											"end": 788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 779,
											"end": 833,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 772,
											"end": 777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 769,
											"end": 834,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 759,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 759,
											"end": 852,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 848,
											"end": 849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 846,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 838,
											"end": 850,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 759,
											"end": 852,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 759,
											"end": 852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 871,
											"end": 876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 927,
											"end": 929,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 930,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 912,
											"end": 930,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 899,
											"end": 931,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 950,
											"end": 968,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 980,
											"end": 994,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 980,
											"end": 994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 980,
											"end": 994,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1007,
											"end": 1008,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1009,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 977,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1052,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1020,
											"end": 1052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1083,
											"end": 1087,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1081,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1075,
											"end": 1088,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1071,
											"end": 1098,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1061,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1061,
											"end": 1116,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1061,
											"end": 1116,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1061,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1148,
											"end": 1150,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1135,
											"end": 1151,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1166,
											"end": 1168,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1163,
											"end": 1173,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1160,
											"end": 1196,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1160,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1160,
											"end": 1196,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1176,
											"end": 1194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1251,
											"end": 1253,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1301,
											"end": 1323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1301,
											"end": 1323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1301,
											"end": 1323,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1327,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 1297,
											"end": 1328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 1333,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1281,
											"end": 1334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1391,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1391,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1391,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1346,
											"end": 1392,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1343,
											"end": 1415,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1343,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1343,
											"end": 1415,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1395,
											"end": 1413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1435,
											"end": 1445,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1470,
											"end": 1472,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1462,
											"end": 1468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1510,
											"end": 1517,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1502,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1492,
											"end": 1503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1485,
											"end": 1518,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1535,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1482,
											"end": 1535,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1521,
											"end": 1533,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1535,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1482,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1587,
											"end": 1589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1582,
											"end": 1584,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1580,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1569,
											"end": 1571,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1567,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1557,
											"end": 1572,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1544,
											"end": 1590,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1629,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1624,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1610,
											"end": 1625,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1606,
											"end": 1630,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1599,
											"end": 1634,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1653,
											"end": 1659,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1643,
											"end": 1659,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1643,
											"end": 1659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1643,
											"end": 1659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1643,
											"end": 1659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1643,
											"end": 1659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1643,
											"end": 1659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1643,
											"end": 1659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 1665,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 539,
											"end": 1665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 1665,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 539,
											"end": 1665,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 539,
											"end": 1665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 1665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 2202,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1901,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2030,
											"end": 2033,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2062,
											"end": 2075,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2114,
											"end": 2120,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2105,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2095,
											"end": 2112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2090,
											"end": 2093,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2121,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2156,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2140,
											"end": 2156,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 2202,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 2202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								},
								"1": {
									".code": [
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "PUSHSIZE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "CODESIZE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "PUSHSIZE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1329,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1383,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 455,
											"end": 506,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 428,
											"end": 446,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 446,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1373,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 304,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 14,
											"end": 304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 84,
											"end": 90,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 139,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 134,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 116,
											"end": 123,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 112,
											"end": 135,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 108,
											"end": 140,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 105,
											"end": 157,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 105,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 153,
											"end": 154,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 151,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 143,
											"end": 155,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 105,
											"end": 157,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 179,
											"end": 195,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 179,
											"end": 195,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 255,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 224,
											"end": 255,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 214,
											"end": 256,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 214,
											"end": 256,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 204,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 204,
											"end": 274,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 270,
											"end": 271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 260,
											"end": 272,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 204,
											"end": 274,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 204,
											"end": 274,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 293,
											"end": 298,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14,
											"end": 304,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 309,
											"end": 512,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 309,
											"end": 512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH #[$]",
											"source": 7,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH [$]",
											"source": 7,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 1964,
											"name": "RETURN",
											"source": 7
										}
									],
									".data": {
										"0": {
											".auxdata": "a264697066735822122077ecba69c01c31832a71b8b8e6bbb452462afc9570c5ffedbf52c409c789a31a64736f6c63430008190033",
											".code": [
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "80"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "CALLDATASIZE",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "LT",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "1"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "CALLDATALOAD",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "E0"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "SHR",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "9623609D"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "GT",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "7"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "9623609D"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "AD3CB1CC"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "5"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "F2FDE38B"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "6"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "tag",
													"source": 7,
													"value": "7"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "715018A6"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "2"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "8DA5CB5B"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "EQ",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "3"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "tag",
													"source": 7,
													"value": "1"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 502,
													"end": 1964,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 1,
													"value": "2"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "CALLVALUE",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "8"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 1,
													"value": "8"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "9"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "10"
												},
												{
													"begin": 2293,
													"end": 2394,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 1,
													"value": "9"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "STOP",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "tag",
													"source": 1,
													"value": "3"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "CALLVALUE",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "11"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "tag",
													"source": 1,
													"value": "11"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1684,
													"end": 1691,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SLOAD",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 160,
													"end": 234,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 160,
													"end": 234,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 148,
													"end": 150,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 133,
													"end": 151,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "tag",
													"source": 1,
													"value": "14"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "SUB",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "RETURN",
													"source": 1
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "tag",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "9"
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "17"
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "CALLDATASIZE",
													"source": 7
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "18"
												},
												{
													"begin": 1717,
													"end": 1962,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "tag",
													"source": 7,
													"value": "17"
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "19"
												},
												{
													"begin": 1717,
													"end": 1962,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "tag",
													"source": 7,
													"value": "5"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "CALLVALUE",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "tag",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "21"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH",
													"source": 7,
													"value": "5"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH",
													"source": 7,
													"value": "20"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH",
													"source": 7,
													"value": "352E302E30000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "tag",
													"source": 7,
													"value": "21"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "14"
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "SWAP2",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1187,
													"end": 1245,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "24"
												},
												{
													"begin": 1187,
													"end": 1245,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 1,
													"value": "6"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "CALLVALUE",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "25"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 1,
													"value": "25"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "9"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "27"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "CALLDATASIZE",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH",
													"source": 1,
													"value": "4"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "28"
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 1,
													"value": "27"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "29"
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 1,
													"value": "10"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "31"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 1,
													"value": "31"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "34"
												},
												{
													"begin": 2384,
													"end": 2385,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2357,
													"end": 2375,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "35"
												},
												{
													"begin": 2357,
													"end": 2387,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "tag",
													"source": 1,
													"value": "34"
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2293,
													"end": 2394,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "tag",
													"source": 7,
													"value": "19"
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "38"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 1,
													"value": "38"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1893,
													"end": 1955,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"name": "PUSH",
													"source": 7,
													"value": "4F1EF28600000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 1893,
													"end": 1955,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"name": "MSTORE",
													"source": 7
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1893,
													"end": 1915,
													"name": "DUP5",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1915,
													"modifierDepth": 1,
													"name": "AND",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1915,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1915,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 7,
													"value": "4F1EF286"
												},
												{
													"begin": 1893,
													"end": 1915,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1923,
													"end": 1932,
													"modifierDepth": 1,
													"name": "CALLVALUE",
													"source": 7
												},
												{
													"begin": 1923,
													"end": 1932,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1893,
													"end": 1955,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1934,
													"end": 1948,
													"name": "DUP7",
													"source": 7
												},
												{
													"begin": 1934,
													"end": 1948,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1950,
													"end": 1954,
													"name": "DUP7",
													"source": 7
												},
												{
													"begin": 1950,
													"end": 1954,
													"name": "SWAP1",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 7,
													"value": "4"
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "41"
												},
												{
													"begin": 1893,
													"end": 1955,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "tag",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 7,
													"value": "40"
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "MLOAD",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "DUP4",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "SUB",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "DUP6",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "DUP9",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "EXTCODESIZE",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "42"
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1893,
													"end": 1955,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "tag",
													"source": 7,
													"value": "42"
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "GAS",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "CALL",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "ISZERO",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 7,
													"value": "44"
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "RETURNDATASIZE",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1893,
													"end": 1955,
													"name": "DUP1",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "RETURNDATACOPY",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "RETURNDATASIZE",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 7,
													"value": "0"
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "REVERT",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "tag",
													"source": 7,
													"value": "44"
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1893,
													"end": 1955,
													"modifierDepth": 1,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1717,
													"end": 1962,
													"name": "POP",
													"source": 7
												},
												{
													"begin": 1717,
													"end": 1962,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 7
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 1,
													"value": "29"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "46"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 1,
													"value": "46"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 2627,
													"end": 2649,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2627,
													"end": 2649,
													"modifierDepth": 1,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "48"
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 1,
													"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 2700,
													"end": 2701,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 1,
													"value": "4"
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 160,
													"end": 234,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 133,
													"end": 151,
													"name": "PUSH",
													"source": 13,
													"value": "24"
												},
												{
													"begin": 133,
													"end": 151,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "tag",
													"source": 1,
													"value": "49"
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "SUB",
													"source": 1
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "tag",
													"source": 1,
													"value": "48"
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "50"
												},
												{
													"begin": 2742,
													"end": 2750,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2723,
													"end": 2741,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "35"
												},
												{
													"begin": 2723,
													"end": 2751,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "tag",
													"source": 1,
													"value": "50"
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "tag",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1684,
													"end": 1691,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SLOAD",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 10
												},
												{
													"begin": 1855,
													"end": 1878,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "34"
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 1,
													"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 10
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 1,
													"value": "4"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 160,
													"end": 234,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 133,
													"end": 151,
													"name": "PUSH",
													"source": 13,
													"value": "24"
												},
												{
													"begin": 133,
													"end": 151,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "49"
												},
												{
													"begin": 14,
													"end": 240,
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "tag",
													"source": 1,
													"value": "35"
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SLOAD",
													"source": 1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "PUSH",
													"source": 1,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "OR",
													"source": 1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SSTORE",
													"source": 1
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 1,
													"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "LOG3",
													"source": 1
												},
												{
													"begin": 2975,
													"end": 3099,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2912,
													"end": 3099,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 245,
													"end": 429,
													"name": "tag",
													"source": 13,
													"value": "60"
												},
												{
													"begin": 245,
													"end": 429,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 354,
													"end": 359,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 350,
													"end": 404,
													"name": "AND",
													"source": 13
												},
												{
													"begin": 343,
													"end": 348,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 340,
													"end": 405,
													"name": "EQ",
													"source": 13
												},
												{
													"begin": 330,
													"end": 423,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "50"
												},
												{
													"begin": 330,
													"end": 423,
													"name": "JUMPI",
													"source": 13
												},
												{
													"begin": 419,
													"end": 420,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 416,
													"end": 417,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 409,
													"end": 421,
													"name": "REVERT",
													"source": 13
												},
												{
													"begin": 434,
													"end": 618,
													"name": "tag",
													"source": 13,
													"value": "61"
												},
												{
													"begin": 434,
													"end": 618,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 486,
													"end": 563,
													"name": "PUSH",
													"source": 13,
													"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 483,
													"end": 484,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 476,
													"end": 564,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 583,
													"end": 587,
													"name": "PUSH",
													"source": 13,
													"value": "41"
												},
												{
													"begin": 580,
													"end": 581,
													"name": "PUSH",
													"source": 13,
													"value": "4"
												},
												{
													"begin": 573,
													"end": 588,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 607,
													"end": 611,
													"name": "PUSH",
													"source": 13,
													"value": "24"
												},
												{
													"begin": 604,
													"end": 605,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 597,
													"end": 612,
													"name": "REVERT",
													"source": 13
												},
												{
													"begin": 623,
													"end": 1916,
													"name": "tag",
													"source": 13,
													"value": "18"
												},
												{
													"begin": 623,
													"end": 1916,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 745,
													"end": 751,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 753,
													"end": 759,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 761,
													"end": 767,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 814,
													"end": 816,
													"name": "PUSH",
													"source": 13,
													"value": "60"
												},
												{
													"begin": 802,
													"end": 811,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 793,
													"end": 800,
													"name": "DUP7",
													"source": 13
												},
												{
													"begin": 789,
													"end": 812,
													"name": "SUB",
													"source": 13
												},
												{
													"begin": 785,
													"end": 817,
													"name": "SLT",
													"source": 13
												},
												{
													"begin": 782,
													"end": 834,
													"name": "ISZERO",
													"source": 13
												},
												{
													"begin": 782,
													"end": 834,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "69"
												},
												{
													"begin": 782,
													"end": 834,
													"name": "JUMPI",
													"source": 13
												},
												{
													"begin": 830,
													"end": 831,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 827,
													"end": 828,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 820,
													"end": 832,
													"name": "REVERT",
													"source": 13
												},
												{
													"begin": 782,
													"end": 834,
													"name": "tag",
													"source": 13,
													"value": "69"
												},
												{
													"begin": 782,
													"end": 834,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 869,
													"end": 878,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 856,
													"end": 879,
													"name": "CALLDATALOAD",
													"source": 13
												},
												{
													"begin": 888,
													"end": 949,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "70"
												},
												{
													"begin": 943,
													"end": 948,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 888,
													"end": 949,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "60"
												},
												{
													"begin": 888,
													"end": 949,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 888,
													"end": 949,
													"name": "tag",
													"source": 13,
													"value": "70"
												},
												{
													"begin": 888,
													"end": 949,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 968,
													"end": 973,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1025,
													"end": 1027,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 1010,
													"end": 1028,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 1010,
													"end": 1028,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 997,
													"end": 1029,
													"name": "CALLDATALOAD",
													"source": 13
												},
												{
													"begin": 1038,
													"end": 1101,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "71"
												},
												{
													"begin": 997,
													"end": 1029,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1038,
													"end": 1101,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "60"
												},
												{
													"begin": 1038,
													"end": 1101,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1038,
													"end": 1101,
													"name": "tag",
													"source": 13,
													"value": "71"
												},
												{
													"begin": 1038,
													"end": 1101,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1120,
													"end": 1127,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1178,
													"end": 1180,
													"name": "PUSH",
													"source": 13,
													"value": "40"
												},
												{
													"begin": 1163,
													"end": 1181,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 1163,
													"end": 1181,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1150,
													"end": 1182,
													"name": "CALLDATALOAD",
													"source": 13
												},
												{
													"begin": 1201,
													"end": 1219,
													"name": "PUSH",
													"source": 13,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1231,
													"end": 1245,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 1231,
													"end": 1245,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1231,
													"end": 1245,
													"name": "GT",
													"source": 13
												},
												{
													"begin": 1228,
													"end": 1262,
													"name": "ISZERO",
													"source": 13
												},
												{
													"begin": 1228,
													"end": 1262,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "72"
												},
												{
													"begin": 1228,
													"end": 1262,
													"name": "JUMPI",
													"source": 13
												},
												{
													"begin": 1258,
													"end": 1259,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 1255,
													"end": 1256,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 1248,
													"end": 1260,
													"name": "REVERT",
													"source": 13
												},
												{
													"begin": 1228,
													"end": 1262,
													"name": "tag",
													"source": 13,
													"value": "72"
												},
												{
													"begin": 1228,
													"end": 1262,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1296,
													"end": 1302,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1285,
													"end": 1294,
													"name": "DUP7",
													"source": 13
												},
												{
													"begin": 1281,
													"end": 1303,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1271,
													"end": 1303,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 1271,
													"end": 1303,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1341,
													"end": 1348,
													"name": "DUP7",
													"source": 13
												},
												{
													"begin": 1334,
													"end": 1338,
													"name": "PUSH",
													"source": 13,
													"value": "1F"
												},
												{
													"begin": 1330,
													"end": 1332,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 1326,
													"end": 1339,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1322,
													"end": 1349,
													"name": "SLT",
													"source": 13
												},
												{
													"begin": 1312,
													"end": 1367,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "73"
												},
												{
													"begin": 1312,
													"end": 1367,
													"name": "JUMPI",
													"source": 13
												},
												{
													"begin": 1363,
													"end": 1364,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 1360,
													"end": 1361,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 1353,
													"end": 1365,
													"name": "REVERT",
													"source": 13
												},
												{
													"begin": 1312,
													"end": 1367,
													"name": "tag",
													"source": 13,
													"value": "73"
												},
												{
													"begin": 1312,
													"end": 1367,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1399,
													"end": 1401,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1386,
													"end": 1402,
													"name": "CALLDATALOAD",
													"source": 13
												},
												{
													"begin": 1421,
													"end": 1423,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1417,
													"end": 1419,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1414,
													"end": 1424,
													"name": "GT",
													"source": 13
												},
												{
													"begin": 1411,
													"end": 1447,
													"name": "ISZERO",
													"source": 13
												},
												{
													"begin": 1411,
													"end": 1447,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "75"
												},
												{
													"begin": 1411,
													"end": 1447,
													"name": "JUMPI",
													"source": 13
												},
												{
													"begin": 1427,
													"end": 1445,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "75"
												},
												{
													"begin": 1427,
													"end": 1445,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "61"
												},
												{
													"begin": 1427,
													"end": 1445,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1427,
													"end": 1445,
													"name": "tag",
													"source": 13,
													"value": "75"
												},
												{
													"begin": 1427,
													"end": 1445,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1502,
													"end": 1504,
													"name": "PUSH",
													"source": 13,
													"value": "40"
												},
												{
													"begin": 1496,
													"end": 1505,
													"name": "MLOAD",
													"source": 13
												},
												{
													"begin": 1470,
													"end": 1472,
													"name": "PUSH",
													"source": 13,
													"value": "1F"
												},
												{
													"begin": 1556,
													"end": 1569,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1556,
													"end": 1569,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 1552,
													"end": 1574,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 1552,
													"end": 1574,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1552,
													"end": 1574,
													"name": "AND",
													"source": 13
												},
												{
													"begin": 1576,
													"end": 1578,
													"name": "PUSH",
													"source": 13,
													"value": "3F"
												},
												{
													"begin": 1548,
													"end": 1579,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1544,
													"end": 1584,
													"name": "AND",
													"source": 13
												},
												{
													"begin": 1532,
													"end": 1585,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1532,
													"end": 1585,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1532,
													"end": 1585,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 1600,
													"end": 1618,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 1600,
													"end": 1618,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1600,
													"end": 1618,
													"name": "GT",
													"source": 13
												},
												{
													"begin": 1620,
													"end": 1642,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1620,
													"end": 1642,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 1620,
													"end": 1642,
													"name": "LT",
													"source": 13
												},
												{
													"begin": 1597,
													"end": 1643,
													"name": "OR",
													"source": 13
												},
												{
													"begin": 1594,
													"end": 1666,
													"name": "ISZERO",
													"source": 13
												},
												{
													"begin": 1594,
													"end": 1666,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "77"
												},
												{
													"begin": 1594,
													"end": 1666,
													"name": "JUMPI",
													"source": 13
												},
												{
													"begin": 1646,
													"end": 1664,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "77"
												},
												{
													"begin": 1646,
													"end": 1664,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "61"
												},
												{
													"begin": 1646,
													"end": 1664,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1646,
													"end": 1664,
													"name": "tag",
													"source": 13,
													"value": "77"
												},
												{
													"begin": 1646,
													"end": 1664,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1686,
													"end": 1696,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1682,
													"end": 1684,
													"name": "PUSH",
													"source": 13,
													"value": "40"
												},
												{
													"begin": 1675,
													"end": 1697,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 1721,
													"end": 1723,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1713,
													"end": 1719,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1706,
													"end": 1724,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 1761,
													"end": 1768,
													"name": "DUP10",
													"source": 13
												},
												{
													"begin": 1756,
													"end": 1758,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 1751,
													"end": 1753,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 1747,
													"end": 1749,
													"name": "DUP8",
													"source": 13
												},
												{
													"begin": 1743,
													"end": 1754,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1739,
													"end": 1759,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1736,
													"end": 1769,
													"name": "GT",
													"source": 13
												},
												{
													"begin": 1733,
													"end": 1786,
													"name": "ISZERO",
													"source": 13
												},
												{
													"begin": 1733,
													"end": 1786,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "78"
												},
												{
													"begin": 1733,
													"end": 1786,
													"name": "JUMPI",
													"source": 13
												},
												{
													"begin": 1782,
													"end": 1783,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 1779,
													"end": 1780,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 1772,
													"end": 1784,
													"name": "REVERT",
													"source": 13
												},
												{
													"begin": 1733,
													"end": 1786,
													"name": "tag",
													"source": 13,
													"value": "78"
												},
												{
													"begin": 1733,
													"end": 1786,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1838,
													"end": 1840,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1833,
													"end": 1835,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 1829,
													"end": 1831,
													"name": "DUP7",
													"source": 13
												},
												{
													"begin": 1825,
													"end": 1836,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1820,
													"end": 1822,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 1812,
													"end": 1818,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 1808,
													"end": 1823,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1795,
													"end": 1841,
													"name": "CALLDATACOPY",
													"source": 13
												},
												{
													"begin": 1883,
													"end": 1884,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 1878,
													"end": 1880,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 1873,
													"end": 1875,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 1865,
													"end": 1871,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 1861,
													"end": 1876,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1857,
													"end": 1881,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1850,
													"end": 1885,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 1904,
													"end": 1910,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 1894,
													"end": 1910,
													"name": "SWAP6",
													"source": 13
												},
												{
													"begin": 1894,
													"end": 1910,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1894,
													"end": 1910,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1894,
													"end": 1910,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1894,
													"end": 1910,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1894,
													"end": 1910,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1894,
													"end": 1910,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 623,
													"end": 1916,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": 623,
													"end": 1916,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 623,
													"end": 1916,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": 623,
													"end": 1916,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 623,
													"end": 1916,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": 623,
													"end": 1916,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1921,
													"end": 2210,
													"name": "tag",
													"source": 13,
													"value": "62"
												},
												{
													"begin": 1921,
													"end": 2210,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1963,
													"end": 1966,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 2001,
													"end": 2006,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1995,
													"end": 2007,
													"name": "MLOAD",
													"source": 13
												},
												{
													"begin": 2028,
													"end": 2034,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 2023,
													"end": 2026,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 2016,
													"end": 2035,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 2084,
													"end": 2090,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 2077,
													"end": 2081,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 2070,
													"end": 2075,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 2066,
													"end": 2082,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2059,
													"end": 2063,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 2054,
													"end": 2057,
													"name": "DUP7",
													"source": 13
												},
												{
													"begin": 2050,
													"end": 2064,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2044,
													"end": 2091,
													"name": "MCOPY",
													"source": 13
												},
												{
													"begin": 2136,
													"end": 2137,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 2129,
													"end": 2133,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 2120,
													"end": 2126,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 2115,
													"end": 2118,
													"name": "DUP7",
													"source": 13
												},
												{
													"begin": 2111,
													"end": 2127,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2107,
													"end": 2134,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2100,
													"end": 2138,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 2199,
													"end": 2203,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 2192,
													"end": 2194,
													"name": "PUSH",
													"source": 13,
													"value": "1F"
												},
												{
													"begin": 2188,
													"end": 2195,
													"name": "NOT",
													"source": 13
												},
												{
													"begin": 2183,
													"end": 2185,
													"name": "PUSH",
													"source": 13,
													"value": "1F"
												},
												{
													"begin": 2175,
													"end": 2181,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 2171,
													"end": 2186,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2167,
													"end": 2196,
													"name": "AND",
													"source": 13
												},
												{
													"begin": 2162,
													"end": 2165,
													"name": "DUP6",
													"source": 13
												},
												{
													"begin": 2158,
													"end": 2197,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2154,
													"end": 2204,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2147,
													"end": 2204,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 2147,
													"end": 2204,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 2147,
													"end": 2204,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1921,
													"end": 2210,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": 1921,
													"end": 2210,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 1921,
													"end": 2210,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1921,
													"end": 2210,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1921,
													"end": 2210,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 2215,
													"end": 2435,
													"name": "tag",
													"source": 13,
													"value": "24"
												},
												{
													"begin": 2215,
													"end": 2435,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 2364,
													"end": 2366,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 2353,
													"end": 2362,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 2346,
													"end": 2367,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 2327,
													"end": 2331,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 2384,
													"end": 2429,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "81"
												},
												{
													"begin": 2425,
													"end": 2427,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 2414,
													"end": 2423,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 2410,
													"end": 2428,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2402,
													"end": 2408,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 2384,
													"end": 2429,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "62"
												},
												{
													"begin": 2384,
													"end": 2429,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 2384,
													"end": 2429,
													"name": "tag",
													"source": 13,
													"value": "81"
												},
												{
													"begin": 2384,
													"end": 2429,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 2376,
													"end": 2429,
													"name": "SWAP4",
													"source": 13
												},
												{
													"begin": 2215,
													"end": 2435,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 2215,
													"end": 2435,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 2440,
													"end": 2717,
													"name": "tag",
													"source": 13,
													"value": "28"
												},
												{
													"begin": 2440,
													"end": 2717,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 2499,
													"end": 2505,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 2552,
													"end": 2554,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 2540,
													"end": 2549,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 2531,
													"end": 2538,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 2527,
													"end": 2550,
													"name": "SUB",
													"source": 13
												},
												{
													"begin": 2523,
													"end": 2555,
													"name": "SLT",
													"source": 13
												},
												{
													"begin": 2520,
													"end": 2572,
													"name": "ISZERO",
													"source": 13
												},
												{
													"begin": 2520,
													"end": 2572,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "83"
												},
												{
													"begin": 2520,
													"end": 2572,
													"name": "JUMPI",
													"source": 13
												},
												{
													"begin": 2568,
													"end": 2569,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 2565,
													"end": 2566,
													"name": "DUP1",
													"source": 13
												},
												{
													"begin": 2558,
													"end": 2570,
													"name": "REVERT",
													"source": 13
												},
												{
													"begin": 2520,
													"end": 2572,
													"name": "tag",
													"source": 13,
													"value": "83"
												},
												{
													"begin": 2520,
													"end": 2572,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 2607,
													"end": 2616,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 2594,
													"end": 2617,
													"name": "CALLDATALOAD",
													"source": 13
												},
												{
													"begin": 2626,
													"end": 2687,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "81"
												},
												{
													"begin": 2681,
													"end": 2686,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 2626,
													"end": 2687,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "60"
												},
												{
													"begin": 2626,
													"end": 2687,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 2722,
													"end": 3060,
													"name": "tag",
													"source": 13,
													"value": "41"
												},
												{
													"begin": 2722,
													"end": 3060,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 2901,
													"end": 2907,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 2897,
													"end": 2952,
													"name": "AND",
													"source": 13
												},
												{
													"begin": 2886,
													"end": 2895,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 2879,
													"end": 2953,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 2989,
													"end": 2991,
													"name": "PUSH",
													"source": 13,
													"value": "40"
												},
												{
													"begin": 2984,
													"end": 2986,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 2973,
													"end": 2982,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 2969,
													"end": 2987,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2962,
													"end": 2992,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 2860,
													"end": 2864,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 3009,
													"end": 3054,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "86"
												},
												{
													"begin": 3050,
													"end": 3052,
													"name": "PUSH",
													"source": 13,
													"value": "40"
												},
												{
													"begin": 3039,
													"end": 3048,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 3035,
													"end": 3053,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 3027,
													"end": 3033,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 3009,
													"end": 3054,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "62"
												},
												{
													"begin": 3009,
													"end": 3054,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 3009,
													"end": 3054,
													"name": "tag",
													"source": 13,
													"value": "86"
												},
												{
													"begin": 3009,
													"end": 3054,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 3001,
													"end": 3054,
													"name": "SWAP5",
													"source": 13
												},
												{
													"begin": 2722,
													"end": 3060,
													"name": "SWAP4",
													"source": 13
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 2722,
													"end": 3060,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												}
											]
										}
									}
								},
								"52DF0BDF5A5F92D8037CF11E50F13D8017AEFC99D20A73C826416DF79570D481": "b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
							},
							"sourceList": [
								"contracts/ContractT/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProxyDeniedAdminAccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself. 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating the proxy admin cannot fallback to the target implementation. These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract. IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot is generally fine if the implementation is trusted. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ProxyDeniedAdminAccess()\":[{\"details\":\"The proxy caller is the current admin, and can't fallback to the proxy target.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x5f3770f82f75d132e210b43c071d3feec1bef13c385d1d799763a366e8bda311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a50b7702cbd525c4a0fd3c36d1e116432b5f645f84cb25e4473dc9c88a917c5\",\"dweb:/ipfs/QmaN5QKZwgypVK3zAwdgXfsygEeauRYa4sSe4x8yKXDRtV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x3cfd70b5e57ac16134caf206c6a71ea5ff113bc2032cd6d845231793f5c62995\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://984097ae51f9be9b94d2a3f5be7f284bd525fd9f0a0ccdca34cfaa7f0e1625d1\",\"dweb:/ipfs/QmXSL4rFMM25pJzvuTzN1DX4ddAwTCnmxS2axDwaZyzNHL\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfd29ed7a01e9ef109cc31542ca0f51ba3e793740570b69172ec3d8bfbb1643b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99379e0649be8106d2708a2bde73b5cdaba4505f1001f1586b53788bf971d097\",\"dweb:/ipfs/QmV9cCnvFoVzV2cVDW4Zbs3JQ3ehxBcooQS52taVxR637S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":233:6063  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":233:6063  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122072644f2a657794bc17c3107393765beeb6f6abe7e5e3a7606f966bba14ab46dc64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122072644f2a657794bc17c3107393765beeb6f6abe7e5e3a7606f966bba14ab46dc64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x644F2A657794BC17C3107393765BEEB6F6ABE7 0xE5 0xE3 0xA7 PUSH1 0x6F SWAP7 PUSH12 0xBA14AB46DC64736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "233:5830:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5830:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122072644f2a657794bc17c3107393765beeb6f6abe7e5e3a7606f966bba14ab46dc64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x644F2A657794BC17C3107393765BEEB6F6ABE7 0xE5 0xE3 0xA7 PUSH1 0x6F SWAP7 PUSH12 0xBA14AB46DC64736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "233:5830:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072644f2a657794bc17c3107393765beeb6f6abe7e5e3a7606f966bba14ab46dc64736f6c63430008190033",
									".code": [
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractT/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality.",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":314:696  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":314:696  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bdd40ae62da2743fd14237f11b8726cb01c7b3d2f6b5bee2e090e5d4e2715f6364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bdd40ae62da2743fd14237f11b8726cb01c7b3d2f6b5bee2e090e5d4e2715f6364736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xD4 EXP 0xE6 0x2D LOG2 PUSH21 0x3FD14237F11B8726CB01C7B3D2F6B5BEE2E090E5D4 0xE2 PUSH18 0x5F6364736F6C634300081900330000000000 ",
							"sourceMap": "314:382:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;314:382:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bdd40ae62da2743fd14237f11b8726cb01c7b3d2f6b5bee2e090e5d4e2715f6364736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xD4 EXP 0xE6 0x2D LOG2 PUSH21 0x3FD14237F11B8726CB01C7B3D2F6B5BEE2E090E5D4 0xE2 PUSH18 0x5F6364736F6C634300081900330000000000 ",
							"sourceMap": "314:382:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 314,
									"end": 696,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bdd40ae62da2743fd14237f11b8726cb01c7b3d2f6b5bee2e090e5d4e2715f6364736f6c63430008190033",
									".code": [
										{
											"begin": 314,
											"end": 696,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 314,
											"end": 696,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 314,
											"end": 696,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 314,
											"end": 696,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 696,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 696,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 314,
											"end": 696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 696,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 314,
											"end": 696,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractT/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality.\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` Since version 5.1, this library also support writing and reading value types to and from transient storage.  * Example using transient storage: ```solidity contract Lock {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _LOCK_SLOT = 0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542;     modifier locked() {         require(!_LOCK_SLOT.asBoolean().tload());         _LOCK_SLOT.asBoolean().tstore(true);         _;         _LOCK_SLOT.asBoolean().tstore(false);     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":2022:9316  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":2022:9316  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f4a8b8ffc886b51dd88ee0860fb799fca3f4ca0542f8cc5745a1bad842733ce264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f4a8b8ffc886b51dd88ee0860fb799fca3f4ca0542f8cc5745a1bad842733ce264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xA8 0xB8 SELFDESTRUCT 0xC8 DUP7 0xB5 SAR 0xD8 DUP15 0xE0 DUP7 0xF 0xB7 SWAP10 0xFC LOG3 DELEGATECALL 0xCA SDIV TIMESTAMP 0xF8 0xCC JUMPI GASLIMIT LOG1 0xBA 0xD8 TIMESTAMP PUSH20 0x3CE264736F6C6343000819003300000000000000 ",
							"sourceMap": "2022:7294:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2022:7294:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f4a8b8ffc886b51dd88ee0860fb799fca3f4ca0542f8cc5745a1bad842733ce264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xA8 0xB8 SELFDESTRUCT 0xC8 DUP7 0xB5 SAR 0xD8 DUP15 0xE0 DUP7 0xF 0xB7 SWAP10 0xFC LOG3 DELEGATECALL 0xCA SDIV TIMESTAMP 0xF8 0xCC JUMPI GASLIMIT LOG1 0xBA 0xD8 TIMESTAMP PUSH20 0x3CE264736F6C6343000819003300000000000000 ",
							"sourceMap": "2022:7294:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"asAddress(bytes32)": "infinite",
								"asBoolean(bytes32)": "infinite",
								"asBytes32(bytes32)": "infinite",
								"asInt256(bytes32)": "infinite",
								"asUint256(bytes32)": "infinite",
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite",
								"tload(StorageSlot.AddressSlotType)": "infinite",
								"tload(StorageSlot.BooleanSlotType)": "infinite",
								"tload(StorageSlot.Bytes32SlotType)": "infinite",
								"tload(StorageSlot.Int256SlotType)": "infinite",
								"tload(StorageSlot.Uint256SlotType)": "infinite",
								"tstore(StorageSlot.AddressSlotType,address)": "infinite",
								"tstore(StorageSlot.BooleanSlotType,bool)": "infinite",
								"tstore(StorageSlot.Bytes32SlotType,bytes32)": "infinite",
								"tstore(StorageSlot.Int256SlotType,int256)": "infinite",
								"tstore(StorageSlot.Uint256SlotType,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 9316,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4a8b8ffc886b51dd88ee0860fb799fca3f4ca0542f8cc5745a1bad842733ce264736f6c63430008190033",
									".code": [
										{
											"begin": 2022,
											"end": 9316,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 9316,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 9316,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 9316,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2022,
											"end": 9316,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 9316,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 9316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 9316,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 9316,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractT/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` Since version 5.1, this library also support writing and reading value types to and from transient storage.  * Example using transient storage: ```solidity contract Lock {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _LOCK_SLOT = 0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542;     modifier locked() {         require(!_LOCK_SLOT.asBoolean().tload());         _LOCK_SLOT.asBoolean().tstore(true);         _;         _LOCK_SLOT.asBoolean().tstore(false);     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfd29ed7a01e9ef109cc31542ca0f51ba3e793740570b69172ec3d8bfbb1643b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99379e0649be8106d2708a2bde73b5cdaba4505f1001f1586b53788bf971d097\",\"dweb:/ipfs/QmV9cCnvFoVzV2cVDW4Zbs3JQ3ehxBcooQS52taVxR637S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2394",
				"formattedMessage": "Warning: Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.\n   --> https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol:247:13:\n    |\n247 |             tstore(slot, value)\n    |             ^^^^^^\n\n",
				"message": "Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7119,
					"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
					"start": 7113
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ContractT/ProxyAdmin.sol": {
				"ast": {
					"absolutePath": "contracts/ContractT/ProxyAdmin.sol",
					"exportedSymbols": {
						"ITransparentUpgradeableProxy": [
							618
						],
						"Ownable": [
							150
						],
						"ProxyAdmin": [
							597
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "34:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3,
							"sourceUnit": 598,
							"src": "62:119:0",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "34:147:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1021
						],
						"Ownable": [
							150
						]
					},
					"id": 151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 151,
							"sourceUnit": 1022,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 5,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1021,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1021,
										"src": "692:7:1"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 7,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 150,
							"linearizedBaseContracts": [
								150,
								1021
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 150,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 16,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 21,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 27,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 33,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 34,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 42,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 41,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 40,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 43,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 39,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 45,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 49,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 48,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 53,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 150,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 56,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 59,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 61,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 67,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 66,
												"id": 68,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 150,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 74,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 76,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 85,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 84,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 80,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1003,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 79,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 83,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 150,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 94,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 93,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 91,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 90,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 61,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 150,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 109,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 110,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 123,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 122,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 116,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 115,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 121,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 125,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 124,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 107,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 106,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 61,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 150,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 135,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": {
													"id": 137,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 139,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 140,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 144,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 145,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 143,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 150,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 151,
							"src": "663:2438:1",
							"usedErrors": [
								16,
								21
							],
							"usedEvents": [
								27
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							171
						]
					},
					"id": 172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 152,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 153,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:2",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 171,
							"linearizedBaseContracts": [
								171
							],
							"name": "IERC1967",
							"nameLocation": "245:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:2",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 158,
									"name": "Upgraded",
									"nameLocation": "339:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "348:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:2"
									},
									"src": "333:47:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:2",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 165,
									"name": "AdminChanged",
									"nameLocation": "464:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "477:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "500:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:2"
									},
									"src": "458:60:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:2",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 170,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "609:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:2"
									},
									"src": "588:45:2"
								}
							],
							"scope": 172,
							"src": "235:400:2",
							"usedErrors": [],
							"usedEvents": [
								158,
								165,
								170
							]
						}
					],
					"src": "107:529:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol",
					"exportedSymbols": {
						"ERC1967Proxy": [
							209
						],
						"ERC1967Utils": [
							503
						],
						"Proxy": [
							539
						]
					},
					"id": 210,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 173,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 210,
							"sourceUnit": 540,
							"src": "140:35:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 174,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 539,
										"src": "148:5:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "./ERC1967Utils.sol",
							"id": 177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 210,
							"sourceUnit": 504,
							"src": "176:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 176,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 503,
										"src": "184:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 179,
										"name": "Proxy",
										"nameLocations": [
											"625:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 539,
										"src": "625:5:3"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "625:5:3"
								}
							],
							"canonicalName": "ERC1967Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "226:373:3",
								"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
							},
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209,
								539
							],
							"name": "ERC1967Proxy",
							"nameLocation": "609:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "1145:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "1185:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1201:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 188,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1155:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$503_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1168:16:3",
														"memberName": "upgradeToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 318,
														"src": "1155:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1155:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "1155:52:3"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "637:439:3",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
									},
									"id": 196,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1101:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1093:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1130:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1117:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1117:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:44:3"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:0:3"
									},
									"scope": 209,
									"src": "1081:133:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										520
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1659:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 203,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1676:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$503_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1689:17:3",
														"memberName": "getImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "1676:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 202,
												"id": 206,
												"nodeType": "Return",
												"src": "1669:39:3"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1220:358:3",
										"text": " @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1592:15:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 199,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1632:8:3"
									},
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:2:3"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1650:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:9:3"
									},
									"scope": 209,
									"src": "1583:132:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 210,
							"src": "600:1117:3",
							"usedErrors": [
								229,
								242,
								742,
								1034
							],
							"usedEvents": [
								158
							]
						}
					],
					"src": "114:1604:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							991
						],
						"ERC1967Utils": [
							503
						],
						"IBeacon": [
							549
						],
						"IERC1967": [
							171
						],
						"StorageSlot": [
							1357
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 211,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 504,
							"sourceUnit": 550,
							"src": "140:46:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 212,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 549,
										"src": "148:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 504,
							"sourceUnit": 172,
							"src": "187:55:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 214,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 171,
										"src": "195:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 504,
							"sourceUnit": 992,
							"src": "243:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 216,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 991,
										"src": "251:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 219,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 504,
							"sourceUnit": 1358,
							"src": "292:56:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 218,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1357,
										"src": "300:11:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 220,
								"nodeType": "StructuredDocumentation",
								"src": "350:155:4",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "ERC1967Utils",
							"nameLocation": "514:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "533:170:4",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 224,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "799:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "773:114:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 222,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 223,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "821:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "894:69:4",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 229,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "974:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1011:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1003:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:24:4"
									},
									"src": "968:59:4"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "1033:60:4",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 234,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1104:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1132:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1124:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:15:4"
									},
									"src": "1098:41:4"
								},
								{
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "1145:61:4",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 239,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1217:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1246:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1238:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:16:4"
									},
									"src": "1211:43:4"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1260:82:4",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 242,
									"name": "ERC1967NonPayable",
									"nameLocation": "1353:17:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:2:4"
									},
									"src": "1347:26:4"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "1512:77:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 250,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "1556:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 248,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "1529:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1357_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1541:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1073,
															"src": "1529:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1529:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1044_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1577:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1043,
													"src": "1529:53:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 247,
												"id": 253,
												"nodeType": "Return",
												"src": "1522:60:4"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "1379:67:4",
										"text": " @dev Returns the current implementation address."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1460:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:2:4"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1503:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:9:4"
									},
									"scope": 503,
									"src": "1451:138:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1744:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 261,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "1758:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1776:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1758:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1781:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1758:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1791:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1758:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "1754:119:4",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "1794:79:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 267,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "1844:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 266,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "1815:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1815:47:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "1808:54:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 275,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "1909:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 272,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "1882:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1357_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1894:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1073,
																"src": "1882:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1882:47:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1044_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1930:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1043,
														"src": "1882:53:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "1938:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1882:73:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "1882:73:4"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "1595:81:4",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1690:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1717:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1709:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:27:4"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1744:0:4"
									},
									"scope": 503,
									"src": "1681:281:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2355:263:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "2384:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 290,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2365:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "2365:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 297,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "2435:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 294,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2417:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$171_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2426:8:4",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "2417:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2417:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "EmitStatement",
												"src": "2412:41:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 300,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "2468:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2473:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2468:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2482:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2468:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "2569:43:4",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 312,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "2583:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2583:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "ExpressionStatement",
															"src": "2583:18:4"
														}
													]
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "2464:148:4",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "2485:78:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 307,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "2528:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 308,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2547:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 304,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "2499:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$991_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2507:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 908,
																	"src": "2499:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2499:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 310,
															"nodeType": "ExpressionStatement",
															"src": "2499:53:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1968:301:4",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2283:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2308:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2300:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2300:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2340:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2327:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2327:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2299:46:4"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:4"
									},
									"scope": 503,
									"src": "2274:344:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2624:145:4",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 322,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2865:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "2839:105:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 320,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2839:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 321,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2878:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "3349:68:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 330,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "3393:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 328,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "3366:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1357_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3378:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1073,
															"src": "3366:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3366:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1044_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3405:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1043,
													"src": "3366:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 327,
												"id": 333,
												"nodeType": "Return",
												"src": "3359:51:4"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "2951:341:4",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3306:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:4"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3340:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:9:4"
									},
									"scope": 503,
									"src": "3297:120:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "3545:172:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 341,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "3559:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3579:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3571:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 342,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3571:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3571:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3559:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 355,
												"nodeType": "IfStatement",
												"src": "3555:91:4",
												"trueBody": {
													"id": 354,
													"nodeType": "Block",
													"src": "3583:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3632:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3624:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 348,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3624:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3624:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 347,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "3604:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3604:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 353,
															"nodeType": "RevertStatement",
															"src": "3597:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 359,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "3682:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 356,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "3655:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1357_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3667:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1073,
																"src": "3655:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3655:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1044_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3694:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1043,
														"src": "3655:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 362,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "3702:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3655:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "3655:55:4"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "3423:72:4",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3509:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3527:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "3519:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3519:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3518:18:4"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3545:0:4"
									},
									"scope": 503,
									"src": "3500:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3885:94:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 375,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3922:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3922:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "3934:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "3900:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$171_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3909:12:4",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 165,
														"src": "3900:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3900:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "EmitStatement",
												"src": "3895:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 381,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "3963:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 380,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "3953:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3953:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "3953:19:4"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "3723:109:4",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3846:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3866:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3858:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3858:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3857:18:4"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3885:0:4"
									},
									"scope": 503,
									"src": "3837:142:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3985:201:4",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 389,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4282:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 503,
									"src": "4256:106:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 387,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4256:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 388,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4296:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "4478:69:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 397,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "4522:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 395,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "4495:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1357_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4507:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1073,
															"src": "4495:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4495:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1044_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4535:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1043,
													"src": "4495:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 394,
												"id": 400,
												"nodeType": "Return",
												"src": "4488:52:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "4369:51:4",
										"text": " @dev Returns the current beacon."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4434:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4443:2:4"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "4469:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4468:9:4"
									},
									"scope": 503,
									"src": "4425:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "4677:390:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 408,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "4691:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4701:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4691:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4706:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4691:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4716:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4691:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 418,
												"nodeType": "IfStatement",
												"src": "4687:95:4",
												"trueBody": {
													"id": 417,
													"nodeType": "Block",
													"src": "4719:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 414,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "4761:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 413,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "4740:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4740:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 416,
															"nodeType": "RevertStatement",
															"src": "4733:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 422,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "4819:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 419,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "4792:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1357_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4804:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1073,
																"src": "4792:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1044_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4792:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1044_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4832:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1043,
														"src": "4792:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 425,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "4840:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4792:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "4792:57:4"
											},
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4868:20:4",
														"nodeType": "VariableDeclaration",
														"scope": 447,
														"src": "4860:28:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 428,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 431,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "4899:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 430,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "4891:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$549_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4891:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$549",
																"typeString": "contract IBeacon"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4910:14:4",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "4891:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4891:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:66:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 436,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "4940:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4961:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4940:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4966:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4940:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4976:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4940:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "4936:125:4",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "4979:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 442,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "5029:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 441,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "5000:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5000:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "4993:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "4553:72:4",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4639:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4658:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4650:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4650:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4649:19:4"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4677:0:4"
									},
									"scope": 503,
									"src": "4630:437:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "5671:263:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5692:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 456,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "5681:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5681:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "5681:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 463,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5741:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 460,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5717:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$171_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5726:14:4",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 170,
														"src": "5717:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5717:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "5712:39:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 466,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5766:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5771:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5766:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5780:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5766:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "5885:43:4",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 482,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "5899:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5899:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "5899:18:4"
														}
													]
												},
												"id": 486,
												"nodeType": "IfStatement",
												"src": "5762:166:4",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "5783:96:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 474,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 451,
																						"src": "5834:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 473,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 549,
																					"src": "5826:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$549_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5826:18:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$549",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5845:14:4",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 548,
																			"src": "5826:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5826:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 478,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "5863:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 470,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "5797:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$991_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5805:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 908,
																	"src": "5797:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5797:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 480,
															"nodeType": "ExpressionStatement",
															"src": "5797:71:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "5073:514:4",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5601:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5632:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "5624:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5624:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5656:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "5643:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5643:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5623:38:4"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5671:0:4"
									},
									"scope": 503,
									"src": "5592:342:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "6159:86:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 492,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6173:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6177:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6173:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6185:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6173:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "6169:70:4",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "6188:51:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 496,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6209:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6209:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 498,
															"nodeType": "RevertStatement",
															"src": "6202:26:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "5940:178:4",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6132:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6148:2:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6159:0:4"
									},
									"scope": 503,
									"src": "6123:122:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 504,
							"src": "506:5741:4",
							"usedErrors": [
								229,
								234,
								239,
								242
							],
							"usedEvents": []
						}
					],
					"src": "114:6134:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							539
						]
					},
					"id": 540,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "125:598:5",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 539,
							"linearizedBaseContracts": [
								539
							],
							"name": "Proxy",
							"nameLocation": "742:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "1009:835:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1028:810:5",
													"nodeType": "YulBlock",
													"src": "1028:810:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1281:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1284:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1284:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1287:12:5",
																			"nodeType": "YulIdentifier",
																			"src": "1287:12:5"
																		},
																		"nativeSrc": "1287:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1287:14:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1268:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1268:12:5"
																},
																"nativeSrc": "1268:34:5",
																"nodeType": "YulFunctionCall",
																"src": "1268:34:5"
															},
															"nativeSrc": "1268:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "1268:34:5"
														},
														{
															"nativeSrc": "1429:74:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1429:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1456:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:5"
																		},
																		"nativeSrc": "1456:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:5:5"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1463:14:5",
																		"nodeType": "YulIdentifier",
																		"src": "1463:14:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1479:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1482:12:5",
																			"nodeType": "YulIdentifier",
																			"src": "1482:12:5"
																		},
																		"nativeSrc": "1482:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:14:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1501:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1443:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1443:12:5"
																},
																"nativeSrc": "1443:60:5",
																"nodeType": "YulFunctionCall",
																"src": "1443:60:5"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1433:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1433:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1571:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1571:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1574:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1577:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "1577:14:5"
																		},
																		"nativeSrc": "1577:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:16:5"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1556:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "1556:14:5"
																},
																"nativeSrc": "1556:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1556:38:5"
															},
															"nativeSrc": "1556:38:5",
															"nodeType": "YulExpressionStatement",
															"src": "1556:38:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1689:59:5",
																		"nodeType": "YulBlock",
																		"src": "1689:59:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1714:1:5",
																							"nodeType": "YulLiteral",
																							"src": "1714:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1717:14:5",
																								"nodeType": "YulIdentifier",
																								"src": "1717:14:5"
																							},
																							"nativeSrc": "1717:16:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1717:16:5"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1707:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1707:6:5"
																					},
																					"nativeSrc": "1707:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1707:27:5"
																				},
																				"nativeSrc": "1707:27:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "1707:27:5"
																			}
																		]
																	},
																	"nativeSrc": "1682:66:5",
																	"nodeType": "YulCase",
																	"src": "1682:66:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1687:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:5",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1769:59:5",
																		"nodeType": "YulBlock",
																		"src": "1769:59:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1794:1:5",
																							"nodeType": "YulLiteral",
																							"src": "1794:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1797:14:5",
																								"nodeType": "YulIdentifier",
																								"src": "1797:14:5"
																							},
																							"nativeSrc": "1797:16:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1797:16:5"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1787:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1787:6:5"
																					},
																					"nativeSrc": "1787:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1787:27:5"
																				},
																				"nativeSrc": "1787:27:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "1787:27:5"
																			}
																		]
																	},
																	"nativeSrc": "1761:67:5",
																	"nodeType": "YulCase",
																	"src": "1761:67:5",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1615:6:5",
																"nodeType": "YulIdentifier",
																"src": "1615:6:5"
															},
															"nativeSrc": "1608:220:5",
															"nodeType": "YulSwitch",
															"src": "1608:220:5"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "1463:14:5",
														"valueSize": 1
													}
												],
												"id": 512,
												"nodeType": "InlineAssembly",
												"src": "1019:819:5"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "754:190:5",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "958:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "976:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "968:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:24:5"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:5"
									},
									"scope": 539,
									"src": "949:895:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "1850:173:5",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
									},
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2037:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2052:2:5"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2086:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:9:5"
									},
									"scope": 539,
									"src": "2028:67:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "2361:45:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 525,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "2381:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2381:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 524,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2371:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2371:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "2371:28:5"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2101:217:5",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2332:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:2:5"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:0:5"
									},
									"scope": 539,
									"src": "2323:83:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "2639:28:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 534,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "2649:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:11:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "2649:11:5"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "2412:186:5",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 538,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:2:5"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2639:0:5"
									},
									"scope": 539,
									"src": "2603:64:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 540,
							"src": "724:1945:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:2571:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							549
						]
					},
					"id": 550,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 541,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 542,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:6",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 549,
							"linearizedBaseContracts": [
								549
							],
							"name": "IBeacon",
							"nameLocation": "224:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:6",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:6"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "460:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:6"
									},
									"scope": 549,
									"src": "411:58:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 550,
							"src": "214:257:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
					"exportedSymbols": {
						"ITransparentUpgradeableProxy": [
							618
						],
						"Ownable": [
							150
						],
						"ProxyAdmin": [
							597
						]
					},
					"id": 598,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 551,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
							"file": "./TransparentUpgradeableProxy.sol",
							"id": 553,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 733,
							"src": "142:79:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 552,
										"name": "ITransparentUpgradeableProxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 618,
										"src": "150:28:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "../../access/Ownable.sol",
							"id": 555,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 151,
							"src": "222:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 554,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 150,
										"src": "230:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 557,
										"name": "Ownable",
										"nameLocations": [
											"525:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 150,
										"src": "525:7:7"
									},
									"id": 558,
									"nodeType": "InheritanceSpecifier",
									"src": "525:7:7"
								}
							],
							"canonicalName": "ProxyAdmin",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 556,
								"nodeType": "StructuredDocumentation",
								"src": "273:228:7",
								"text": " @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."
							},
							"fullyImplemented": true,
							"id": 597,
							"linearizedBaseContracts": [
								597,
								150,
								1021
							],
							"name": "ProxyAdmin",
							"nameLocation": "511:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "539:643:7",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)`\n and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called,\n while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 562,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1210:25:7",
									"nodeType": "VariableDeclaration",
									"scope": 597,
									"src": "1187:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 560,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1187:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 561,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1238:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "1385:2:7",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1252:72:7",
										"text": " @dev Sets the initial owner who can perform upgrades."
									},
									"id": 572,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 568,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 565,
													"src": "1371:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 569,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 567,
												"name": "Ownable",
												"nameLocations": [
													"1363:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 150,
												"src": "1363:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1363:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1349:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1341:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:7"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1385:0:7"
									},
									"scope": 597,
									"src": "1329:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "1883:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "1934:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 592,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "1950:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 585,
																"name": "proxy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "1893:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$618",
																	"typeString": "contract ITransparentUpgradeableProxy"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1899:16:7",
															"memberName": "upgradeToAndCall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 617,
															"src": "1893:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																"typeString": "function (address,bytes memory) payable external"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 588,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1923:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1927:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1923:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1893:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value",
															"typeString": "function (address,bytes memory) payable external"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1893:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "1893:62:7"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "1393:319:7",
										"text": " @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation.\n See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}.\n Requirements:\n - This contract must be the admin of `proxy`.\n - If `data` is empty, `msg.value` must be zero."
									},
									"functionSelector": "9623609d",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 583,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 582,
												"name": "onlyOwner",
												"nameLocations": [
													"1873:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 61,
												"src": "1873:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1873:9:7"
										}
									],
									"name": "upgradeAndCall",
									"nameLocation": "1726:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "proxy",
												"nameLocation": "1779:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1750:34:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$618",
													"typeString": "contract ITransparentUpgradeableProxy"
												},
												"typeName": {
													"id": 575,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 574,
														"name": "ITransparentUpgradeableProxy",
														"nameLocations": [
															"1750:28:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 618,
														"src": "1750:28:7"
													},
													"referencedDeclaration": 618,
													"src": "1750:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$618",
														"typeString": "contract ITransparentUpgradeableProxy"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1802:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1794:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1839:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1826:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1826:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1740:109:7"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1883:0:7"
									},
									"scope": 597,
									"src": "1717:245:7",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 598,
							"src": "502:1462:7",
							"usedErrors": [
								16,
								21
							],
							"usedEvents": [
								27
							]
						}
					],
					"src": "116:1849:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
					"exportedSymbols": {
						"ERC1967Proxy": [
							209
						],
						"ERC1967Utils": [
							503
						],
						"IERC1967": [
							171
						],
						"ITransparentUpgradeableProxy": [
							618
						],
						"ProxyAdmin": [
							597
						],
						"TransparentUpgradeableProxy": [
							732
						]
					},
					"id": 733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 599,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "133:24:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "../ERC1967/ERC1967Utils.sol",
							"id": 601,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 733,
							"sourceUnit": 504,
							"src": "159:57:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 600,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 503,
										"src": "167:12:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/ERC1967/ERC1967Proxy.sol",
							"file": "../ERC1967/ERC1967Proxy.sol",
							"id": 603,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 733,
							"sourceUnit": 210,
							"src": "217:57:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 602,
										"name": "ERC1967Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 209,
										"src": "225:12:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 605,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 733,
							"sourceUnit": 172,
							"src": "275:55:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 604,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 171,
										"src": "283:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/transparent/ProxyAdmin.sol",
							"file": "./ProxyAdmin.sol",
							"id": 607,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 733,
							"sourceUnit": 598,
							"src": "331:44:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 606,
										"name": "ProxyAdmin",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 597,
										"src": "339:10:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 609,
										"name": "IERC1967",
										"nameLocations": [
											"865:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 171,
										"src": "865:8:8"
									},
									"id": 610,
									"nodeType": "InheritanceSpecifier",
									"src": "865:8:8"
								}
							],
							"canonicalName": "ITransparentUpgradeableProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 608,
								"nodeType": "StructuredDocumentation",
								"src": "377:445:8",
								"text": " @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch\n mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n include them in the ABI so this interface must be used to interact with it."
							},
							"fullyImplemented": false,
							"id": 618,
							"linearizedBaseContracts": [
								618,
								171
							],
							"name": "ITransparentUpgradeableProxy",
							"nameLocation": "833:28:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4f1ef286",
									"id": 617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "889:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "906:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "915:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "915:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:25:8"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:0:8"
									},
									"scope": 618,
									"src": "880:68:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 733,
							"src": "823:127:8",
							"usedErrors": [],
							"usedEvents": [
								158,
								165,
								170
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 620,
										"name": "ERC1967Proxy",
										"nameLocations": [
											"4279:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 209,
										"src": "4279:12:8"
									},
									"id": 621,
									"nodeType": "InheritanceSpecifier",
									"src": "4279:12:8"
								}
							],
							"canonicalName": "TransparentUpgradeableProxy",
							"contractDependencies": [
								597
							],
							"contractKind": "contract",
							"documentation": {
								"id": 619,
								"nodeType": "StructuredDocumentation",
								"src": "952:3286:8",
								"text": " @dev This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself.\n 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to\n the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating\n the proxy admin cannot fallback to the target implementation.\n These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a\n dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to\n call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and\n allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative\n interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership.\n NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch\n mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n implementation.\n NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a\n meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract.\n IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an\n immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be\n overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an\n undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot\n is generally fine if the implementation is trusted.\n WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the\n compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new\n function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This\n could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency."
							},
							"fullyImplemented": true,
							"id": 732,
							"linearizedBaseContracts": [
								732,
								209,
								539
							],
							"name": "TransparentUpgradeableProxy",
							"nameLocation": "4248:27:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 623,
									"mutability": "immutable",
									"name": "_admin",
									"nameLocation": "4659:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 732,
									"src": "4633:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 622,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4633:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4672:102:8",
										"text": " @dev The proxy caller is the current admin, and can't fallback to the proxy target."
									},
									"errorSelector": "d2b576ec",
									"id": 626,
									"name": "ProxyDeniedAdminAccess",
									"nameLocation": "4785:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4807:2:8"
									},
									"src": "4779:31:8"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "5188:190:8",
										"statements": [
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 640,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "5198:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 646,
																		"name": "initialOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5230:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "5215:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ProxyAdmin_$597_$",
																		"typeString": "function (address) returns (contract ProxyAdmin)"
																	},
																	"typeName": {
																		"id": 644,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 643,
																			"name": "ProxyAdmin",
																			"nameLocations": [
																				"5219:10:8"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 597,
																			"src": "5219:10:8"
																		},
																		"referencedDeclaration": 597,
																		"src": "5219:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ProxyAdmin_$597",
																			"typeString": "contract ProxyAdmin"
																		}
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5215:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ProxyAdmin_$597",
																	"typeString": "contract ProxyAdmin"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ProxyAdmin_$597",
																	"typeString": "contract ProxyAdmin"
																}
															],
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5207:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 641,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5207:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5207:37:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5198:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "5198:46:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 654,
																"name": "_proxyAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "5357:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5357:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 651,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "5332:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$503_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5345:11:8",
														"memberName": "changeAdmin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 385,
														"src": "5332:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5332:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "5332:39:8"
											}
										]
									},
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "4816:261:8",
										"text": " @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n {ERC1967Proxy-constructor}."
									},
									"id": 659,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 636,
													"name": "_logic",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 629,
													"src": "5173:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 637,
													"name": "_data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 633,
													"src": "5181:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												}
											],
											"id": 638,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 635,
												"name": "ERC1967Proxy",
												"nameLocations": [
													"5160:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 209,
												"src": "5160:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5160:27:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "5102:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5094:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5094:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "5118:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5110:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5145:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5132:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5132:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5093:58:8"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5188:0:8"
									},
									"scope": 732,
									"src": "5082:296:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "5508:30:8",
										"statements": [
											{
												"expression": {
													"id": 665,
													"name": "_admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 623,
													"src": "5525:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 664,
												"id": 666,
												"nodeType": "Return",
												"src": "5518:13:8"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "5384:56:8",
										"text": " @dev Returns the admin of this proxy."
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_proxyAdmin",
									"nameLocation": "5454:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5465:2:8"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "5499:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5499:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5498:9:8"
									},
									"scope": 732,
									"src": "5445:93:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										530
									],
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "5727:322:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 673,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5741:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5745:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5741:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 675,
															"name": "_proxyAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5755:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5755:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5741:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 699,
													"nodeType": "Block",
													"src": "6001:42:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 694,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "6015:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$732_$",
																			"typeString": "type(contract super TransparentUpgradeableProxy)"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6021:9:8",
																	"memberName": "_fallback",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 530,
																	"src": "6015:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6015:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 698,
															"nodeType": "ExpressionStatement",
															"src": "6015:17:8"
														}
													]
												},
												"id": 700,
												"nodeType": "IfStatement",
												"src": "5737:306:8",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "5770:225:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 678,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5788:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5792:3:8",
																	"memberName": "sig",
																	"nodeType": "MemberAccess",
																	"src": "5788:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 680,
																			"name": "ITransparentUpgradeableProxy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 618,
																			"src": "5799:28:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$618_$",
																				"typeString": "type(contract ITransparentUpgradeableProxy)"
																			}
																		},
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "5828:16:8",
																		"memberName": "upgradeToAndCall",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 617,
																		"src": "5799:45:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_payable$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
																			"typeString": "function ITransparentUpgradeableProxy.upgradeToAndCall(address,bytes calldata) payable"
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5845:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "5799:54:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "5788:65:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 691,
																"nodeType": "Block",
																"src": "5925:60:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 688,
																				"name": "_dispatchUpgradeToAndCall",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 731,
																				"src": "5943:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5943:27:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 690,
																		"nodeType": "ExpressionStatement",
																		"src": "5943:27:8"
																	}
																]
															},
															"id": 692,
															"nodeType": "IfStatement",
															"src": "5784:201:8",
															"trueBody": {
																"id": 687,
																"nodeType": "Block",
																"src": "5855:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 684,
																				"name": "ProxyDeniedAdminAccess",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 626,
																				"src": "5880:22:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5880:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 686,
																		"nodeType": "RevertStatement",
																		"src": "5873:31:8"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "5544:131:8",
										"text": " @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "5689:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 671,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5718:8:8"
									},
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:2:8"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5727:0:8"
									},
									"scope": 732,
									"src": "5680:369:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "6296:172:8",
										"statements": [
											{
												"assignments": [
													707,
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"mutability": "mutable",
														"name": "newImplementation",
														"nameLocation": "6315:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "6307:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 706,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6307:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "6347:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "6334:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 708,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6334:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"expression": {
																	"id": 712,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6366:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6370:4:8",
																"memberName": "data",
																"nodeType": "MemberAccess",
																"src": "6366:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexRangeAccess",
															"src": "6366:12:8",
															"startExpression": {
																"hexValue": "34",
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6375:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr_slice",
																"typeString": "bytes calldata slice"
															}
														},
														{
															"components": [
																{
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6381:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6381:7:8",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6390:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 718,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6390:5:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 720,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6380:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(address),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr_slice",
																"typeString": "bytes calldata slice"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(address),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 710,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "6355:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6359:6:8",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "6355:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_payable_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(address payable,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6306:91:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 726,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "6437:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "6456:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 723,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6407:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$503_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6420:16:8",
														"memberName": "upgradeToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 318,
														"src": "6407:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "6407:54:8"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "6055:191:8",
										"text": " @dev Upgrade the implementation of the proxy. See {ERC1967Utils-upgradeToAndCall}.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_dispatchUpgradeToAndCall",
									"nameLocation": "6260:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6285:2:8"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6296:0:8"
									},
									"scope": 732,
									"src": "6251:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 733,
							"src": "4239:2231:8",
							"usedErrors": [
								229,
								234,
								242,
								626,
								742,
								1034
							],
							"usedEvents": [
								158,
								165
							]
						}
					],
					"src": "133:6338:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							991
						],
						"Errors": [
							1038
						]
					},
					"id": 992,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 734,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 992,
							"sourceUnit": 1039,
							"src": "127:36:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 735,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1038,
										"src": "135:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 737,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 991,
							"linearizedBaseContracts": [
								991
							],
							"name": "Address",
							"nameLocation": "241:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 742,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:9"
									},
									"src": "335:39:9"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "1361:278:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 752,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$991",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$991",
																		"typeString": "library Address"
																	}
																],
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 755,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1399:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "1371:125:9",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "1407:89:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$991",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$991",
																						"typeString": "library Address"
																					}
																				],
																				"id": 761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 760,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 765,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "1478:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 757,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "1428:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1038_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1031,
																	"src": "1428:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 767,
															"nodeType": "RevertStatement",
															"src": "1421:64:9"
														}
													]
												}
											},
											{
												"assignments": [
													771,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 788,
														"src": "1507:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 770,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 778,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 772,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "1525:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 774,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "1547:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:9"
											},
											{
												"condition": {
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:9",
													"subExpression": {
														"id": 779,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "1573:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"nodeType": "IfStatement",
												"src": "1568:65:9",
												"trueBody": {
													"id": 786,
													"nodeType": "Block",
													"src": "1582:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 781,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "1603:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1038_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1034,
																	"src": "1603:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 785,
															"nodeType": "RevertStatement",
															"src": "1596:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "1309:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "1336:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:9"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:9"
									},
									"scope": 991,
									"src": "1290:349:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "2573:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 800,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "2612:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 801,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2620:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 799,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "2590:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 798,
												"id": 804,
												"nodeType": "Return",
												"src": "2583:45:9"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2506:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2522:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:9"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2559:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:9"
									},
									"scope": 991,
									"src": "2484:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "3072:294:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 820,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$991",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$991",
																		"typeString": "library Address"
																	}
																],
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 818,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 823,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "3110:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 837,
												"nodeType": "IfStatement",
												"src": "3082:123:9",
												"trueBody": {
													"id": 836,
													"nodeType": "Block",
													"src": "3117:88:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 830,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$991",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$991",
																						"typeString": "library Address"
																					}
																				],
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 828,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 833,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "3188:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 825,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "3138:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1038_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1031,
																	"src": "3138:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 835,
															"nodeType": "RevertStatement",
															"src": "3131:63:9"
														}
													]
												}
											},
											{
												"assignments": [
													839,
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "3215:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 838,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "3229:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 840,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 848,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "3282:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 842,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "3256:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 844,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "3275:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 850,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "3331:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "3339:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 852,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "3348:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 849,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3304:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 817,
												"id": 854,
												"nodeType": "Return",
												"src": "3297:62:9"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2990:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3006:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3025:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:9"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "3058:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 815,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:9"
									},
									"scope": 991,
									"src": "2959:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "3605:154:9",
										"statements": [
											{
												"assignments": [
													867,
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "3616:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 866,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "3630:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 868,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"arguments": [
														{
															"id": 872,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3675:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 870,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "3657:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 876,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "3724:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "3732:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 878,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "3741:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 875,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3697:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 865,
												"id": 880,
												"nodeType": "Return",
												"src": "3690:62:9"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3533:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3549:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:9"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3591:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:9"
									},
									"scope": 991,
									"src": "3505:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "3997:156:9",
										"statements": [
											{
												"assignments": [
													893,
													895
												],
												"declarations": [
													{
														"constant": false,
														"id": 893,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "4008:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 892,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "4022:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 894,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 900,
												"initialValue": {
													"arguments": [
														{
															"id": 898,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "4069:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 896,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "4049:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "4118:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "4126:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 904,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "4135:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 901,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "4091:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 891,
												"id": 906,
												"nodeType": "Return",
												"src": "4084:62:9"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "3930:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "3946:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 886,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:9"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "3983:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 889,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:9"
									},
									"scope": 991,
									"src": "3900:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "4579:424:9",
										"statements": [
											{
												"condition": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:9",
													"subExpression": {
														"id": 920,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "4594:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 945,
													"nodeType": "Block",
													"src": "4653:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 927,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "4841:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 931,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "4867:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 942,
															"nodeType": "IfStatement",
															"src": "4837:119:9",
															"trueBody": {
																"id": 941,
																"nodeType": "Block",
																"src": "4892:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 938,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 911,
																					"src": "4934:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 937,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 742,
																				"src": "4917:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 940,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 943,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "4976:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 919,
															"id": 944,
															"nodeType": "Return",
															"src": "4969:17:9"
														}
													]
												},
												"id": 946,
												"nodeType": "IfStatement",
												"src": "4589:408:9",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "4603:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 923,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "4625:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 922,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "4617:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 925,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "4466:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "4490:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 912,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "4512:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:9"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "4565:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:9"
									},
									"scope": 991,
									"src": "4421:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "5307:122:9",
										"statements": [
											{
												"condition": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:9",
													"subExpression": {
														"id": 958,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "5322:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 967,
													"nodeType": "Block",
													"src": "5381:42:9",
													"statements": [
														{
															"expression": {
																"id": 965,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "5402:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 957,
															"id": 966,
															"nodeType": "Return",
															"src": "5395:17:9"
														}
													]
												},
												"id": 968,
												"nodeType": "IfStatement",
												"src": "5317:106:9",
												"trueBody": {
													"id": 964,
													"nodeType": "Block",
													"src": "5331:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 961,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "5353:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 960,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "5345:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 963,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "5231:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 950,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "5245:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 952,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:9"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "5293:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 955,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:9"
									},
									"scope": 991,
									"src": "5205:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "5598:463:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 976,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "5674:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "6004:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 982,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "6025:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1038_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6032:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1034,
																	"src": "6025:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6025:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 986,
															"nodeType": "RevertStatement",
															"src": "6018:26:9"
														}
													]
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "5670:385:9",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "5697:301:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5855:133:9",
																"nodeType": "YulBlock",
																"src": "5855:133:9",
																"statements": [
																	{
																		"nativeSrc": "5873:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5873:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5902:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5902:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5896:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5896:5:9"
																			},
																			"nativeSrc": "5896:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5896:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5877:15:9",
																				"nodeType": "YulTypedName",
																				"src": "5877:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5941:2:9",
																							"nodeType": "YulLiteral",
																							"src": "5941:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5945:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5945:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5937:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5937:3:9"
																					},
																					"nativeSrc": "5937:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5937:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5958:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "5958:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5930:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:9"
																			},
																			"nativeSrc": "5930:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5930:44:9"
																		},
																		"nativeSrc": "5930:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5930:44:9"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 973,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5902:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 973,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5945:10:9",
																	"valueSize": 1
																}
															],
															"id": 980,
															"nodeType": "InlineAssembly",
															"src": "5846:142:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "5560:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:9"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:9"
									},
									"scope": 991,
									"src": "5543:518:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 992,
							"src": "233:5830:9",
							"usedErrors": [
								742
							],
							"usedEvents": []
						}
					],
					"src": "101:5963:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1021
						]
					},
					"id": 1022,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 993,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 994,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1021,
							"linearizedBaseContracts": [
								1021
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 999,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 998,
												"id": 1001,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1021,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1008,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1007,
												"id": 1010,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1005,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1021,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1016,
												"id": 1018,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1021,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1022,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1038
						]
					},
					"id": 1039,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1023,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1024,
								"nodeType": "StructuredDocumentation",
								"src": "59:254:11",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality."
							},
							"fullyImplemented": true,
							"id": 1038,
							"linearizedBaseContracts": [
								1038
							],
							"name": "Errors",
							"nameLocation": "322:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "335:94:11",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1031,
									"name": "InsufficientBalance",
									"nameLocation": "440:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "468:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "460:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "485:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "477:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:33:11"
									},
									"src": "434:59:11"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "499:89:11",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1034,
									"name": "FailedCall",
									"nameLocation": "599:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:11"
									},
									"src": "593:19:11"
								},
								{
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "618:46:11",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1037,
									"name": "FailedDeployment",
									"nameLocation": "675:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:11"
									},
									"src": "669:25:11"
								}
							],
							"scope": 1039,
							"src": "314:382:11",
							"usedErrors": [
								1031,
								1034,
								1037
							],
							"usedEvents": []
						}
					],
					"src": "33:664:11"
				},
				"id": 11
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1357
						]
					},
					"id": 1358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1040,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1041,
								"nodeType": "StructuredDocumentation",
								"src": "219:1802:12",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n Since version 5.1, this library also support writing and reading value types to and from transient storage.\n  * Example using transient storage:\n ```solidity\n contract Lock {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _LOCK_SLOT = 0xf4678858b2b588224636b8522b729e7722d32fc491da849ed75b3fdf3c84f542;\n     modifier locked() {\n         require(!_LOCK_SLOT.asBoolean().tload());\n         _LOCK_SLOT.asBoolean().tstore(true);\n         _;\n         _LOCK_SLOT.asBoolean().tstore(false);\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1357,
							"linearizedBaseContracts": [
								1357
							],
							"name": "StorageSlot",
							"nameLocation": "2030:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1044,
									"members": [
										{
											"constant": false,
											"id": 1043,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2085:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1044,
											"src": "2077:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1042,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2077:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "2055:11:12",
									"nodeType": "StructDefinition",
									"scope": 1357,
									"src": "2048:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1047,
									"members": [
										{
											"constant": false,
											"id": 1046,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2137:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1047,
											"src": "2132:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1045,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2132:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "2110:11:12",
									"nodeType": "StructDefinition",
									"scope": 1357,
									"src": "2103:46:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1050,
									"members": [
										{
											"constant": false,
											"id": 1049,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2192:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "2184:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1048,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2184:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "2162:11:12",
									"nodeType": "StructDefinition",
									"scope": 1357,
									"src": "2155:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1053,
									"members": [
										{
											"constant": false,
											"id": 1052,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2247:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1053,
											"src": "2239:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1051,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "2217:11:12",
									"nodeType": "StructDefinition",
									"scope": 1357,
									"src": "2210:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1056,
									"members": [
										{
											"constant": false,
											"id": 1055,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2300:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1056,
											"src": "2293:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1054,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "2293:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "2272:10:12",
									"nodeType": "StructDefinition",
									"scope": 1357,
									"src": "2265:47:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1059,
									"members": [
										{
											"constant": false,
											"id": 1058,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2353:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1059,
											"src": "2346:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1057,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2346:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "2325:10:12",
									"nodeType": "StructDefinition",
									"scope": 1357,
									"src": "2318:47:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1062,
									"members": [
										{
											"constant": false,
											"id": 1061,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2404:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1062,
											"src": "2398:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1060,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2398:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "2378:9:12",
									"nodeType": "StructDefinition",
									"scope": 1357,
									"src": "2371:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "2598:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2660:38:12",
													"nodeType": "YulBlock",
													"src": "2660:38:12",
													"statements": [
														{
															"nativeSrc": "2674:14:12",
															"nodeType": "YulAssignment",
															"src": "2674:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2684:4:12",
																"nodeType": "YulIdentifier",
																"src": "2684:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2674:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1069,
														"isOffset": false,
														"isSlot": true,
														"src": "2674:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1065,
														"isOffset": false,
														"isSlot": false,
														"src": "2684:4:12",
														"valueSize": 1
													}
												],
												"id": 1071,
												"nodeType": "InlineAssembly",
												"src": "2651:47:12"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "2422:87:12",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "2523:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2546:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2538:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2537:14:12"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2595:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2575:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1044_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1067,
														"name": "AddressSlot",
														"nameLocations": [
															"2575:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1044,
														"src": "2575:11:12"
													},
													"referencedDeclaration": 1044,
													"src": "2575:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1044_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:23:12"
									},
									"scope": 1357,
									"src": "2514:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "2886:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2948:38:12",
													"nodeType": "YulBlock",
													"src": "2948:38:12",
													"statements": [
														{
															"nativeSrc": "2962:14:12",
															"nodeType": "YulAssignment",
															"src": "2962:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "2972:4:12",
																"nodeType": "YulIdentifier",
																"src": "2972:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2962:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1080,
														"isOffset": false,
														"isSlot": true,
														"src": "2962:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1076,
														"isOffset": false,
														"isSlot": false,
														"src": "2972:4:12",
														"valueSize": 1
													}
												],
												"id": 1082,
												"nodeType": "InlineAssembly",
												"src": "2939:47:12"
											}
										]
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "2710:87:12",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2811:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2834:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2826:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1075,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2826:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2825:14:12"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2883:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2863:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1047_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1079,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1078,
														"name": "BooleanSlot",
														"nameLocations": [
															"2863:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1047,
														"src": "2863:11:12"
													},
													"referencedDeclaration": 1047,
													"src": "2863:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1047_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2862:23:12"
									},
									"scope": 1357,
									"src": "2802:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "3174:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3236:38:12",
													"nodeType": "YulBlock",
													"src": "3236:38:12",
													"statements": [
														{
															"nativeSrc": "3250:14:12",
															"nodeType": "YulAssignment",
															"src": "3250:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3260:4:12",
																"nodeType": "YulIdentifier",
																"src": "3260:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3250:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3250:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1091,
														"isOffset": false,
														"isSlot": true,
														"src": "3250:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1087,
														"isOffset": false,
														"isSlot": false,
														"src": "3260:4:12",
														"valueSize": 1
													}
												],
												"id": 1093,
												"nodeType": "InlineAssembly",
												"src": "3227:47:12"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "2998:87:12",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "3099:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3122:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "3114:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:14:12"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3171:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "3151:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1050_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1090,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1089,
														"name": "Bytes32Slot",
														"nameLocations": [
															"3151:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1050,
														"src": "3151:11:12"
													},
													"referencedDeclaration": 1050,
													"src": "3151:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1050_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:23:12"
									},
									"scope": 1357,
									"src": "3090:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "3462:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:38:12",
													"nodeType": "YulBlock",
													"src": "3524:38:12",
													"statements": [
														{
															"nativeSrc": "3538:14:12",
															"nodeType": "YulAssignment",
															"src": "3538:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3548:4:12",
																"nodeType": "YulIdentifier",
																"src": "3548:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3538:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3538:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1102,
														"isOffset": false,
														"isSlot": true,
														"src": "3538:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1098,
														"isOffset": false,
														"isSlot": false,
														"src": "3548:4:12",
														"valueSize": 1
													}
												],
												"id": 1104,
												"nodeType": "InlineAssembly",
												"src": "3515:47:12"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "3286:87:12",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "3387:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3410:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "3402:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3402:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3401:14:12"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3459:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "3439:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1053_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1100,
														"name": "Uint256Slot",
														"nameLocations": [
															"3439:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1053,
														"src": "3439:11:12"
													},
													"referencedDeclaration": 1053,
													"src": "3439:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1053_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:23:12"
									},
									"scope": 1357,
									"src": "3378:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "3747:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3809:38:12",
													"nodeType": "YulBlock",
													"src": "3809:38:12",
													"statements": [
														{
															"nativeSrc": "3823:14:12",
															"nodeType": "YulAssignment",
															"src": "3823:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "3833:4:12",
																"nodeType": "YulIdentifier",
																"src": "3833:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3823:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1113,
														"isOffset": false,
														"isSlot": true,
														"src": "3823:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1109,
														"isOffset": false,
														"isSlot": false,
														"src": "3833:4:12",
														"valueSize": 1
													}
												],
												"id": 1115,
												"nodeType": "InlineAssembly",
												"src": "3800:47:12"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "3574:86:12",
										"text": " @dev Returns an `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "3674:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3696:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "3688:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3688:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3687:14:12"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3744:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "3725:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1056_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1111,
														"name": "Int256Slot",
														"nameLocations": [
															"3725:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1056,
														"src": "3725:10:12"
													},
													"referencedDeclaration": 1056,
													"src": "3725:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1056_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3724:22:12"
									},
									"scope": 1357,
									"src": "3665:188:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "4032:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4094:38:12",
													"nodeType": "YulBlock",
													"src": "4094:38:12",
													"statements": [
														{
															"nativeSrc": "4108:14:12",
															"nodeType": "YulAssignment",
															"src": "4108:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "4118:4:12",
																"nodeType": "YulIdentifier",
																"src": "4118:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4108:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4108:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1124,
														"isOffset": false,
														"isSlot": true,
														"src": "4108:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1120,
														"isOffset": false,
														"isSlot": false,
														"src": "4118:4:12",
														"valueSize": 1
													}
												],
												"id": 1126,
												"nodeType": "InlineAssembly",
												"src": "4085:47:12"
											}
										]
									},
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "3859:86:12",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3959:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3981:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "3973:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3972:14:12"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4029:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "4010:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1059_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1122,
														"name": "StringSlot",
														"nameLocations": [
															"4010:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1059,
														"src": "4010:10:12"
													},
													"referencedDeclaration": 1059,
													"src": "4010:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1059_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4009:22:12"
									},
									"scope": 1357,
									"src": "3950:188:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "4340:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4402:44:12",
													"nodeType": "YulBlock",
													"src": "4402:44:12",
													"statements": [
														{
															"nativeSrc": "4416:20:12",
															"nodeType": "YulAssignment",
															"src": "4416:20:12",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4426:10:12",
																"nodeType": "YulIdentifier",
																"src": "4426:10:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4416:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4416:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1135,
														"isOffset": false,
														"isSlot": true,
														"src": "4416:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1131,
														"isOffset": false,
														"isSlot": true,
														"src": "4426:10:12",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1137,
												"nodeType": "InlineAssembly",
												"src": "4393:53:12"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "4144:101:12",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "4259:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4288:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "4273:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4273:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4272:22:12"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4337:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "4318:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1059_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1134,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1133,
														"name": "StringSlot",
														"nameLocations": [
															"4318:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1059,
														"src": "4318:10:12"
													},
													"referencedDeclaration": 1059,
													"src": "4318:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1059_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4317:22:12"
									},
									"scope": 1357,
									"src": "4250:202:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "4628:106:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4690:38:12",
													"nodeType": "YulBlock",
													"src": "4690:38:12",
													"statements": [
														{
															"nativeSrc": "4704:14:12",
															"nodeType": "YulAssignment",
															"src": "4704:14:12",
															"value": {
																"name": "slot",
																"nativeSrc": "4714:4:12",
																"nodeType": "YulIdentifier",
																"src": "4714:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4704:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4704:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1146,
														"isOffset": false,
														"isSlot": true,
														"src": "4704:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1142,
														"isOffset": false,
														"isSlot": false,
														"src": "4714:4:12",
														"valueSize": 1
													}
												],
												"id": 1148,
												"nodeType": "InlineAssembly",
												"src": "4681:47:12"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "4458:85:12",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4557:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4578:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4570:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4569:14:12"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4625:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4607:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1062_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1144,
														"name": "BytesSlot",
														"nameLocations": [
															"4607:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1062,
														"src": "4607:9:12"
													},
													"referencedDeclaration": 1062,
													"src": "4607:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1062_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4606:21:12"
									},
									"scope": 1357,
									"src": "4548:186:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "4931:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4993:44:12",
													"nodeType": "YulBlock",
													"src": "4993:44:12",
													"statements": [
														{
															"nativeSrc": "5007:20:12",
															"nodeType": "YulAssignment",
															"src": "5007:20:12",
															"value": {
																"name": "store.slot",
																"nativeSrc": "5017:10:12",
																"nodeType": "YulIdentifier",
																"src": "5017:10:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5007:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5007:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1157,
														"isOffset": false,
														"isSlot": true,
														"src": "5007:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": true,
														"src": "5017:10:12",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1159,
												"nodeType": "InlineAssembly",
												"src": "4984:53:12"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "4740:99:12",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4853:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4880:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "4866:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4866:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4865:21:12"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4928:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "4910:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1062_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1156,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1155,
														"name": "BytesSlot",
														"nameLocations": [
															"4910:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1062,
														"src": "4910:9:12"
													},
													"referencedDeclaration": 1062,
													"src": "4910:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1062_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4909:21:12"
									},
									"scope": 1357,
									"src": "4844:199:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "StorageSlot.AddressSlotType",
									"id": 1163,
									"name": "AddressSlotType",
									"nameLocation": "5128:15:12",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "5123:32:12",
									"underlyingType": {
										"id": 1162,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5147:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "5307:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1174,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "5345:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1172,
															"name": "AddressSlotType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "5324:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_AddressSlotType_$1163_$",
																"typeString": "type(StorageSlot.AddressSlotType)"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5340:4:12",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "5324:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_AddressSlotType_$1163_$",
															"typeString": "function (bytes32) pure returns (StorageSlot.AddressSlotType)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5324:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_AddressSlotType_$1163",
														"typeString": "StorageSlot.AddressSlotType"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1176,
												"nodeType": "Return",
												"src": "5317:33:12"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "5161:68:12",
										"text": " @dev Cast an arbitrary slot to a AddressSlotType."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asAddress",
									"nameLocation": "5243:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "5261:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "5253:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1165,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5252:14:12"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "5290:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_AddressSlotType_$1163",
													"typeString": "StorageSlot.AddressSlotType"
												},
												"typeName": {
													"id": 1169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1168,
														"name": "AddressSlotType",
														"nameLocations": [
															"5290:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1163,
														"src": "5290:15:12"
													},
													"referencedDeclaration": 1163,
													"src": "5290:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_AddressSlotType_$1163",
														"typeString": "StorageSlot.AddressSlotType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5289:17:12"
									},
									"scope": 1357,
									"src": "5234:123:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlotType",
									"id": 1180,
									"name": "BooleanSlotType",
									"nameLocation": "5439:15:12",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "5434:32:12",
									"underlyingType": {
										"id": 1179,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5458:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "5618:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1191,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "5656:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1189,
															"name": "BooleanSlotType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "5635:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_BooleanSlotType_$1180_$",
																"typeString": "type(StorageSlot.BooleanSlotType)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5651:4:12",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "5635:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_BooleanSlotType_$1180_$",
															"typeString": "function (bytes32) pure returns (StorageSlot.BooleanSlotType)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5635:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlotType_$1180",
														"typeString": "StorageSlot.BooleanSlotType"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1193,
												"nodeType": "Return",
												"src": "5628:33:12"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "5472:68:12",
										"text": " @dev Cast an arbitrary slot to a BooleanSlotType."
									},
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asBoolean",
									"nameLocation": "5554:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "5572:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "5564:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1182,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5564:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5563:14:12"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "5601:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BooleanSlotType_$1180",
													"typeString": "StorageSlot.BooleanSlotType"
												},
												"typeName": {
													"id": 1186,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1185,
														"name": "BooleanSlotType",
														"nameLocations": [
															"5601:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1180,
														"src": "5601:15:12"
													},
													"referencedDeclaration": 1180,
													"src": "5601:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlotType_$1180",
														"typeString": "StorageSlot.BooleanSlotType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5600:17:12"
									},
									"scope": 1357,
									"src": "5545:123:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "StorageSlot.Bytes32SlotType",
									"id": 1197,
									"name": "Bytes32SlotType",
									"nameLocation": "5753:15:12",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "5748:32:12",
									"underlyingType": {
										"id": 1196,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5772:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "5932:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1208,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "5970:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1206,
															"name": "Bytes32SlotType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "5949:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Bytes32SlotType_$1197_$",
																"typeString": "type(StorageSlot.Bytes32SlotType)"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5965:4:12",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "5949:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Bytes32SlotType_$1197_$",
															"typeString": "function (bytes32) pure returns (StorageSlot.Bytes32SlotType)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5949:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Bytes32SlotType_$1197",
														"typeString": "StorageSlot.Bytes32SlotType"
													}
												},
												"functionReturnParameters": 1205,
												"id": 1210,
												"nodeType": "Return",
												"src": "5942:33:12"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "5786:68:12",
										"text": " @dev Cast an arbitrary slot to a Bytes32SlotType."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asBytes32",
									"nameLocation": "5868:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "5886:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "5878:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5877:14:12"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "5915:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Bytes32SlotType_$1197",
													"typeString": "StorageSlot.Bytes32SlotType"
												},
												"typeName": {
													"id": 1203,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1202,
														"name": "Bytes32SlotType",
														"nameLocations": [
															"5915:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1197,
														"src": "5915:15:12"
													},
													"referencedDeclaration": 1197,
													"src": "5915:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Bytes32SlotType_$1197",
														"typeString": "StorageSlot.Bytes32SlotType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5914:17:12"
									},
									"scope": 1357,
									"src": "5859:123:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "StorageSlot.Uint256SlotType",
									"id": 1214,
									"name": "Uint256SlotType",
									"nameLocation": "6067:15:12",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "6062:32:12",
									"underlyingType": {
										"id": 1213,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "6086:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "6246:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1225,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "6284:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1223,
															"name": "Uint256SlotType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "6263:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Uint256SlotType_$1214_$",
																"typeString": "type(StorageSlot.Uint256SlotType)"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6279:4:12",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "6263:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Uint256SlotType_$1214_$",
															"typeString": "function (bytes32) pure returns (StorageSlot.Uint256SlotType)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6263:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Uint256SlotType_$1214",
														"typeString": "StorageSlot.Uint256SlotType"
													}
												},
												"functionReturnParameters": 1222,
												"id": 1227,
												"nodeType": "Return",
												"src": "6256:33:12"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "6100:68:12",
										"text": " @dev Cast an arbitrary slot to a Uint256SlotType."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asUint256",
									"nameLocation": "6182:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "6200:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "6192:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1216,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6192:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6191:14:12"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "6229:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Uint256SlotType_$1214",
													"typeString": "StorageSlot.Uint256SlotType"
												},
												"typeName": {
													"id": 1220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1219,
														"name": "Uint256SlotType",
														"nameLocations": [
															"6229:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1214,
														"src": "6229:15:12"
													},
													"referencedDeclaration": 1214,
													"src": "6229:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Uint256SlotType_$1214",
														"typeString": "StorageSlot.Uint256SlotType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:17:12"
									},
									"scope": 1357,
									"src": "6173:123:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "StorageSlot.Int256SlotType",
									"id": 1231,
									"name": "Int256SlotType",
									"nameLocation": "6380:14:12",
									"nodeType": "UserDefinedValueTypeDefinition",
									"src": "6375:31:12",
									"underlyingType": {
										"id": 1230,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "6398:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "6555:49:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "6592:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1240,
															"name": "Int256SlotType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "6572:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_Int256SlotType_$1231_$",
																"typeString": "type(StorageSlot.Int256SlotType)"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6587:4:12",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "6572:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_Int256SlotType_$1231_$",
															"typeString": "function (bytes32) pure returns (StorageSlot.Int256SlotType)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6572:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Int256SlotType_$1231",
														"typeString": "StorageSlot.Int256SlotType"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1244,
												"nodeType": "Return",
												"src": "6565:32:12"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "6412:67:12",
										"text": " @dev Cast an arbitrary slot to a Int256SlotType."
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asInt256",
									"nameLocation": "6493:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "6510:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "6502:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6502:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6501:14:12"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "6539:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Int256SlotType_$1231",
													"typeString": "StorageSlot.Int256SlotType"
												},
												"typeName": {
													"id": 1237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1236,
														"name": "Int256SlotType",
														"nameLocations": [
															"6539:14:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1231,
														"src": "6539:14:12"
													},
													"referencedDeclaration": 1231,
													"src": "6539:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Int256SlotType_$1231",
														"typeString": "StorageSlot.Int256SlotType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6538:16:12"
									},
									"scope": 1357,
									"src": "6484:120:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "6774:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "6836:44:12",
													"nodeType": "YulBlock",
													"src": "6836:44:12",
													"statements": [
														{
															"nativeSrc": "6850:20:12",
															"nodeType": "YulAssignment",
															"src": "6850:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6865:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6865:4:12"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "6859:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6859:5:12"
																},
																"nativeSrc": "6859:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6859:11:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6850:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6850:5:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1250,
														"isOffset": false,
														"isSlot": false,
														"src": "6865:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1253,
														"isOffset": false,
														"isSlot": false,
														"src": "6850:5:12",
														"valueSize": 1
													}
												],
												"id": 1255,
												"nodeType": "InlineAssembly",
												"src": "6827:53:12"
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "6610:84:12",
										"text": " @dev Load the value held at location `slot` in transient storage."
									},
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tload",
									"nameLocation": "6708:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "6730:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "6714:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_AddressSlotType_$1163",
													"typeString": "StorageSlot.AddressSlotType"
												},
												"typeName": {
													"id": 1249,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1248,
														"name": "AddressSlotType",
														"nameLocations": [
															"6714:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1163,
														"src": "6714:15:12"
													},
													"referencedDeclaration": 1163,
													"src": "6714:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_AddressSlotType_$1163",
														"typeString": "StorageSlot.AddressSlotType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6713:22:12"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6767:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "6759:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6759:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6758:15:12"
									},
									"scope": 1357,
									"src": "6699:187:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "7037:111:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7099:43:12",
													"nodeType": "YulBlock",
													"src": "7099:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7120:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7120:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7126:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7126:5:12"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "7113:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7113:6:12"
																},
																"nativeSrc": "7113:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7113:19:12"
															},
															"nativeSrc": "7113:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "7113:19:12"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1261,
														"isOffset": false,
														"isSlot": false,
														"src": "7120:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1263,
														"isOffset": false,
														"isSlot": false,
														"src": "7126:5:12",
														"valueSize": 1
													}
												],
												"id": 1266,
												"nodeType": "InlineAssembly",
												"src": "7090:52:12"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "6892:78:12",
										"text": " @dev Store `value` at location `slot` in transient storage."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tstore",
									"nameLocation": "6984:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "7007:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "6991:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_AddressSlotType_$1163",
													"typeString": "StorageSlot.AddressSlotType"
												},
												"typeName": {
													"id": 1260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1259,
														"name": "AddressSlotType",
														"nameLocations": [
															"6991:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1163,
														"src": "6991:15:12"
													},
													"referencedDeclaration": 1163,
													"src": "6991:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_AddressSlotType_$1163",
														"typeString": "StorageSlot.AddressSlotType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7021:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "7013:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7013:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6990:37:12"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7037:0:12"
									},
									"scope": 1357,
									"src": "6975:173:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "7315:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7377:44:12",
													"nodeType": "YulBlock",
													"src": "7377:44:12",
													"statements": [
														{
															"nativeSrc": "7391:20:12",
															"nodeType": "YulAssignment",
															"src": "7391:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7406:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7406:4:12"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "7400:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7400:5:12"
																},
																"nativeSrc": "7400:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7400:11:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7391:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7391:5:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1272,
														"isOffset": false,
														"isSlot": false,
														"src": "7406:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1275,
														"isOffset": false,
														"isSlot": false,
														"src": "7391:5:12",
														"valueSize": 1
													}
												],
												"id": 1277,
												"nodeType": "InlineAssembly",
												"src": "7368:53:12"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "7154:84:12",
										"text": " @dev Load the value held at location `slot` in transient storage."
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tload",
									"nameLocation": "7252:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "7274:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "7258:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BooleanSlotType_$1180",
													"typeString": "StorageSlot.BooleanSlotType"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "BooleanSlotType",
														"nameLocations": [
															"7258:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1180,
														"src": "7258:15:12"
													},
													"referencedDeclaration": 1180,
													"src": "7258:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlotType_$1180",
														"typeString": "StorageSlot.BooleanSlotType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7257:22:12"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7308:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "7303:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7303:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7302:12:12"
									},
									"scope": 1357,
									"src": "7243:184:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "7575:111:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7637:43:12",
													"nodeType": "YulBlock",
													"src": "7637:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7658:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7658:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7664:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7664:5:12"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "7651:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7651:6:12"
																},
																"nativeSrc": "7651:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7651:19:12"
															},
															"nativeSrc": "7651:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "7651:19:12"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1283,
														"isOffset": false,
														"isSlot": false,
														"src": "7658:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1285,
														"isOffset": false,
														"isSlot": false,
														"src": "7664:5:12",
														"valueSize": 1
													}
												],
												"id": 1288,
												"nodeType": "InlineAssembly",
												"src": "7628:52:12"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "7433:78:12",
										"text": " @dev Store `value` at location `slot` in transient storage."
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tstore",
									"nameLocation": "7525:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "7548:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "7532:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_BooleanSlotType_$1180",
													"typeString": "StorageSlot.BooleanSlotType"
												},
												"typeName": {
													"id": 1282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1281,
														"name": "BooleanSlotType",
														"nameLocations": [
															"7532:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1180,
														"src": "7532:15:12"
													},
													"referencedDeclaration": 1180,
													"src": "7532:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_BooleanSlotType_$1180",
														"typeString": "StorageSlot.BooleanSlotType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7559:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "7554:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7554:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7531:34:12"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7575:0:12"
									},
									"scope": 1357,
									"src": "7516:170:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "7856:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "7918:44:12",
													"nodeType": "YulBlock",
													"src": "7918:44:12",
													"statements": [
														{
															"nativeSrc": "7932:20:12",
															"nodeType": "YulAssignment",
															"src": "7932:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7947:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7947:4:12"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "7941:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7941:5:12"
																},
																"nativeSrc": "7941:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7941:11:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7932:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7932:5:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1294,
														"isOffset": false,
														"isSlot": false,
														"src": "7947:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1297,
														"isOffset": false,
														"isSlot": false,
														"src": "7932:5:12",
														"valueSize": 1
													}
												],
												"id": 1299,
												"nodeType": "InlineAssembly",
												"src": "7909:53:12"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "7692:84:12",
										"text": " @dev Load the value held at location `slot` in transient storage."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tload",
									"nameLocation": "7790:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "7812:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "7796:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Bytes32SlotType_$1197",
													"typeString": "StorageSlot.Bytes32SlotType"
												},
												"typeName": {
													"id": 1293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1292,
														"name": "Bytes32SlotType",
														"nameLocations": [
															"7796:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1197,
														"src": "7796:15:12"
													},
													"referencedDeclaration": 1197,
													"src": "7796:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Bytes32SlotType_$1197",
														"typeString": "StorageSlot.Bytes32SlotType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7795:22:12"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7849:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "7841:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7840:15:12"
									},
									"scope": 1357,
									"src": "7781:187:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "8119:111:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8181:43:12",
													"nodeType": "YulBlock",
													"src": "8181:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8202:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8202:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8208:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8208:5:12"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "8195:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8195:6:12"
																},
																"nativeSrc": "8195:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8195:19:12"
															},
															"nativeSrc": "8195:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "8195:19:12"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1305,
														"isOffset": false,
														"isSlot": false,
														"src": "8202:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1307,
														"isOffset": false,
														"isSlot": false,
														"src": "8208:5:12",
														"valueSize": 1
													}
												],
												"id": 1310,
												"nodeType": "InlineAssembly",
												"src": "8172:52:12"
											}
										]
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "7974:78:12",
										"text": " @dev Store `value` at location `slot` in transient storage."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tstore",
									"nameLocation": "8066:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "8089:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "8073:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Bytes32SlotType_$1197",
													"typeString": "StorageSlot.Bytes32SlotType"
												},
												"typeName": {
													"id": 1304,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1303,
														"name": "Bytes32SlotType",
														"nameLocations": [
															"8073:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1197,
														"src": "8073:15:12"
													},
													"referencedDeclaration": 1197,
													"src": "8073:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Bytes32SlotType_$1197",
														"typeString": "StorageSlot.Bytes32SlotType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8103:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "8095:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1306,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8095:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8072:37:12"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8119:0:12"
									},
									"scope": 1357,
									"src": "8057:173:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "8400:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8462:44:12",
													"nodeType": "YulBlock",
													"src": "8462:44:12",
													"statements": [
														{
															"nativeSrc": "8476:20:12",
															"nodeType": "YulAssignment",
															"src": "8476:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8491:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8491:4:12"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "8485:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8485:5:12"
																},
																"nativeSrc": "8485:11:12",
																"nodeType": "YulFunctionCall",
																"src": "8485:11:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8476:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8476:5:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1316,
														"isOffset": false,
														"isSlot": false,
														"src": "8491:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1319,
														"isOffset": false,
														"isSlot": false,
														"src": "8476:5:12",
														"valueSize": 1
													}
												],
												"id": 1321,
												"nodeType": "InlineAssembly",
												"src": "8453:53:12"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "8236:84:12",
										"text": " @dev Load the value held at location `slot` in transient storage."
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tload",
									"nameLocation": "8334:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "8356:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "8340:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Uint256SlotType_$1214",
													"typeString": "StorageSlot.Uint256SlotType"
												},
												"typeName": {
													"id": 1315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1314,
														"name": "Uint256SlotType",
														"nameLocations": [
															"8340:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1214,
														"src": "8340:15:12"
													},
													"referencedDeclaration": 1214,
													"src": "8340:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Uint256SlotType_$1214",
														"typeString": "StorageSlot.Uint256SlotType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8339:22:12"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8393:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "8385:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8385:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8384:15:12"
									},
									"scope": 1357,
									"src": "8325:187:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "8663:111:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8725:43:12",
													"nodeType": "YulBlock",
													"src": "8725:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8746:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8746:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8752:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8752:5:12"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "8739:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8739:6:12"
																},
																"nativeSrc": "8739:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8739:19:12"
															},
															"nativeSrc": "8739:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "8739:19:12"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "8746:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1329,
														"isOffset": false,
														"isSlot": false,
														"src": "8752:5:12",
														"valueSize": 1
													}
												],
												"id": 1332,
												"nodeType": "InlineAssembly",
												"src": "8716:52:12"
											}
										]
									},
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "8518:78:12",
										"text": " @dev Store `value` at location `slot` in transient storage."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tstore",
									"nameLocation": "8610:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "8633:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "8617:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Uint256SlotType_$1214",
													"typeString": "StorageSlot.Uint256SlotType"
												},
												"typeName": {
													"id": 1326,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1325,
														"name": "Uint256SlotType",
														"nameLocations": [
															"8617:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1214,
														"src": "8617:15:12"
													},
													"referencedDeclaration": 1214,
													"src": "8617:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Uint256SlotType_$1214",
														"typeString": "StorageSlot.Uint256SlotType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8647:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "8639:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8639:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8616:37:12"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8663:0:12"
									},
									"scope": 1357,
									"src": "8601:173:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "8942:112:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9004:44:12",
													"nodeType": "YulBlock",
													"src": "9004:44:12",
													"statements": [
														{
															"nativeSrc": "9018:20:12",
															"nodeType": "YulAssignment",
															"src": "9018:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9033:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9033:4:12"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "9027:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9027:5:12"
																},
																"nativeSrc": "9027:11:12",
																"nodeType": "YulFunctionCall",
																"src": "9027:11:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9018:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9018:5:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": false,
														"src": "9033:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1341,
														"isOffset": false,
														"isSlot": false,
														"src": "9018:5:12",
														"valueSize": 1
													}
												],
												"id": 1343,
												"nodeType": "InlineAssembly",
												"src": "8995:53:12"
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "8780:84:12",
										"text": " @dev Load the value held at location `slot` in transient storage."
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tload",
									"nameLocation": "8878:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "8899:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "8884:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Int256SlotType_$1231",
													"typeString": "StorageSlot.Int256SlotType"
												},
												"typeName": {
													"id": 1337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1336,
														"name": "Int256SlotType",
														"nameLocations": [
															"8884:14:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1231,
														"src": "8884:14:12"
													},
													"referencedDeclaration": 1231,
													"src": "8884:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Int256SlotType_$1231",
														"typeString": "StorageSlot.Int256SlotType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8883:21:12"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8935:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "8928:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1340,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8928:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8927:14:12"
									},
									"scope": 1357,
									"src": "8869:185:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "9203:111:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "9265:43:12",
													"nodeType": "YulBlock",
													"src": "9265:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9286:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9286:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9292:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9292:5:12"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "9279:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9279:6:12"
																},
																"nativeSrc": "9279:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9279:19:12"
															},
															"nativeSrc": "9279:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "9279:19:12"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1349,
														"isOffset": false,
														"isSlot": false,
														"src": "9286:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1351,
														"isOffset": false,
														"isSlot": false,
														"src": "9292:5:12",
														"valueSize": 1
													}
												],
												"id": 1354,
												"nodeType": "InlineAssembly",
												"src": "9256:52:12"
											}
										]
									},
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "9060:78:12",
										"text": " @dev Store `value` at location `slot` in transient storage."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tstore",
									"nameLocation": "9152:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "9174:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "9159:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_Int256SlotType_$1231",
													"typeString": "StorageSlot.Int256SlotType"
												},
												"typeName": {
													"id": 1348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1347,
														"name": "Int256SlotType",
														"nameLocations": [
															"9159:14:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1231,
														"src": "9159:14:12"
													},
													"referencedDeclaration": 1231,
													"src": "9159:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_Int256SlotType_$1231",
														"typeString": "StorageSlot.Int256SlotType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9187:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "9180:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1350,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9158:35:12"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9203:0:12"
									},
									"scope": 1357,
									"src": "9143:171:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1358,
							"src": "2022:7294:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:9124:12"
				},
				"id": 12
			}
		}
	}
}