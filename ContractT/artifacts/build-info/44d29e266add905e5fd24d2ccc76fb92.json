{
	"id": "44d29e266add905e5fd24d2ccc76fb92",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ContractT/SimplifiedDiamondProxy.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.25;\r\n\r\n// a simplified version of how the diamond proxy pattern (ERC2535) works\r\ncontract SimplifiedDiamondProxy {\r\n    address public immutable admin;\r\n    // maps a function selector to its facet address\r\n    mapping(bytes4 => address) public facets;\r\n\r\n    error Unauthorized();\r\n    error InvalidFunction();\r\n\r\n    constructor() {\r\n        admin = msg.sender;\r\n    }\r\n\r\n    modifier onlyAuthorized() {\r\n        _checkAuthorized();\r\n\r\n        _;\r\n    }\r\n\r\n    fallback() external payable {\r\n        address implementation = facets[msg.sig];\r\n        if (implementation == address(0)) revert InvalidFunction();\r\n\r\n        assembly {\r\n            calldatacopy(0, 0, calldatasize())\r\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n            switch result\r\n            case 0 { revert(0, returndatasize()) }\r\n            default { return(0, returndatasize()) }\r\n        }\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function updateFacet(bytes4 _selector, address _newFacetAddress) public onlyAuthorized {\r\n        facets[_selector] = _newFacetAddress;\r\n    }\r\n\r\n    function _checkAuthorized() internal view {\r\n        if (msg.sender != admin && msg.sender != address(this)) revert Unauthorized();\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"contracts/ContractT/SimplifiedDiamondProxy.sol": {
				"SimplifiedDiamondProxy": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InvalidFunction",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"name": "facets",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_selector",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_newFacetAddress",
									"type": "address"
								}
							],
							"name": "updateFacet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":136:1363  contract SimplifiedDiamondProxy {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":374:425  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":407:417  msg.sender */\n  caller\n    /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":399:417  admin = msg.sender */\n  0x80\n  mstore\n    /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":136:1363  contract SimplifiedDiamondProxy {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":136:1363  contract SimplifiedDiamondProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0a68c59f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8376284c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":557:579  address implementation */\n      0x00\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":589:596  msg.sig */\n      dup1\n      calldataload\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      and\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":582:597  facets[msg.sig] */\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":608:666  if (implementation == address(0)) revert InvalidFunction() */\n      tag_10\n      jumpi\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":649:666  InvalidFunction() */\n      mload(0x40)\n      0xdb2079c300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":608:666  if (implementation == address(0)) revert InvalidFunction() */\n    tag_10:\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":722:736  calldatasize() */\n      calldatasize\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":719:720  0 */\n      0x00\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":716:717  0 */\n      dup1\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":703:737  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":823:824  0 */\n      0x00\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":820:821  0 */\n      dup1\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":804:818  calldatasize() */\n      calldatasize\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":801:802  0 */\n      0x00\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":785:799  implementation */\n      dup5\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":778:783  gas() */\n      gas\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":765:825  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":860:876  returndatasize() */\n      returndatasize\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":857:858  0 */\n      0x00\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":854:855  0 */\n      dup1\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":839:877  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":898:904  result */\n      dup1\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":918:956  case 0 { revert(0, returndatasize()) } */\n      dup1\n      iszero\n      tag_12\n      jumpi\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":990:1006  returndatasize() */\n      returndatasize\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":987:988  0 */\n      0x00\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":980:1007  return(0, returndatasize()) */\n      return\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":918:956  case 0 { revert(0, returndatasize()) } */\n    tag_12:\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":937:953  returndatasize() */\n      returndatasize\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":934:935  0 */\n      0x00\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":927:954  revert(0, returndatasize()) */\n      revert\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":891:1009  switch result... */\n    tag_11:\n      stop\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1072:1214  function updateFacet(bytes4 _selector, address _newFacetAddress) public onlyAuthorized {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_11\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":266:306  mapping(bytes4 => address) public facets */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":977:1032   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":959:1033   */\n      dup2\n      mstore\n        /* \"#utility.yul\":947:949   */\n      0x20\n        /* \"#utility.yul\":932:950   */\n      add\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":266:306  mapping(bytes4 => address) public facets */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":175:205  address public immutable admin */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_19\n      immutable(\"0x2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de\")\n      dup2\n      jump\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1072:1214  function updateFacet(bytes4 _selector, address _newFacetAddress) public onlyAuthorized {... */\n    tag_17:\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":470:488  _checkAuthorized() */\n      tag_30\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":470:486  _checkAuthorized */\n      tag_31\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":470:488  _checkAuthorized() */\n      jump\t// in\n    tag_30:\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1170:1187  facets[_selector] */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap2\n      swap1\n      swap2\n      and\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1170:1176  facets */\n      0x00\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1170:1187  facets[_selector] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1170:1206  facets[_selector] = _newFacetAddress */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1072:1214  function updateFacet(bytes4 _selector, address _newFacetAddress) public onlyAuthorized {... */\n      jump\t// out\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1222:1360  function _checkAuthorized() internal view {... */\n    tag_31:\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1279:1289  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1293:1298  admin */\n      immutable(\"0x2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de\")\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1279:1298  msg.sender != admin */\n      and\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1279:1329  msg.sender != admin && msg.sender != address(this) */\n      tag_34\n      jumpi\n      pop\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1302:1312  msg.sender */\n      caller\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1324:1328  this */\n      address\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1302:1329  msg.sender != address(this) */\n      eq\n      iszero\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1279:1329  msg.sender != admin && msg.sender != address(this) */\n    tag_34:\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1275:1352  if (msg.sender != admin && msg.sender != address(this)) revert Unauthorized() */\n      iszero\n      tag_35\n      jumpi\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1338:1352  Unauthorized() */\n      mload(0x40)\n      0x82b4290000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1275:1352  if (msg.sender != admin && msg.sender != address(this)) revert Unauthorized() */\n    tag_35:\n        /* \"contracts/ContractT/SimplifiedDiamondProxy.sol\":1222:1360  function _checkAuthorized() internal view {... */\n      jump\t// out\n        /* \"#utility.yul\":14:233   */\n    tag_36:\n        /* \"#utility.yul\":81:101   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":141:207   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":130:208   */\n      dup2\n      and\n        /* \"#utility.yul\":120:209   */\n      dup2\n      eq\n        /* \"#utility.yul\":110:227   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":223:224   */\n      0x00\n        /* \"#utility.yul\":220:221   */\n      dup1\n        /* \"#utility.yul\":213:225   */\n      revert\n        /* \"#utility.yul\":110:227   */\n    tag_39:\n        /* \"#utility.yul\":14:233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":238:619   */\n    tag_16:\n        /* \"#utility.yul\":305:311   */\n      0x00\n        /* \"#utility.yul\":313:319   */\n      dup1\n        /* \"#utility.yul\":366:368   */\n      0x40\n        /* \"#utility.yul\":354:363   */\n      dup4\n        /* \"#utility.yul\":345:352   */\n      dup6\n        /* \"#utility.yul\":341:364   */\n      sub\n        /* \"#utility.yul\":337:369   */\n      slt\n        /* \"#utility.yul\":334:386   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":382:383   */\n      0x00\n        /* \"#utility.yul\":379:380   */\n      dup1\n        /* \"#utility.yul\":372:384   */\n      revert\n        /* \"#utility.yul\":334:386   */\n    tag_41:\n        /* \"#utility.yul\":405:433   */\n      tag_42\n        /* \"#utility.yul\":423:432   */\n      dup4\n        /* \"#utility.yul\":405:433   */\n      tag_36\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":395:433   */\n      swap2\n      pop\n        /* \"#utility.yul\":483:485   */\n      0x20\n        /* \"#utility.yul\":472:481   */\n      dup4\n        /* \"#utility.yul\":468:486   */\n      add\n        /* \"#utility.yul\":455:487   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":520:525   */\n      dup2\n        /* \"#utility.yul\":516:570   */\n      and\n        /* \"#utility.yul\":509:514   */\n      dup2\n        /* \"#utility.yul\":506:571   */\n      eq\n        /* \"#utility.yul\":496:589   */\n      tag_43\n      jumpi\n        /* \"#utility.yul\":585:586   */\n      0x00\n        /* \"#utility.yul\":582:583   */\n      dup1\n        /* \"#utility.yul\":575:587   */\n      revert\n        /* \"#utility.yul\":496:589   */\n    tag_43:\n        /* \"#utility.yul\":608:613   */\n      dup1\n        /* \"#utility.yul\":598:613   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":238:619   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":624:808   */\n    tag_21:\n        /* \"#utility.yul\":682:688   */\n      0x00\n        /* \"#utility.yul\":735:737   */\n      0x20\n        /* \"#utility.yul\":723:732   */\n      dup3\n        /* \"#utility.yul\":714:721   */\n      dup5\n        /* \"#utility.yul\":710:733   */\n      sub\n        /* \"#utility.yul\":706:738   */\n      slt\n        /* \"#utility.yul\":703:755   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":751:752   */\n      0x00\n        /* \"#utility.yul\":748:749   */\n      dup1\n        /* \"#utility.yul\":741:753   */\n      revert\n        /* \"#utility.yul\":703:755   */\n    tag_45:\n        /* \"#utility.yul\":774:802   */\n      tag_46\n        /* \"#utility.yul\":792:801   */\n      dup3\n        /* \"#utility.yul\":774:802   */\n      tag_36\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":764:802   */\n      swap4\n        /* \"#utility.yul\":624:808   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e8e9576c6c6e847c8e4e613ca9bf179c737ffb21d978a147d55b572b825c495364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052348015600e575f80fd5b503360805260805161031e6100325f395f818161014f01526101ed015261031e5ff3fe608060405260043610610037575f3560e01c80630a68c59f146100cf5780638376284c146100ee578063f851a4401461013e5761003e565b3661003e57005b5f80357fffffffff00000000000000000000000000000000000000000000000000000000168152602081905260409020546001600160a01b0316806100af576040517fdb2079c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b365f80375f80365f845af43d5f803e8080156100c9573d5ff35b3d5ffd5b005b3480156100da575f80fd5b506100cd6100e9366004610288565b610171565b3480156100f9575f80fd5b506101226101083660046102c8565b5f602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b348015610149575f80fd5b506101227f000000000000000000000000000000000000000000000000000000000000000081565b6101796101e2565b7fffffffff00000000000000000000000000000000000000000000000000000000919091165f90815260208190526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909216919091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480159061021b5750333014155b15610252576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114610283575f80fd5b919050565b5f8060408385031215610299575f80fd5b6102a283610254565b915060208301356001600160a01b03811681146102bd575f80fd5b809150509250929050565b5f602082840312156102d8575f80fd5b6102e182610254565b939250505056fea2646970667358221220e8e9576c6c6e847c8e4e613ca9bf179c737ffb21d978a147d55b572b825c495364736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0x31E PUSH2 0x32 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x14F ADD MSTORE PUSH2 0x1ED ADD MSTORE PUSH2 0x31E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA68C59F EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x8376284C EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x13E JUMPI PUSH2 0x3E JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E JUMPI STOP JUMPDEST PUSH0 DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xDB2079C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xC9 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x288 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C8 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x1E2 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x21B JUMPI POP CALLER ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x82B4290000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x283 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x299 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2A2 DUP4 PUSH2 0x254 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2E1 DUP3 PUSH2 0x254 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xE9 JUMPI PUSH13 0x6C6E847C8E4E613CA9BF179C73 PUSH32 0xFB21D978A147D55B572B825C495364736F6C6343000819003300000000000000 ",
							"sourceMap": "136:1227:0:-:0;;;374:51;;;;;;;;;-1:-1:-1;407:10:0;399:18;;136:1227;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_49": {
									"entryPoint": null,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkAuthorized_89": {
									"entryPoint": 482,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@admin_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@facets_7": {
									"entryPoint": null,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateFacet_69": {
									"entryPoint": 369,
									"id": 69,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_bytes4": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4t_address": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1041:1",
										"nodeType": "YulBlock",
										"src": "0:1041:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "62:171:1",
													"nodeType": "YulBlock",
													"src": "62:171:1",
													"statements": [
														{
															"nativeSrc": "72:29:1",
															"nodeType": "YulAssignment",
															"src": "72:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "94:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "94:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "81:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "81:12:1"
																},
																"nativeSrc": "81:20:1",
																"nodeType": "YulFunctionCall",
																"src": "81:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "72:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "72:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "211:16:1",
																"nodeType": "YulBlock",
																"src": "211:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "220:1:1",
																					"nodeType": "YulLiteral",
																					"src": "220:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "223:1:1",
																					"nodeType": "YulLiteral",
																					"src": "223:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "213:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "213:6:1"
																			},
																			"nativeSrc": "213:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "213:12:1"
																		},
																		"nativeSrc": "213:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "213:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "123:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "123:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "134:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "134:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "141:66:1",
																						"nodeType": "YulLiteral",
																						"src": "141:66:1",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "130:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "130:3:1"
																				},
																				"nativeSrc": "130:78:1",
																				"nodeType": "YulFunctionCall",
																				"src": "130:78:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "120:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "120:2:1"
																		},
																		"nativeSrc": "120:89:1",
																		"nodeType": "YulFunctionCall",
																		"src": "120:89:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nativeSrc": "113:97:1",
																"nodeType": "YulFunctionCall",
																"src": "113:97:1"
															},
															"nativeSrc": "110:117:1",
															"nodeType": "YulIf",
															"src": "110:117:1"
														}
													]
												},
												"name": "abi_decode_bytes4",
												"nativeSrc": "14:219:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "41:6:1",
														"nodeType": "YulTypedName",
														"src": "41:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "52:5:1",
														"nodeType": "YulTypedName",
														"src": "52:5:1",
														"type": ""
													}
												],
												"src": "14:219:1"
											},
											{
												"body": {
													"nativeSrc": "324:295:1",
													"nodeType": "YulBlock",
													"src": "324:295:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "370:16:1",
																"nodeType": "YulBlock",
																"src": "370:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "379:1:1",
																					"nodeType": "YulLiteral",
																					"src": "379:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "382:1:1",
																					"nodeType": "YulLiteral",
																					"src": "382:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "372:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "372:6:1"
																			},
																			"nativeSrc": "372:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "372:12:1"
																		},
																		"nativeSrc": "372:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "372:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "345:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "345:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "354:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "354:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "341:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "341:3:1"
																		},
																		"nativeSrc": "341:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "341:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "366:2:1",
																		"nodeType": "YulLiteral",
																		"src": "366:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "337:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "337:3:1"
																},
																"nativeSrc": "337:32:1",
																"nodeType": "YulFunctionCall",
																"src": "337:32:1"
															},
															"nativeSrc": "334:52:1",
															"nodeType": "YulIf",
															"src": "334:52:1"
														},
														{
															"nativeSrc": "395:38:1",
															"nodeType": "YulAssignment",
															"src": "395:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "423:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "423:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes4",
																	"nativeSrc": "405:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "405:17:1"
																},
																"nativeSrc": "405:28:1",
																"nodeType": "YulFunctionCall",
																"src": "405:28:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "395:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "395:6:1"
																}
															]
														},
														{
															"nativeSrc": "442:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "442:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "472:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "472:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "483:2:1",
																				"nodeType": "YulLiteral",
																				"src": "483:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "468:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:1"
																		},
																		"nativeSrc": "468:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "468:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "455:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "455:12:1"
																},
																"nativeSrc": "455:32:1",
																"nodeType": "YulFunctionCall",
																"src": "455:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "446:5:1",
																	"nodeType": "YulTypedName",
																	"src": "446:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "573:16:1",
																"nodeType": "YulBlock",
																"src": "573:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "582:1:1",
																					"nodeType": "YulLiteral",
																					"src": "582:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "585:1:1",
																					"nodeType": "YulLiteral",
																					"src": "585:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "575:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "575:6:1"
																			},
																			"nativeSrc": "575:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "575:12:1"
																		},
																		"nativeSrc": "575:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "575:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "509:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "509:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "520:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "520:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "527:42:1",
																						"nodeType": "YulLiteral",
																						"src": "527:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "516:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "516:3:1"
																				},
																				"nativeSrc": "516:54:1",
																				"nodeType": "YulFunctionCall",
																				"src": "516:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "506:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "506:2:1"
																		},
																		"nativeSrc": "506:65:1",
																		"nodeType": "YulFunctionCall",
																		"src": "506:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "499:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "499:6:1"
																},
																"nativeSrc": "499:73:1",
																"nodeType": "YulFunctionCall",
																"src": "499:73:1"
															},
															"nativeSrc": "496:93:1",
															"nodeType": "YulIf",
															"src": "496:93:1"
														},
														{
															"nativeSrc": "598:15:1",
															"nodeType": "YulAssignment",
															"src": "598:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "608:5:1",
																"nodeType": "YulIdentifier",
																"src": "608:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "598:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4t_address",
												"nativeSrc": "238:381:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:1",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "293:7:1",
														"nodeType": "YulTypedName",
														"src": "293:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "305:6:1",
														"nodeType": "YulTypedName",
														"src": "305:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "313:6:1",
														"nodeType": "YulTypedName",
														"src": "313:6:1",
														"type": ""
													}
												],
												"src": "238:381:1"
											},
											{
												"body": {
													"nativeSrc": "693:115:1",
													"nodeType": "YulBlock",
													"src": "693:115:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "739:16:1",
																"nodeType": "YulBlock",
																"src": "739:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "748:1:1",
																					"nodeType": "YulLiteral",
																					"src": "748:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "751:1:1",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "741:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "741:6:1"
																			},
																			"nativeSrc": "741:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "741:12:1"
																		},
																		"nativeSrc": "741:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "741:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "714:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "714:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "723:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "710:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "710:3:1"
																		},
																		"nativeSrc": "710:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "710:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "735:2:1",
																		"nodeType": "YulLiteral",
																		"src": "735:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "706:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "706:3:1"
																},
																"nativeSrc": "706:32:1",
																"nodeType": "YulFunctionCall",
																"src": "706:32:1"
															},
															"nativeSrc": "703:52:1",
															"nodeType": "YulIf",
															"src": "703:52:1"
														},
														{
															"nativeSrc": "764:38:1",
															"nodeType": "YulAssignment",
															"src": "764:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "792:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "792:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes4",
																	"nativeSrc": "774:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "774:17:1"
																},
																"nativeSrc": "774:28:1",
																"nodeType": "YulFunctionCall",
																"src": "774:28:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "764:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "764:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "624:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "659:9:1",
														"nodeType": "YulTypedName",
														"src": "659:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "670:7:1",
														"nodeType": "YulTypedName",
														"src": "670:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "682:6:1",
														"nodeType": "YulTypedName",
														"src": "682:6:1",
														"type": ""
													}
												],
												"src": "624:184:1"
											},
											{
												"body": {
													"nativeSrc": "914:125:1",
													"nodeType": "YulBlock",
													"src": "914:125:1",
													"statements": [
														{
															"nativeSrc": "924:26:1",
															"nodeType": "YulAssignment",
															"src": "924:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "936:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "936:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "947:2:1",
																		"nodeType": "YulLiteral",
																		"src": "947:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "932:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "932:3:1"
																},
																"nativeSrc": "932:18:1",
																"nodeType": "YulFunctionCall",
																"src": "932:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "924:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "924:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "966:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "966:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "981:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "981:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:42:1",
																				"nodeType": "YulLiteral",
																				"src": "989:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "977:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "977:3:1"
																		},
																		"nativeSrc": "977:55:1",
																		"nodeType": "YulFunctionCall",
																		"src": "977:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "959:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "959:6:1"
																},
																"nativeSrc": "959:74:1",
																"nodeType": "YulFunctionCall",
																"src": "959:74:1"
															},
															"nativeSrc": "959:74:1",
															"nodeType": "YulExpressionStatement",
															"src": "959:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "813:226:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "883:9:1",
														"nodeType": "YulTypedName",
														"src": "883:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "894:6:1",
														"nodeType": "YulTypedName",
														"src": "894:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "905:4:1",
														"nodeType": "YulTypedName",
														"src": "905:4:1",
														"type": ""
													}
												],
												"src": "813:226:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3": [
									{
										"length": 32,
										"start": 335
									},
									{
										"length": 32,
										"start": 493
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610037575f3560e01c80630a68c59f146100cf5780638376284c146100ee578063f851a4401461013e5761003e565b3661003e57005b5f80357fffffffff00000000000000000000000000000000000000000000000000000000168152602081905260409020546001600160a01b0316806100af576040517fdb2079c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b365f80375f80365f845af43d5f803e8080156100c9573d5ff35b3d5ffd5b005b3480156100da575f80fd5b506100cd6100e9366004610288565b610171565b3480156100f9575f80fd5b506101226101083660046102c8565b5f602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b348015610149575f80fd5b506101227f000000000000000000000000000000000000000000000000000000000000000081565b6101796101e2565b7fffffffff00000000000000000000000000000000000000000000000000000000919091165f90815260208190526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909216919091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480159061021b5750333014155b15610252576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114610283575f80fd5b919050565b5f8060408385031215610299575f80fd5b6102a283610254565b915060208301356001600160a01b03811681146102bd575f80fd5b809150509250929050565b5f602082840312156102d8575f80fd5b6102e182610254565b939250505056fea2646970667358221220e8e9576c6c6e847c8e4e613ca9bf179c737ffb21d978a147d55b572b825c495364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA68C59F EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x8376284C EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x13E JUMPI PUSH2 0x3E JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E JUMPI STOP JUMPDEST PUSH0 DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xDB2079C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xC9 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x288 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C8 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x1E2 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x21B JUMPI POP CALLER ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x82B4290000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x283 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x299 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2A2 DUP4 PUSH2 0x254 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2E1 DUP3 PUSH2 0x254 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xE9 JUMPI PUSH13 0x6C6E847C8E4E613CA9BF179C73 PUSH32 0xFB21D978A147D55B572B825C495364736F6C6343000819003300000000000000 ",
							"sourceMap": "136:1227:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:22;589:7;;;;582:15;;;;;;;;;;-1:-1:-1;;;;;582:15:0;;608:58;;649:17;;;;;;;;;;;;;;608:58;722:14;719:1;716;703:34;823:1;820;804:14;801:1;785:14;778:5;765:60;860:16;857:1;854;839:38;898:6;918:38;;;;990:16;987:1;980:27;918:38;937:16;934:1;927:27;891:118;;1072:142;;;;;;;;;;-1:-1:-1;1072:142:0;;;;;:::i;:::-;;:::i;266:40::-;;;;;;;;;;-1:-1:-1;266:40:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;266:40:0;;;;;;-1:-1:-1;;;;;977:55:1;;;959:74;;947:2;932:18;266:40:0;;;;;;;175:30;;;;;;;;;;;;;;;1072:142;470:18;:16;:18::i;:::-;1170:17;;;;::::1;:6;:17:::0;;;::::1;::::0;;;;;;:36;;;::::1;-1:-1:-1::0;;;;;1170:36:0;;::::1;::::0;;;::::1;::::0;;1072:142::o;1222:138::-;1279:10;-1:-1:-1;;;;;1293:5:0;1279:19;;;;;:50;;-1:-1:-1;1302:10:0;1324:4;1302:27;;1279:50;1275:77;;;1338:14;;;;;;;;;;;;;;1275:77;1222:138::o;14:219:1:-;81:20;;141:66;130:78;;120:89;;110:117;;223:1;220;213:12;110:117;14:219;;;:::o;238:381::-;305:6;313;366:2;354:9;345:7;341:23;337:32;334:52;;;382:1;379;372:12;334:52;405:28;423:9;405:28;:::i;:::-;395:38;;483:2;472:9;468:18;455:32;-1:-1:-1;;;;;520:5:1;516:54;509:5;506:65;496:93;;585:1;582;575:12;496:93;608:5;598:15;;;238:381;;;;;:::o;624:184::-;682:6;735:2;723:9;714:7;710:23;706:32;703:52;;;751:1;748;741:12;703:52;774:28;792:9;774:28;:::i;:::-;764:38;624:184;-1:-1:-1;;;624:184:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "159600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"admin()": "infinite",
								"facets(bytes4)": "2534",
								"updateFacet(bytes4,address)": "infinite"
							},
							"internal": {
								"_checkAuthorized()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 136,
									"end": 1363,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 374,
									"end": 425,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 374,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 374,
									"end": 425,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 374,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 374,
									"end": 425,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 374,
									"end": 425,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 374,
									"end": 425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 374,
									"end": 425,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 374,
									"end": 425,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 374,
									"end": 425,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 407,
									"end": 417,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 399,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 417,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 1363,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8e9576c6c6e847c8e4e613ca9bf179c737ffb21d978a147d55b572b825c495364736f6c63430008190033",
									".code": [
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "A68C59F"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "8376284C"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 589,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 589,
											"end": 596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 582,
											"end": 597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 582,
											"end": 597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 608,
											"end": 666,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 666,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "DB2079C300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 666,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 666,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 608,
											"end": 666,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 608,
											"end": 666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 722,
											"end": 736,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 719,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 737,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 804,
											"end": 818,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 801,
											"end": 802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 799,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 778,
											"end": 783,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 765,
											"end": 825,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 860,
											"end": 876,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 857,
											"end": 858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 839,
											"end": 877,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 918,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 918,
											"end": 956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1006,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 987,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1007,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 918,
											"end": 956,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 918,
											"end": 956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 937,
											"end": 953,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 934,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1009,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 891,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 891,
											"end": 1009,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1072,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1072,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 266,
											"end": 306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 977,
											"end": 1032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 947,
											"end": 949,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 266,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 266,
											"end": 306,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 175,
											"end": 205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 175,
											"end": 205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 175,
											"end": 205,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 175,
											"end": 205,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1072,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 470,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 470,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 470,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 470,
											"end": 488,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 470,
											"end": 488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1170,
											"end": 1206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1206,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1360,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1222,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1289,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1293,
											"end": 1298,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1279,
											"end": 1298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1298,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1279,
											"end": 1329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1328,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1279,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1275,
											"end": 1352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "82B4290000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1275,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 233,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 14,
											"end": 233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 81,
											"end": 101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 81,
											"end": 101,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 130,
											"end": 208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 130,
											"end": 208,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 120,
											"end": 209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 120,
											"end": 209,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 110,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 110,
											"end": 227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 213,
											"end": 225,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 110,
											"end": 227,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 110,
											"end": 227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 238,
											"end": 619,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 238,
											"end": 619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 366,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 345,
											"end": 352,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 341,
											"end": 364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 337,
											"end": 369,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 334,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 334,
											"end": 386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 382,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 372,
											"end": 384,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 334,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 405,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 423,
											"end": 432,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 405,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 405,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 405,
											"end": 433,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 405,
											"end": 433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 395,
											"end": 433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 395,
											"end": 433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 485,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 468,
											"end": 486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 455,
											"end": 487,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 520,
											"end": 525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 516,
											"end": 570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 509,
											"end": 514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 506,
											"end": 571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 496,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 496,
											"end": 589,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 585,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 583,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 575,
											"end": 587,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 496,
											"end": 589,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 496,
											"end": 589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 608,
											"end": 613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 598,
											"end": 613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 598,
											"end": 613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 598,
											"end": 613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 238,
											"end": 619,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 238,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 238,
											"end": 619,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 238,
											"end": 619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 238,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 238,
											"end": 619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 624,
											"end": 808,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 624,
											"end": 808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 682,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 714,
											"end": 721,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 710,
											"end": 733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 706,
											"end": 738,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 703,
											"end": 755,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 703,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 703,
											"end": 755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 749,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 753,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 703,
											"end": 755,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 703,
											"end": 755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 792,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 774,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 774,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 764,
											"end": 802,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 624,
											"end": 808,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 624,
											"end": 808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ContractT/SimplifiedDiamondProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"facets(bytes4)": "8376284c",
							"updateFacet(bytes4,address)": "0a68c59f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidFunction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"facets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_newFacetAddress\",\"type\":\"address\"}],\"name\":\"updateFacet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContractT/SimplifiedDiamondProxy.sol\":\"SimplifiedDiamondProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/ContractT/SimplifiedDiamondProxy.sol\":{\"keccak256\":\"0xd6c3dd58021cc1e6c1f9174884dbf3449857c06c7b2deece754a02dc3d82b89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7e15a41c597b64be8a435f724d4a7c7fa4595b96ccd85513d35bd462936587a\",\"dweb:/ipfs/QmfCrvcZK4yvafG99RLtp5Mz6S6WYFCcMNRWnbEt87aR7H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/ContractT/SimplifiedDiamondProxy.sol:SimplifiedDiamondProxy",
								"label": "facets",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_bytes4,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ContractT/SimplifiedDiamondProxy.sol": {
				"ast": {
					"absolutePath": "contracts/ContractT/SimplifiedDiamondProxy.sol",
					"exportedSymbols": {
						"SimplifiedDiamondProxy": [
							90
						]
					},
					"id": 91,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "34:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimplifiedDiamondProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "SimplifiedDiamondProxy",
							"nameLocation": "145:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 3,
									"mutability": "immutable",
									"name": "admin",
									"nameLocation": "200:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 90,
									"src": "175:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "175:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8376284c",
									"id": 7,
									"mutability": "mutable",
									"name": "facets",
									"nameLocation": "300:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 90,
									"src": "266:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
										"typeString": "mapping(bytes4 => address)"
									},
									"typeName": {
										"id": 6,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4,
											"name": "bytes4",
											"nodeType": "ElementaryTypeName",
											"src": "274:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											}
										},
										"nodeType": "Mapping",
										"src": "266:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
											"typeString": "mapping(bytes4 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "284:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"errorSelector": "82b42900",
									"id": 9,
									"name": "Unauthorized",
									"nameLocation": "321:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:2:0"
									},
									"src": "315:21:0"
								},
								{
									"errorSelector": "db2079c3",
									"id": 11,
									"name": "InvalidFunction",
									"nameLocation": "348:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:2:0"
									},
									"src": "342:24:0"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "388:37:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 14,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "399:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 15,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "407:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "411:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "407:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "399:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "399:18:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:0:0"
									},
									"scope": 90,
									"src": "374:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "459:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "_checkAuthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "470:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "470:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "470:18:0"
											},
											{
												"id": 25,
												"nodeType": "PlaceholderStatement",
												"src": "501:1:0"
											}
										]
									},
									"id": 27,
									"name": "onlyAuthorized",
									"nameLocation": "442:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:2:0"
									},
									"src": "433:77:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "546:481:0",
										"statements": [
											{
												"assignments": [
													31
												],
												"declarations": [
													{
														"constant": false,
														"id": 31,
														"mutability": "mutable",
														"name": "implementation",
														"nameLocation": "565:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 48,
														"src": "557:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 30,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "557:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 36,
												"initialValue": {
													"baseExpression": {
														"id": 32,
														"name": "facets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "582:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
															"typeString": "mapping(bytes4 => address)"
														}
													},
													"id": 35,
													"indexExpression": {
														"expression": {
															"id": 33,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "589:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "593:3:0",
														"memberName": "sig",
														"nodeType": "MemberAccess",
														"src": "589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "582:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "557:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 37,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "612:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "638:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 38,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "630:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "630:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "612:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 46,
												"nodeType": "IfStatement",
												"src": "608:58:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 43,
															"name": "InvalidFunction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "649:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "649:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 45,
													"nodeType": "RevertStatement",
													"src": "642:24:0"
												}
											},
											{
												"AST": {
													"nativeSrc": "688:332:0",
													"nodeType": "YulBlock",
													"src": "688:332:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "716:1:0",
																		"nodeType": "YulLiteral",
																		"src": "716:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "719:1:0",
																		"nodeType": "YulLiteral",
																		"src": "719:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "722:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "722:12:0"
																		},
																		"nativeSrc": "722:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "722:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "703:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "703:12:0"
																},
																"nativeSrc": "703:34:0",
																"nodeType": "YulFunctionCall",
																"src": "703:34:0"
															},
															"nativeSrc": "703:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "703:34:0"
														},
														{
															"nativeSrc": "751:74:0",
															"nodeType": "YulVariableDeclaration",
															"src": "751:74:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "778:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "778:3:0"
																		},
																		"nativeSrc": "778:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "778:5:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "785:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "785:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "801:1:0",
																		"nodeType": "YulLiteral",
																		"src": "801:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "804:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "804:12:0"
																		},
																		"nativeSrc": "804:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "804:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "820:1:0",
																		"nodeType": "YulLiteral",
																		"src": "820:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "823:1:0",
																		"nodeType": "YulLiteral",
																		"src": "823:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "765:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "765:12:0"
																},
																"nativeSrc": "765:60:0",
																"nodeType": "YulFunctionCall",
																"src": "765:60:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "755:6:0",
																	"nodeType": "YulTypedName",
																	"src": "755:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:0",
																		"nodeType": "YulLiteral",
																		"src": "854:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:1:0",
																		"nodeType": "YulLiteral",
																		"src": "857:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "860:14:0",
																			"nodeType": "YulIdentifier",
																			"src": "860:14:0"
																		},
																		"nativeSrc": "860:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "860:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "839:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "839:14:0"
																},
																"nativeSrc": "839:38:0",
																"nodeType": "YulFunctionCall",
																"src": "839:38:0"
															},
															"nativeSrc": "839:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "839:38:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "925:31:0",
																		"nodeType": "YulBlock",
																		"src": "925:31:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "934:1:0",
																							"nodeType": "YulLiteral",
																							"src": "934:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "937:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "937:14:0"
																							},
																							"nativeSrc": "937:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "937:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "927:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "927:6:0"
																					},
																					"nativeSrc": "927:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "927:27:0"
																				},
																				"nativeSrc": "927:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "927:27:0"
																			}
																		]
																	},
																	"nativeSrc": "918:38:0",
																	"nodeType": "YulCase",
																	"src": "918:38:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "923:1:0",
																		"nodeType": "YulLiteral",
																		"src": "923:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "978:31:0",
																		"nodeType": "YulBlock",
																		"src": "978:31:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "987:1:0",
																							"nodeType": "YulLiteral",
																							"src": "987:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "990:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "990:14:0"
																							},
																							"nativeSrc": "990:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "990:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "980:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "980:6:0"
																					},
																					"nativeSrc": "980:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "980:27:0"
																				},
																				"nativeSrc": "980:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "980:27:0"
																			}
																		]
																	},
																	"nativeSrc": "970:39:0",
																	"nodeType": "YulCase",
																	"src": "970:39:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "898:6:0",
																"nodeType": "YulIdentifier",
																"src": "898:6:0"
															},
															"nativeSrc": "891:118:0",
															"nodeType": "YulSwitch",
															"src": "891:118:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 31,
														"isOffset": false,
														"isSlot": false,
														"src": "785:14:0",
														"valueSize": 1
													}
												],
												"id": 47,
												"nodeType": "InlineAssembly",
												"src": "679:341:0"
											}
										]
									},
									"id": 49,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "526:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:0:0"
									},
									"scope": 90,
									"src": "518:509:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1062:2:0",
										"statements": []
									},
									"id": 53,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1062:0:0"
									},
									"scope": 90,
									"src": "1035:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1159:55:0",
										"statements": [
											{
												"expression": {
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 62,
															"name": "facets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1170:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
																"typeString": "mapping(bytes4 => address)"
															}
														},
														"id": 64,
														"indexExpression": {
															"id": 63,
															"name": "_selector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1177:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1170:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 65,
														"name": "_newFacetAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1190:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1170:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1170:36:0"
											}
										]
									},
									"functionSelector": "0a68c59f",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyAuthorized",
												"nameLocations": [
													"1144:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 27,
												"src": "1144:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1144:14:0"
										}
									],
									"name": "updateFacet",
									"nameLocation": "1081:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "_selector",
												"nameLocation": "1100:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1093:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 54,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_newFacetAddress",
												"nameLocation": "1119:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1111:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:44:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1159:0:0"
									},
									"scope": 90,
									"src": "1072:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1264:96:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 72,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1279:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1283:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1279:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 74,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1293:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1279:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1302:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1306:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1302:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 80,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1324:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimplifiedDiamondProxy_$90",
																		"typeString": "contract SimplifiedDiamondProxy"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimplifiedDiamondProxy_$90",
																		"typeString": "contract SimplifiedDiamondProxy"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1316:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 78,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1316:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1316:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1302:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1279:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 87,
												"nodeType": "IfStatement",
												"src": "1275:77:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 84,
															"name": "Unauthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1338:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1338:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 86,
													"nodeType": "RevertStatement",
													"src": "1331:21:0"
												}
											}
										]
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "1231:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1247:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1264:0:0"
									},
									"scope": 90,
									"src": "1222:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 91,
							"src": "136:1227:0",
							"usedErrors": [
								9,
								11
							],
							"usedEvents": []
						}
					],
					"src": "34:1329:0"
				},
				"id": 0
			}
		}
	}
}